"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-csr-matrix-add-1-c-6-475"],{

/***/ "./docs/docs-api/CSRMatrix/Add.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_csr_matrix_add_md_1c6_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-csr-matrix-add-md-1c6.json\nconst site_docs_docs_api_csr_matrix_add_md_1c6_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"CSRMatrix/Add\",\"title\":\"Add\",\"description\":\"Add values to CSRMatrix.\",\"source\":\"@site/docs/docs-api/CSRMatrix/Add.md\",\"sourceDirName\":\"CSRMatrix\",\"slug\":\"/CSRMatrix/Add\",\"permalink\":\"/docs-api/CSRMatrix/Add\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/CSRMatrix/Add.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"AMatVec\",\"permalink\":\"/docs-api/CSRMatrix/AMatVec\"},\"next\":{\"title\":\"Allocate\",\"permalink\":\"/docs-api/CSRMatrix/Allocate\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/CSRMatrix/Add.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'Add';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Interface 1\",\n  \"id\": \"interface-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 3\",\n  \"id\": \"interface-3\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 4\",\n  \"id\": \"interface-4\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 5\",\n  \"id\": \"interface-5\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 6\",\n  \"id\": \"interface-6\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 7\",\n  \"id\": \"interface-7\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 7\",\n  \"id\": \"interface-7-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 8\",\n  \"id\": \"interface-8\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 8\",\n  \"id\": \"interface-8-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 9\",\n  \"id\": \"interface-9\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 10\",\n  \"id\": \"interface-10\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 11\",\n  \"id\": \"interface-11\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 12\",\n  \"id\": \"interface-12\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 13\",\n  \"id\": \"interface-13\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 14\",\n  \"id\": \"interface-14\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 15\",\n  \"id\": \"interface-15\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    annotation: \"annotation\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    math: \"math\",\n    mi: \"mi\",\n    mo: \"mo\",\n    mrow: \"mrow\",\n    p: \"p\",\n    pre: \"pre\",\n    semantics: \"semantics\",\n    span: \"span\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {TabItem, Tabs} = _components;\n  if (!TabItem) _missingMdxReference(\"TabItem\", true);\n  if (!Tabs) _missingMdxReference(\"Tabs\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"add\",\n        children: \"Add\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add values to CSRMatrix.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Symbolically we perform following operations.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"A\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"A\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"+\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"B\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"A = A + B\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"A\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.7667em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"A\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.05017em\"\n              },\n              children: \"B\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Calling example:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, nodenum(:), value(:,:), scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, nodenum(:), value(:,:), scale, storageFMT)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, irow, icolumn, value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum, jnodenum, idof, jdof, value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, nodenum(:), value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum(:), jnodenum(:), ivar, jvar, value(:,:), scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum, jnodenum, ivar, jvar, idof, jdof, value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum(:), jnodenum(:), ivar, jvar, idof, jdof, value(:,:), scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum, jnodenum, ivar, jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum(:), jnodenum(:), ivar, jvar, value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum(:), jnodenum(:), ivar, jvar, idof, jdof, value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum(:), jnodenum(:), ivar, jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum(:), jnodenum(:), ivar, jvar, ispacecompo, itimecompo(:), jspacecompo, jtimecompo(:), value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ADD(obj, inodenum(:), jnodenum(:), ivar, jvar, ispacecompo(:), itimecompo, jspacecompo(:), jtimecompo, value, scale)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1\",\n      children: \"Interface 1\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, nodenum, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\\n    !! Node numbers\\n    REAL(DFP), INTENT(IN) :: VALUE(:, :)\\n    !! Element finite element matrix\\n    REAL(DFP), INTENT(IN) :: scale\\n    !! Scale is used to scale the Val before adding it to the obj\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, nodenum, VALUE, scale, storageFMT)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\\n    !! Node numbers\\n    REAL(DFP), INTENT(IN) :: VALUE(:, :)\\n    !! Element finite element matrix\\n    REAL(DFP), INTENT(IN) :: scale\\n    !! Scale is used to scale the Val before adding it to the obj\\n    INTEGER(I4B), INTENT(IN) :: storageFMT\\n    !! Storage format of element finite matrix\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-3\",\n      children: \"Interface 3\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-4\",\n      children: \"Interface 4\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, irow, icolumn, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: irow\\n    INTEGER(I4B), INTENT(IN) :: icolumn\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-5\",\n      children: \"Interface 5\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, idof, &\\n    & jdof, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum\\n    INTEGER(I4B), INTENT(IN) :: idof\\n    INTEGER(I4B), INTENT(IN) :: jdof\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-6\",\n      children: \"Interface 6\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, nodenum, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-7\",\n      children: \"Interface 7\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, iDOF, jDOF, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: iDOF\\n    !! row degree of freedom\\n    INTEGER(I4B), INTENT(IN) :: jDOF\\n    !! col degree of freedom\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-7-1\",\n      children: \"Interface 7\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, iDOF, jDOF, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: iDOF\\n    !! row degree of freedom\\n    INTEGER(I4B), INTENT(IN) :: jDOF\\n    !! col degree of freedom\\n    REAL(DFP), INTENT(IN) :: VALUE(:, :)\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-8\",\n      children: \"Interface 8\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, iDOF, jDOF, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: iDOF\\n    !! row degree of freedom\\n    INTEGER(I4B), INTENT(IN) :: jDOF\\n    !! col degree of freedom\\n    REAL(DFP), INTENT(IN) :: VALUE(:, :)\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-8-1\",\n      children: \"Interface 8\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, iDOF, jDOF, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: iDOF\\n    !! row degree of freedom\\n    INTEGER(I4B), INTENT(IN) :: jDOF\\n    !! col degree of freedom\\n    REAL(DFP), INTENT(IN) :: VALUE(:, :)\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-9\",\n      children: \"Interface 9\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, iDOF, jDOF, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: iDOF\\n    !! row degree of freedom\\n    INTEGER(I4B), INTENT(IN) :: jDOF\\n    !! col degree of freedom\\n    REAL(DFP), INTENT(IN) :: VALUE(:, :)\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-10\",\n      children: \"Interface 10\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: ispacecompo\\n    INTEGER(I4B), INTENT(IN) :: itimecompo\\n    INTEGER(I4B), INTENT(IN) :: jspacecompo\\n    INTEGER(I4B), INTENT(IN) :: jtimecompo\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-11\",\n      children: \"Interface 11\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, &\\n    & ivar, jvar, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-12\",\n      children: \"Interface 12\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, iDOF, jDOF, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: iDOF\\n    !! row degree of freedom\\n    INTEGER(I4B), INTENT(IN) :: jDOF\\n    !! col degree of freedom\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-13\",\n      children: \"Interface 13\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: ispacecompo\\n    INTEGER(I4B), INTENT(IN) :: itimecompo\\n    INTEGER(I4B), INTENT(IN) :: jspacecompo\\n    INTEGER(I4B), INTENT(IN) :: jtimecompo\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-14\",\n      children: \"Interface 14\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: ispacecompo\\n    INTEGER(I4B), INTENT(IN) :: itimecompo(:)\\n    INTEGER(I4B), INTENT(IN) :: jspacecompo\\n    INTEGER(I4B), INTENT(IN) :: jtimecompo(:)\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-15\",\n      children: \"Interface 15\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE SUBROUTINE add(obj, iNodeNum, jNodeNum, ivar,  &\\n    & jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, VALUE, scale)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\\n    !! row node number\\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\\n    !! column node number\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !!\\n    INTEGER(I4B), INTENT(IN) :: ispacecompo(:)\\n    INTEGER(I4B), INTENT(IN) :: itimecompo\\n    INTEGER(I4B), INTENT(IN) :: jspacecompo(:)\\n    INTEGER(I4B), INTENT(IN) :: jtimecompo\\n    REAL(DFP), INTENT(IN) :: VALUE\\n    !! scalar value to be add\\n    REAL(DFP), INTENT(IN) :: scale\\n  END SUBROUTINE add\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/CSRMatrix/Add.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);