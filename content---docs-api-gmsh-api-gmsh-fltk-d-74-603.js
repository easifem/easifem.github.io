"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-gmsh-api-gmsh-fltk-d-74-603"],{

/***/ "./docs/docs-api/GmshAPI/GmshFLTK_.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_gmsh_api_gmsh_fltk_md_d74_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-gmsh-api-gmsh-fltk-md-d74.json\nconst site_docs_docs_api_gmsh_api_gmsh_fltk_md_d74_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"GmshAPI/GmshFLTK_\",\"title\":\"GmshFLTK\",\"description\":\"Introduction\",\"source\":\"@site/docs/docs-api/GmshAPI/GmshFLTK_.md\",\"sourceDirName\":\"GmshAPI\",\"slug\":\"/GmshAPI/GmshFLTK_\",\"permalink\":\"/docs-api/GmshAPI/GmshFLTK_\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/GmshAPI/GmshFLTK_.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GmshAPI\",\"permalink\":\"/docs-api/GmshAPI/\"},\"next\":{\"title\":\"GmshModelGeo example 1\",\"permalink\":\"/docs-api/GmshAPI/GmshFLTK_test_1\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/GmshAPI/GmshFLTK_.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'GmshFLTK';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Introduction\",\n  \"id\": \"introduction\",\n  \"level\": 2\n}, {\n  \"value\": \"Getting started\",\n  \"id\": \"getting-started\",\n  \"level\": 2\n}, {\n  \"value\": \"Structure\",\n  \"id\": \"structure\",\n  \"level\": 2\n}, {\n  \"value\": \"Methods\",\n  \"id\": \"methods\",\n  \"level\": 2\n}, {\n  \"value\": \"Initiate\",\n  \"id\": \"initiate\",\n  \"level\": 3\n}, {\n  \"value\": \"Initialize\",\n  \"id\": \"initialize\",\n  \"level\": 3\n}, {\n  \"value\": \"Wait\",\n  \"id\": \"wait\",\n  \"level\": 3\n}, {\n  \"value\": \"Update\",\n  \"id\": \"update\",\n  \"level\": 3\n}, {\n  \"value\": \"Awake\",\n  \"id\": \"awake\",\n  \"level\": 3\n}, {\n  \"value\": \"Lock\",\n  \"id\": \"lock\",\n  \"level\": 3\n}, {\n  \"value\": \"Unlock\",\n  \"id\": \"unlock\",\n  \"level\": 3\n}, {\n  \"value\": \"Run\",\n  \"id\": \"run\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    p: \"p\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"gmshfltk\",\n        children: \"GmshFLTK\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"introduction\",\n      children: \"Introduction\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"getting-started\",\n      children: \"Getting started\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"structure\",\n      children: \"Structure\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"methods\",\n      children: \"Methods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"initiate\",\n      children: \"Initiate\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"SUBROUTINE fltk_Initiate(obj)\\nCLASS(GmshFLTK_), INTENT(INOUT) :: obj\\nEND SUBROUTINE fltk_Initiate\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"initialize\",\n      children: \"Initialize\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Create the FLTK graphical user interface. Can only be called in the main\\n! * thread.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION fltk_Initialize() RESULT(ans)\\nINTEGER(I4B) :: ans\\nCALL gmshFltkInitialize(ierr);\\nans = int(ierr, i4b)\\nEND FUNCTION fltk_Initialize\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"wait\",\n      children: \"Wait\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"! Wait at most \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"time\"\n      }), \" seconds for user interface events and return. If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"time\"\n      }), \"\\n! < 0, wait indefinitely. First automatically create the user interface if it\\n! has not yet been initialized. Can only be called in the main thread.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION fltk_Wait(time) RESULT(ans)\\nCLASS(*), OPTIONAL, INTENT(IN) :: time\\nINTEGER(I4B) :: ans\\n!!\\nCALL gmshFltkWait( &\\n& time=gmsh_opt_cdouble(option=time, default=-1.0_DFP), &\\n& ierr=ierr)\\nans = int(ierr, i4b)\\nEND FUNCTION fltk_Wait\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"update\",\n      children: \"Update\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Update the user interface (potentially creating new widgets and windows).\\n! First automatically create the user interface if it has not yet been\\n! initialized. Can only be called in the main thread: use `awake(\\\"update\\\")'\\n! to trigger an update of the user interface from another thread. */\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION fltk_Update() RESULT(ans)\\nINTEGER(I4B) :: ans\\nCALL gmshFltkUpdate(ierr)\\nans = int(ierr, i4b)\\nEND FUNCTION fltk_Update\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"awake\",\n      children: \"Awake\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Awake the main user interface thread and process pending events, and\\n! optionally perform an action (currently the only `action' allowed is\\n! \\\"update\\\").\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION fltk_Awake(action) RESULT(ans)\\nINTEGER(I4B) :: ans\\nCHARACTER(LEN=*), OPTIONAL, INTENT(IN) :: action\\n!internal\\nCHARACTER(LEN=maxStrLen), TARGET :: action_\\n!!\\naction_ = gmsh_CString(input(option=action, default=\\\"\\\"))\\n!!\\nCALL gmshFltkAwake( &\\n& action=action_, ierr=ierr)\\n!!\\nans = int(ierr, i4b)\\nEND FUNCTION fltk_Awake\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"lock\",\n      children: \"Lock\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Block the current thread until it can safely modify the user interface.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_Lock() RESULT(ans)\\nINTEGER(I4B) :: ans\\nCALL gmshFltkUnlock(ierr)\\nans = int(ierr, i4b)\\nEND FUNCTION Fltk_Lock\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"unlock\",\n      children: \"Unlock\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Release the lock that was set using lock. */\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_Unlock() RESULT(ans)\\nINTEGER(I4B) :: ans\\nCALL gmshFltkUnlock(ierr)\\nans = int(ierr, i4b)\\nEND FUNCTION Fltk_Unlock\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"run\",\n      children: \"Run\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Run the event loop of the graphical user interface, i.e. repeatedly call\\n! `wait()'. First automatically create the user interface if it has not yet\\n! been initialized. Can only be called in the main thread. */\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_Run() RESULT(ans)\\nINTEGER(I4B) :: ans\\nCALL gmshFltkRun(ierr)\\nans = int(ierr, i4b)\\nEND FUNCTION Fltk_Run\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Check if the user interface is available (e.g. to detect if it has been\\n! closed).\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_IsAvailable() RESULT(ans)\\nLOGICAL(LGT) :: ans\\n!> main\\ncintvar = gmshFltkIsAvailable(ierr)\\nIF (cintvar .EQ. 1_c_int) THEN\\nans = .TRUE.\\nELSE\\nans = .FALSE.\\nEND IF\\nEND FUNCTION Fltk_IsAvailable\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"! Select entities in the user interface. If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' is >= 0, return only the ! entities of the specified dimension (e.g. points if\"\n      }), \"dim' == 0).\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_SelectEntities(dim) &\\nRESULT(dimTags)\\nINTEGER(I4B), OPTIONAL, INTENT(IN) :: dim\\nINTEGER(I4B), ALLOCATABLE :: dimTags(:, :)\\n!\\n! internal\\n!\\nTYPE(C_PTR) :: cptr\\nINTEGER(C_SIZE_T) :: dimTags_n\\n!\\ncintvar = gmshFltkSelectEntities( &\\n& dimTags=cptr, &\\n& dimTags_n=dimTags_n, &\\n& dim=dim, &\\n& ierr=ierr)\\n!\\ndimTags = gmsh_dimtag_c2f(cptr, dimTags_n)\\nEND FUNCTION Fltk_SelectEntities\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Select elements in the user interface. */\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_SelectElements() &\\n& RESULT(elementTags)\\nINTEGER(I4B), ALLOCATABLE :: elementTags(:)\\n!\\n! internal\\n!\\nTYPE(C_PTR) :: cptr\\nINTEGER(C_SIZE_T) :: elementTags_n\\n!\\ncintvar = gmshFltkSelectElements( &\\n& elementTags=cptr, &\\n& elementTags_n=elementTags_n, &\\n& ierr=ierr)\\n!\\nelementTags = gmsh_intvec_c2f(cptr, elementTags_n)\\n!\\nEND FUNCTION Fltk_SelectElements\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Select views in the user interface.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_SelectViews() &\\n& RESULT(viewTags)\\nINTEGER(I4B), ALLOCATABLE :: viewTags(:)\\n! internal\\nTYPE(C_PTR) :: cptr\\nINTEGER(C_SIZE_T) :: viewTags_n\\n!\\ncintvar = gmshFltkSelectViews( &\\n& viewTags=cptr, &\\n& viewTags_n=viewTags_n, &\\n& ierr=ierr)\\n!\\nviewTags = gmsh_intvec_c2f(cptr, viewTags_n)\\n!\\nEND FUNCTION Fltk_SelectViews\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"! Split the current window horizontally (if \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"how' = \\\"h\\\") or vertically (if !\"\n      }), \"how' = \\\"v\\\"), using ratio \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"ratio'. If\"\n      }), \"how' = \\\"u\\\", restore a single window.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"FUNCTION Fltk_SplitCurrentWindow(how, ratio) &\\n& RESULT(ans)\\nCHARACTER(LEN=\", (0,jsx_runtime.jsx)(_components.em, {\n        children: \"), INTENT(IN) :: how\\nCLASS(\"\n      }), \"), OPTIONAL, INTENT(IN) :: ratio\\nINTEGER(I4B) :: ans\\n!\\n! internal values\\n!\\nCHARACTER(LEN=maxStrLen), TARGET :: how_\\n!\\nhow_ = gmsh_CString(how)\\n!\\nCALL gmshFltkSplitCurrentWindow( &\\n& how=how_, &\\n& ratio=gmsh_opt_cdouble(option=ratio, default=0.5_DFP), &\\n& ierr=ierr)\\n!\\nans = int(ierr, i4b)\\nEND FUNCTION Fltk_SplitCurrentWindow\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Set the current window by speficying its index (starting at 0) in the list\\n! of all windows. When new windows are created by splits, new windows are\\n! appended at the end of the list.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_SetCurrentWindow(windowIndex) &\\n& RESULT(ans)\\nINTEGER(I4B), OPTIONAL, INTENT(IN) :: windowIndex\\nINTEGER(I4B) :: ans\\n!!\\nCALL gmshFltkSetCurrentWindow( &\\n& windowIndex=gmsh_opt_cint(option=windowIndex, default=0_I4B), &\\n& ierr=ierr)\\n!!\\nans = int(ierr, i4b)\\nEND FUNCTION Fltk_SetCurrentWindow\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"! Set a status message in the current window. If `graphics' is set, display\\n! the message inside the graphic window instead of the status bar.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_SetStatusMessage(message, graphics) &\\n& RESULT(ans)\\nCHARACTER(LEN=*), INTENT(IN) :: message\\nLOGICAL(LGT), OPTIONAL, INTENT(IN) :: graphics\\nINTEGER(I4B) :: ans\\n! internal\\nCHARACTER(LEN=maxStrLen), TARGET :: message_\\n!!\\nmessage_ = gmsh_CString(message)\\n!!\\nCALL gmshFltkSetStatusMessage( &\\n& message=message_, &\\n& graphics=optval_c_bool(.FALSE., graphics), &\\n& ierr=ierr)\\n!!\\nans = int(ierr, i4b)\\nEND FUNCTION Fltk_SetStatusMessage\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"! Show context window for the entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_ShowContextWindow(dim, tag) &\\n& RESULT(ans)\\nINTEGER(I4B), INTENT(IN) :: dim, tag\\nINTEGER(I4B) :: ans\\n! internal\\nCALL gmshFltkShowContextWindow( &\\n& dim=gmsh_cint(dim), &\\n& tag=gmsh_cint(tag), &\\n& ierr=ierr)\\nans = int(ierr, i4b)\\nEND FUNCTION Fltk_ShowContextWindow\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"! Open the `name' item in the menu tree. \", (0,jsx_runtime.jsx)(_components.em, {\n        children: \"/\\n!\\n! GMSH_API void gmshFltkOpenTreeItem(const char\"\n      }), \"name,\\n! int *ierr);\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_OpenTreeItem(name) &\\n& RESULT(ans)\\nCHARACTER(LEN=*), INTENT(IN) :: name\\nINTEGER(I4B) :: ans\\n! internal\\nCHARACTER(LEN=maxStrLen) :: name_\\n!\\nname_ = gmsh_CString(name)\\n!\\nCALL gmshFltkOpenTreeItem( &\\n& name=name_, ierr=ierr)\\n!\\nans = int(ierr, i4b)\\nEND FUNCTION Fltk_OpenTreeItem\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"! Close the `name' item in the menu tree. \", (0,jsx_runtime.jsx)(_components.em, {\n        children: \"/\\n!\\n! GMSH_API void gmshFltkCloseTreeItem(const char\"\n      }), \"name,\\n! int *ierr);\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"FUNCTION Fltk_CloseTreeItem(name) &\\n& RESULT(ans)\\nCHARACTER(LEN=*), INTENT(IN) :: name\\nINTEGER(I4B) :: ans\\n! internal\\nCHARACTER(LEN=maxStrLen) :: name_\\n!\\nname_ = gmsh_CString(name)\\n!\\nCALL gmshFltkCloseTreeItem(name=name_, ierr=ierr)\\n!\\nans = int(ierr, i4b)\\nEND FUNCTION Fltk_CloseTreeItem\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/GmshAPI/GmshFLTK_.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);