"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-fe-domain-connectivity-initiate-facet-to-cell-data-303-9ee"],{

/***/ "./docs/docs-api/FEDomainConnectivity/InitiateFacetToCellData.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ InitiateFacetToCellData_contentTitle),\n  \"default\": () => (/* binding */ InitiateFacetToCellData_MDXContent),\n  frontMatter: () => (/* binding */ InitiateFacetToCellData_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_fe_domain_connectivity_initiate_facet_to_cell_data_md_303_namespaceObject),\n  toc: () => (/* binding */ InitiateFacetToCellData_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-fe-domain-connectivity-initiate-facet-to-cell-data-md-303.json\nconst site_docs_docs_api_fe_domain_connectivity_initiate_facet_to_cell_data_md_303_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"FEDomainConnectivity/InitiateFacetToCellData\",\"title\":\"InitiateFacetToCellData\",\"description\":\"This method creates the facet to cell element-data.\",\"source\":\"@site/docs/docs-api/FEDomainConnectivity/InitiateFacetToCellData.md\",\"sourceDirName\":\"FEDomainConnectivity\",\"slug\":\"/FEDomainConnectivity/InitiateFacetToCellData\",\"permalink\":\"/docs-api/FEDomainConnectivity/InitiateFacetToCellData\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEDomainConnectivity/InitiateFacetToCellData.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"InitiateCellToCellData\",\"permalink\":\"/docs-api/FEDomainConnectivity/InitiateCellToCellData\"},\"next\":{\"title\":\"InitiateNodeToNodeData\",\"permalink\":\"/docs-api/FEDomainConnectivity/InitiateNodeToNodeData\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/FEDomainConnectivity/examples/_DomainConnectivity_test_21.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n  USE easifemBase\\n  USE easifemClasses\\n  IMPLICIT NONE\\n  TYPE( DomainConnectivity_ ) :: obj\\n  TYPE( Domain_ ) :: cellDomain\\n  TYPE( HDF5File_ ) :: cellDomainFile\\n  CHARACTER( LEN=* ), PARAMETER :: cellDomainFileName=\\\"./mesh_tri3.h5\\\"\\n  CLASS( Mesh_ ), POINTER :: cellMesh\\n  CLASS( Mesh_ ), POINTER :: facetMesh\\n  CLASS( ReferenceElement_ ), POINTER :: refelem\\n  INTEGER( I4B ) :: ii, iel\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Open the mesh file for cellDomain\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL cellDomainFile%Initiate( FileName=cellDomainFileName, MODE=\\\"READ\\\" )\\nCALL cellDomainFile%Open()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate the cellDomain\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL cellDomain%Initiate( cellDomainFile, \\\"\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Make a pointer to cellMesh and facet mesh\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"cellMesh => cellDomain%getMeshPointer( dim=2, entityNum=1)\\nfacetMesh => cellDomain%getMeshPointer( dim=1, entityNum=2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate FacetTOCellData.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%InitiateFacetToCellData( facetMesh=facetMesh, &\\n  & cellMesh=cellMesh, dim=2, entityNum=1, isMaster=.TRUE. )\\nCALL obj%DisplayFacetToCellData( msg=\\\"facetToCell=\\\" )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"  CALL cellDomainFile%Deallocate()\\n  CALL cellDomain%Deallocate()\\n  CALL obj%Deallocate()\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/FEDomainConnectivity/examples/_DomainConnectivity_test_23.md\n\n\nconst _DomainConnectivity_test_23_frontMatter = {};\nconst _DomainConnectivity_test_23_contentTitle = undefined;\n\n\n\n\n\nconst _DomainConnectivity_test_23_toc = [];\nfunction _DomainConnectivity_test_23_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n  USE easifemBase\\n  USE easifemClasses\\n  IMPLICIT NONE\\n  TYPE( DomainConnectivity_ ) :: obj\\n  TYPE( Domain_ ) :: cellDomain\\n  TYPE( HDF5File_ ) :: cellDomainFile\\n  CHARACTER( LEN=* ), PARAMETER :: cellDomainFileName=\\\"./mesh_tri3b.h5\\\"\\n  CLASS( Mesh_ ), POINTER :: cellMesh\\n  CLASS( Mesh_ ), POINTER :: facetMesh\\n  CLASS( ReferenceElement_ ), POINTER :: refelem\\n  INTEGER( I4B ) :: ii, iel\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Open the mesh file for cellDomain\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL cellDomainFile%Initiate( FileName=cellDomainFileName, MODE=\\\"READ\\\" )\\nCALL cellDomainFile%Open()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate the cellDomain\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL cellDomain%Initiate( cellDomainFile, \\\"\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Make a pointer to cellMesh and facet mesh\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"cellMesh => cellDomain%getMeshPointer( dim=2, entityNum=1)\\nfacetMesh => cellDomain%getMeshPointer( dim=1, entityNum=7 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate FacetTOCellData.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%InitiateFacetToCellData( facetMesh=facetMesh, &\\n  & cellMesh=cellMesh, dim=2, entityNum=1, isMaster=.TRUE. )\\nCALL obj%DisplayFacetToCellData( msg=\\\"facetToCell=\\\" )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"  CALL cellDomainFile%Deallocate()\\n  CALL cellDomain%Deallocate()\\n  CALL obj%Deallocate()\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction _DomainConnectivity_test_23_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_DomainConnectivity_test_23_createMdxContent, {\n      ...props\n    })\n  }) : _DomainConnectivity_test_23_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/FEDomainConnectivity/examples/_DomainConnectivity_test_22.md\n\n\nconst _DomainConnectivity_test_22_frontMatter = {};\nconst _DomainConnectivity_test_22_contentTitle = undefined;\n\n\n\n\n\nconst _DomainConnectivity_test_22_toc = [];\nfunction _DomainConnectivity_test_22_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n  USE easifemBase\\n  USE easifemClasses\\n  IMPLICIT NONE\\n  TYPE( DomainConnectivity_ ) :: obj\\n  TYPE( Domain_ ) :: cellDomain\\n  TYPE( HDF5File_ ) :: cellDomainFile\\n  CHARACTER( LEN=* ), PARAMETER :: cellDomainFileName=\\\"./mesh_tri3.h5\\\"\\n  CLASS( Mesh_ ), POINTER :: cellMesh\\n  CLASS( Mesh_ ), POINTER :: facetMesh\\n  CLASS( ReferenceElement_ ), POINTER :: refelem\\n  INTEGER( I4B ) :: ii, iel\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Open the mesh file for cellDomain\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL cellDomainFile%Initiate( FileName=cellDomainFileName, MODE=\\\"READ\\\" )\\nCALL cellDomainFile%Open()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate the cellDomain\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL cellDomain%Initiate( cellDomainFile, \\\"\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Make a pointer to cellMesh and facet mesh\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"facetMesh => cellDomain%getMeshPointer( dim=1, entityNum=2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate FacetTOCellData.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%InitiateFacetToCellData( facetMesh=facetMesh, &\\n  & cellDomain=cellDomain )\\nCALL obj%DisplayFacetToCellData( msg=\\\"facetToCell=\\\" )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"  CALL cellDomainFile%Deallocate()\\n  CALL cellDomain%Deallocate()\\n  CALL obj%Deallocate()\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction _DomainConnectivity_test_22_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_DomainConnectivity_test_22_createMdxContent, {\n      ...props\n    })\n  }) : _DomainConnectivity_test_22_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/FEDomainConnectivity/InitiateFacetToCellData.md\n\n\nconst InitiateFacetToCellData_frontMatter = {};\nconst InitiateFacetToCellData_contentTitle = 'InitiateFacetToCellData';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\n\nconst InitiateFacetToCellData_toc = [{\n  \"value\": \"Interface1\",\n  \"id\": \"interface1\",\n  \"level\": 2\n}, ...toc, ..._DomainConnectivity_test_23_toc, {\n  \"value\": \"Interface2\",\n  \"id\": \"interface2\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface3\",\n  \"id\": \"interface3\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface4\",\n  \"id\": \"interface4\",\n  \"level\": 2\n}, ..._DomainConnectivity_test_22_toc];\nfunction InitiateFacetToCellData_createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"initiatefacettocelldata\",\n        children: \"InitiateFacetToCellData\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This method creates the facet to cell element-data.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"In this method we set the relation between element of a facet mesh (Facet elements) and master and slave domain.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"A facet mesh usually denotes the boundary or part of boundary of master and slave domain.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"caution\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"Please make sure that \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodeToElements\"\n        }), \" data is initiated in the cell mesh (or domain) before calling this routine.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface1\",\n      children: \"Interface1\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE InitiateFacetToCellData(obj, facetMesh, &\\n    & cellMesh, dim, entityNum, isMaster)\\n    CLASS(DomainConnectivity_), INTENT(INOUT) :: obj\\n    !! Domain connectivity data\\n    CLASS(Mesh_), INTENT(INOUT) :: facetMesh\\n    !! Mesh of facet elements\\n    CLASS(Mesh_), INTENT(INOUT) :: cellMesh\\n    !! Master mesh\\n    INTEGER(I4B), INTENT(IN) :: dim\\n    INTEGER(I4B), INTENT(IN) :: entityNum\\n    LOGICAL(LGT), INTENT(IN) :: isMaster\\n    !! if true then cell Mesh is master cell\\n    !! if false then cell mesh is slave cell\\n  END SUBROUTINE InitiateFacetToCellData\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"This routine initiate \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"facetToCell\"\n            }), \" for given facetMesh and CellMesh\"]\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"In this case facetMesh should be a boundary of cellMesh\"\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"This routine should not be used for internal boundary.\"\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"1\",\n        label: \"️܀ Example 1\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"2\",\n        label: \"️܀ Example 2\",\n        children: (0,jsx_runtime.jsx)(_DomainConnectivity_test_23_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface2\",\n      children: \"Interface2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE InitiateFacetToCellData(obj, facetMesh, &\\n    & masterDomain, slaveDomain)\\n    CLASS(DomainConnectivity_), INTENT(INOUT) :: obj\\n    !! Mesh connectivity data\\n    CLASS(Mesh_), INTENT(INOUT) :: facetMesh\\n    !! Mesh of facet elements\\n    CLASS(Domain_), INTENT(INOUT) :: masterDomain\\n    !! Domain of master elements\\n    CLASS(Domain_), INTENT(INOUT) :: slaveDomain\\n    !! Domain of slave elements\\n  END SUBROUTINE InitiateFacetToCellData\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This subroutine generates the faceToCell connectivity data between masterDomain, slaveDomain and faceMesh.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"In this case facetMesh should a boundary of masterDomain and slaveDomain. In otherwords, facetMesh cannot represent the internal boundary.\\nThis routine calls \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"InitiateFacetToCellData1\"\n      }), \" routine.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface3\",\n      children: \"Interface3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE dc_InitiateFacetToCellData3(obj, facetMesh, &\\n    & cellMesh, dim, entityNum)\\n    CLASS(DomainConnectivity_), INTENT(INOUT) :: obj\\n    !! Domain connectivity data\\n    CLASS(Mesh_), INTENT(INOUT) :: facetMesh\\n    !! Mesh of facet elements\\n    CLASS(Mesh_), INTENT(INOUT) :: cellMesh\\n    !! Master mesh\\n    INTEGER(I4B), INTENT(IN) :: dim\\n    INTEGER(I4B), INTENT(IN) :: entityNum\\n  END SUBROUTINE dc_InitiateFacetToCellData3\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"This routine initiate \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"facetToCell\"\n        }), \" for given facetMesh and CellMesh\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"In this case facetMesh can be an internal boundary of cellMesh\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface4\",\n      children: \"Interface4\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE InitiateFacetToCellData(obj, facetMesh, cellDomain)\\n    CLASS(DomainConnectivity_), INTENT(INOUT) :: obj\\n    !! Domain connectivity data\\n    CLASS(Mesh_), INTENT(INOUT) :: facetMesh\\n    !! Mesh of facet elements\\n    CLASS(Domain_), INTENT(INOUT) :: cellDomain\\n    !! Master mesh\\n  END SUBROUTINE InitiateFacetToCellData\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"This routine initiates \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"facetToCell\"\n            }), \" for given facetMesh and CellMesh\"]\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"In this case facetMesh can be an internal boundary of cellMesh\"\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(_DomainConnectivity_test_22_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction InitiateFacetToCellData_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(InitiateFacetToCellData_createMdxContent, {\n      ...props\n    })\n  }) : InitiateFacetToCellData_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/FEDomainConnectivity/InitiateFacetToCellData.md\n");

/***/ })

}]);