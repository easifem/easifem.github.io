"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-csr-matrix-get-symd-07-b93"],{

/***/ "./docs/docs-api/CSRMatrix/GetSym.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ GetSym_contentTitle),\n  \"default\": () => (/* binding */ GetSym_MDXContent),\n  frontMatter: () => (/* binding */ GetSym_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_csr_matrix_get_sym_md_d07_namespaceObject),\n  toc: () => (/* binding */ GetSym_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-csr-matrix-get-sym-md-d07.json\nconst site_docs_docs_api_csr_matrix_get_sym_md_d07_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"CSRMatrix/GetSym\",\"title\":\"GetSym\",\"description\":\"Returns the symmetric form of a sparse matrix.\",\"source\":\"@site/docs/docs-api/CSRMatrix/GetSym.md\",\"sourceDirName\":\"CSRMatrix\",\"slug\":\"/CSRMatrix/GetSym\",\"permalink\":\"/docs-api/CSRMatrix/GetSym\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/CSRMatrix/GetSym.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetRow\",\"permalink\":\"/docs-api/CSRMatrix/GetRow\"},\"next\":{\"title\":\"GetTranspose\",\"permalink\":\"/docs-api/CSRMatrix/GetTranspose\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/CSRMatrix/examples/_GetSym_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Declare variables.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE(CSRMatrix_) :: csrmat, symcsrmat\\nCHARACTER(*), PARAMETER :: matrix_name = \\\"./matrixMarket/small5.mtx\\\"\\nREAL( DFP ), ALLOCATABLE :: dense(:,:) \\nINTEGER( I4B ) :: info\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Import csrmatrix from matrix market.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL IMPORT(csrmat, matrix_name, SPARSE_FMT_COO)\\nCALL Display(SIZE(csrmat, 1), \\\"csrmat = \\\")\\nCALL Display(SIZE(csrmat, 2), \\\"csrmat = \\\")\\nCALL Display(GetNNZ(csrmat), \\\"GetNNZ = \\\")\\ndense=csrmat\\nCALL Display(dense, \\\"dense = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-txt\",\n        children: \"csrmat = 5\\ncsrmat = 5\\nGetNNZ = 12\\n                  dense =                  \\n-------------------------------------------\\n19.0000   0.0000  21.0000  21.0000   0.0000\\n12.0000  21.0000   0.0000   0.0000   0.0000\\n 0.0000  12.0000  16.0000   0.0000   0.0000\\n 0.0000   0.0000   0.0000   5.0000  21.0000\\n12.0000  12.0000   0.0000   0.0000  18.0000\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Let make symmetric method using upper part.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL GetSym(obj=csrmat, symobj=symcsrmat, from=\\\"U\\\")\\ndense=symcsrmat\\nCALL Display(dense, \\\"Sym CSR Mat=\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-text\",\n        children: \"                Sym CSR Mat=               \\n-------------------------------------------\\n19.0000   0.0000  21.0000  21.0000   0.0000\\n 0.0000  21.0000   0.0000   0.0000   0.0000\\n21.0000   0.0000  16.0000   0.0000   0.0000\\n21.0000   0.0000   0.0000   5.0000  21.0000\\n 0.0000   0.0000   0.0000  21.0000   0.0000\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/examples/_GetSym_test_2.md\n\n\nconst _GetSym_test_2_frontMatter = {};\nconst _GetSym_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _GetSym_test_2_toc = [];\nfunction _GetSym_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Declare variables.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE(CSRMatrix_) :: csrmat, symcsrmat\\nCHARACTER(*), PARAMETER :: matrix_name = \\\"./matrixMarket/small5.mtx\\\"\\nREAL( DFP ), ALLOCATABLE :: dense(:,:) \\nINTEGER( I4B ) :: info\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Import csrmatrix from matrix market.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL IMPORT(csrmat, matrix_name, SPARSE_FMT_COO)\\nCALL Display(SIZE(csrmat, 1), \\\"csrmat = \\\")\\nCALL Display(SIZE(csrmat, 2), \\\"csrmat = \\\")\\nCALL Display(GetNNZ(csrmat), \\\"GetNNZ = \\\")\\ndense=csrmat\\nCALL Display(dense, \\\"dense = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-txt\",\n        children: \"csrmat = 5\\ncsrmat = 5\\nGetNNZ = 12\\n                  dense =                  \\n-------------------------------------------\\n19.0000   0.0000  21.0000  21.0000   0.0000\\n12.0000  21.0000   0.0000   0.0000   0.0000\\n 0.0000  12.0000  16.0000   0.0000   0.0000\\n 0.0000   0.0000   0.0000   5.0000  21.0000\\n12.0000  12.0000   0.0000   0.0000  18.0000\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Let make symmetric method using upper part.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL GetSym(obj=csrmat, symobj=symcsrmat, from=\\\"L\\\")\\ndense=symcsrmat\\nCALL Display(dense, \\\"Sym CSR Mat=\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-text\",\n        children: \"                Sym CSR Mat=               \\n-------------------------------------------\\n19.0000  12.0000   0.0000   0.0000  12.0000\\n12.0000  21.0000  12.0000   0.0000  12.0000\\n 0.0000  12.0000  16.0000   0.0000   0.0000\\n 0.0000   0.0000   0.0000   5.0000   0.0000\\n12.0000  12.0000   0.0000   0.0000  18.0000\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction _GetSym_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_GetSym_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _GetSym_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/GetSym.md\n\n\nconst GetSym_frontMatter = {};\nconst GetSym_contentTitle = 'GetSym';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\nconst GetSym_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc, ..._GetSym_test_2_toc];\nfunction GetSym_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"getsym\",\n        children: \"GetSym\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the symmetric form of a sparse matrix.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Calling example:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL GetSym(CSRMatrix_::obj, CSRMatrix_::symobj, char(1)::from)\\nCALL GetSym(CSRMatrix_::obj, char(1)::from)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"1\",\n        label: \"܀ GetSym(obj, symobj, from)\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE GetSym(obj, symObj, from)\\n    TYPE(CSRMatrix_), INTENT(IN) :: obj\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: symObj\\n    CHARACTER(1), INTENT(IN) :: from\\n  END SUBROUTINE GetSym\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"2\",\n        label: \"️܀ See example 1\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"3\",\n        label: \"️܀ See example 2\",\n        children: (0,jsx_runtime.jsx)(_GetSym_test_2_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"2\",\n        label: \"܀ GetSym(obj, from)\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE GetSym(obj, from)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    CHARACTER(1), INTENT(IN) :: from\\n  END SUBROUTINE GetSym\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example 1\"\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\"\n      })]\n    })]\n  });\n}\nfunction GetSym_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(GetSym_createMdxContent, {\n      ...props\n    })\n  }) : GetSym_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/CSRMatrix/GetSym.md\n");

/***/ })

}]);