"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-csr-matrix-sym-smallest-eigenval-391-fb3"],{

/***/ "./docs/docs-api/CSRMatrix/SymSmallestEigenval.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ SymSmallestEigenval_contentTitle),\n  \"default\": () => (/* binding */ SymSmallestEigenval_MDXContent),\n  frontMatter: () => (/* binding */ SymSmallestEigenval_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_csr_matrix_sym_smallest_eigenval_md_391_namespaceObject),\n  toc: () => (/* binding */ SymSmallestEigenval_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-csr-matrix-sym-smallest-eigenval-md-391.json\nconst site_docs_docs_api_csr_matrix_sym_smallest_eigenval_md_391_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"CSRMatrix/SymSmallestEigenval\",\"title\":\"SymSmallestEigenval\",\"description\":\"This routine computes the smallest eigenvalue of CSRMatrix.\",\"source\":\"@site/docs/docs-api/CSRMatrix/SymSmallestEigenval.md\",\"sourceDirName\":\"CSRMatrix\",\"slug\":\"/CSRMatrix/SymSmallestEigenval\",\"permalink\":\"/docs-api/CSRMatrix/SymSmallestEigenval\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/CSRMatrix/SymSmallestEigenval.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"SymLargestEigenval\",\"permalink\":\"/docs-api/CSRMatrix/SymLargestEigenval\"},\"next\":{\"title\":\"CSRSparsity\",\"permalink\":\"/docs-api/CSRSparsity/\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/CSRMatrix/_SymSmallestEigenval_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Declaring variables:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE(CSRMatrix_) :: csrmat\\nCHARACTER(*), PARAMETER :: matrix_name = \\\"./matrixMarket/fidap005.mtx\\\"\\nREAL( DFP ), ALLOCATABLE :: rhs(:), sol(:), exact_sol(:) \\nINTEGER( I4B ) :: info\\nREAL( DFP ) :: ev1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Import csrmatrix from matrix market.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL IMPORT(csrmat, matrix_name, SPARSE_FMT_COO)\\nCALL Display(SIZE(csrmat, 1), \\\"csrmat = \\\")\\nCALL Display(SIZE(csrmat, 2), \\\"csrmat = \\\")\\nCALL Display(GetNNZ(csrmat), \\\"GetNNZ = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Getting the largest eigenvalue.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ev1 = SymSmallestEigenVal(mat=csrmat, which=\\\"SM\\\")\\nCALL Display(ev1, \\\"ev1 = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/_SymSmallestEigenval_test_3.md\n\n\nconst _SymSmallestEigenval_test_3_frontMatter = {};\nconst _SymSmallestEigenval_test_3_contentTitle = undefined;\n\n\n\n\n\nconst _SymSmallestEigenval_test_3_toc = [];\nfunction _SymSmallestEigenval_test_3_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Declaring variables:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE(CSRMatrix_) :: csrmat\\nCHARACTER(*), PARAMETER :: matrix_name = \\\"./matrixMarket/fidap005.mtx\\\"\\nREAL( DFP ), ALLOCATABLE :: rhs(:), sol(:), exact_sol(:) \\nINTEGER( I4B ) :: info\\nREAL( DFP ) :: ev1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Import csrmatrix from matrix market.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL IMPORT(csrmat, matrix_name, SPARSE_FMT_COO)\\nCALL Display(SIZE(csrmat, 1), \\\"csrmat = \\\")\\nCALL Display(SIZE(csrmat, 2), \\\"csrmat = \\\")\\nCALL Display(GetNNZ(csrmat), \\\"GetNNZ = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Getting the largest eigenvalue.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ev1 = SymSmallestEigenVal(mat=csrmat, which=\\\"SA\\\")\\nCALL Display(ev1, \\\"ev1 = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction _SymSmallestEigenval_test_3_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_SymSmallestEigenval_test_3_createMdxContent, {\n      ...props\n    })\n  }) : _SymSmallestEigenval_test_3_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/_SymSmallestEigenval_test_2.md\n\n\nconst _SymSmallestEigenval_test_2_frontMatter = {};\nconst _SymSmallestEigenval_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _SymSmallestEigenval_test_2_toc = [];\nfunction _SymSmallestEigenval_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Declaring variables:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE(CSRMatrix_) :: csrmat\\nCHARACTER(*), PARAMETER :: matrix_name = \\\"./matrixMarket/fidap005.mtx\\\"\\nREAL( DFP ), ALLOCATABLE :: rhs(:), sol(:), exact_sol(:) \\nINTEGER( I4B ) :: info, nev\\nREAL( DFP ), ALLOCATABLE :: ev1(:)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Import csrmatrix from matrix market.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL IMPORT(csrmat, matrix_name, SPARSE_FMT_COO)\\nCALL Display(SIZE(csrmat, 1), \\\"csrmat = \\\")\\nCALL Display(SIZE(csrmat, 2), \\\"csrmat = \\\")\\nCALL Display(GetNNZ(csrmat), \\\"GetNNZ = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Getting the largest eigenvalue.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"nev=6\\nev1 = SymSmallestEigenVal(mat=csrmat, nev=nev, which=\\\"SM\\\")\\nCALL Display(ev1, \\\"ev1 = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction _SymSmallestEigenval_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_SymSmallestEigenval_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _SymSmallestEigenval_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/_SymSmallestEigenval_test_4.md\n\n\nconst _SymSmallestEigenval_test_4_frontMatter = {};\nconst _SymSmallestEigenval_test_4_contentTitle = undefined;\n\n\n\n\n\nconst _SymSmallestEigenval_test_4_toc = [];\nfunction _SymSmallestEigenval_test_4_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Declaring variables:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE(CSRMatrix_) :: csrmat\\nCHARACTER(*), PARAMETER :: matrix_name = \\\"./matrixMarket/fidap005.mtx\\\"\\nREAL( DFP ), ALLOCATABLE :: rhs(:), sol(:), exact_sol(:) \\nINTEGER( I4B ) :: info, nev\\nREAL( DFP ), ALLOCATABLE :: ev1(:)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Import csrmatrix from matrix market.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL IMPORT(csrmat, matrix_name, SPARSE_FMT_COO)\\nCALL Display(SIZE(csrmat, 1), \\\"csrmat = \\\")\\nCALL Display(SIZE(csrmat, 2), \\\"csrmat = \\\")\\nCALL Display(GetNNZ(csrmat), \\\"GetNNZ = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Getting the largest eigenvalue.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"nev=6\\nev1 = SymSmallestEigenVal(mat=csrmat, nev=nev, which=\\\"SA\\\")\\nCALL Display(ev1, \\\"ev1 = \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction _SymSmallestEigenval_test_4_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_SymSmallestEigenval_test_4_createMdxContent, {\n      ...props\n    })\n  }) : _SymSmallestEigenval_test_4_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/SymSmallestEigenval.md\n\n\nconst SymSmallestEigenval_frontMatter = {};\nconst SymSmallestEigenval_contentTitle = 'SymSmallestEigenval';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\n\n\nconst SymSmallestEigenval_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc, ..._SymSmallestEigenval_test_3_toc, ..._SymSmallestEigenval_test_2_toc, ..._SymSmallestEigenval_test_4_toc];\nfunction SymSmallestEigenval_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"symsmallesteigenval\",\n        children: \"SymSmallestEigenval\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This routine computes the smallest eigenvalue of CSRMatrix.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Calling example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ans = SymSmallestEigenVal(CSRMatrix_::mat &\\n  & [, char(2)::which, INTEGER::NCV, INTEGER::maxIter, REAL::tol]) \\n\\nans = SymSmallestEigenVal(CSRMatrix_::mat, INTEGER::nev &\\n  [&, char(2)::which, INTEGER::NCV, INTEGER::maxIter, REAL::tol])\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE FUNCTION SymSmallestEigenVal(mat, which, NCV, maxIter, tol) &\\n    & RESULT(ans)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: mat\\n    !! dense matrix\\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: which\\n    !! `which = \\\"SM\\\"` ⇨ absolute smallest eigenvalue\\n    !! `which = \\\"SA\\\"` ⇨ algebraic smallest eigenvalue\\n    !! default is \\\"SA\\\"\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: NCV\\n    !! Number of Lanczos vectors generated\\n    !! It must be greater than 1 and smaller than `size(mat,1)`\\n    !! Default is `NCV = MIN(n, 20)`\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: maxIter\\n    !! Maximum number of iteration default = `N*10`\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: tol\\n    !! tolerance, default = 0.0\\n    REAL(DFP) :: ans\\n    !! maximum eigenvalue\\n  END FUNCTION SymSmallestEigenVal\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"2\",\n        label: \"️܀ Example 1\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"3\",\n        label: \"️܀ Example 2\",\n        children: (0,jsx_runtime.jsx)(_SymSmallestEigenval_test_3_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE FUNCTION SymSmallestEigenVal(mat, nev, which, &\\n    & NCV, maxIter, tol) RESULT(ans)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: mat\\n    !! CSRMatrix\\n    INTEGER(I4B), INTENT(IN) :: nev\\n    !! number of eigenvalues\\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: which\\n    !! `which = \\\"SM\\\"` ⇨ absolute smallest eigenvalue\\n    !! `which = \\\"SA\\\"` ⇨ algebraic smallest eigenvalue\\n    !! default is \\\"SA\\\"\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: NCV\\n    !! Number of Lanczos vectors generated\\n    !! It must be greater than 1 and smaller than `size(mat,1)`\\n    !! Default is `NCV = MIN(n, 20)`\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: maxIter\\n    !! Maximum number of iteration default = `N*10`\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: tol\\n    !! tolerance, default = 0.0\\n    REAL(DFP) :: ans(nev)\\n    !! smallest eigenvalue\\n  END FUNCTION SymSmallestEigenVal\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"2\",\n        label: \"️܀ Example 1\",\n        children: (0,jsx_runtime.jsx)(_SymSmallestEigenval_test_2_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"3\",\n        label: \"܀ Example 2\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_SymSmallestEigenval_test_4_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\"\n      })]\n    })]\n  });\n}\nfunction SymSmallestEigenval_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(SymSmallestEigenval_createMdxContent, {\n      ...props\n    })\n  }) : SymSmallestEigenval_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/CSRMatrix/SymSmallestEigenval.md\n");

/***/ })

}]);