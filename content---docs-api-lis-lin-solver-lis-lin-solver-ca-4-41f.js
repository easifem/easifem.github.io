"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-lis-lin-solver-lis-lin-solver-ca-4-41f"],{

/***/ "./docs/docs-api/LisLinSolver/LISLinSolver_.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_lis_lin_solver_lis_lin_solver_md_ca4_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-lis-lin-solver-lis-lin-solver-md-ca4.json\nconst site_docs_docs_api_lis_lin_solver_lis_lin_solver_md_ca4_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"LisLinSolver/LISLinSolver_\",\"title\":\"LISLinSolver_\",\"description\":\"Lis (Library of Iterative Solvers for linear systems) is a parallel software library for solving discretized linear equations\",\"source\":\"@site/docs/docs-api/LisLinSolver/LISLinSolver_.md\",\"sourceDirName\":\"LisLinSolver\",\"slug\":\"/LisLinSolver/LISLinSolver_\",\"permalink\":\"/docs-api/LisLinSolver/LISLinSolver_\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/LisLinSolver/LISLinSolver_.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"LisLinSolver\",\"permalink\":\"/docs-api/LisLinSolver/\"},\"next\":{\"title\":\"Lobatto\",\"permalink\":\"/docs-api/LobattoPolynomialUtility/\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/LisLinSolver/LISLinSolver_.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Linear solvers\",\n  \"id\": \"linear-solvers\",\n  \"level\": 2\n}, {\n  \"value\": \"Eigensolvers\",\n  \"id\": \"eigensolvers\",\n  \"level\": 2\n}, {\n  \"value\": \"Preconditioners\",\n  \"id\": \"preconditioners\",\n  \"level\": 2\n}, {\n  \"value\": \"Matrix Storage Formats\",\n  \"id\": \"matrix-storage-formats\",\n  \"level\": 2\n}, {\n  \"value\": \"Configuration\",\n  \"id\": \"configuration\",\n  \"level\": 2\n}, {\n  \"value\": \"Configuration for Multi thread\",\n  \"id\": \"configuration-for-multi-thread\",\n  \"level\": 3\n}, {\n  \"value\": \"Configuration for MPI\",\n  \"id\": \"configuration-for-mpi\",\n  \"level\": 3\n}, {\n  \"value\": \"Compile\",\n  \"id\": \"compile\",\n  \"level\": 2\n}, {\n  \"value\": \"Install\",\n  \"id\": \"install\",\n  \"level\": 2\n}, {\n  \"value\": \"Cleaning\",\n  \"id\": \"cleaning\",\n  \"level\": 2\n}, {\n  \"value\": \"Limitations\",\n  \"id\": \"limitations\",\n  \"level\": 2\n}, {\n  \"value\": \"Matrix storage formats\",\n  \"id\": \"matrix-storage-formats-1\",\n  \"level\": 3\n}, {\n  \"value\": \"Double-double (quadruple) precision operations\",\n  \"id\": \"double-double-quadruple-precision-operations\",\n  \"level\": 3\n}, {\n  \"value\": \"Preconditioners\",\n  \"id\": \"preconditioners-1\",\n  \"level\": 3\n}, {\n  \"value\": \"Eigensolvers\",\n  \"id\": \"eigensolvers-1\",\n  \"level\": 3\n}, {\n  \"value\": \"Basic steps\",\n  \"id\": \"basic-steps\",\n  \"level\": 2\n}, {\n  \"value\": \"Vector\",\n  \"id\": \"vector\",\n  \"level\": 2\n}, {\n  \"value\": \"Matrix\",\n  \"id\": \"matrix\",\n  \"level\": 2\n}, {\n  \"value\": \"Setting CSR matrix\",\n  \"id\": \"setting-csr-matrix\",\n  \"level\": 2\n}, {\n  \"value\": \"Solving equations\",\n  \"id\": \"solving-equations\",\n  \"level\": 2\n}, {\n  \"value\": \"Precondition Solver Decoupled Manner\",\n  \"id\": \"precondition-solver-decoupled-manner\",\n  \"level\": 2\n}, {\n  \"value\": \"Solving eigenvalue problem\",\n  \"id\": \"solving-eigenvalue-problem\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    annotation: \"annotation\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    math: \"math\",\n    mi: \"mi\",\n    mo: \"mo\",\n    mrow: \"mrow\",\n    p: \"p\",\n    pre: \"pre\",\n    semantics: \"semantics\",\n    span: \"span\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.p, {\n      children: \"Lis (Library of Iterative Solvers for linear systems) is a parallel software library for solving discretized linear equations\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"A\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"x\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"b\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"Ax = b\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"A\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6944em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"and eigenvalue problems:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"A\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"x\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"Î»\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"B\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"x\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"Ax = \\\\lambda B x\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"A\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6944em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"Î»\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.05017em\"\n              },\n              children: \"B\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"linear-solvers\",\n      children: \"Linear solvers\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"CG\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"BiCG\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"CGS\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"BiCGSTAB\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"GPBiCG\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"BiCGSTAB\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Jacobi\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Gauss-Seidel\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"SOR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"IDR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"COCG\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"CR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"BiCR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"CRS\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"BiCRSTAB\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"GPBiCR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"BiCRSafe\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"TFQMR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Orthomin\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"GMRES\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"MINRES\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"COCR\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"eigensolvers\",\n      children: \"Eigensolvers\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Power\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Inverse\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Rayleigh Quotient\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"CG\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"CR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Subspace\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Lanczos\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Arnoldi\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"preconditioners\",\n      children: \"Preconditioners\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Jacobi\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"SSOR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"ILU(k)\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"ILUT\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Crout ILU\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"I+S\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"SA-AMG\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Hybrid\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"SAINV\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Additive Schwarz\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"User defined\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"matrix-storage-formats\",\n      children: \"Matrix Storage Formats\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"CSR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"CSC\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"MSR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"DIA\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"ELL\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"JAD\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"BSR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"BSC\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"VBR\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"COO\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"DNS\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"configuration\",\n      children: \"Configuration\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-txt\",\n        children: \"lis-($VERSION)\\n+ config\\n| configuration files\\n+ doc\\n| documents\\n+ graphics\\n| sample files for graphics\\n+ include\\n| header files\\n+ src\\n| source files\\n+ test\\n| test programs\\n+ win\\nconfiguration files for Windows systems\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"configuration-for-multi-thread\",\n      children: \"Configuration for Multi thread\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--prefix=<path to install>\"\n        }), \" location of installing the lib\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-omp\"\n        }), \" enable openmp support\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-f90\"\n        }), \" enable fortran90 interface\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-shared\"\n        }), \" enable shared library\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"TARGET=<TARGET>\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"CC=<c_compiler>\"\n        }), \" specify c compiler\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"CFLAGS=<additional c flags>\"\n        }), \" specify additional cflags\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"FC=<fortran compiler>\"\n        }), \" specify fortran compiler\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"FCFLAGS=<f90 flags>\"\n        }), \" specify additional fortran compiler flags\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"LDFLAGS=<ld flags for linker>\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-saamg\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-quad\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-longdouble\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-longlong\"\n        }), \" optional, to support \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Int64\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-complex\"\n        }), \" optional, it is necessary when we want to compute the eigenvalues of unsymmetric system\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-gprof\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--disable-test\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-debug\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"In easifem we have used the following configuration\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"./configure \\\\\\n--prefix=$EASIFEM_EXTPKGS \\\\\\n--enable-omp \\\\\\n--enable-f90 \\\\\\n--enable-shared \\\\\\n--enable-saamg \\\\\\nFC=gfortran-12 \\\\\\nCC=gcc-12\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Which prints following output\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \" Build with OpenMP library                  = yes\\n  Build with MPI library                     = no\\n  Enable FORTRAN 77 compatible interface     = yes\\n  Enable Fortran 90 compatible interface     = yes\\n  Enable SA-AMG preconditioner               = yes\\n  Enable double-double precision support     = no\\n  Enable long double precision support       = no\\n  Enable 64bit integer support               = no\\n  Enable complex scalar support              = yes\\n  Enable dynamic linking                     = yes\\n  Enable profiling                           = no\\n\\n  C compiler        = gcc-12\\n  C flags           = -O3 -fomit-frame-pointer  -fopenmp -D_COMPLEX -DHAVE_CONFIG_H\\n  C libraries       = -lm\\n  F77 compiler      = gfortran-12\\n  F77 flags         = -O3 -fomit-frame-pointer  -fopenmp -DCOMPLEX\\n  F77 libraries     =  -L/usr/lib/gcc/x86_64-linux-gnu/12 -L/usr/lib/gcc/x86_64-linux-gnu/12/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/12/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/12/../../.. -lgfortran -lm -lquadmath\\n  F90 compiler      = gfortran-12\\n  F90 flags         = -O3 -fomit-frame-pointer  -Wp,-DZERO_ORIGIN=1 -fopenmp -DCOMPLEX\\n  F90 libraries     =\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"configuration-for-mpi\",\n      children: \"Configuration for MPI\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"--prefix=<path to install>\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-mpi\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-f90\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-shared\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"TARGET=<TARGET>\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"CC=<c_compiler>\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"CFLAGS=<additional c flags>\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"FC=<fortran compiler>\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"FCFLAGS=<f90 flags>\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"F77=<f77 compiler>\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"F77FLAGS=<f77 compiler flags>\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"LDFLAGS=<ld flags for linker>\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-saamg\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-quad\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-longdouble\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-longlong\"\n        }), \" optional, to support \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Int64\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-complex\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--enable-gprof\"\n        }), \" optional\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"--disable-test\"\n        }), \" optional\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"NOTE: Options \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"--enable-omp\"\n      }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"--enable-mpi\"\n      }), \" can be combined.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"compile\",\n      children: \"Compile\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"After configuration compile the code by using make command .\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"make\\nmake check\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"install\",\n      children: \"Install\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"After compilation we install the library by using make install command.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"make install\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"which copies the files to the destination directory as follows:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-txt\",\n        children: \"($INSTALLDIR)\\n+bin\\n|\\n +lsolve esolve esolver gesolve gesolver hpcg_kernel hpcg_spmvtest spmvtest*\\n+include\\n|\\n +lis_config.h lis.h lisf.h\\n+lib\\n|\\n +liblis.a\\n+share\\n+doc/lis examples/lis man\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"lis_config.h\"\n        }), \" is the header file required to build the library\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"lis.h\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"lisf.h\"\n        }), \" are the header files required by the C and Fortran compilers, respectively.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"liblis.a\"\n        }), \" is the library.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To ensure that the library has been installed successfully, enter\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"make installcheck\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"cleaning\",\n      children: \"Cleaning\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To remove the copied files in installed directory, enter\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"> make uninstall\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To remove the generated library and executable files in source directory, enter\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"> make clean\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To remove the configuration files in addition to the other generated files, enter\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"> make distclean\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"limitations\",\n      children: \"Limitations\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The current version has the following limitations:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"matrix-storage-formats-1\",\n      children: \"Matrix storage formats\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The VBR format does not support the multiprocessing environment.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The SA-AMG preconditioner supports only the CSR format.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"In the multiprocessing environment, the CSR is the only accepted format for user defined\\narrays.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"double-double-quadruple-precision-operations\",\n      children: \"Double-double (quadruple) precision operations\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The Jacobi, Gauss-Seidel, SOR, IDR(s), COCG, and COCR methods do not support the double-double precision operations.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The eigensolvers do not support the double-double precision operations.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The Jacobi, Gauss-Seidel and SOR methods in the hybrid preconditioner do not support the double-double precision operations.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The I+S and SA-AMG preconditioners do not support the double-double precision operations.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The double-double precision operations does not support complex arithmetic.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The double-double precision operations cannot be combined with the long-double precision operations.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"preconditioners-1\",\n      children: \"Preconditioners\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The algorithm of the ILU(k) preconditioner is based on the localized ILU preconditioning[38], which factorizes the block diagonal elements in parallel. Note that the convergence behavior approaches to that of the Jacobi preconditioner as the number of threads or processes increases.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"If a preconditioner other than the Jacobi or SSOR is selected and matrix A is not in the CSR\\nformat, a new matrix is created in the CSR format for preconditioning.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The SA-AMG preconditioner does not support the BiCG method for unsymmetric matrices.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The SA-AMG preconditioner does not support multithreading.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The SA-AMG preconditioner does not support complex arithmetic.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The assembly of the matrices in the SAINV preconditioner is not parallelized.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The user defined preconditioner cannot be used.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"eigensolvers-1\",\n      children: \"Eigensolvers\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"To compute complex eigenvalues, complex arithmetic must be enabled.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Therefore, when computing eigenvalues of unsymmetric matrices, complex arithmetic must always be enabled.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"basic-steps\",\n      children: \"Basic steps\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"We need following steps:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Initialization\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Matrix creation\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Vector creation\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Solver creation\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Value assignment for matrices and vectors\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Solver assignment\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Solver execution\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Finalization\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"We also need to include\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        children: \"#include \\\"lisf.h\\\"\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"which is located in include directory of install path.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"vector\",\n      children: \"Vector\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n! USE easifemBase\\n#include \\\"lisf.h\\\"\\n\\nINTEGER :: ierr\\nLIS_INTEGER :: i, n\\nLIS_VECTOR :: v\\n\\nn = 4\\nCALL lis_initialize(ierr)\\n\\nCALL lis_vector_create(0, v, ierr)\\nCALL lis_vector_set_size(v, 0, n, ierr)\\n\\nDO i = 1, n\\n  CALL lis_vector_set_value(LIS_INS_VALUE, i, DBLE(i), v, ierr)\\nEND DO\\n\\nCALL lis_vector_destroy(v, ierr)\\n\\nCALL lis_finalize(ierr)\\nEND PROGRAM main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"matrix\",\n      children: \"Matrix\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE easifemBase\\n#include \\\"lisf.h\\\"\\n\\nINTEGER :: ierr\\nLIS_INTEGER :: i, n\\nLIS_MATRIX :: A\\n\\nn = 4\\nCALL lis_initialize(ierr)\\n\\nCALL lis_matrix_create(0, A, ierr)\\nCALL lis_matrix_set_size(A, 0, n, ierr)\\n\\nDO i = 1, n\\n  IF (i .GT. 1) THEN\\n    CALL lis_matrix_set_value(LIS_INS_VALUE, i, i - 1, 1.0_DFP, A, ierr)\\n  END IF\\n\\n  IF (i .LT. n) THEN\\n    CALL lis_matrix_set_value(LIS_INS_VALUE, i, i + 1, 1.0_DFP, A, ierr)\\n  END IF\\n\\n  CALL lis_matrix_set_value(LIS_INS_VALUE, i, i, 2.0_DFP, A, ierr)\\nEND DO\\n\\nCALL lis_matrix_set_type(A, LIS_MATRIX_CSR, ierr)\\nCALL lis_matrix_assemble(A, ierr)\\n\\nCALL lis_matrix_destroy(A, ierr)\\n\\nCALL lis_finalize(ierr)\\nEND PROGRAM main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"setting-csr-matrix\",\n      children: \"Setting CSR matrix\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Note that index of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"IA\"\n      }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"JA\"\n      }), \" should start from 0.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE easifemBase\\n#include \\\"lisf.h\\\"\\n\\nCHARACTER(*), PARAMETER :: matrix_name = \\\"../../CSRMatrix/matrixMarket/e40r0000.mtx\\\"\\nCHARACTER(*), PARAMETER :: rhs_name = \\\"../../CSRMatrix/matrixMarket/e40r0000_rhs1.mtx\\\"\\nINTEGER :: ierr\\nLIS_MATRIX :: A\\nTYPE(CSRMatrix_) :: csrmat\\nREAL(DFP), ALLOCATABLE :: rhs(:)\\nREAL(DFP), ALLOCATABLE :: sol(:)\\nINTEGER(I4B), ALLOCATABLE :: ia(:)\\nINTEGER(I4B), ALLOCATABLE :: ja(:)\\nINTEGER(I4B) :: n\\nINTEGER(I4B) :: m\\nINTEGER(I4B) :: nnz\\nINTEGER(I4B) :: ii\\nINTEGER(I4B) :: unitno\\nCHARACTER(1024) :: astr\\n\\nOPEN (NEWUNIT=unitno, file=rhs_name, action=\\\"READ\\\", status=\\\"OLD\\\")\\nREAD (unitno, *) astr\\nREAD (unitno, *) n, m\\nCALL Reallocate(rhs, n)\\nDO ii = 1, n\\n  READ (unitno, *) rhs(ii)\\nEND DO\\nCLOSE (unitno)\\n\\nCALL IMPORT(csrmat, matrix_name, SPARSE_FMT_COO)\\n\\nn = SIZE(csrmat, 1)\\nm = SIZE(csrmat, 2)\\nnnz = GetNNZ(csrmat)\\nCALL Display(n, \\\"nrow = \\\")\\nCALL Display(m, \\\"ncol = \\\")\\nCALL Display(nnz, \\\"nnz = \\\")\\n\\nCALL Reallocate(sol, n)\\n\\n! lis\\n\\nCALL lis_initialize(ierr)\\n\\nia = csrmat%csr%ia - 1\\nja = csrmat%csr%ja - 1\\n\\nCALL lis_matrix_create(0, A, ierr)\\nCALL lis_matrix_set_size(A, 0, n, ierr)\\nCALL lis_matrix_set_csr(nnz, ia, ja, csrmat%a, A, ierr)\\nCALL lis_matrix_assemble(A, ierr)\\n\\nCALL lis_matrix_destroy(A, ierr)\\nCALL lis_finalize(ierr)\\nEND PROGRAM main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"solving-equations\",\n      children: \"Solving equations\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Following steps should be followed to solve a system of linear equations:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Create a solver\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL lis_solver_create(solver, ierr)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Set options of the solver\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"str = \\\"-i bicg -p none -tol 1.0e-12 -maxiter 1000\\\"\\nCALL lis_solver_set_option(str, solver, ierr)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"After setting the option, we can solve \", (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex\",\n          children: [(0,jsx_runtime.jsx)(_components.span, {\n            className: \"katex-mathml\",\n            children: (0,jsx_runtime.jsx)(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: (0,jsx_runtime.jsxs)(_components.semantics, {\n                children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"A\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"x\"\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    children: \"=\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"b\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"Ax=b\"\n                })]\n              })\n            })\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: [(0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6833em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"A\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"x\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mrel\",\n                children: \"=\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6944em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"b\"\n              })]\n            })]\n          })]\n        }), \" by using\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL lis_solve(A, b, x, solver, ierr)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE easifemBase\\n#include \\\"lisf.h\\\"\\n\\nCHARACTER(*), PARAMETER :: matrix_name = \\\"../../CSRMatrix/matrixMarket/small5.mtx\\\"\\nCHARACTER(*), PARAMETER :: rhs_name = \\\"../../CSRMatrix/matrixMarket/small5_rhs.mtx\\\"\\n\\n! CHARACTER(*), PARAMETER :: matrix_name = \\\"../../CSRMatrix/matrixMarket/e40r0000.mtx\\\"\\n! CHARACTER(*), PARAMETER :: rhs_name = \\\"../../CSRMatrix/matrixMarket/e40r0000_rhs1.mtx\\\"\\nINTEGER :: ierr\\nLIS_MATRIX :: A_\\nLIS_VECTOR :: rhs_, sol_\\nLIS_SOLVER :: solver\\nTYPE(CSRMatrix_) :: csrmat\\nREAL(DFP), ALLOCATABLE :: rhs(:)\\nREAL(DFP), ALLOCATABLE :: sol(:)\\nINTEGER(I4B), ALLOCATABLE :: ia(:)\\nINTEGER(I4B), ALLOCATABLE :: ja(:)\\nREAL(DFP), ALLOCATABLE :: a(:)\\nINTEGER(I4B) :: n\\nINTEGER(I4B) :: m\\nINTEGER(I4B) :: nnz\\nINTEGER(I4B) :: ii\\nINTEGER(I4B) :: unitno\\nCHARACTER(1024) :: astr\\n\\nOPEN (NEWUNIT=unitno, file=rhs_name, action=\\\"READ\\\", status=\\\"OLD\\\")\\nREAD (unitno, *) astr\\nREAD (unitno, *) n, m\\nCALL Display(n, \\\"n = \\\")\\nCALL Reallocate(rhs, n)\\nDO ii = 1, n\\n  READ (unitno, *) rhs(ii)\\nEND DO\\nCLOSE (unitno)\\n\\nCALL IMPORT(csrmat, matrix_name, SPARSE_FMT_COO)\\n\\nn = SIZE(csrmat, 1)\\nm = SIZE(csrmat, 2)\\nnnz = GetNNZ(csrmat)\\nCALL Display(n, \\\"nrow = \\\")\\nCALL Display(m, \\\"ncol = \\\")\\nCALL Display(nnz, \\\"nnz = \\\")\\n\\nCALL Reallocate(sol, n)\\n\\n! lis\\n\\nCALL lis_initialize(ierr)\\n\\nia = csrmat%csr%ia - 1\\nja = csrmat%csr%ja - 1\\n\\nCALL lis_matrix_create(0, A_, ierr)\\nCALL lis_matrix_set_size(A_, 0, n, ierr)\\nCALL lis_matrix_set_csr(nnz, ia, ja, csrmat%a, A_, ierr)\\nCALL lis_matrix_assemble(A_, ierr)\\nCALL lis_matrix_set()\\nCALL chkerr(ierr)\\nCALL display(\\\"flag 1\\\")\\n\\nCALL lis_vector_create(0, sol_, ierr)\\nCALL lis_vector_set_size(sol_, 0, n, ierr)\\nCALL lis_vector_scatter(sol, sol_, ierr)\\n\\nCALL lis_vector_create(0, rhs_, ierr)\\nCALL lis_vector_set_size(rhs_, 0, n, ierr)\\nCALL lis_vector_scatter(rhs, rhs_, ierr)\\nCALL chkerr(ierr)\\n\\nCALL display(\\\"flag 2\\\")\\n\\nCALL lis_solver_create(solver, ierr)\\nastr = \\\"-i gmres -p none\\\"\\nCALL lis_solver_set_option(TRIM(astr), solver, ierr)\\nastr = \\\"-tol 1.0e-15 -maxiter \\\"//tostring(n)\\nCALL lis_solver_set_option(TRIM(astr), solver, ierr)\\nCALL chkerr(ierr)\\n\\nCALL display(\\\"flag 3\\\")\\n\\nCALL lis_solve(A_, rhs_, sol_, solver, ierr)\\nCALL chkerr(ierr)\\n\\nCALL display(\\\"flag 4\\\")\\n\\nCALL lis_vector_gather(sol_, sol, ierr)\\nCALL Display(sol(1:5), \\\"solution = \\\")\\nCALL chkerr(ierr)\\n\\nCALL display(\\\"flag 5\\\")\\n\\nCALL lis_solver_destroy(solver, ierr)\\nCALL lis_matrix_destroy(A_, ierr)\\nCALL lis_vector_destroy(rhs_, ierr)\\nCALL lis_vector_destroy(sol_, ierr)\\nCALL lis_finalize(ierr)\\nEND PROGRAM main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"precondition-solver-decoupled-manner\",\n      children: \"Precondition Solver Decoupled Manner\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"We have mentioned how to solve linear equation above. However, in this method, every time we solve the system, preconditioner is updated. This is helpful when we are solving the nonlinear problem, as the global tangent matrix changes.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"solving-eigenvalue-problem\",\n      children: \"Solving eigenvalue problem\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/LisLinSolver/LISLinSolver_.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);