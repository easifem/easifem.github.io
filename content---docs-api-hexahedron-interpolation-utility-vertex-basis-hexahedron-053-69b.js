"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-hexahedron-interpolation-utility-vertex-basis-hexahedron-053-69b"],{

/***/ "./docs/docs-api/HexahedronInterpolationUtility/VertexBasis_Hexahedron.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ VertexBasis_Hexahedron_contentTitle),\n  \"default\": () => (/* binding */ VertexBasis_Hexahedron_MDXContent),\n  frontMatter: () => (/* binding */ VertexBasis_Hexahedron_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_hexahedron_interpolation_utility_vertex_basis_hexahedron_md_053_namespaceObject),\n  toc: () => (/* binding */ VertexBasis_Hexahedron_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-hexahedron-interpolation-utility-vertex-basis-hexahedron-md-053.json\nconst site_docs_docs_api_hexahedron_interpolation_utility_vertex_basis_hexahedron_md_053_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"HexahedronInterpolationUtility/VertexBasis_Hexahedron\",\"title\":\"VertexBasis\",\"description\":\"Returns the vertex basis.\",\"source\":\"@site/docs/docs-api/HexahedronInterpolationUtility/VertexBasis_Hexahedron.md\",\"sourceDirName\":\"HexahedronInterpolationUtility\",\"slug\":\"/HexahedronInterpolationUtility/VertexBasis_Hexahedron\",\"permalink\":\"/docs-api/HexahedronInterpolationUtility/VertexBasis_Hexahedron\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/HexahedronInterpolationUtility/VertexBasis_Hexahedron.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"QuadraturePoint\",\"permalink\":\"/docs-api/HexahedronInterpolationUtility/QuadraturePoint_Hexahedron\"},\"next\":{\"title\":\"xEdgeBasis\",\"permalink\":\"/docs-api/HexahedronInterpolationUtility/xEdgeBasis_Hexahedron\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/HexahedronInterpolationUtility/_VertexBasis_Hexahedron_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"PROGRAM main\\nUSE easifemBase\\nUSE easifemClasses\\nIMPLICIT NONE\\n\\nREAL(DFP), ALLOCATABLE :: xxx(:, :, :), yyy(:, :, :), zzz(:, :, :), &\\n& x(:), y(:), z(:), basisValue(:, :), val(:, :, :)\\nTYPE(VTKPlot_) :: avtk\\nTYPE(string) :: label(8)\\nINTEGER(I4B) :: ii\\n\\nx = linspace(-1.0_DFP, 1.0_DFP, 11)\\ny = linspace(-1.0_DFP, 1.0_DFP, 11)\\nz = linspace(-1.0_DFP, 1.0_DFP, 11)\\nCALL MeshGrid(xxx, yyy, zzz, x, y, z)\\nx = RESHAPE(xxx, [SIZE(xxx)])\\ny = RESHAPE(yyy, [SIZE(yyy)])\\nz = RESHAPE(zzz, [SIZE(zzz)])\\n\\nbasisValue = VertexBasis_Hexahedron(x, y, z)\\n\\nDO ii = 1, SIZE(label)\\n  label(ii) = tostring(ii)\\nEND DO\\n\\nCALL avtk%Plot(xxx, yyy, zzz, basisValue, label, \\\"vertexBasis.vts\\\")\\n\\nEND PROGRAM main\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/HexahedronInterpolationUtility/VertexBasis_Hexahedron.md\n\n\nconst VertexBasis_Hexahedron_frontMatter = {};\nconst VertexBasis_Hexahedron_contentTitle = 'VertexBasis';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst VertexBasis_Hexahedron_toc = [{\n  \"value\": \"Interface 1\",\n  \"id\": \"interface-1\",\n  \"level\": 2\n}, ...toc, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}];\nfunction VertexBasis_Hexahedron_createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    mdxAdmonitionTitle: \"mdxAdmonitionTitle\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"vertexbasis\",\n        children: \"VertexBasis\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the vertex basis.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"iframe\", {\n      src: \"/elements/hexahedron/vertexBasis.html\",\n      height: \"600\",\n      width: \"100%\",\n      scrolling: \"no\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"iframe\", {\n      src: \"/elements/hexahedron/vertexBasis2.html\",\n      height: \"600\",\n      width: \"100%\",\n      scrolling: \"no\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1\",\n      children: \"Interface 1\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE VertexBasis_Hexahedron\\n MODULE PURE FUNCTION VertexBasis_Hexahedron1(x, y, z) &\\n    & RESULT(ans)\\n   REAL(DFP), INTENT(IN) :: x(:), y(:), z(:)\\n   !! point of evaluation\\n   REAL(DFP) :: ans(SIZE(x), 8)\\n   !! ans(:,v1) basis function of vertex v1 at all points\\n END FUNCTION VertexBasis_Hexahedron1\\nEND INTERFACE VertexBasis_Hexahedron\\n\"\n          })\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"info\",\n          children: (0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"x\"\n            })\n          })\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"x coordinate of all points.\"\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"info\",\n          children: (0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"y\"\n            })\n          })\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"y coordinate of all points.\"\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"info\",\n          children: (0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"z\"\n            })\n          })\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"z coordinate of all points.\"\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE VertexBasis_Hexahedron\\n  MODULE PURE FUNCTION VertexBasis_Hexahedron3(xij) &\\n    & RESULT(ans)\\n    REAL(DFP), INTENT(IN) :: xij(:, :)\\n    !! point of evaluation\\n    REAL(DFP) :: ans(SIZE(xij, 2), 8)\\n    !! ans(:,v1) basis function of vertex v1 at all points\\n  END FUNCTION VertexBasis_Hexahedron3\\nEND INTERFACE VertexBasis_Hexahedron\\n\"\n      })\n    })]\n  });\n}\nfunction VertexBasis_Hexahedron_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(VertexBasis_Hexahedron_createMdxContent, {\n      ...props\n    })\n  }) : VertexBasis_Hexahedron_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/HexahedronInterpolationUtility/VertexBasis_Hexahedron.md\n");

/***/ })

}]);