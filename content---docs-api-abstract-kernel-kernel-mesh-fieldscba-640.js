"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-abstract-kernel-kernel-mesh-fieldscba-640"],{

/***/ "./docs/docs-api/AbstractKernel/KernelMeshFields.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_abstract_kernel_kernel_mesh_fields_md_cba_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-abstract-kernel-kernel-mesh-fields-md-cba.json\nconst site_docs_docs_api_abstract_kernel_kernel_mesh_fields_md_cba_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"AbstractKernel/KernelMeshFields\",\"title\":\"KernelMeshFields\",\"description\":\"This class contains the mesh fields of the kernel.\",\"source\":\"@site/docs/docs-api/AbstractKernel/KernelMeshFields.md\",\"sourceDirName\":\"AbstractKernel\",\"slug\":\"/AbstractKernel/KernelMeshFields\",\"permalink\":\"/docs-api/AbstractKernel/KernelMeshFields\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractKernel/KernelMeshFields.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"KernelMaterials\",\"permalink\":\"/docs-api/AbstractKernel/KernelMaterials\"},\"next\":{\"title\":\"KernelOpt\",\"permalink\":\"/docs-api/AbstractKernel/KernelOpt\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/AbstractKernel/KernelMeshFields.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'KernelMeshFields';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Structure\",\n  \"id\": \"structure\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"kernelmeshfields\",\n        children: \"KernelMeshFields\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This class contains the mesh fields of the kernel.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Its structure is given below:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"structure\",\n      children: \"Structure\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE :: KernelMeshFields_\\n  TYPE(AbstractScalarMeshFieldPointer_), ALLOCATABLE :: scalarFields(:)\\n  !! Scalar mesh fields\\n\\n  TYPE(AbstractVectorMeshFieldPointer_), ALLOCATABLE :: vectorFields(:)\\n  !! Vector mesh fields\\n\\n  TYPE(AbstractTensorMeshFieldPointer_), ALLOCATABLE :: tensorFields(:)\\n  !! tensor mesh fields\\n\\n  CLASS(AbstractScalarMeshField_), POINTER :: massDensity => NULL()\\n  !! Mass density, scalar mesh field\\n\\n  INTEGER(I4B) :: massDensityFieldType = TypeField%normal\\n  !! field type for mass density\\n  !! normal means the field will change from one element to another\\n\\n  INTEGER(I4B) :: massDensityVarType = TypeField%constant\\n  !! varType denotes how the field is changing inside the element\\n  !! constant means the field is constant inside the element\\n  !! space means the field changes in space element\\n  !! spaceTime means the field changes in space-time element\\n  !! time means the field changes in time element\\n\\n  INTEGER(I4B) :: massDensityDefineOn = TypeFEVariableOpt%quadrature\\n  !! mass density is defined on quadrature points\\n\\n  INTEGER(I4B) :: massDensityMaxNNS = 0\\n  !! maximum number of nodes in space for mass density\\n\\n  INTEGER(I4B) :: massDensityMaxNNT = 0\\n  !! maximum number of nodes in time for mass density\\n\\n  CLASS(AbstractScalarMeshField_), POINTER :: shearModulus => NULL()\\n  !! Lame parameter\\n  !! NOTE: It is need in the case of Isotropic elasticity\\n  !! This will be a scalar mesh field\\n\\n  INTEGER(I4B) :: shearModulusFieldType = TypeField%normal\\n  !! field type for mass density\\n  !! normal means the field will change from one element to another\\n\\n  INTEGER(I4B) :: shearModulusVarType = TypeField%constant\\n  !! varType denotes how the field is changing inside the element\\n  !! constant means the field is constant inside the element\\n  !! space means the field changes in space element\\n  !! spaceTime means the field changes in space-time element\\n  !! time means the field changes in time element\\n\\n  INTEGER(I4B) :: shearModulusDefineOn = TypeFEVariableOpt%quadrature\\n  !! mass density is defined on quadrature points\\n\\n  INTEGER(I4B) :: shearModulusMaxNNS = 0\\n  !! maximum number of nodes in space for mass density\\n\\n  INTEGER(I4B) :: shearModulusMaxNNT = 0\\n  !! maximum number of nodes in time for mass density\\n\\n  CLASS(AbstractScalarMeshField_), POINTER :: youngsModulus => NULL()\\n  !! Lame parameter\\n  !! NOTE: It is need in the case of Isotropic elasticity\\n  !! This will be a scalar mesh field\\n\\n  INTEGER(I4B) :: youngsModulusFieldType = TypeField%normal\\n  !! field type for mass density\\n  !! normal means the field will change from one element to another\\n\\n  INTEGER(I4B) :: youngsModulusVarType = TypeField%constant\\n  !! varType denotes how the field is changing inside the element\\n  !! constant means the field is constant inside the element\\n  !! space means the field changes in space element\\n  !! spaceTime means the field changes in space-time element\\n  !! time means the field changes in time element\\n\\n  INTEGER(I4B) :: youngsModulusDefineOn = TypeFEVariableOpt%quadrature\\n  !! mass density is defined on quadrature points\\n\\n  INTEGER(I4B) :: youngsModulusMaxNNS = 0\\n  !! maximum number of nodes in space for mass density\\n\\n  INTEGER(I4B) :: youngsModulusMaxNNT = 0\\n  !! maximum number of nodes in time for mass density\\n\\n  CLASS(AbstractScalarMeshField_), POINTER :: dampCoeff_alpha => NULL()\\n  !! Rayleigh damping coefficient alpha\\n\\n  CLASS(AbstractScalarMeshField_), POINTER :: dampCoeff_beta => NULL()\\n  !! Rayleigh damping coefficient beta\\n\\n  INTEGER(I4B) :: dampCoeffFieldType = TypeField%normal\\n  !! field type for mass density\\n  !! normal means the field will change from one element to another\\n\\n  INTEGER(I4B) :: dampCoeffVarType = TypeField%constant\\n  !! varType denotes how the field is changing inside the element\\n  !! constant means the field is constant inside the element\\n  !! space means the field changes in space element\\n  !! spaceTime means the field changes in space-time element\\n  !! time means the field changes in time element\\n\\n  INTEGER(I4B) :: dampCoeffDefineOn = TypeFEVariableOpt%quadrature\\n  !! mass density is defined on quadrature points\\n\\n  INTEGER(I4B) :: dampCoeffMaxNNS = 0\\n  !! maximum number of nodes in space for mass density\\n\\n  INTEGER(I4B) :: dampCoeffMaxNNT = 0\\n  !! maximum number of nodes in time for mass density\\n\\n  CLASS(AbstractScalarMeshField_), POINTER :: scalarCoeff => NULL()\\n  !! it can be phase velocity or coefficient of permiabillity for\\n  !! isotropic medium this will be a scalar mesh field\\n\\n  INTEGER(I4B) :: scalarCoeffFieldType = TypeField%normal\\n  !! field type for mass density\\n  !! normal means the field will change from one element to another\\n\\n  INTEGER(I4B) :: scalarCoeffVarType = TypeField%constant\\n  !! varType denotes how the field is changing inside the element\\n  !! constant means the field is constant inside the element\\n  !! space means the field changes in space element\\n  !! spaceTime means the field changes in space-time element\\n  !! time means the field changes in time element\\n\\n  INTEGER(I4B) :: scalarCoeffDefineOn = TypeFEVariableOpt%quadrature\\n  !! mass density is defined on quadrature points\\n\\n  INTEGER(I4B) :: scalarCoeffMaxNNS = 0\\n  !! maximum number of nodes in space for mass density\\n\\n  INTEGER(I4B) :: scalarCoeffMaxNNT = 0\\n  !! maximum number of nodes in time for mass density\\n\\n  CLASS(AbstractScalarMeshField_), POINTER :: phase_velocity => NULL()\\n  !! phase_velocity ! This will be a scalar mesh field\\n\\n  CLASS(AbstractVectorMeshField_), POINTER :: stress => NULL()\\n  !! Stress tensor ! This will be a tensor mesh field\\n\\n  CLASS(AbstractVectorMeshField_), POINTER :: strain => NULL()\\n  !! Strain tensor ! This will be a tensor mesh field\\n\\n  CLASS(AbstractVectorMeshField_), POINTER :: solidMechData => NULL()\\n  !! Constitutive data for solid materials\\n\\n  CLASS(AbstractTensorMeshField_), POINTER :: Cijkl => NULL()\\n  !! Elasticity tensor\\n  !! NOTE: It is used for non Isotropic elasticity\\n  !! This will be a tensor mesh field\\n\\n  INTEGER(I4B) :: cijklFieldType = TypeField%normal\\n  !! field type for mass density\\n  !! normal means the field will change from one element to another\\n\\n  INTEGER(I4B) :: cijklVarType = TypeField%constant\\n  !! varType denotes how the field is changing inside the element\\n  !! constant means the field is constant inside the element\\n  !! space means the field changes in space element\\n  !! spaceTime means the field changes in space-time element\\n  !! time means the field changes in time element\\n\\n  INTEGER(I4B) :: cijklDefineOn = TypeFEVariableOpt%quadrature\\n  !! mass density is defined on quadrature points\\n\\n  INTEGER(I4B) :: cijklMaxNNS = 0\\n  !! maximum number of nodes in space for mass density\\n\\n  INTEGER(I4B) :: cijklMaxNNT = 0\\n  !! maximum number of nodes in time for mass density\\n\\n  INTEGER(I4B) :: cijklDim1 = 0\\n  !! dimension of elasticity tensor\\n\\n  INTEGER(I4B) :: cijklDim2 = 0\\n  !! dimension of elasticity tensor\\n\\nEND TYPE KernelMeshFields_\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/AbstractKernel/KernelMeshFields.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);