"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---blog-how-to-setup-a-new-kernel-in-easifem-8-e-4-d3e"],{

/***/ "./.docusaurus/docusaurus-plugin-content-blog/blog/site-docs-blog-how-to-setup-a-new-kernel-in-easifem-md-8e4.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"permalink":"/blog/how-to-setup-a-new-kernel-in-easifem","source":"@site/docs/blog/how-to-setup-a-new-kernel-in-easifem.md","title":"Setting up a new kernel using EASIFEM","description":"This post provides definition of Kernel in EASIFEM and provides a step by step guide to create a new kernel.","date":"2025-05-11T09:05:24.000Z","tags":[{"inline":true,"label":"kernel","permalink":"/blog/tags/kernel"},{"inline":true,"label":"guide","permalink":"/blog/tags/guide"},{"inline":true,"label":"tutorial","permalink":"/blog/tags/tutorial"}],"readingTime":10.28,"hasTruncateMarker":true,"authors":[{"name":"Vikas Sharma","title":"Assistant Professor, Kyoto University, Japan","url":"https://github.com/vickysharma0812","socials":{"x":"https://x.com/vickysharma0812","github":"https://github.com/vickysharma0812"},"imageURL":"https://raw.githubusercontent.com/easifem/authors/refs/heads/main/images/vickysharma0812.jpg","key":"vickysharma0812","page":null},{"name":"Shion Shimizu","title":"Doctoral Student, Kyoto University, Japan","url":"https://github.com/shishiousan","socials":{"github":"https://github.com/shishiousan"},"imageURL":"https://raw.githubusercontent.com/easifem/authors/refs/heads/main/images/shishiousan.jpg","key":"shishiousan","page":null}],"frontMatter":{"title":"Setting up a new kernel using EASIFEM","description":"This post provides definition of Kernel in EASIFEM and provides a step by step guide to create a new kernel.","authors":["vickysharma0812","shishiousan"],"tags":["kernel","guide","tutorial"],"hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Creating structured mesh in 2D using EASIFEM","permalink":"/blog/generating-2d-mesh-in-easifem"}}');

/***/ }),

/***/ "./docs/blog/how-to-setup-a-new-kernel-in-easifem.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_blog_blog_site_docs_blog_how_to_setup_a_new_kernel_in_easifem_md_8e4_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_blog_blog_site_docs_blog_how_to_setup_a_new_kernel_in_easifem_md_8e4_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-blog/blog/site-docs-blog-how-to-setup-a-new-kernel-in-easifem-md-8e4.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Setting up a new kernel using EASIFEM',\n\tdescription: 'This post provides definition of Kernel in EASIFEM and provides a step by step guide to create a new kernel.',\n\tauthors: [\n\t\t'vickysharma0812',\n\t\t'shishiousan'\n\t],\n\ttags: [\n\t\t'kernel',\n\t\t'guide',\n\t\t'tutorial'\n\t],\n\thide_table_of_contents: false\n};\nconst contentTitle = 'Setting up a new kernel using EASIFEM';\n\nconst assets = {\n\"authorsImageUrls\": [undefined, undefined],\n};\n\n\n\nconst toc = [{\n  \"value\": \"What is a kernel?\",\n  \"id\": \"what-is-a-kernel\",\n  \"level\": 2\n}, {\n  \"value\": \"Git ignore file\",\n  \"id\": \"git-ignore-file\",\n  \"level\": 2\n}, {\n  \"value\": \"Directory structure\",\n  \"id\": \"directory-structure\",\n  \"level\": 2\n}, {\n  \"value\": \"Structure of <code>src</code> directory\",\n  \"id\": \"structure-of-src-directory\",\n  \"level\": 2\n}, {\n  \"value\": \"Module and Submodule CMake file\",\n  \"id\": \"module-and-submodule-cmake-file\",\n  \"level\": 2\n}, {\n  \"value\": \"Configuration for easifem CLI.\",\n  \"id\": \"configuration-for-easifem-cli\",\n  \"level\": 2\n}, {\n  \"value\": \"Building the kernel by using easifem CLI\",\n  \"id\": \"building-the-kernel-by-using-easifem-cli\",\n  \"level\": 2\n}, {\n  \"value\": \"Installing the kernel by using easifem CLI\",\n  \"id\": \"installing-the-kernel-by-using-easifem-cli\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    h2: \"h2\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This post explains the meaning of kernel in EASIFEM platform. It also describe the steps to create a new kernel in EASIFEM.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"what-is-a-kernel\",\n      children: \"What is a kernel?\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A kernel is a computer program written in object oriented programming paradigm which attempts to solve a partial differential equation. In easifem, the term kernel is used for solving a particular PDE.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      title: \"Why particular PDE?\",\n      type: \"note\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"In our experience when we focus on solving a particular PDE, we can design the kernel quickly and more efficiently. This is because the kernel has specific tasks to perform with limited number of kernel parameters. We believe that this is a good balance between flexibility, efficiency and speed of development. In the past, we have tried to create a generic PDE solver type kernel but after few years the kernel became too complex and difficult to maintain by a group of developers. Therefore, we want to define a kernel for a specific PDE.\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      title: \"Is kernel flexible?\",\n      type: \"info\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"Yes, the kernel has sufficient amount of flexibility. For example, the coefficient of PDE can be constant, spatially changing or time dependent. The boundary condition can also be constant, space, time, or space-time dependent.\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      title: \"Kernel is blend of procedural programming and object oriented programming?\",\n      type: \"tip\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"A kernel is a blend of procedural programming and object oriented programming. The procedural programming comes into the picture because a kernel is trying to solve a specific PDE by using a specific method. In this sense, the kernel's design is driven keeping procedure programming in mind. However, a kernel can solve several problems governed by the same PDE. These problems can have different types of boundary conditions and material properties. Also, we can use several numerical methods to solve the problem. In order to facilitate these objectives, we use object oriented programming.\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"git-ignore-file\",\n      children: \"Git ignore file\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Add the following \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \".gitignore\"\n      }), \" file in the root directory of your kernel. This will help you to ignore the unnecessary files which are not required for the kernel.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: \"Git ignore file for EASIFEM projects\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"*.a\\n*.mod\\n*.smod\\n*.o\\n*.out\\n*.i90\\n*.if90\\n*.DS_Store\\n*.prj\\n*.drawio\\n*.log\\n*.eps\\n*.h5\\n*.gp\\n*.msh\\n*.vtu\\n*.ipynb\\n*.dat\\n*.mtx\\n*.eps\\n*.pdf\\n*.geo\\n*.ps\\n*.png\\n*.jpg\\n*.plt\\n*.csv\\n\\n*/build/\\n**/build\\nbuild/\\n\\n_packages/\\n__*\\n\\nlog.txt\\ntest.txt\\n\\n## Obsidian related\\n.obsidian\\n\\n# VSCode related\\nvscode-settings\\n.vscode/\\nsettings.json\\n\\n## Docusaurus related\\n\\n# Logs\\nlogs\\n*.log\\nnpm-debug.log*\\nyarn-debug.log*\\nyarn-error.log*\\nlerna-debug.log*\\n.pnpm-debug.log*\\n\\n# Diagnostic reports (https://nodejs.org/api/report.html)\\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\\n\\n# Runtime data\\npids\\n*.pid\\n*.seed\\n*.pid.lock\\n\\n# Directory for instrumented libs generated by jscoverage/JSCover\\nlib-cov\\n\\n# Coverage directory used by tools like istanbul\\ncoverage\\n*.lcov\\n\\n# nyc test coverage\\n.nyc_output\\n\\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\\n.grunt\\n\\n# Bower dependency directory (https://bower.io/)\\nbower_components\\n\\n# node-waf configuration\\n.lock-wscript\\n\\n# Compiled binary addons (https://nodejs.org/api/addons.html)\\nbuild/Release\\n\\n# Dependency directories\\nnode_modules/\\njspm_packages/\\n\\n# Snowpack dependency directory (https://snowpack.dev/)\\nweb_modules/\\n\\n# TypeScript cache\\n*.tsbuildinfo\\n\\n# Optional npm cache directory\\n.npm\\n\\n# Optional eslint cache\\n.eslintcache\\n\\n# Optional stylelint cache\\n.stylelintcache\\n\\n# Microbundle cache\\n.rpt2_cache/\\n.rts2_cache_cjs/\\n.rts2_cache_es/\\n.rts2_cache_umd/\\n\\n# Optional REPL history\\n.node_repl_history\\n\\n# Output of 'npm pack'\\n*.tgz\\n\\n# Yarn Integrity file\\n.yarn-integrity\\n\\n# dotenv environment variable files\\n.env\\n.env.development.local\\n.env.test.local\\n.env.production.local\\n.env.local\\n\\n# parcel-bundler cache (https://parceljs.org/)\\n.cache\\n.parcel-cache\\n\\n# Next.js build output\\n.next\\nout\\n\\n# Nuxt.js build / generate output\\n.nuxt\\ndist\\n\\n# Gatsby files\\n.cache/\\n# Comment in the public line in if your project uses Gatsby and not Next.js\\n# https://nextjs.org/blog/next-9-1#public-directory-support\\n# public\\n\\n# vuepress build output\\n.vuepress/dist\\n\\n# vuepress v2.x temp and cache directory\\n.temp\\n.cache\\n\\n# Docusaurus cache and generated files\\n.docusaurus\\n\\n# Serverless directories\\n.serverless/\\n\\n# FuseBox cache\\n.fusebox/\\n\\n# DynamoDB Local files\\n.dynamodb/\\n\\n# TernJS port file\\n.tern-port\\n\\n# Stores VSCode versions used for testing VSCode extensions\\n.vscode-test\\n\\n# yarn v2\\n.yarn/cache\\n.yarn/unplugged\\n.yarn/build-state.yml\\n.yarn/install-state.gz\\n.pnp.*\\n\\n.DS_Store\\n.$*\\n\\n~*\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"directory-structure\",\n      children: \"Directory structure\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Create following directory in the root directory of your kernel.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"src: This directory will contain the source code of your kernel.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"docs: This directory will contain the documentation of your kernel.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"tests: This directory will contain the test code of your kernel.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"examples: This directory will contain the example code and tutorials of your kernel.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"cmake: This directory will contain the cmake files necessary to build your kernel.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"docker: This directory will contain the docker files.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"bin: This directory will contain the binary files of application based on your kernel\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"media: This directory will contain the figures and images used for the documentation\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"pages: This directory will contain the pages for documentation by using ford.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.h2, {\n      id: \"structure-of-src-directory\",\n      children: [\"Structure of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"src\"\n      }), \" directory\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"src\"\n      }), \" directory will contain the following directories and files.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"modules\"\n        }), \": This directory contains the header files of the kernel. These header files are called modules.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"submodules\"\n        }), \": This directory contains the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"submodules\"\n        }), \" of the kernel. These \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"submodules\"\n        }), \" are contains the implementation of the header files.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Let us say you want to develop a class called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Abstract1DUVSTFEM_\"\n      }), \" (note that all user defined data types end with an underscore). Then you should create a directory called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Abstract1DUVSTFEM\"\n      }), \" in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"src/modules\"\n      }), \" directory.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Now in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Abstract1DUVSTFEM\"\n      }), \" directory create another directory called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"src\"\n      }), \" which will contain the header file. In this source directory you will create \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Abstract1DUVSTFEM_Class.F90\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Abstract1DUVSTFEM\"\n      }), \" directory create a file called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"CMakeLists.txt\"\n      }), \". The content of this is given below.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-cmake\",\n        metastring: \"title=\\\"modules/Abstract1DUVSTFEM/CMakeLists.txt\\\"\",\n        children: \"set(src_path \\\"${CMAKE_CURRENT_LIST_DIR}/src/\\\")\\ntarget_sources(${PROJECT_NAME} PRIVATE ${src_path}/Abstract1DUVSTFEM_Class.F90)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If you follow the above steps the src directory will look like the following.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"src\\n├── modules\\n│   └── Abstract1DUVSTFEM\\n│       ├── CMakeLists.txt\\n│       └── src\\n│           └── Abstract1DUVSTFEM_Class.F90\\n└── submodules\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Now we will implement the methods defined in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Abstract1DUVSTFEM_Class.F90\"\n      }), \" in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"src/submodules\"\n      }), \" directory. Create a directory called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Abstract1DUVSTFEM\"\n      }), \" in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"src/submodules\"\n      }), \" directory. In this directory create a file called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"CMakeLists.txt\"\n      }), \". In this directory create a directory called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"src\"\n      }), \" which will contain the submodules of module \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Abstract1DUVSTFEM_Class\"\n      }), \". The structure of the directory will look like this.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The content of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"CMakeLists.txt\"\n      }), \" file will be as follows.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-cmake\",\n        metastring: \"title=\\\"submodules/Abstract1DUVSTFEM/CMakeLists.txt\\\"\",\n        children: \"set(src_path \\\"${CMAKE_CURRENT_LIST_DIR}/src/\\\")\\ntarget_sources(\\n  ${PROJECT_NAME}\\n  PRIVATE ${src_path}/Abstract1DUVSTFEM_Class@ApplyDirichletBCMethods.F90\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"src\\n├── modules\\n│   └── Abstract1DUVSTFEM\\n│       ├── CMakeLists.txt\\n│       └── src\\n│           └── Abstract1DUVSTFEM_Class.F90\\n└── submodules\\n    ├── Abstract1DUVSTFEM\\n    │   └── src\\n    │       ├── Abstract1DUVSTFEM_Class@ApplyDirichletBCMethods.F90\\n    └── CMakeLists.txt\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"module-and-submodule-cmake-file\",\n      children: \"Module and Submodule CMake file\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"modules\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"submodules\"\n      }), \" directory create a file called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"CMakeLists.txt\"\n      }), \". The CMake file will look like this.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-cmake\",\n        metastring: \"title=\\\"modules/CMakeLists.txt\\\"\",\n        children: \"# AbstractSTFEM\\ninclude(${CMAKE_CURRENT_LIST_DIR}/Abstract1DUVSTFEM/CMakeLists.txt)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-cmake\",\n        metastring: \"title=\\\"submodules/CMakeLists.txt\\\"\",\n        children: \"# AbstractSTFEM\\ninclude(${CMAKE_CURRENT_LIST_DIR}/Abstract1DUVSTFEM/CMakeLists.txt)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Now the structure of the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"src\"\n      }), \" directory will look like this.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"src\\n├── modules\\n│   ├── Abstract1DUVSTFEM\\n│   │   ├── CMakeLists.txt\\n│   │   └── src\\n│   │       └── Abstract1DUVSTFEM_Class.F90\\n│   └── CMakeLists.txt\\n└── submodules\\n    ├── Abstract1DUVSTFEM\\n    │   ├── CMakeLists.txt\\n    │   └── src\\n    │       ├── Abstract1DUVSTFEM_Class@ApplyDirichletBCMethods.F90\\n    ├── CMakeLists.txt\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Now we need to write the main \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"CMakeLists.txt\"\n      }), \" file in the root of our project. That is, the parent directory of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"src\"\n      }), \" directory. We will describe the content of this file in another blog post.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: \"Click here to see the content\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-cmake\",\n            metastring: \"title=\\\"CMakeLists.txt\\\"\",\n            children: \"cmake_minimum_required(VERSION 3.20.0 FATAL_ERROR)\\nset(PROJECT_NAME \\\"easifemOneDimElasticity\\\")\\nproject(${PROJECT_NAME})\\n\\nenable_language(Fortran C CXX)\\n\\nset(VERSION_MAJOR \\\"25\\\")\\nset(VERSION_MINOR \\\"04\\\")\\nset(VERSION_BugFix \\\"1\\\")\\nset(PROJECT_VERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_BugFix})\\n\\nset(CMAKE_PROJECT_DESCRIPTION\\n    \\\"${PROJECT_NAME} is  part of EASIFEM platform.\\n    EASIFEM: Expandable and Scalable Infrastructure for Finite Element Methods.\\n    This program solves one dimensional wave propogation problems using finite element\\n    methods including space-time finite element methods.\\n    \\\")\\n\\nset(CMAKE_PROJECT_HOMEPAGE_URL \\\"https://www.easifem.com\\\")\\n\\nset(TARGETS_EXPORT_NAME \\\"${PROJECT_NAME}Targets\\\")\\nset(namespace \\\"${PROJECT_NAME}\\\")\\n\\ninclude(CMakePrintHelpers)\\ninclude(FortranCInterface)\\n\\nFortranCInterface_VERIFY()\\n\\nlist(APPEND TARGET_COMPILE_DEF \\\"-DUSE_CMAKE\\\")\\n\\n# find my cmake modules here...\\nlist(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules)\\n\\n# check error\\nif(\\\" ${CMAKE_CURRENT_SOURCE_DIR}\\\" STREQUAL \\\" ${CMAKE_CURRENT_BINARY_DIR}\\\")\\n  message(\\n    FATAL_ERROR\\n      \\\"[ERROR] :: Build directory and Source directory cannot be same.\\\")\\nendif()\\n\\n# make directories include(${PROJECT_SOURCE_DIR}/cmake/makeDirs.cmake)\\n#\\ninclude(GNUInstallDirs)\\n\\nset(CMAKE_Fortran_MODULE_DIRECTORY\\n    ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_INSTALL_INCLUDEDIR})\\n\\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY\\n    ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR})\\n\\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY\\n    ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR})\\n\\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY\\n    ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR})\\n\\nset(INSTALL_LIBDIR\\n    ${CMAKE_INSTALL_LIBDIR}\\n    CACHE PATH \\\"Installation location of lib\\\")\\n\\nset(INSTALL_INCLUDEDIR\\n    ${CMAKE_INSTALL_INCLUDEDIR}\\n    CACHE PATH \\\"Installation location of module files\\\")\\n\\nset(INSTALL_BINDIR\\n    ${CMAKE_INSTALL_BINDIR}\\n    CACHE PATH \\\"Installation location of binary files\\\")\\n\\nif(WIN32 AND NOT CYGWIN)\\n  set(DEF_INSTALL_CMAKEDIR CMake)\\nelse()\\n  set(DEF_INSTALL_CMAKEDIR share/cmake/${PROJECT_NAME})\\nendif()\\n\\nset(INSTALL_CMAKEDIR\\n    ${DEF_INSTALL_CMAKEDIR}\\n    CACHE PATH \\\"Installation directory for CMake files\\\")\\n\\nforeach(p LIB BIN INCLUDE CMAKE)\\n  file(TO_NATIVE_PATH ${CMAKE_INSTALL_PREFIX}/${INSTALL_${p}DIR} _path)\\n  message(STATUS \\\"Installing ${p} componenets to ${_path}\\\")\\nendforeach()\\n\\noption(BUILD_SHARED_LIBS \\\"Build shared library\\\" ON)\\n\\nif(BUILD_SHARED_LIBS)\\n  message(STATUS \\\"${PROJECT_NAME} will be built as a shared library.\\\")\\n  add_library(${PROJECT_NAME} SHARED \\\"\\\")\\n  set_property(TARGET ${PROJECT_NAME} PROPERTY POSITION_INDEPENDENT_CODE TRUE)\\nelse()\\n  message(STATUS \\\"${PROJECT_NAME} will be built as a static library.\\\")\\n  add_library(${PROJECT_NAME} STATIC \\\"\\\")\\nendif()\\n\\nmessage(\\n  STATUS\\n    \\\"[INFO] :: Is the Fortran compiler loaded? ${CMAKE_Fortran_COMPILER_LOADED}\\\"\\n)\\n\\nif(CMAKE_Fortran_COMPILER_LOADED)\\n  message(STATUS \\\"[INFO] :: Fortran compiler: ${CMAKE_Fortran_COMPILER_ID}\\\")\\n  message(\\n    STATUS\\n      \\\"[INFO] :: Fortran compiler version is: ${CMAKE_Fortran_COMPILER_VERSION}\\\"\\n  )\\nendif()\\n\\nif(NOT CMAKE_BUILD_TYPE)\\n  set(CMAKE_BUILD_TYPE\\n      Release\\n      CACHE STRING \\\"Build type\\\" FORCE)\\nendif()\\n\\nif(${CMAKE_Fortran_COMPILER_ID} STREQUAL \\\"GNU\\\" OR Fortran_COMPILER_NAME MATCHES\\n                                                  \\\"gfortran*\\\")\\n\\n  list(\\n    APPEND\\n    FORTRAN_FLAGS\\n    \\\"-ffree-form\\\"\\n    \\\"-ffree-line-length-none\\\"\\n    \\\"-std=f2018\\\"\\n    \\\"-fimplicit-none\\\"\\n    \\\"-fno-range-check\\\")\\n\\n  list(APPEND FORTRAN_FLAGS_RELEASE \\\"-O3\\\")\\n\\n  if(APPLE)\\n    list(\\n      APPEND\\n      FORTRAN_FLAGS_DEBUG\\n      \\\"-fbounds-check\\\"\\n      \\\"-g\\\"\\n      \\\"-fbacktrace\\\"\\n      \\\"-Wextra\\\"\\n      \\\"-Wall\\\"\\n      # \\\"-fprofile-arcs\\\"\\n      \\\"-ftest-coverage\\\"\\n      \\\"-Wimplicit-interface\\\")\\n\\n  else()\\n    list(\\n      APPEND\\n      FORTRAN_FLAGS_DEBUG\\n      \\\"-fbounds-check\\\"\\n      \\\"-g\\\"\\n      \\\"-fbacktrace\\\"\\n      \\\"-Wextra\\\"\\n      \\\"-Wall\\\"\\n      # \\\"-fprofile-arcs\\\"\\n      \\\"-ftest-coverage\\\"\\n      \\\"-Wimplicit-interface\\\")\\n  endif()\\n\\nelseif(${CMAKE_Fortran_COMPILER_ID} STREQUAL \\\"Intel\\\" OR Fortran_COMPILER_NAME\\n                                                        MATCHES \\\"ifort*\\\")\\n  list(APPEND FORTRAN_FLAGS \\\"-r8\\\" \\\"-W1\\\")\\n  list(APPEND FORTRAN_FLAGS_RELEASE \\\"-O3\\\")\\n  list(\\n    APPEND\\n    FORTRAN_FLAGS_DEBUG\\n    \\\"-O0\\\"\\n    \\\"-traceback\\\"\\n    \\\"-g\\\"\\n    \\\"-debug all\\\"\\n    \\\"-check all\\\"\\n    \\\"-ftrapuv\\\"\\n    \\\"-warn\\\"\\n    \\\"nointerfaces\\\")\\n\\nelseif(${CMAKE_Fortran_COMPILER_ID} STREQUAL \\\"XL\\\" OR Fortran_COMPILER_NAME\\n                                                     MATCHES \\\"xlf*\\\")\\n\\n  list(APPEND FORTRAN_FLAGS \\\"-q64\\\" \\\"-qrealsize=8\\\" \\\"-qsuffix=f=f90:cpp=f90\\\")\\n  list(APPEND FORTRAN_FLAGS_RELEASE \\\"-O3\\\" \\\"-qstrict\\\")\\n  list(APPEND FORTRAN_FLAGS_DEBUG \\\"-O0\\\" \\\"-g\\\" \\\"-qfullpath\\\" \\\"-qkeepparm\\\")\\n\\nelse()\\n  message(ERROR \\\"[ERROR] :: No optimized Fortran compiler flags are known\\\")\\nendif()\\n\\ncmake_print_variables(FORTRAN_FLAGS)\\ncmake_print_variables(FORTRAN_FLAGS_RELEASE)\\ncmake_print_variables(FORTRAN_FLAGS_DEBUG)\\n\\n# include(${PROJECT_SOURCE_DIR}/cmake/targetCompileOpts.cmake)\\ntarget_compile_options(\\n  ${PROJECT_NAME}\\n  PRIVATE ${TARGET_COMPILE_OPT} ${FORTRAN_FLAGS}\\n          \\\"$<$<CONFIG:Debug>:${FORTRAN_FLAGS_DEBUG}>\\\"\\n          \\\"$<$<CONFIG:Release>:${FORTRAN_FLAGS_RELEASE}>\\\")\\n\\n# include(${PROJECT_SOURCE_DIR}/cmake/targetIncludeDirs.cmake)\\ntarget_include_directories(\\n  ${PROJECT_NAME} PUBLIC $<BUILD_INTERFACE:${CMAKE_Fortran_MODULE_DIRECTORY}>\\n                         $<INSTALL_INTERFACE:${INSTALL_INCLUDEDIR}>)\\n\\n# include(${PROJECT_SOURCE_DIR}/cmake/targetProperties.cmake) target properties\\nset_target_properties(\\n  ${PROJECT_NAME}\\n  PROPERTIES POSITION_INDEPENDENT_CODE 1\\n             SOVERSION ${VERSION_MAJOR}\\n             OUTPUT_NAME ${PROJECT_NAME}\\n             LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}\\n             ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}\\n             RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}\\n             MACOSX_RPATH ON\\n             WINDOWS_EXPORT_ALL_SYMBOLS ON)\\n\\n# include(${PROJECT_SOURCE_DIR}/cmake/targetCompileDefs.cmake)\\noption(USE_REAL32 OFF)\\noption(USE_REAL64 ON)\\n\\nif(USE_REAL32)\\n  list(APPEND TARGET_COMPILE_DEF \\\"-DUSE_Real32\\\")\\nendif()\\n\\nif(USE_REAL64)\\n  list(APPEND TARGET_COMPILE_DEF \\\"-DUSE_Real64\\\")\\nendif()\\n\\noption(USE_INT32 ON)\\nif(USE_INT32)\\n  list(APPEND TARGET_COMPILE_DEF \\\"-DUSE_Int32\\\")\\nendif()\\n\\noption(USE_INT64 OFF)\\nif(USE_INT64)\\n  list(APPEND TARGET_COMPILE_DEF \\\"-DUSE_Int64\\\")\\nendif()\\n\\nlist(APPEND TARGET_COMPILE_DEF \\\"-D${CMAKE_HOST_SYSTEM_NAME}_SYSTEM\\\")\\n\\n# DEFINE DEBUG\\nif(${CMAKE_BUILD_TYPE} STREQUAL \\\"Debug\\\")\\n  list(APPEND TARGET_COMPILE_DEF \\\"-DDEBUG_VER\\\")\\nendif()\\n\\n# include(${PROJECT_SOURCE_DIR}/cmake/install.cmake) Installation\\ninstall(\\n  DIRECTORY ${CMAKE_Fortran_MODULE_DIRECTORY}\\n  DESTINATION \\\"./\\\"\\n  COMPONENT \\\"${PROJECT_NAME}\\\")\\n\\ninstall(\\n  EXPORT ${TARGETS_EXPORT_NAME}\\n  FILE \\\"${TARGETS_EXPORT_NAME}.cmake\\\"\\n  NAMESPACE ${namespace}::\\n  DESTINATION ${INSTALL_CMAKEDIR}\\n  COMPONENT \\\"${PROJECT_NAME}\\\")\\n\\ninclude(CMakePackageConfigHelpers)\\n\\nwrite_basic_package_version_file(\\n  \\\"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake\\\"\\n  VERSION \\\"${PROJECT_VERSION}\\\"\\n  COMPATIBILITY AnyNewerVersion)\\n\\nconfigure_package_config_file(\\n  ${CMAKE_CURRENT_SOURCE_DIR}/cmake/Config.cmake.in\\n  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake\\n  INSTALL_DESTINATION ${INSTALL_CMAKEDIR}\\n  PATH_VARS INSTALL_INCLUDEDIR)\\n\\ninstall(\\n  FILES \\\"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake\\\"\\n        \\\"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake\\\"\\n  DESTINATION ${INSTALL_CMAKEDIR}\\n  COMPONENT \\\"${PROJECT_NAME}-dev\\\")\\n\\n# linking easifemClasses, \\n# this easifemClasses library is already linked with easifemBase\\n# so no need to link with easifemBase again.\\nfind_package(easifemClasses REQUIRED)\\nif(easifemBase_FOUND)\\n  message(STATUS \\\"FOUND easifemClasses\\\")\\nelse()\\n  message(ERROR \\\"NOT FOUND easifemClasses\\\")\\nendif()\\ntarget_link_libraries(${PROJECT_NAME} PUBLIC easifemClasses::easifemClasses)\\n\\n# Add source files\\ninclude(src/modules/CMakeLists.txt)\\ninclude(src/submodules/CMakeLists.txt)\\n\\n# this should be in the end.\\ntarget_compile_definitions(${PROJECT_NAME} PUBLIC ${TARGET_COMPILE_DEF})\\nmessage(STATUS \\\"[INFO] :: Compiler definition : ${TARGET_COMPILE_DEF}\\\")\\n\\ninstall(\\n  TARGETS ${PROJECT_NAME} ${C_PROJECTS}\\n  EXPORT ${TARGETS_EXPORT_NAME}\\n  COMPONENT \\\"${PROJECT_NAME}\\\"\\n  ARCHIVE DESTINATION ${INSTALL_LIBDIR}\\n  RUNTIME DESTINATION ${INSTALL_BINDIR}\\n  LIBRARY DESTINATION ${INSTALL_LIBDIR})\\n\\n# include(${PROJECT_SOURCE_DIR}/cmake/packaging.cmake)\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The above see make file needs \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Config.cmake.in\"\n      }), \" file. The content of this file is given below.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-cmake\",\n        metastring: \"title=\\\"Config.cmake.in\\\"\",\n        children: \"@PACKAGE_INIT@\\n\\nFIND_PACKAGE(easifemClasses REQUIRED)\\n\\nset_and_check(\\n  \\\"@PROJECT_NAME@_INCLUDE_DIR\\\" \\\"@PACKAGE_INSTALL_INCLUDEDIR@\\\")\\n\\ninclude(\\n  \\\"${CMAKE_CURRENT_LIST_DIR}/@TARGETS_EXPORT_NAME@.cmake\\\")\\n\\ncheck_required_components(\\n    \\\"@PROJECT_NAME@\\\"\\n  )\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"configuration-for-easifem-cli\",\n      children: \"Configuration for easifem CLI.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Now that we have added the source code and setup the CMake files. We need to specify the toml configuration files for the kernel, so that we can build and install easifemOneDimElasticity kernel using easifem CLI. To do so, create a file called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"oneDimElasticity.toml\"\n      }), \" in the directory where easifem plugins are kept. In our case it is kept at \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"~/.config/easifem/plugins/oneDimElasticity.toml\"\n      }), \". The content of this file is given below.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-toml\",\n        metastring: \"title=\\\"oneDimElasticity.toml\\\"\",\n        children: \"name = \\\"oneDimElasticity\\\"\\nisActive = true\\nbuildSystem = \\\"cmake\\\"\\ngit = 'github.com/easifem/oneDimElasticity.git'\\nsourceDir = \\\"${HOME}/Dropbox/easifem/oneDimElasticity\\\"\\ninstallDir = \\\"${HOME}/.easifem/install/oneDimElasticity/\\\"\\nbuildType = \\\"Debug\\\"\\nbuildSharedLibs = true\\nbuildStaticLibs = true\\nlibName = \\\"easifemOneDimElasticity\\\"\\ntargetName = \\\"easifemOneDimElasticity\\\"\\nprojectName = \\\"easifemOneDimElasticity\\\"\\n\\nruntest = true\\nlicense = \\\"GPL3\\\"\\n# buildOptions = [ \\\"-D USE_GMSH_SDK:BOOL=ON\\\"]\\n\\ndependencies = [\\\"classes\\\"]\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"building-the-kernel-by-using-easifem-cli\",\n      children: \"Building the kernel by using easifem CLI\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To build the kernel using easifem CLI, run the following command.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"easifem dev oneDimElasticity\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"installing-the-kernel-by-using-easifem-cli\",\n      children: \"Installing the kernel by using easifem CLI\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To install the kernel using easifem CLI, run the following command.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"easifem install oneDimElasticity\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To install the kernel with downloading the files from git, that is, by using the local source files, use the following command. In this case you must specify the sourceDir option in the above toml file.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"easifem install oneDimElasticity --no-download\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/blog/how-to-setup-a-new-kernel-in-easifem.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);