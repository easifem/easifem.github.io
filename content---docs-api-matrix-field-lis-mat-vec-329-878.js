"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-matrix-field-lis-mat-vec-329-878"],{

/***/ "./docs/docs-api/MatrixFieldLis/MatVec.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_matrix_field_lis_mat_vec_md_329_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-matrix-field-lis-mat-vec-md-329.json\nconst site_docs_docs_api_matrix_field_lis_mat_vec_md_329_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"MatrixFieldLis/MatVec\",\"title\":\"MatVec\",\"description\":\"Perform matrix vector multipliction.\",\"source\":\"@site/docs/docs-api/MatrixFieldLis/MatVec.md\",\"sourceDirName\":\"MatrixFieldLis\",\"slug\":\"/MatrixFieldLis/MatVec\",\"permalink\":\"/docs-api/MatrixFieldLis/MatVec\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/MatrixFieldLis/MatVec.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"IsPreconditionSet\",\"permalink\":\"/docs-api/MatrixFieldLis/IsPreconditionSet\"},\"next\":{\"title\":\"MatrixFieldCheckEssentialParam\",\"permalink\":\"/docs-api/MatrixFieldLis/MatrixFieldCheckEssentialParam\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/MatrixFieldLis/MatVec.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'MatVec';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"matvec\",\n        children: \"MatVec\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Perform matrix vector multipliction.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Calling example:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL MatVec(\\nMatrixField_::obj, &\\n& REAL::x(:), &\\n& REAL::y(:) &\\n& <, bool::isTranspose &>\\n& <, bool::addContribution &>\\n& <, real::scale>)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL MatVec(\\nMatrixField_::obj, &\\n& AbstractNodeField_::x, &\\n& AbstractNodeField_::y &\\n& <, bool::isTranspose &>\\n& <, bool::addContribution &>\\n& <, real::scale>)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE Matvec(obj, x, y, isTranspose, addContribution, &\\n    & scale)\\n    IMPORT :: AbstractMatrixField_, DFP, LGT\\n    CLASS(AbstractMatrixField_), INTENT(IN) :: obj\\n    REAL(DFP), INTENT(INOUT) :: y(:)\\n    !! Output vector y=Ax\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! Input vector in y=Ax\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: isTranspose\\n    !! True if we have to use TRANSPOSE of matrix\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\\n    !! Default is FALSE\\n    !! if true then we do not set y = 0, and perform\\n    !! y = y + matvec(obj, x)\\n    !! if false, then we perform y = matvec(obj, x)\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\\n  END SUBROUTINE Matvec\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine returns the matrix vector multiplication. Here, input vector (\", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"x\"\n          }), \")\\nis a native fortran vector. The output vector (\", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"y\"\n          }), \") is also a native fortran\\nvector. It should be noted that the output vector should be allocated\\noutside, and it should have same length as the input vector.\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE Matvec(obj, x, y, isTranspose, addContribution, &\\n    & scale)\\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, LGT, DFP\\n    CLASS(AbstractMatrixField_), INTENT(IN) :: obj\\n    CLASS(AbstractNodeField_), INTENT(INOUT) :: y\\n    !! Output vector y=Ax\\n    CLASS(AbstractNodeField_), INTENT(IN) :: x\\n    !! Input vector in y=Ax\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: isTranspose\\n    !! True if we have to use TRANSPOSE of matrix\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\\n    !! Default is FALSE\\n    !! if true then we do not set y = 0, and perform\\n    !! y = y + matvec(obj, x)\\n    !! if false, then we perform y = matvec(obj, x)\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\\n  END SUBROUTINE Matvec\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine returns the matrix vector multiplication. Here, input vector (\", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"x\"\n          }), \")\\nis an instance of AbstractNodeField.\\nThe output vector (\", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"y\"\n          }), \") is also an instance of AbstractNodeField.\\nIt should be noted that the output vector should be allocated\\noutside, and it should have same length as the input vector.\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\"\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/MatrixFieldLis/MatVec.md\n");

/***/ })

}]);