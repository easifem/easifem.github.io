"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-scalar-mesh-field-initiatec-97-2a9"],{

/***/ "./docs/docs-api/AbstractMeshField/Initiate.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_abstract_mesh_field_initiate_md_881_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-abstract-mesh-field-initiate-md-881.json\nconst site_docs_docs_api_abstract_mesh_field_initiate_md_881_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"AbstractMeshField/Initiate\",\"title\":\"Initiate\",\"description\":\"Initiate an instance of AbstractMeshField_.\",\"source\":\"@site/docs/docs-api/AbstractMeshField/Initiate.md\",\"sourceDirName\":\"AbstractMeshField\",\"slug\":\"/AbstractMeshField/Initiate\",\"permalink\":\"/docs-api/AbstractMeshField/Initiate\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMeshField/Initiate.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"sidebarPosition\":3,\"frontMatter\":{\"id\":\"Initiate\",\"aliases\":[\"Initiate\"],\"tags\":[],\"sidebar_position\":3},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"SetAbstractMeshFieldParam\",\"permalink\":\"/docs-api/AbstractMeshField/SetAbstractMeshFieldParam\"},\"next\":{\"title\":\"Set\",\"permalink\":\"/docs-api/AbstractMeshField/Set\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/AbstractMeshField/Initiate.md\n\n\nconst frontMatter = {\n\tid: 'Initiate',\n\taliases: [\n\t\t'Initiate'\n\t],\n\ttags: [],\n\tsidebar_position: 3\n};\nconst contentTitle = 'Initiate';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Interface 1 (Initiate by using param)\",\n  \"id\": \"interface-1-initiate-by-using-param\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 2 (Initiate by copying)\",\n  \"id\": \"interface-2-initiate-by-copying\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 3 (Initiate by AbstractMaterial)\",\n  \"id\": \"interface-3-initiate-by-abstractmaterial\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 4 (Initiate by UserFunction)\",\n  \"id\": \"interface-4-initiate-by-userfunction\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"initiate\",\n        children: \"Initiate\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Initiate an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"AbstractMeshField_\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"span\", {\n      class: \"badge badge--secondary\",\n      children: \" @ConstructorMethods \"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1-initiate-by-using-param\",\n      children: \"Interface 1 (Initiate by using param)\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE AbstractMeshFieldInitiate\\n  MODULE SUBROUTINE Initiate1(obj, param, mesh)\\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj\\n    TYPE(ParameterList_), INTENT(IN) :: param\\n    TYPE(Mesh_), TARGET, INTENT(IN) :: mesh\\n  END SUBROUTINE Initiate1\\nEND INTERFACE AbstractMeshFieldInitiate\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2-initiate-by-copying\",\n      children: \"Interface 2 (Initiate by copying)\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE Initiate2(obj, obj2, copyFull, copyStructure, &\\n    & usePointer)\\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj\\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj2\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: copyFull\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: copyStructure\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: usePointer\\n  END SUBROUTINE Initiate2\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-3-initiate-by-abstractmaterial\",\n      children: \"Interface 3 (Initiate by AbstractMaterial)\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE Initiate3(obj, mesh, material, name, engine)\\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj\\n    !! AbstractMeshField\\n    TYPE(Mesh_), TARGET, INTENT(IN) :: mesh\\n    !! mesh\\n    CLASS(AbstractMaterial_), INTENT(INOUT) :: material\\n    !! Abstract material\\n    CHARACTER(*), INTENT(IN) :: name\\n    !! name of the AbstractMeshField\\n    CHARACTER(*), INTENT(IN) :: engine\\n    !! engine of the AbstractMeshField\\n  END SUBROUTINE Initiate3\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-4-initiate-by-userfunction\",\n      children: \"Interface 4 (Initiate by UserFunction)\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE Initiate4(obj, mesh, func, name, engine, nnt)\\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj\\n    !! AbstractMeshField\\n    TYPE(Mesh_), TARGET, INTENT(IN) :: mesh\\n    !! mesh\\n    CLASS(UserFunction_), INTENT(INOUT) :: func\\n    !! Abstract material\\n    CHARACTER(*), INTENT(IN) :: name\\n    !! name of the AbstractMeshField\\n    CHARACTER(*), INTENT(IN) :: engine\\n    !! engine of the AbstractMeshField\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: nnt\\n    !! number of nodes in time\\n  END SUBROUTINE Initiate4\\nEND INTERFACE\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL2RvY3MtYXBpL0Fic3RyYWN0TWVzaEZpZWxkL0luaXRpYXRlLm1kIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL2RvY3MvZG9jcy1hcGkvQWJzdHJhY3RNZXNoRmllbGQvSW5pdGlhdGUubWQ/Y2U4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge1xuXHRpZDogJ0luaXRpYXRlJyxcblx0YWxpYXNlczogW1xuXHRcdCdJbml0aWF0ZSdcblx0XSxcblx0dGFnczogW10sXG5cdHNpZGViYXJfcG9zaXRpb246IDNcbn07XG5leHBvcnQgY29uc3QgY29udGVudFRpdGxlID0gJ0luaXRpYXRlJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtZXRhZGF0YX0gZnJvbSAnQHNpdGUvLmRvY3VzYXVydXMvZG9jdXNhdXJ1cy1wbHVnaW4tY29udGVudC1kb2NzL2RvY3MtYXBpL3NpdGUtZG9jcy1kb2NzLWFwaS1hYnN0cmFjdC1tZXNoLWZpZWxkLWluaXRpYXRlLW1kLTg4MS5qc29uJ1xuZXhwb3J0IGNvbnN0IGFzc2V0cyA9IHtcblxufTtcblxuaW1wb3J0IHtGcmFnbWVudCBhcyBfRnJhZ21lbnQsIGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7dXNlTURYQ29tcG9uZW50cyBhcyBfcHJvdmlkZUNvbXBvbmVudHN9IGZyb20gXCJAbWR4LWpzL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgdG9jID0gW3tcbiAgXCJ2YWx1ZVwiOiBcIkludGVyZmFjZSAxIChJbml0aWF0ZSBieSB1c2luZyBwYXJhbSlcIixcbiAgXCJpZFwiOiBcImludGVyZmFjZS0xLWluaXRpYXRlLWJ5LXVzaW5nLXBhcmFtXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiSW50ZXJmYWNlIDIgKEluaXRpYXRlIGJ5IGNvcHlpbmcpXCIsXG4gIFwiaWRcIjogXCJpbnRlcmZhY2UtMi1pbml0aWF0ZS1ieS1jb3B5aW5nXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiSW50ZXJmYWNlIDMgKEluaXRpYXRlIGJ5IEFic3RyYWN0TWF0ZXJpYWwpXCIsXG4gIFwiaWRcIjogXCJpbnRlcmZhY2UtMy1pbml0aWF0ZS1ieS1hYnN0cmFjdG1hdGVyaWFsXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiSW50ZXJmYWNlIDQgKEluaXRpYXRlIGJ5IFVzZXJGdW5jdGlvbilcIixcbiAgXCJpZFwiOiBcImludGVyZmFjZS00LWluaXRpYXRlLWJ5LXVzZXJmdW5jdGlvblwiLFxuICBcImxldmVsXCI6IDJcbn1dO1xuZnVuY3Rpb24gX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpIHtcbiAgY29uc3QgX2NvbXBvbmVudHMgPSB7XG4gICAgY29kZTogXCJjb2RlXCIsXG4gICAgaDE6IFwiaDFcIixcbiAgICBoMjogXCJoMlwiLFxuICAgIGhlYWRlcjogXCJoZWFkZXJcIixcbiAgICBwOiBcInBcIixcbiAgICBwcmU6IFwicHJlXCIsXG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gX2pzeHMoX0ZyYWdtZW50LCB7XG4gICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmhlYWRlciwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuaDEsIHtcbiAgICAgICAgaWQ6IFwiaW5pdGlhdGVcIixcbiAgICAgICAgY2hpbGRyZW46IFwiSW5pdGlhdGVcIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkluaXRpYXRlIGFuIGluc3RhbmNlIG9mIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQWJzdHJhY3RNZXNoRmllbGRfXCJcbiAgICAgIH0pLCBcIi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChcInNwYW5cIiwge1xuICAgICAgY2xhc3M6IFwiYmFkZ2UgYmFkZ2UtLXNlY29uZGFyeVwiLFxuICAgICAgY2hpbGRyZW46IFwiIEBDb25zdHJ1Y3Rvck1ldGhvZHMgXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiaW50ZXJmYWNlLTEtaW5pdGlhdGUtYnktdXNpbmctcGFyYW1cIixcbiAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSAxIChJbml0aWF0ZSBieSB1c2luZyBwYXJhbSlcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJJTlRFUkZBQ0UgQWJzdHJhY3RNZXNoRmllbGRJbml0aWF0ZVxcbiAgTU9EVUxFIFNVQlJPVVRJTkUgSW5pdGlhdGUxKG9iaiwgcGFyYW0sIG1lc2gpXFxuICAgIENMQVNTKEFic3RyYWN0TWVzaEZpZWxkXyksIElOVEVOVChJTk9VVCkgOjogb2JqXFxuICAgIFRZUEUoUGFyYW1ldGVyTGlzdF8pLCBJTlRFTlQoSU4pIDo6IHBhcmFtXFxuICAgIFRZUEUoTWVzaF8pLCBUQVJHRVQsIElOVEVOVChJTikgOjogbWVzaFxcbiAgRU5EIFNVQlJPVVRJTkUgSW5pdGlhdGUxXFxuRU5EIElOVEVSRkFDRSBBYnN0cmFjdE1lc2hGaWVsZEluaXRpYXRlXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImludGVyZmFjZS0yLWluaXRpYXRlLWJ5LWNvcHlpbmdcIixcbiAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSAyIChJbml0aWF0ZSBieSBjb3B5aW5nKVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1mb3J0cmFuXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIklOVEVSRkFDRVxcbiAgTU9EVUxFIFNVQlJPVVRJTkUgSW5pdGlhdGUyKG9iaiwgb2JqMiwgY29weUZ1bGwsIGNvcHlTdHJ1Y3R1cmUsICZcXG4gICAgJiB1c2VQb2ludGVyKVxcbiAgICBDTEFTUyhBYnN0cmFjdE1lc2hGaWVsZF8pLCBJTlRFTlQoSU5PVVQpIDo6IG9ialxcbiAgICBDTEFTUyhBYnN0cmFjdE1lc2hGaWVsZF8pLCBJTlRFTlQoSU5PVVQpIDo6IG9iajJcXG4gICAgTE9HSUNBTChMR1QpLCBPUFRJT05BTCwgSU5URU5UKElOKSA6OiBjb3B5RnVsbFxcbiAgICBMT0dJQ0FMKExHVCksIE9QVElPTkFMLCBJTlRFTlQoSU4pIDo6IGNvcHlTdHJ1Y3R1cmVcXG4gICAgTE9HSUNBTChMR1QpLCBPUFRJT05BTCwgSU5URU5UKElOKSA6OiB1c2VQb2ludGVyXFxuICBFTkQgU1VCUk9VVElORSBJbml0aWF0ZTJcXG5FTkQgSU5URVJGQUNFXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImludGVyZmFjZS0zLWluaXRpYXRlLWJ5LWFic3RyYWN0bWF0ZXJpYWxcIixcbiAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSAzIChJbml0aWF0ZSBieSBBYnN0cmFjdE1hdGVyaWFsKVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1mb3J0cmFuXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIklOVEVSRkFDRVxcbiAgTU9EVUxFIFNVQlJPVVRJTkUgSW5pdGlhdGUzKG9iaiwgbWVzaCwgbWF0ZXJpYWwsIG5hbWUsIGVuZ2luZSlcXG4gICAgQ0xBU1MoQWJzdHJhY3RNZXNoRmllbGRfKSwgSU5URU5UKElOT1VUKSA6OiBvYmpcXG4gICAgISEgQWJzdHJhY3RNZXNoRmllbGRcXG4gICAgVFlQRShNZXNoXyksIFRBUkdFVCwgSU5URU5UKElOKSA6OiBtZXNoXFxuICAgICEhIG1lc2hcXG4gICAgQ0xBU1MoQWJzdHJhY3RNYXRlcmlhbF8pLCBJTlRFTlQoSU5PVVQpIDo6IG1hdGVyaWFsXFxuICAgICEhIEFic3RyYWN0IG1hdGVyaWFsXFxuICAgIENIQVJBQ1RFUigqKSwgSU5URU5UKElOKSA6OiBuYW1lXFxuICAgICEhIG5hbWUgb2YgdGhlIEFic3RyYWN0TWVzaEZpZWxkXFxuICAgIENIQVJBQ1RFUigqKSwgSU5URU5UKElOKSA6OiBlbmdpbmVcXG4gICAgISEgZW5naW5lIG9mIHRoZSBBYnN0cmFjdE1lc2hGaWVsZFxcbiAgRU5EIFNVQlJPVVRJTkUgSW5pdGlhdGUzXFxuRU5EIElOVEVSRkFDRVxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbnRlcmZhY2UtNC1pbml0aWF0ZS1ieS11c2VyZnVuY3Rpb25cIixcbiAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSA0IChJbml0aWF0ZSBieSBVc2VyRnVuY3Rpb24pXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWZvcnRyYW5cIixcbiAgICAgICAgY2hpbGRyZW46IFwiSU5URVJGQUNFXFxuICBNT0RVTEUgU1VCUk9VVElORSBJbml0aWF0ZTQob2JqLCBtZXNoLCBmdW5jLCBuYW1lLCBlbmdpbmUsIG5udClcXG4gICAgQ0xBU1MoQWJzdHJhY3RNZXNoRmllbGRfKSwgSU5URU5UKElOT1VUKSA6OiBvYmpcXG4gICAgISEgQWJzdHJhY3RNZXNoRmllbGRcXG4gICAgVFlQRShNZXNoXyksIFRBUkdFVCwgSU5URU5UKElOKSA6OiBtZXNoXFxuICAgICEhIG1lc2hcXG4gICAgQ0xBU1MoVXNlckZ1bmN0aW9uXyksIElOVEVOVChJTk9VVCkgOjogZnVuY1xcbiAgICAhISBBYnN0cmFjdCBtYXRlcmlhbFxcbiAgICBDSEFSQUNURVIoKiksIElOVEVOVChJTikgOjogbmFtZVxcbiAgICAhISBuYW1lIG9mIHRoZSBBYnN0cmFjdE1lc2hGaWVsZFxcbiAgICBDSEFSQUNURVIoKiksIElOVEVOVChJTikgOjogZW5naW5lXFxuICAgICEhIGVuZ2luZSBvZiB0aGUgQWJzdHJhY3RNZXNoRmllbGRcXG4gICAgSU5URUdFUihJNEIpLCBPUFRJT05BTCwgSU5URU5UKElOKSA6OiBubnRcXG4gICAgISEgbnVtYmVyIG9mIG5vZGVzIGluIHRpbWVcXG4gIEVORCBTVUJST1VUSU5FIEluaXRpYXRlNFxcbkVORCBJTlRFUkZBQ0VcXG5cIlxuICAgICAgfSlcbiAgICB9KV1cbiAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHByb3BzID0ge30pIHtcbiAgY29uc3Qge3dyYXBwZXI6IE1EWExheW91dH0gPSB7XG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gTURYTGF5b3V0ID8gX2pzeChNRFhMYXlvdXQsIHtcbiAgICAuLi5wcm9wcyxcbiAgICBjaGlsZHJlbjogX2pzeChfY3JlYXRlTWR4Q29udGVudCwge1xuICAgICAgLi4ucHJvcHNcbiAgICB9KVxuICB9KSA6IF9jcmVhdGVNZHhDb250ZW50KHByb3BzKTtcbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./docs/docs-api/AbstractMeshField/Initiate.md\n");

/***/ }),

/***/ "./docs/docs-api/ScalarMeshField/Initiate.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ Initiate_contentTitle),\n  \"default\": () => (/* binding */ Initiate_MDXContent),\n  frontMatter: () => (/* binding */ Initiate_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_scalar_mesh_field_initiate_md_c97_namespaceObject),\n  toc: () => (/* binding */ Initiate_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-scalar-mesh-field-initiate-md-c97.json\nconst site_docs_docs_api_scalar_mesh_field_initiate_md_c97_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"ScalarMeshField/Initiate\",\"title\":\"Initiate\",\"description\":\"Initiate an instance of ScalarMeshField_.\",\"source\":\"@site/docs/docs-api/ScalarMeshField/Initiate.md\",\"sourceDirName\":\"ScalarMeshField\",\"slug\":\"/ScalarMeshField/Initiate\",\"permalink\":\"/docs-api/ScalarMeshField/Initiate\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/ScalarMeshField/Initiate.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"sidebarPosition\":4,\"frontMatter\":{\"sidebar_position\":4},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"SetScalarMeshFieldParam\",\"permalink\":\"/docs-api/ScalarMeshField/SetScalarMeshFieldParam\"},\"next\":{\"title\":\"Add\",\"permalink\":\"/docs-api/ScalarMeshField/Add\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./docs/docs-api/AbstractMeshField/Initiate.md + 1 modules\nvar Initiate = __webpack_require__(\"./docs/docs-api/AbstractMeshField/Initiate.md\");\n;// ./docs/docs-api/ScalarMeshField/examples/_Initiate_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE HDF5File_Class\\nUSE FEMesh_Class\\nUSE AbstractField_Class\\nUSE ScalarMeshField_Class\\nUSE FPL\\nUSE GlobalData\\n\\nIMPLICIT NONE\\n\\nTYPE(HDF5File_) :: meshfile\\nTYPE(FEMesh_) :: amesh\\nTYPE(ScalarMeshField_) :: obj\\nTYPE(ParameterList_) :: param\\nCHARACTER(*), PARAMETER :: filename=\\\"../../Mesh/examples/meshdata/small_mesh.h5\\\"\\nINTEGER(I4B), PARAMETER :: nsd = 2\\nINTEGER(I4B), PARAMETER :: varType = Constant\\nINTEGER(I4B), PARAMETER :: fieldType = TypeField%normal\\n\\nCALL meshfile%Initiate(fileName=filename, MODE=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\\n\\nCALL amesh%DisplayMeshInfo(\\\"mesh info:\\\")\\n\\nCALL FPL_INIT(); CALL param%initiate()\\n\\nCALL SetScalarMeshFieldParam(param=param, name='aScalar', &\\n                             varType=varType, fieldType=fieldType, &\\n                             engine='NATIVE_SERIAL', defineOn=Nodal, nns=6)\\n\\nCALL obj%Initiate(param=param, mesh=amesh)\\n\\nCALL obj%Display('obj: ')\\n\\nCALL obj%DEALLOCATE()\\nCALL amesh%DEALLOCATE()\\nCALL meshfile%CLOSE()\\nCALL meshfile%DEALLOCATE()\\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Mesh info:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-txt\",\n        children: \"total nodes: 12\\ntotal elements: 14\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The above code will initiate an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"ScalarMeshField_\"\n      }), \", which will contain following data.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-txt\",\n        children: \"Object INITIATED: TRUE\\nname: aScalar\\nprefix: ScalarMeshField\\nfieldType: NORMAL\\nengine: NATIVE_SERIAL\\ntSize: 14\\ndefineOn: Nodal\\nrank: Scalar\\nvarType: Constant\\nshape:\\n---------------------------------\\n                1\\nval ALLOCATED: TRUE\\nindxVal ALLOCATED: TRUE\\nmesh ASSOCIATED: TRUE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"We have saved data in a one dimensional array \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"val\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"indxVal\"\n        }), \". The size of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"indxVal\"\n        }), \" is \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"telements+1\"\n        }), \", i.e., 15.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The data for element \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"iel\"\n        }), \" will be stored in \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"val(a:b)\"\n        }), \", where \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"a=indxVal(iel)\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"b=indxVal(iel+1)-1\"\n        }), \".\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The number of data in each element will be 1, because, we have set \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"varType=Constant\"\n        }), \". It means that data remains constant inside an element.\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"There are 14 elements in the mesh.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/ScalarMeshField/examples/_Initiate_test_2.md\n\n\nconst _Initiate_test_2_frontMatter = {};\nconst _Initiate_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_2_toc = [];\nfunction _Initiate_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"fieldType\"\n        }), \" = constant\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"varType\"\n        }), \" = constant\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE HDF5File_Class\\nUSE FEMesh_Class\\nUSE AbstractField_Class\\nUSE ScalarMeshField_Class\\nUSE FPL\\nUSE GlobalData\\n\\nIMPLICIT NONE\\n\\nTYPE(HDF5File_) :: meshfile\\nTYPE(FEMesh_) :: amesh\\nTYPE(ScalarMeshField_) :: obj\\nTYPE(ParameterList_) :: param\\nCHARACTER(*), PARAMETER :: filename=\\\"../../Mesh/examples/meshdata/small_mesh.h5\\\"\\nINTEGER(I4B), PARAMETER :: nsd = 2\\n\\nCALL meshfile%Initiate(fileName=filename, MODE=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\\n\\nCALL amesh%DisplayMeshInfo(\\\"mesh info:\\\")\\n\\nCALL FPL_INIT(); CALL param%initiate()\\n\\nCALL SetScalarMeshFieldParam(param=param, name='aScalar', &\\n                             varType=Constant, fieldType=TypeField%constant, &\\n                             engine='NATIVE_SERIAL', defineOn=Nodal, nns=6)\\n\\nCALL obj%Initiate(param=param, mesh=amesh)\\n\\nCALL obj%Display('obj: ')\\n\\nCALL obj%DEALLOCATE()\\nCALL amesh%DEALLOCATE()\\nCALL meshfile%CLOSE()\\nCALL meshfile%DEALLOCATE()\\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The above code will initiate an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"ScalarMeshField_\"\n      }), \", which will contain following data.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-txt\",\n        children: \"Object INITIATED: TRUE\\nname: aScalar\\nprefix: ScalarMeshField\\nfieldType: CONSTANT\\nengine: NATIVE_SERIAL\\ntSize: 1\\ndefineOn: Nodal\\nrank: Scalar\\nvarType: Constant\\nval ALLOCATED: TRUE\\nindxVal ALLOCATED: TRUE\\nmesh ASSOCIATED: TRUE\\nshape:\\n---------------------------------\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"We have saved data in a one dimensional array \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"val\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"indxVal\"\n        }), \". The size of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"indxVal\"\n        }), \" is \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"telements+1\"\n        }), \", i.e., 15.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The data for element \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"iel\"\n        }), \" will be stored in \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"val(a:b)\"\n        }), \", where \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"a=indxVal(iel)\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"b=indxVal(iel+1)-1\"\n        }), \".\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The number of data in each element will be 1, because, we have set \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"varType=Constant\"\n        }), \". It means that data remains constant inside an element.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The size of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"val\"\n        }), \" will be 1 because we have set \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"fieldType=Constant\"\n        }), \".\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction _Initiate_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/ScalarMeshField/examples/_Initiate_test_3.md\n\n\nconst _Initiate_test_3_frontMatter = {};\nconst _Initiate_test_3_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_3_toc = [];\nfunction _Initiate_test_3_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    li: \"li\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE HDF5File_Class\\nUSE FEMesh_Class\\nUSE AbstractField_Class\\nUSE ScalarMeshField_Class\\nUSE FPL\\nUSE GlobalData\\n\\nIMPLICIT NONE\\n\\nTYPE(HDF5File_) :: meshfile\\nTYPE(FEMesh_) :: amesh\\nTYPE(ScalarMeshField_) :: obj\\nTYPE(ParameterList_) :: param\\nCHARACTER(*), PARAMETER :: filename=\\\"../../Mesh/examples/meshdata/small_mesh.h5\\\"\\nINTEGER(I4B), PARAMETER :: nsd = 2\\nINTEGER(I4B), PARAMETER :: varType = Space\\nINTEGER(I4B), PARAMETER :: fieldType = TypeField%normal\\n\\nCALL meshfile%Initiate(fileName=filename, MODE=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\\n\\nCALL amesh%DisplayMeshInfo(\\\"mesh info:\\\")\\n\\nCALL FPL_INIT(); CALL param%initiate()\\n\\nCALL SetScalarMeshFieldParam(param=param, name='aScalar', &\\n                             varType=varType, fieldType=fieldType, &\\n                             engine='NATIVE_SERIAL', defineOn=Nodal, nns=6)\\n\\nCALL obj%Initiate(param=param, mesh=amesh)\\n\\nCALL obj%Display('obj: ')\\n\\nCALL obj%DEALLOCATE()\\nCALL amesh%DEALLOCATE()\\nCALL meshfile%CLOSE()\\nCALL meshfile%DEALLOCATE()\\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        metastring: \"title=\\\"results\\\"\",\n        children: \"Object INITIATED: TRUE\\nname: aScalar\\nprefix: ScalarMeshField\\nfieldType: NORMAL\\nengine: NATIVE_SERIAL\\ntSize: 14\\ndefineOn: Nodal\\nrank: Scalar\\nvarType: Space\\nval ALLOCATED: TRUE\\nSize of val:84\\nindxVal ALLOCATED: TRUE\\nSize of indxVal:15\\nmesh ASSOCIATED: TRUE\\nshape:\\n---------------------------------\\n                6\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"We have saved data in a one dimensional array \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"val\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"indxVal\"\n        }), \". The size of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"indxVal\"\n        }), \" is \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"telements+1\"\n        }), \", i.e., 15.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The data for element \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"iel\"\n        }), \" will be stored in \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"val(a:b)\"\n        }), \", where \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"a=indxVal(iel)\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"b=indxVal(iel+1)-1\"\n        }), \".\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The number of data in each element will be 6. This is because, we have set \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"varType=Constant\"\n        }), \", and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"defineOn=Nodal\"\n        }), \", and there specify \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nns=6\"\n        }), \". It means that inside an element the data changes with space.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"There are 14 elements in the mesh, therefore, the total size of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"val\"\n        }), \" will be \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"14*6=84\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction _Initiate_test_3_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_3_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_3_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/ScalarMeshField/examples/_Initiate_test_4.md\n\n\nconst _Initiate_test_4_frontMatter = {};\nconst _Initiate_test_4_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_4_toc = [];\nfunction _Initiate_test_4_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE HDF5File_Class\\nUSE FEMesh_Class\\nUSE AbstractField_Class\\nUSE ScalarMeshField_Class\\nUSE FPL\\nUSE GlobalData\\n\\nIMPLICIT NONE\\n\\nTYPE(HDF5File_) :: meshfile\\nTYPE(FEMesh_) :: amesh\\nTYPE(ScalarMeshField_) :: obj\\nTYPE(ParameterList_) :: param\\nCHARACTER(*), PARAMETER :: filename=\\\"../../Mesh/examples/meshdata/small_mesh.h5\\\"\\nINTEGER(I4B), PARAMETER :: nsd = 2\\nINTEGER(I4B), PARAMETER :: varType = Time\\nINTEGER(I4B), PARAMETER :: fieldType = TypeField%normal\\n\\nCALL meshfile%Initiate(fileName=filename, MODE=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\\n\\nCALL amesh%DisplayMeshInfo(\\\"mesh info:\\\")\\n\\nCALL FPL_INIT(); CALL param%initiate()\\n\\nCALL SetScalarMeshFieldParam(param=param, name='aScalar', &\\n                             varType=varType, fieldType=fieldType, &\\n                             engine='NATIVE_SERIAL', defineOn=Nodal, nns=6)\\n\\nCALL obj%Initiate(param=param, mesh=amesh)\\n\\nCALL obj%Display('obj: ')\\n\\nCALL obj%DEALLOCATE()\\nCALL amesh%DEALLOCATE()\\nCALL meshfile%CLOSE()\\nCALL meshfile%DEALLOCATE()\\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-bash\",\n        metastring: \"title=\\\"results\\\"\",\n        children: \"Object INITIATED: TRUE\\nname: aScalar\\nprefix: ScalarMeshField\\nfieldType: NORMAL\\nengine: NATIVE_SERIAL\\ntSize: 14\\ndefineOn: Nodal\\nrank: Scalar\\nvarType: Time\\nval ALLOCATED: TRUE\\nSize of val:84\\nindxVal ALLOCATED: TRUE\\nSize of indxVal:15\\nmesh ASSOCIATED: TRUE\\nshape:\\n---------------------------------\\n                6\\n\"\n      })\n    })]\n  });\n}\nfunction _Initiate_test_4_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_4_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_4_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/ScalarMeshField/examples/_Initiate_test_6.md\n\n\nconst _Initiate_test_6_frontMatter = {};\nconst _Initiate_test_6_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_6_toc = [];\nfunction _Initiate_test_6_createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"Initiate an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ScalarMeshField_\"\n        }), \" by using a \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"UserFunction_\"\n        }), \". The user function is constant in this example.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE HDF5File_Class\\nUSE FEMesh_Class\\nUSE AbstractField_Class\\nUSE ScalarMeshField_Class\\nUSE FPL\\nUSE GlobalData\\nUSE UserFunction_Class\\n\\nIMPLICIT NONE\\n\\nTYPE(HDF5File_) :: meshfile\\nTYPE(FEMesh_) :: amesh\\nTYPE(ScalarMeshField_) :: obj\\nTYPE(ParameterList_) :: param\\nTYPE(UserFunction_) :: func\\n\\nCHARACTER(*), PARAMETER :: filename=\\\"../../Mesh/examples/meshdata/small_mesh.h5\\\"\\nINTEGER(I4B), PARAMETER :: nsd = 2\\nINTEGER( I4B ), PARAMETER :: returnType = Scalar\\nINTEGER( I4B ), PARAMETER :: argType = Constant\\n\\nCALL meshfile%Initiate(fileName=filename, MODE=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\\n\\nCALL FPL_INIT(); CALL param%initiate()\\n\\nCALL SetUserFunctionParam(param=param, name=\\\"func\\\", returnType=returnType,  &\\n   argType=argType)\\n\\nCALL func%Initiate(param)\\nCALL func%Set(scalarValue=2.0_DFP)\\nCALL obj%Initiate(mesh=amesh, func=func, name=\\\"func\\\", engine=\\\"NATIVE_SERIAL\\\")\\n\\nCALL obj%DEALLOCATE()\\nCALL amesh%DEALLOCATE()\\nCALL meshfile%CLOSE()\\nCALL meshfile%DEALLOCATE()\\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction _Initiate_test_6_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_6_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_6_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/ScalarMeshField/examples/_Initiate_test_7.md\n\n\nconst _Initiate_test_7_frontMatter = {};\nconst _Initiate_test_7_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_7_toc = [];\nfunction _Initiate_test_7_createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"This example shows how to initiate an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ScalarMeshField_\"\n        }), \" by using a \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"UserFunction\"\n        }), \". The user function is space dependent in this example.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE HDF5File_Class\\nUSE FEMesh_Class\\nUSE AbstractField_Class\\nUSE ScalarMeshField_Class\\nUSE FPL\\nUSE GlobalData\\nUSE UserFunction_Class\\n\\nIMPLICIT NONE\\n\\nTYPE(HDF5File_) :: meshfile\\nTYPE(FEMesh_) :: amesh\\nTYPE(ScalarMeshField_) :: obj\\nTYPE(ParameterList_) :: param\\nTYPE(UserFunction_) :: func\\n\\nCHARACTER(*), PARAMETER :: filename=\\\"../../Mesh/examples/meshdata/small_mesh.h5\\\"\\nINTEGER(I4B), PARAMETER :: nsd = 2\\nINTEGER(I4B), PARAMETER :: returnType = Scalar\\nINTEGER(I4B), PARAMETER :: argType = Space\\n\\nCALL meshfile%Initiate(fileName=filename, MODE=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\\n\\nCALL FPL_INIT(); CALL param%initiate()\\n\\nCALL SetUserFunctionParam(param=param, name=\\\"func\\\", returnType=returnType, &\\n                          argType=argType)\\n\\nCALL func%Initiate(param)\\nCALL func%Set(scalarValue=2.0_DFP)\\nCALL obj%Initiate(mesh=amesh, func=func, name=\\\"func\\\", engine=\\\"NATIVE_SERIAL\\\")\\n\\nCALL obj%DEALLOCATE()\\nCALL amesh%DEALLOCATE()\\nCALL meshfile%CLOSE()\\nCALL meshfile%DEALLOCATE()\\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction _Initiate_test_7_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_7_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_7_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/ScalarMeshField/Initiate.md\n\n\nconst Initiate_frontMatter = {\n\tsidebar_position: 4\n};\nconst Initiate_contentTitle = 'Initiate';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\n\n\n\nconst Initiate_toc = [...Initiate.toc, {\n  \"value\": \"Example 1\",\n  \"id\": \"example-1\",\n  \"level\": 2\n}, ...toc, {\n  \"value\": \"Example 2\",\n  \"id\": \"example-2\",\n  \"level\": 2\n}, ..._Initiate_test_2_toc, {\n  \"value\": \"Example 3\",\n  \"id\": \"example-3\",\n  \"level\": 2\n}, ..._Initiate_test_3_toc, {\n  \"value\": \"Example 4\",\n  \"id\": \"example-4\",\n  \"level\": 2\n}, ..._Initiate_test_4_toc, {\n  \"value\": \"Example 6\",\n  \"id\": \"example-6\",\n  \"level\": 2\n}, ..._Initiate_test_6_toc, {\n  \"value\": \"Example 7\",\n  \"id\": \"example-7\",\n  \"level\": 2\n}, ..._Initiate_test_7_toc];\nfunction Initiate_createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"initiate\",\n        children: \"Initiate\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Initiate an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"ScalarMeshField_\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Inherited from \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/AbstractMeshField\",\n        children: \"AbstractMeshField\"\n      })]\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(Initiate[\"default\"], {}), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Example 1 to Example 4 are related to the Initiate by using Parameters.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Example 6 and Example 7 are related to the Initiate by using UserFunction.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-1\",\n      children: \"Example 1\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"Click here to see the example\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-2\",\n      children: \"Example 2\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"Click here to see the example\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_Initiate_test_2_MDXContent, {})\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-3\",\n      children: \"Example 3\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"Click here to see the example\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_Initiate_test_3_MDXContent, {})\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-4\",\n      children: \"Example 4\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"Click here to see the example\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_Initiate_test_4_MDXContent, {})\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-6\",\n      children: \"Example 6\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"Click here to see the example\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_Initiate_test_6_MDXContent, {})\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-7\",\n      children: \"Example 7\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"Click here to see the example\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_Initiate_test_7_MDXContent, {})\n      })]\n    })]\n  });\n}\nfunction Initiate_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(Initiate_createMdxContent, {\n      ...props\n    })\n  }) : Initiate_createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/ScalarMeshField/Initiate.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);