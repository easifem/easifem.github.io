"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-steady-stokes-111-initiate-0-ab-762"],{

/***/ "./docs/docs-api/SteadyStokes111/Initiate.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ Initiate_contentTitle),\n  \"default\": () => (/* binding */ Initiate_MDXContent),\n  frontMatter: () => (/* binding */ Initiate_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_steady_stokes_111_initiate_md_0ab_namespaceObject),\n  toc: () => (/* binding */ Initiate_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-steady-stokes-111-initiate-md-0ab.json\nconst site_docs_docs_api_steady_stokes_111_initiate_md_0ab_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"SteadyStokes111/Initiate\",\"title\":\"Initiate\",\"description\":\"This routine initiates the kernel.\",\"source\":\"@site/docs/docs-api/SteadyStokes111/Initiate.md\",\"sourceDirName\":\"SteadyStokes111\",\"slug\":\"/SteadyStokes111/Initiate\",\"permalink\":\"/docs-api/SteadyStokes111/Initiate\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes111/Initiate.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Import\",\"permalink\":\"/docs-api/SteadyStokes111/Import\"},\"next\":{\"title\":\"InitiateFields\",\"permalink\":\"/docs-api/SteadyStokes111/InitiateFields\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/SteadyStokes111/_Initiate_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.p, {\n      children: \"This example shows how to set the parameters for steady stokes flow kernel.\\nThen we initiate the kernel and display its content on the screen.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n  USE easifemBase\\n  USE easifemClasses\\n  USE easifemMaterials\\n  USE easifemKernels\\n  USE SteadyStokes111_Class\\n  IMPLICIT NONE\\n  TYPE( SteadyStokes111_ ) :: obj\\n  TYPE( ParameterList_ ) :: param\\n  TYPE( HDF5File_ ) :: domainFile\\n  TYPE( Domain_ ) :: dom\\n  INTEGER( I4B ), PARAMETER :: refPressureNode=2\\n  REAL( DFP ), PARAMETER :: refPressure = 0.0_DFP\\n  INTEGER( I4B ), PARAMETER :: tDirichletBCForVelocity = 2\\n  INTEGER( I4B ), PARAMETER :: tDirichletBCForPressure = 0\\n  INTEGER( I4B ), PARAMETER :: tFluidMaterials= 1\\n  INTEGER( I4B ), PARAMETER :: stabParamOption= 1\\n  LOGICAL( LGT ), PARAMETER :: isSubscalePressure = .FALSE.\\n  LOGICAL( LGT ), PARAMETER :: isBoundarySubscale = .FALSE.\\n  REAL( DFP ), PARAMETER :: gravity(3)=[0.0, -9.8, 0.0]\\n  LOGICAL( LGT ), PARAMETER :: isConservativeForm = .TRUE.\\n  CHARACTER( * ), PARAMETER :: engine=\\\"NATIVE_SERIAL\\\"\\n  CHARACTER( * ), PARAMETER :: domainFileName=\\\"./long_pipe_tri3.h5\\\"\\n  INTEGER( I4B ), PARAMETER :: CoordinateSystem = KERNEL_CARTESIAN\\n  INTEGER( I4B ), PARAMETER :: maxIter = 100\\n  REAL( DFP ), PARAMETER :: rtoleranceForPressure = 1.0E-6\\n  REAL( DFP ), PARAMETER :: rtoleranceForVelocity = 1.0E-6\\n  REAL( DFP ), PARAMETER :: atoleranceForPressure = 1.0E-6\\n  REAL( DFP ), PARAMETER :: atoleranceForVelocity = 1.0E-6\\n  REAL( DFP ), PARAMETER :: toleranceForSteadyState = 1.0E-6\\n  CHARACTER(*), PARAMETER :: baseInterpolationForSpace=\\\"LagrangeInterpolation\\\"\\n  CHARACTER(*), PARAMETER :: baseContinuityForSpace=\\\"H1\\\"\\n  CHARACTER(*), PARAMETER :: quadratureTypeForSpace=\\\"GaussLegendre\\\"\\n  INTEGER(I4B), PARAMETER :: ls_solverName = LIS_GMRES\\n  INTEGER(I4B), PARAMETER :: ls_preconditionOption= LEFT_PRECONDITION\\n  INTEGER(I4B), PARAMETER :: ls_convergenceIn = convergenceInRes\\n  INTEGER(I4B), PARAMETER :: ls_convergenceType = relativeConvergence\\n  INTEGER( I4B ), PARAMETER :: ls_maxIter = 100\\n  LOGICAL( LGT ), PARAMETER :: ls_relativeToRHS = .TRUE.\\n  INTEGER( I4B ), PARAMETER :: ls_KrylovSubspaceSize=20\\n  REAL( DFP ) , PARAMETER :: ls_rtol=1.0E-10\\n  REAL( DFP ) , PARAMETER :: ls_atol=1.0E-10\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set parameters for kernel.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL FPL_INIT(); CALL param%Initiate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set parameters for the kernel.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetSteadyStokes111Param( &\\n  & param=param, &\\n  & isConservativeForm=isConservativeForm, &\\n  & gravity = gravity, &\\n  & isSubscalePressure = isSubscalePressure, &\\n  & isBoundarySubscale = isBoundarySubscale, &\\n  & stabParamOption = stabParamOption, &\\n  & domainFile = domainFileName, &\\n  & engine=engine, &\\n  & CoordinateSystem=KERNEL_CARTESIAN, &\\n  & maxIter =maxIter, &\\n  & rtoleranceForPressure = rtoleranceForPressure, &\\n  & rtoleranceForVelocity = rtoleranceForVelocity, &\\n  & atoleranceForPressure = atoleranceForPressure, &\\n  & atoleranceForVelocity = atoleranceForVelocity, &\\n  & toleranceForSteadyState = toleranceForSteadyState, &\\n  & tFluidMaterials=tFluidMaterials, &\\n  & tDirichletBCForPressure=tDirichletBCForPressure, &\\n  & tDirichletBCForVelocity=tDirichletBCForVelocity, &\\n  & baseInterpolationForSpace=baseInterpolationForSpace, &\\n  & baseContinuityForSpace=baseContinuityForSpace, &\\n  & quadratureTypeForSpace=quadratureTypeForSpace, &\\n  & refPressureNode=refPressureNode, &\\n  & refPressure=refPressure &\\n  & )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Setting parameters for linear solver.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetLinSolverParam( &\\n  & param=param, &\\n  & solverName=ls_solverName,&\\n  & preconditionOption=ls_preconditionOption, &\\n  & convergenceIn=ls_convergenceIn, &\\n  & convergenceType=ls_convergenceType, &\\n  & maxIter=ls_maxIter, &\\n  & relativeToRHS=ls_relativeToRHS, &\\n  & KrylovSubspaceSize=ls_KrylovSubspaceSize, &\\n  & rtol=ls_rtol, &\\n  & atol=ls_atol )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate domain by reading data from a domain file.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL domainFile%Initiate( filename=domainFileName, MODE=\\\"READ\\\" )\\nCALL domainFile%Open()\\nCALL dom%Initiate( domainFile, \\\"\\\" )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate the kernel.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Initiate(param=param, dom=dom )\\nCALL obj%Display(\\\"\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"  CALL obj%Deallocate()\\n  CALL dom%Deallocate()\\n  CALL domainFile%Deallocate()\\n  CALL param%Deallocate(); CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/SteadyStokes111/Initiate.md\n\n\nconst Initiate_frontMatter = {};\nconst Initiate_contentTitle = 'Initiate';\n\nconst assets = {\n\n};\n\n\n\n\nconst Initiate_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, {\n  \"value\": \"Example\",\n  \"id\": \"example\",\n  \"level\": 2\n}, ...toc];\nfunction Initiate_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"initiate\",\n        children: \"Initiate\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This routine initiates the kernel.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-txt\",\n        children: \"! - Here `param` contains all the necessary components for initiating the\\n! state of the kernel.\\n! - Here `dom` is an instance of [[Domain_]], and it acts as a target of\\n! the kernel's domain pointer [[SteadyStokes111_:DomForPressure]]\\n! and [[SteadyStokes111_:DomForVelocity]].\\n! - `domains` is a one dimensional array of [[DomainPointer_]]\\n! - The size of domains should be 2\\n! - `domains(1)` acts as target for\\n! [[SteadyStokes111_:DomForVelocity]].\\n! - `domains(2)` acts as a target for [[SteadyStokes111_:DomForPressure]]\\n!\\n!@note\\n! In `param` one should have the options for initiating the instance of\\n! [[LinearSolver_]] of the kernel [[SteadyStokes111_]]. To this end\\n! user can call [[LinearSolver_Class:SetLinSolverParam]].\\n!@endnote\\n!\\n!@note\\n! No additional, memory is allocated for it. In this way, several kernels\\n! can work on a common domains\\n!@endnote\\n!\\n!## Tasks\\n!\\n! This subroutine performs the following tasks\\n!\\n! - Check if obj is initiated or not\\n! - Sets target to pointer of domain [[SteadyStokes111_:DomForPressure]]\\n! - Sets target to pointer of domain [[SteadyStokes111_:DomForVelocity]]\\n! - Sets [[SteadyStokes111_:isCommonDomain]], true if `dom` is present,\\n! else false.\\n! - sets [[SteadyStokes111_:DomainFileForPressure]] and\\n! [[SteadyStokes111_:DomainFileForVelocity]]\\n! - sets the [[Kernel_:engine]]\\n! - sets the [[Kernel_:name]]\\n! - sets the [[Kernel_:CoordinateSystem]]\\n! - sets the [[Kernel_:nnt]]\\n! - sets the [[Kernel_:nsd]]\\n! - sets the [[Kernel_:tDOF]]\\n! - sets the [[SteadyStokes111_:baseContinuityForVelocity]]\\n! - sets the [[SteadyStokes111_:baseInterpolationForVelocity]]\\n! - sets the [[SteadyStokes111_:quadratureTypeForVelocity]]\\n! - sets the [[SteadyStokes111_:baseContinuityForPressure]]\\n! - sets the [[SteadyStokes111_:baseInterpolationForPressure]]\\n! - sets the [[SteadyStokes111_:quadratureTypeForPressure]]\\n! - allocates the [[SteadyStokes111_:DBCForVelocity]]\\n! - allocates the [[SteadyStokes111_:DBCForPressure]]\\n! - sets the [[SteadyStokes111_:tFluidMaterials]]\\n! - allocates [[SteadyStokes111_:porousMaterial]]\\n! - allocates [[SteadyStokes111_:PorousMaterialToMesh]]\\n! - sets the [[SteadyStokes111_:tPorousMaterials]]\\n! - allocates [[SteadyStokes111_:fluidMaterial]]\\n! - allocates [[SteadyStokes111_:FluidMaterialToMesh]]\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE SSF_Initiate(obj, param, dom, domains)\\n    CLASS(SteadyStokes111_), INTENT(INOUT) :: obj\\n    TYPE(ParameterList_), INTENT(IN) :: param\\n    CLASS(Domain_), OPTIONAL, TARGET, INTENT(INOUT) :: dom\\n    TYPE(DomainPointer_), OPTIONAL, TARGET, INTENT(INOUT) :: domains(:)\\n  END SUBROUTINE SSF_Initiate\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example\",\n      children: \"Example\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(MDXContent, {})]\n  });\n}\nfunction Initiate_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(Initiate_createMdxContent, {\n      ...props\n    })\n  }) : Initiate_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/SteadyStokes111/Initiate.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);