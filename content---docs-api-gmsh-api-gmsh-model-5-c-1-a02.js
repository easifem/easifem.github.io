"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-gmsh-api-gmsh-model-5-c-1-a02"],{

/***/ "./docs/docs-api/GmshAPI/GmshModel_.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_gmsh_api_gmsh_model_md_5c1_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-gmsh-api-gmsh-model-md-5c1.json\nconst site_docs_docs_api_gmsh_api_gmsh_model_md_5c1_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"GmshAPI/GmshModel_\",\"title\":\"GmshModel\",\"description\":\"STATUS\",\"source\":\"@site/docs/docs-api/GmshAPI/GmshModel_.md\",\"sourceDirName\":\"GmshAPI\",\"slug\":\"/GmshAPI/GmshModel_\",\"permalink\":\"/docs-api/GmshAPI/GmshModel_\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/GmshAPI/GmshModel_.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GmshModelOCC_\",\"permalink\":\"/docs-api/GmshAPI/GmshModelOCC_\"},\"next\":{\"title\":\"GmshModel example 1\",\"permalink\":\"/docs-api/GmshAPI/GmshModel_test_1\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/GmshAPI/GmshModel_.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'GmshModel';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"STATUS\",\n  \"id\": \"status\",\n  \"level\": 2\n}, {\n  \"value\": \"Introduction\",\n  \"id\": \"introduction\",\n  \"level\": 2\n}, {\n  \"value\": \"Getting Started\",\n  \"id\": \"getting-started\",\n  \"level\": 2\n}, {\n  \"value\": \"Structure\",\n  \"id\": \"structure\",\n  \"level\": 2\n}, {\n  \"value\": \"Methods\",\n  \"id\": \"methods\",\n  \"level\": 2\n}, {\n  \"value\": \"Add\",\n  \"id\": \"add\",\n  \"level\": 3\n}, {\n  \"value\": \"Remove\",\n  \"id\": \"remove\",\n  \"level\": 3\n}, {\n  \"value\": \"List\",\n  \"id\": \"list\",\n  \"level\": 3\n}, {\n  \"value\": \"GetCurrent\",\n  \"id\": \"getcurrent\",\n  \"level\": 3\n}, {\n  \"value\": \"SetCurrent\",\n  \"id\": \"setcurrent\",\n  \"level\": 3\n}, {\n  \"value\": \"GetFileName\",\n  \"id\": \"getfilename\",\n  \"level\": 3\n}, {\n  \"value\": \"SetFileName\",\n  \"id\": \"setfilename\",\n  \"level\": 3\n}, {\n  \"value\": \"GetEntities\",\n  \"id\": \"getentities\",\n  \"level\": 3\n}, {\n  \"value\": \"SetEntityName\",\n  \"id\": \"setentityname\",\n  \"level\": 3\n}, {\n  \"value\": \"GetEntityName\",\n  \"id\": \"getentityname\",\n  \"level\": 3\n}, {\n  \"value\": \"GetPhysicalGroups\",\n  \"id\": \"getphysicalgroups\",\n  \"level\": 3\n}, {\n  \"value\": \"GetEntitiesForPhysicalGroup\",\n  \"id\": \"getentitiesforphysicalgroup\",\n  \"level\": 3\n}, {\n  \"value\": \"GetPhysicalGroupsForEntity\",\n  \"id\": \"getphysicalgroupsforentity\",\n  \"level\": 3\n}, {\n  \"value\": \"AddPhysicalGroup\",\n  \"id\": \"addphysicalgroup\",\n  \"level\": 3\n}, {\n  \"value\": \"RemovePhysicalGroups\",\n  \"id\": \"removephysicalgroups\",\n  \"level\": 3\n}, {\n  \"value\": \"SetPhysicalName\",\n  \"id\": \"setphysicalname\",\n  \"level\": 3\n}, {\n  \"value\": \"RemovePhysicalName\",\n  \"id\": \"removephysicalname\",\n  \"level\": 3\n}, {\n  \"value\": \"GetPhysicalName\",\n  \"id\": \"getphysicalname\",\n  \"level\": 3\n}, {\n  \"value\": \"SetTag\",\n  \"id\": \"settag\",\n  \"level\": 3\n}, {\n  \"value\": \"GetBoundary\",\n  \"id\": \"getboundary\",\n  \"level\": 3\n}, {\n  \"value\": \"GetAdjacencies\",\n  \"id\": \"getadjacencies\",\n  \"level\": 3\n}, {\n  \"value\": \"GetEntitiesInBoundingBox\",\n  \"id\": \"getentitiesinboundingbox\",\n  \"level\": 3\n}, {\n  \"value\": \"GetBoundingBox\",\n  \"id\": \"getboundingbox\",\n  \"level\": 3\n}, {\n  \"value\": \"GetDimension\",\n  \"id\": \"getdimension\",\n  \"level\": 3\n}, {\n  \"value\": \"AddDiscreteEntity\",\n  \"id\": \"adddiscreteentity\",\n  \"level\": 3\n}, {\n  \"value\": \"RemoveEntities\",\n  \"id\": \"removeentities\",\n  \"level\": 3\n}, {\n  \"value\": \"RemoveEntityName\",\n  \"id\": \"removeentityname\",\n  \"level\": 3\n}, {\n  \"value\": \"GetType\",\n  \"id\": \"gettype\",\n  \"level\": 3\n}, {\n  \"value\": \"GetParent\",\n  \"id\": \"getparent\",\n  \"level\": 3\n}, {\n  \"value\": \"GetNumberOfPartitions\",\n  \"id\": \"getnumberofpartitions\",\n  \"level\": 3\n}, {\n  \"value\": \"GetPartitions\",\n  \"id\": \"getpartitions\",\n  \"level\": 3\n}, {\n  \"value\": \"GetValue\",\n  \"id\": \"getvalue\",\n  \"level\": 3\n}, {\n  \"value\": \"GetDerivative\",\n  \"id\": \"getderivative\",\n  \"level\": 3\n}, {\n  \"value\": \"GetSecondDerivative\",\n  \"id\": \"getsecondderivative\",\n  \"level\": 3\n}, {\n  \"value\": \"GetCurvature\",\n  \"id\": \"getcurvature\",\n  \"level\": 3\n}, {\n  \"value\": \"GetPrincipalCurvatures\",\n  \"id\": \"getprincipalcurvatures\",\n  \"level\": 3\n}, {\n  \"value\": \"GetNormal\",\n  \"id\": \"getnormal\",\n  \"level\": 3\n}, {\n  \"value\": \"GetParametrization\",\n  \"id\": \"getparametrization\",\n  \"level\": 3\n}, {\n  \"value\": \"GetParametrizationBounds\",\n  \"id\": \"getparametrizationbounds\",\n  \"level\": 3\n}, {\n  \"value\": \"IsInside\",\n  \"id\": \"isinside\",\n  \"level\": 3\n}, {\n  \"value\": \"GetClosestPoint\",\n  \"id\": \"getclosestpoint\",\n  \"level\": 3\n}, {\n  \"value\": \"ReparametrizeOnSurface\",\n  \"id\": \"reparametrizeonsurface\",\n  \"level\": 3\n}, {\n  \"value\": \"SetVisibility\",\n  \"id\": \"setvisibility\",\n  \"level\": 3\n}, {\n  \"value\": \"GetVisibility\",\n  \"id\": \"getvisibility\",\n  \"level\": 3\n}, {\n  \"value\": \"SetVisibilityPerWindow\",\n  \"id\": \"setvisibilityperwindow\",\n  \"level\": 3\n}, {\n  \"value\": \"SetColor\",\n  \"id\": \"setcolor\",\n  \"level\": 3\n}, {\n  \"value\": \"GetColor\",\n  \"id\": \"getcolor\",\n  \"level\": 3\n}, {\n  \"value\": \"SetCoordinates\",\n  \"id\": \"setcoordinates\",\n  \"level\": 3\n}, {\n  \"value\": \"GetAttributeNames\",\n  \"id\": \"getattributenames\",\n  \"level\": 3\n}, {\n  \"value\": \"GetAttribute\",\n  \"id\": \"getattribute\",\n  \"level\": 3\n}, {\n  \"value\": \"SetAttribute\",\n  \"id\": \"setattribute\",\n  \"level\": 3\n}, {\n  \"value\": \"RemoveAttribute\",\n  \"id\": \"removeattribute\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    input: \"input\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"gmshmodel\",\n        children: \"GmshModel\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"status\",\n      children: \"STATUS\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"Add\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"Remove\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"List\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetCurrent\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetCurrent\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetFileName\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetFileName\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetEntities\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetEntityName\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetEntityName\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetPhysicalGroups\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetEntitiesForPhysicalGroup\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetPhysicalGroupsForEntity\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"AddPhysicalGroup\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"RemovePhysicalGroups\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetPhysicalName\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"RemovePhysicalName\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetPhysicalName\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetTag\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetBoundary\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetAdjacencies\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetEntitiesInBoundingBox\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetBoundingBox\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetDimension\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"AddDiscreteEntity\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"RemoveEntities\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"RemoveEntityName\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetType\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetParent\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetPartitions\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetValue\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetDerivative\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetSecondDerivative\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetCurvature\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetPrincipalCurvatures\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetNormal\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetParametrization\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetParametrizationBounds\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"IsInside\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetClosestPoint\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"ReparametrizeOnSurface\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetVisibility\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetVisibility\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetVisibilityPerWindow\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetColor\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetColor\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetCoordinates\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetAttributeNames\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"SetAttribute\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"GetAttribute\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        className: \"task-list-item\",\n        children: [(0,jsx_runtime.jsx)(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"RemoveAttribute\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"introduction\",\n      children: \"Introduction\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"getting-started\",\n      children: \"Getting Started\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"structure\",\n      children: \"Structure\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE :: GmshModel_\\n  PRIVATE\\n  TYPE(GmshModelGeo_), PUBLIC, POINTER :: Geo => NULL()\\n  TYPE(GmshModelOcc_), PUBLIC, POINTER :: Occ => NULL()\\n  TYPE(GmshModelMesh_), PUBLIC, POINTER :: Mesh => NULL()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"methods\",\n      children: \"Methods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"add\",\n      children: \"Add\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Add a new model, with name `name', and set it as the current model.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"remove\",\n      children: \"Remove\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Remove the current model.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"list\",\n      children: \"List\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> List the names of all models.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getcurrent\",\n      children: \"GetCurrent\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Get the name of the current model.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setcurrent\",\n      children: \"SetCurrent\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Set the current model to the model with name `name'. If several models have\\n!! the same name, select the one that was added first.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getfilename\",\n      children: \"GetFileName\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Get the file name (if any) associated with the current model. A file name\\n!! is associated when a model is read from a file on disk.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setfilename\",\n      children: \"SetFileName\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Set the file name associated with the current model.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getentities\",\n      children: \"GetEntities\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get all the entities in the current model. If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' is >= 0, return only !! the entities of the specified dimension (e.g. points if\"\n      }), \"dim' == 0). The\\n!! entities are returned as a vector of (dim, tag) pairs.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setentityname\",\n      children: \"SetEntityName\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Set the name of the entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getentityname\",\n      children: \"GetEntityName\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the name of the entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getphysicalgroups\",\n      children: \"GetPhysicalGroups\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get all the physical groups in the current model. If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' is >= 0, return !! only the entities of the specified dimension (e.g. physical points if\"\n      }), \"dim'\\n!! == 0). The entities are returned as a vector of (dim, tag) pairs.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getentitiesforphysicalgroup\",\n      children: \"GetEntitiesForPhysicalGroup\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the tags of the model entities making up the physical group of\\n!! dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getphysicalgroupsforentity\",\n      children: \"GetPhysicalGroupsForEntity\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the tags of the physical groups (if any) to which the model entity of\\n!! dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag' belongs.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"addphysicalgroup\",\n      children: \"AddPhysicalGroup\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Add a physical group of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim', grouping the model entities with !! tags\"\n      }), \"tags'. Return the tag of the physical group, equal to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"tag' if\"\n      }), \"tag'\\n!! is positive, or a new tag if \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"tag' < 0. Set the name of the physical group !! if\"\n      }), \"name' is not empty.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"removephysicalgroups\",\n      children: \"RemovePhysicalGroups\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Remove the physical groups \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dimTags' (given as a vector of (dim, tag) !! pairs) from the current model. If\"\n      }), \"dimTags' is empty, remove all groups.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setphysicalname\",\n      children: \"SetPhysicalName\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Set the name of the physical group of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"removephysicalname\",\n      children: \"RemovePhysicalName\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Remove the physical name `name' from the current model.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getphysicalname\",\n      children: \"GetPhysicalName\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the name of the physical group of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"settag\",\n      children: \"SetTag\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Set the tag of the entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag' to the new value\\n!! `newTag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getboundary\",\n      children: \"GetBoundary\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the boundary of the model entities \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dimTags', given as a vector of !! (dim, tag) pairs. Return in\"\n      }), \"outDimTags' the boundary of the individual\\n!! entities (if \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"combined' is false) or the boundary of the combined !! geometrical shape formed by all input entities (if\"\n      }), \"combined' is true).\\n!! Return tags multiplied by the sign of the boundary entity if \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"oriented' is !! true. Apply the boundary operator recursively down to dimension 0 (i.e. to !! points) if\"\n      }), \"recursive' is true.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getadjacencies\",\n      children: \"GetAdjacencies\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the upward and downward adjacencies of the model entity of dimension\\n!! \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'. The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"upward' vector returns the tags of adjacent !! entities of dimension\"\n      }), \"dim' + 1; the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"downward' vector returns the tags of !! adjacent entities of dimension\"\n      }), \"dim' - 1.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getentitiesinboundingbox\",\n      children: \"GetEntitiesInBoundingBox\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the model entities in the bounding box defined by the two points\\n!! (\", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"xmin',\"\n      }), \"ymin', \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"zmin') and (\"\n      }), \"xmax', \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"ymax',\"\n      }), \"zmax'). If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' is >= 0, !! return only the entities of the specified dimension (e.g. points if\"\n      }), \"dim'\\n!! == 0).\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getboundingbox\",\n      children: \"GetBoundingBox\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the bounding box (\", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"xmin',\"\n      }), \"ymin', \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"zmin'), (\"\n      }), \"xmax', \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"ymax',\"\n      }), \"zmax') of\\n!! the model entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'. If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and\"\n      }), \"tag' are\\n!! negative, get the bounding box of the whole model.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getdimension\",\n      children: \"GetDimension\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Return the geometrical dimension of the current model.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"adddiscreteentity\",\n      children: \"AddDiscreteEntity\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Add a discrete model entity (defined by a mesh) of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' in the !! current model. Return the tag of the new discrete entity, equal to\"\n      }), \"tag' if\\n!! \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"tag' is positive, or a new tag if\"\n      }), \"tag' < 0. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"boundary' specifies the tags !! of the entities on the boundary of the discrete entity, if any. Specifying !!\"\n      }), \"boundary' allows Gmsh to construct the topology of the overall model.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"removeentities\",\n      children: \"RemoveEntities\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Remove the entities \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dimTags' (given as a vector of (dim, tag) pairs) of !! the current model, provided that they are not on the boundary of (or !! embedded in) higher-dimensional entities. If\"\n      }), \"recursive' is true, remove\\n!! all the entities on their boundaries, down to dimension 0.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"removeentityname\",\n      children: \"RemoveEntityName\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Remove the entity name `name' from the current model.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"gettype\",\n      children: \"GetType\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the type of the entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getparent\",\n      children: \"GetParent\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> In a partitioned model, get the parent of the entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and !! tag\"\n      }), \"tag', i.e. from which the entity is a part of, if any. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parentDim' and !!\"\n      }), \"parentTag' are set to -1 if the entity has no parent.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getnumberofpartitions\",\n      children: \"GetNumberOfPartitions\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Return the number of partitions in the model.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getpartitions\",\n      children: \"GetPartitions\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> In a partitioned model, return the tags of the partition(s) to which the\\n!! entity belongs.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getvalue\",\n      children: \"GetValue\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Evaluate the parametrization of the entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'\\n!! at the parametric coordinates \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord'. Only valid for\"\n      }), \"dim' equal\\n!! to 0 (with empty \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord'), 1 (with\"\n      }), \"parametricCoord' containing\\n!! parametric coordinates on the curve) or 2 (with \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord' !! containing u, v parametric coordinates on the surface, concatenated: [p1u, !! p1v, p2u, ...]). Return x, y, z coordinates in\"\n      }), \"coord', concatenated: [p1x,\\n!! p1y, p1z, p2x, ...].\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getderivative\",\n      children: \"GetDerivative\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Evaluate the derivative of the parametrization of the entity of dimension\\n!! \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag' at the parametric coordinates \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord'. Only !! valid for\"\n      }), \"dim' equal to 1 (with \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord' containing parametric !! coordinates on the curve) or 2 (with\"\n      }), \"parametricCoord' containing u, v\\n!! parametric coordinates on the surface, concatenated: [p1u, p1v, p2u, ...]).\\n!! For \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' equal to 1 return the x, y, z components of the derivative with !! respect to u [d1ux, d1uy, d1uz, d2ux, ...]; for\"\n      }), \"dim' equal to 2 return the\\n!! x, y, z components of the derivative with respect to u and v: [d1ux, d1uy,\\n!! d1uz, d1vx, d1vy, d1vz, d2ux, ...].\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getsecondderivative\",\n      children: \"GetSecondDerivative\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Evaluate the second derivative of the parametrization of the entity of\\n!! dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag' at the parametric coordinates\\n!! \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord'. Only valid for\"\n      }), \"dim' equal to 1 (with \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord' !! containing parametric coordinates on the curve) or 2 (with !!\"\n      }), \"parametricCoord' containing u, v parametric coordinates on the surface,\\n!! concatenated: [p1u, p1v, p2u, ...]). For \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' equal to 1 return the x, y, !! z components of the second derivative with respect to u [d1uux, d1uuy, !! d1uuz, d2uux, ...]; for\"\n      }), \"dim' equal to 2 return the x, y, z components of\\n!! the second derivative with respect to u and v, and the mixed derivative\\n!! with respect to u and v: [d1uux, d1uuy, d1uuz, d1vvx, d1vvy, d1vvz, d1uvx,\\n!! d1uvy, d1uvz, d2uux, ...].\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getcurvature\",\n      children: \"GetCurvature\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Evaluate the (maximum) curvature of the entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag !!\"\n      }), \"tag' at the parametric coordinates \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord'. Only valid for\"\n      }), \"dim'\\n!! equal to 1 (with \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord' containing parametric coordinates on the !! curve) or 2 (with\"\n      }), \"parametricCoord' containing u, v parametric coordinates\\n!! on the surface, concatenated: [p1u, p1v, p2u, ...]).\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getprincipalcurvatures\",\n      children: \"GetPrincipalCurvatures\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Evaluate the principal curvatures of the surface with tag \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"tag' at the !! parametric coordinates\"\n      }), \"parametricCoord', as well as their respective\\n!! directions. `parametricCoord' are given by pair of u and v coordinates,\\n!! concatenated: [p1u, p1v, p2u, ...].\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getnormal\",\n      children: \"GetNormal\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the normal to the surface with tag \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"tag' at the parametric coordinates !!\"\n      }), \"parametricCoord'. The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord' vector should contain u and v !! coordinates, concatenated: [p1u, p1v, p2u, ...].\"\n      }), \"normals' are returned as\\n!! a vector of x, y, z components, concatenated: [n1x, n1y, n1z, n2x, ...].\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getparametrization\",\n      children: \"GetParametrization\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the parametric coordinates \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord' for the points\"\n      }), \"coord' on\\n!! the entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"coord' are given as x, y, z !! coordinates, concatenated: [p1x, p1y, p1z, p2x, ...].\"\n      }), \"parametricCoord'\\n!! returns the parametric coordinates t on the curve (if \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' = 1) or u and v !! coordinates concatenated on the surface (if\"\n      }), \"dim' = 2), i.e. [p1t, p2t,\\n!! ...] or [p1u, p1v, p2u, ...].\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getparametrizationbounds\",\n      children: \"GetParametrizationBounds\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"min' and\"\n      }), \"max' bounds of the parametric coordinates for the entity\\n!! of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"isinside\",\n      children: \"IsInside\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Check if the coordinates (or the parametric coordinates if \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametric' is !! set) provided in\"\n      }), \"coord' correspond to points inside the entity of\\n!! dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag', and return the number of points inside. This\\n!! feature is only available for a subset of entities, depending on the\\n!! underlying geometrical representation.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getclosestpoint\",\n      children: \"GetClosestPoint\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the points \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"closestCoord' on the entity of dimension\"\n      }), \"dim' and tag\\n!! \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"tag' to the points\"\n      }), \"coord', by orthogonal projection. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"coord' and !!\"\n      }), \"closestCoord' are given as x, y, z coordinates, concatenated: [p1x, p1y,\\n!! p1z, p2x, ...]. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"parametricCoord' returns the parametric coordinates t on !! the curve (if\"\n      }), \"dim' = 1) or u and v coordinates concatenated on the surface\\n!! (if `dim' = 2), i.e. [p1t, p2t, ...] or [p1u, p1v, p2u, ...].\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"reparametrizeonsurface\",\n      children: \"ReparametrizeOnSurface\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Reparametrize the boundary entity (point or curve, i.e. with \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' == 0 or !!\"\n      }), \"dim' == 1) of tag \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"tag' on the surface\"\n      }), \"surfaceTag'. If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' == 1, !! reparametrize all the points corresponding to the parametric coordinates !!\"\n      }), \"parametricCoord'. Multiple matches in case of periodic surfaces can be\\n!! selected with `which'. This feature is only available for a subset of\\n!! entities, depending on the underlying geometrical representation.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setvisibility\",\n      children: \"SetVisibility\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Set the visibility of the model entities \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dimTags' (given as a vector of !! (dim, tag) pairs) to\"\n      }), \"value'. Apply the visibility setting recursively if\\n!! `recursive' is true.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getvisibility\",\n      children: \"GetVisibility\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the visibility of the model entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setvisibilityperwindow\",\n      children: \"SetVisibilityPerWindow\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Set the global visibility of the model per window to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"value', where !!\"\n      }), \"windowIndex' identifies the window in the window list.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setcolor\",\n      children: \"SetColor\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Set the color of the model entities \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dimTags' (given as a vector of (dim, !! tag) pairs) to the RGBA value (\"\n      }), \"r', \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"g',\"\n      }), \"b', \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"a'), where\"\n      }), \"r', \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"g',\"\n      }), \"b' and\\n!! \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"a' should be integers between 0 and 255. Apply the color setting !! recursively if\"\n      }), \"recursive' is true.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getcolor\",\n      children: \"GetColor\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Get the color of the model entity of dimension \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"dim' and tag\"\n      }), \"tag'.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setcoordinates\",\n      children: \"SetCoordinates\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"!> Set the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"x',\"\n      }), \"y', `z' coordinates of a geometrical point.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getattributenames\",\n      children: \"GetAttributeNames\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Get the names of any optional attributes stored in the model.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getattribute\",\n      children: \"GetAttribute\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Get the values of the attribute with name `name'.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setattribute\",\n      children: \"SetAttribute\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Set the values of the attribute with name `name'.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"removeattribute\",\n      children: \"RemoveAttribute\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!> Remove the attribute with name `name'.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/GmshAPI/GmshModel_.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);