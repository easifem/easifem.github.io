"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-abstract-orthopol-space-1-d-764-964"],{

/***/ "./docs/docs-api/AbstractOrthopolSpace1D/index.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_abstract_orthopol_space_1_d_index_md_764_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-abstract-orthopol-space-1-d-index-md-764.json\nconst site_docs_docs_api_abstract_orthopol_space_1_d_index_md_764_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"AbstractOrthopolSpace1D/index\",\"title\":\"AbstractOrthoSpace1D\",\"description\":\"Full name: AbstractOrthopolSpace1D\",\"source\":\"@site/docs/docs-api/AbstractOrthopolSpace1D/index.md\",\"sourceDirName\":\"AbstractOrthopolSpace1D\",\"slug\":\"/AbstractOrthopolSpace1D/\",\"permalink\":\"/docs-api/AbstractOrthopolSpace1D/\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractOrthopolSpace1D/index.md\",\"tags\":[{\"inline\":true,\"label\":\"easifemClasses\",\"permalink\":\"/docs-api/tags/easifem-classes\"},{\"inline\":true,\"label\":\"shapeFunctions\",\"permalink\":\"/docs-api/tags/shape-functions\"},{\"inline\":true,\"label\":\"basis\",\"permalink\":\"/docs-api/tags/basis\"},{\"inline\":true,\"label\":\"orthogonalBasis\",\"permalink\":\"/docs-api/tags/orthogonal-basis\"},{\"inline\":true,\"label\":\"higher-order\",\"permalink\":\"/docs-api/tags/higher-order\"}],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"sidebarPosition\":1,\"frontMatter\":{\"sidebar_position\":1,\"date\":\"2023-08-04T00:00:00.000Z\",\"update\":\"2023-08-04T00:00:00.000Z\",\"status\":\"stable\",\"docs\":\"done\",\"extpkgs\":\"none\",\"category\":[\"Basis\",\"ShapeFunctions\"],\"tags\":[\"easifemClasses\",\"shapeFunctions\",\"basis\",\"orthogonalBasis\",\"higher-order\"]},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Structure\",\"permalink\":\"/docs-api/AbstractOrthopol1D/AbstractOrthopol1D_\"},\"next\":{\"title\":\"Structure\",\"permalink\":\"/docs-api/AbstractOrthopolSpace1D/AbstractOrthopolSpace1D_\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/AbstractOrthopolSpace1D/index.md\n\n\nconst frontMatter = {\n\tsidebar_position: 1,\n\tdate: new Date('2023-08-04T00:00:00.000Z'),\n\tupdate: new Date('2023-08-04T00:00:00.000Z'),\n\tstatus: 'stable',\n\tdocs: 'done',\n\textpkgs: 'none',\n\tcategory: [\n\t\t'Basis',\n\t\t'ShapeFunctions'\n\t],\n\ttags: [\n\t\t'easifemClasses',\n\t\t'shapeFunctions',\n\t\t'basis',\n\t\t'orthogonalBasis',\n\t\t'higher-order'\n\t]\n};\nconst contentTitle = 'AbstractOrthoSpace1D';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Structure\",\n  \"id\": \"structure\",\n  \"level\": 2\n}, {\n  \"value\": \"Methods\",\n  \"id\": \"methods\",\n  \"level\": 2\n}, {\n  \"value\": \"Deallocate\",\n  \"id\": \"deallocate\",\n  \"level\": 3\n}, {\n  \"value\": \"SetParam\",\n  \"id\": \"setparam\",\n  \"level\": 3\n}, {\n  \"value\": \"Display\",\n  \"id\": \"display\",\n  \"level\": 3\n}, {\n  \"value\": \"GetRecurrenceCoeff\",\n  \"id\": \"getrecurrencecoeff\",\n  \"level\": 3\n}, {\n  \"value\": \"GetRecurrenceCoeff2\",\n  \"id\": \"getrecurrencecoeff2\",\n  \"level\": 3\n}, {\n  \"value\": \"GetAlpha\",\n  \"id\": \"getalpha\",\n  \"level\": 3\n}, {\n  \"value\": \"GetBeta\",\n  \"id\": \"getbeta\",\n  \"level\": 3\n}, {\n  \"value\": \"GetLeadingCoeff\",\n  \"id\": \"getleadingcoeff\",\n  \"level\": 3\n}, {\n  \"value\": \"GetLeadingCoeffRatio\",\n  \"id\": \"getleadingcoeffratio\",\n  \"level\": 3\n}, {\n  \"value\": \"GetNormSqr\",\n  \"id\": \"getnormsqr\",\n  \"level\": 3\n}, {\n  \"value\": \"GetNormSqr2\",\n  \"id\": \"getnormsqr2\",\n  \"level\": 3\n}, {\n  \"value\": \"GetNormSqrRatio\",\n  \"id\": \"getnormsqrratio\",\n  \"level\": 3\n}, {\n  \"value\": \"GetZeros\",\n  \"id\": \"getzeros\",\n  \"level\": 3\n}, {\n  \"value\": \"GetQuadrature\",\n  \"id\": \"getquadrature\",\n  \"level\": 3\n}, {\n  \"value\": \"EvalAll\",\n  \"id\": \"evalall\",\n  \"level\": 3\n}, {\n  \"value\": \"Eval\",\n  \"id\": \"eval\",\n  \"level\": 3\n}, {\n  \"value\": \"EvalSum\",\n  \"id\": \"evalsum\",\n  \"level\": 3\n}, {\n  \"value\": \"EvalSum\",\n  \"id\": \"evalsum-1\",\n  \"level\": 3\n}, {\n  \"value\": \"GradientEvalAll\",\n  \"id\": \"gradientevalall\",\n  \"level\": 3\n}, {\n  \"value\": \"GradientEval\",\n  \"id\": \"gradienteval\",\n  \"level\": 3\n}, {\n  \"value\": \"GradientEvalSum\",\n  \"id\": \"gradientevalsum\",\n  \"level\": 3\n}, {\n  \"value\": \"Transform\",\n  \"id\": \"transform\",\n  \"level\": 3\n}, {\n  \"value\": \"InvTransform\",\n  \"id\": \"invtransform\",\n  \"level\": 3\n}, {\n  \"value\": \"GradientCoeff\",\n  \"id\": \"gradientcoeff\",\n  \"level\": 3\n}, {\n  \"value\": \"DMatrix\",\n  \"id\": \"dmatrix\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    annotation: \"annotation\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    math: \"math\",\n    mi: \"mi\",\n    mn: \"mn\",\n    mo: \"mo\",\n    mrow: \"mrow\",\n    msub: \"msub\",\n    p: \"p\",\n    pre: \"pre\",\n    semantics: \"semantics\",\n    span: \"span\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"abstractorthospace1d\",\n        children: \"AbstractOrthoSpace1D\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"span\", {\n      class: \"badge badge--primary\",\n      children: \"Full name: AbstractOrthopolSpace1D \"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"structure\",\n      children: \"Structure\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE, ABSTRACT :: AbstractOrthopolSpace1D_\\n  PRIVATE\\n  REAL(DFP) :: domain(2) = [-1.0_DFP, 1.0_DFP]\\n    !! domain of orthogonal polynomials\\nCONTAINS\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"methods\",\n      children: \"Methods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"deallocate\",\n      children: \"Deallocate\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Deallocate the object\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE Deallocate(obj)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(INOUT) :: obj\\n  END SUBROUTINE Deallocate\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setparam\",\n      children: \"SetParam\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set the parameters\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE SUBROUTINE SetParam(obj, domain)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(INOUT) :: obj\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: domain(2)\\n  END SUBROUTINE SetParam\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"display\",\n      children: \"Display\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Display the contents\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE Display(obj, msg, unitno)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(INOUT) :: obj\\n    CHARACTER(LEN=*), INTENT(IN) :: msg\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: unitno\\n  END SUBROUTINE Display\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getrecurrencecoeff\",\n      children: \"GetRecurrenceCoeff\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the recurrence coefficient of monic polynomials\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetRecurrenceCoeff(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans(0:n - 1, 1:2)\\n    !! ans(:,1) = alpha\\n    !! ans(:,2) = beta\\n  END FUNCTION GetRecurrenceCoeff\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getrecurrencecoeff2\",\n      children: \"GetRecurrenceCoeff2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the recurrence coefficient of standard polynomials.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"p\"\n                  }), (0,jsx_runtime.jsxs)(_components.mrow, {\n                    children: [(0,jsx_runtime.jsx)(_components.mi, {\n                      children: \"n\"\n                    }), (0,jsx_runtime.jsx)(_components.mo, {\n                      children: \"+\"\n                    }), (0,jsx_runtime.jsx)(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"a\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"x\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"+\"\n                }), (0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"b\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), (0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"p\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"−\"\n                }), (0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"c\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), (0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"p\"\n                  }), (0,jsx_runtime.jsxs)(_components.mrow, {\n                    children: [(0,jsx_runtime.jsx)(_components.mi, {\n                      children: \"n\"\n                    }), (0,jsx_runtime.jsx)(_components.mo, {\n                      children: \"−\"\n                    }), (0,jsx_runtime.jsx)(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"p_{n+1} = (a_{n}x+b_{n})p_{n}-c_{n}p_{n-1}\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6389em\",\n                verticalAlign: \"-0.2083em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"p\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3011em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"0em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsxs)(_components.span, {\n                            className: \"mord mtight\",\n                            children: [(0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mord mathnormal mtight\",\n                              children: \"n\"\n                            }), (0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mbin mtight\",\n                              children: \"+\"\n                            }), (0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mord mtight\",\n                              children: \"1\"\n                            })]\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.2083em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"a\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.1514em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"0em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: (0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mord mathnormal mtight\",\n                              children: \"n\"\n                            })\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"b\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.1514em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"0em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: (0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mord mathnormal mtight\",\n                              children: \"n\"\n                            })\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"p\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.1514em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"0em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: (0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mord mathnormal mtight\",\n                              children: \"n\"\n                            })\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"−\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6389em\",\n                verticalAlign: \"-0.2083em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"c\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.1514em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"0em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: (0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mord mathnormal mtight\",\n                              children: \"n\"\n                            })\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"p\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3011em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"0em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsxs)(_components.span, {\n                            className: \"mord mtight\",\n                            children: [(0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mord mathnormal mtight\",\n                              children: \"n\"\n                            }), (0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mbin mtight\",\n                              children: \"−\"\n                            }), (0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mord mtight\",\n                              children: \"1\"\n                            })]\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.2083em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetRecurrenceCoeff2(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans(0:n - 1, 1:3)\\n    !! ans(:,1) = a,\\n    !! ans(:,2) = b\\n    !! ans(:,3) = c\\n  END FUNCTION GetRecurrenceCoeff2\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getalpha\",\n      children: \"GetAlpha\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Returns the recurrence coefficient \", (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsx)(_components.mrow, {\n                children: (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"α\"\n                })\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\alpha\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.0037em\"\n              },\n              children: \"α\"\n            })]\n          })\n        })]\n      }), \" of monic polynomials\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetAlpha(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans\\n  END FUNCTION GetAlpha\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getbeta\",\n      children: \"GetBeta\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the recurrence coefficient beta of monic polynomials\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetBeta(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans\\n  END FUNCTION GetBeta\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getleadingcoeff\",\n      children: \"GetLeadingCoeff\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the leading coeff of orthopol.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetLeadingCoeff(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans\\n  END FUNCTION GetLeadingCoeff\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getleadingcoeffratio\",\n      children: \"GetLeadingCoeffRatio\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the ration of leading coeff of orthopol (n+1)/n\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetLeadingCoeffRatio(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans\\n  END FUNCTION GetLeadingCoeffRatio\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getnormsqr\",\n      children: \"GetNormSqr\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the ration of leading coeff of orthopol (n+1)/n\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetNormSqr(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans\\n  END FUNCTION GetNormSqr\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getnormsqr2\",\n      children: \"GetNormSqr2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the ratio of leading coeff of orthopol (n+1)/n\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetNormSqr2(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans(0:n)\\n  END FUNCTION GetNormSqr2\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getnormsqrratio\",\n      children: \"GetNormSqrRatio\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the ratio of square of norm of orthopol (n+1)/n\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetNormSqrRatio(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans\\n  END FUNCTION GetNormSqrRatio\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getzeros\",\n      children: \"GetZeros\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the zeros of orthopol\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE FUNCTION GetZeros(obj, n) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    REAL(DFP) :: ans(n)\\n  END FUNCTION GetZeros\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getquadrature\",\n      children: \"GetQuadrature\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the zeros of orthopol\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE FUNCTION GetQuadrature(obj, n, quadType) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! number of points\\n    INTEGER(I4B), INTENT(IN) :: quadType\\n    !! Gauss, GaussRadauLeft, GaussRadauRight, GaussLobatto\\n    REAL(DFP) :: ans(n, 2)\\n    !! ans(:,1) = points\\n    !! ans(:,2) = weights\\n  END FUNCTION GetQuadrature\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"evalall\",\n      children: \"EvalAll\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the orthopol (0 to n) at single point.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION EvalAll(obj, n, x) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x\\n    !! point of evaluation\\n    REAL(DFP) :: ans(n + 1)\\n  END FUNCTION EvalAll\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the orthopol (0 to n) at several points.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION EvalAll(obj, n, x) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! point of evaluation\\n    REAL(DFP) :: ans(SIZE(x), n + 1)\\n    !! Evaluate orthopol of order = 0 to n (total n+1) at point x\\n  END FUNCTION EvalAll\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"eval\",\n      children: \"Eval\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the orthopol (order = n ) at single point.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION Eval(obj, n, x) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x\\n    !! point of evaluation\\n    REAL(DFP) :: ans\\n  END FUNCTION Eval\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the orthopol (order=n) at several points.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION Eval(obj, n, x) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! point of evaluation\\n    REAL(DFP) :: ans(SIZE(x))\\n    !! Evaluate orthopol of order = n at several points\\n  END FUNCTION Eval\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"evalsum\",\n      children: \"EvalSum\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the orthopol series at single point.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION EvalSum(obj, n, x, coeff) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x\\n    !! point of evaluation\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! Coefficient of finite sum\\n    REAL(DFP) :: ans\\n  END FUNCTION EvalSum\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"evalsum-1\",\n      children: \"EvalSum\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the orthopol series at several points.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION EvalSum(obj, n, x, coeff) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! point of evaluation\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! Coefficient of finite sum\\n    REAL(DFP) :: ans(SIZE(x))\\n  END FUNCTION EvalSum\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"gradientevalall\",\n      children: \"GradientEvalAll\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the gradient of orthopol (0 to n) at single point.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GradientEvalAll(obj, n, x) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x\\n    !! point of evaluation\\n    REAL(DFP) :: ans(n + 1)\\n  END FUNCTION GradientEvalAll\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the gradient of orthopol (0 to n) at several points.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GradientEvalAll(obj, n, x) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! point of evaluation\\n    REAL(DFP) :: ans(SIZE(x), n + 1)\\n    !! Evaluate orthopol of order = 0 to n (total n+1) at point x\\n  END FUNCTION GradientEvalAll\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"gradienteval\",\n      children: \"GradientEval\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the gradient orthopol (order = n ) at single point.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GradientEval(obj, n, x) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x\\n    !! point of evaluation\\n    REAL(DFP) :: ans\\n  END FUNCTION GradientEval\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the gradient orthopol (order=n) at several points.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"NTERFACE\\n  MODULE PURE FUNCTION GradientEval(obj, n, x) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! point of evaluation\\n    REAL(DFP) :: ans(SIZE(x))\\n    !! Evaluate orthopol of order = n at several points\\n  END FUNCTION GradientEval\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"gradientevalsum\",\n      children: \"GradientEvalSum\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the gradient of orthopol series at single point.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GradientEvalSum(obj, n, x, coeff) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x\\n    !! point of evaluation\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! Coefficient of finite sum\\n    REAL(DFP) :: ans\\n  END FUNCTION GradientEvalSum\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the gradient of orthopol series at several points.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GradientEvalSum(obj, n, x, coeff) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! point of evaluation\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! Coefficient of finite sum\\n    REAL(DFP) :: ans(SIZE(x))\\n  END FUNCTION GradientEvalSum\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the kth order gradient of orthopol series at single point.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GradientEvalSum(obj, n, x, coeff, k) &\\n    & RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x\\n    !! point of evaluation\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! Coefficient of finite sum\\n    INTEGER(I4B), INTENT(IN) :: k\\n    !! order of derivative\\n    REAL(DFP) :: ans\\n  END FUNCTION GradientEvalSum\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluates the kth order gradient of orthopol series at several points.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GradientEvalSum(obj, n, x, coeff, k) &\\n    & RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of orthopol\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! point of evaluation\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! Coefficient of finite sum\\n    INTEGER(I4B), INTENT(IN) :: k\\n    !! order of derivative\\n    REAL(DFP) :: ans(SIZE(x))\\n  END FUNCTION GradientEvalSum\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"transform\",\n      children: \"Transform\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Discrete Orthopol Transform\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION Transform(obj, n, coeff, x, w, quadType) &\\n    & RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of jacobi polynomial\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! nodal value (at quad points)\\n    REAL(DFP), INTENT(IN) :: x(0:n)\\n    !! quadrature points\\n    REAL(DFP), INTENT(IN) :: w(0:n)\\n    !! weights\\n    INTEGER(I4B), INTENT(IN) :: quadType\\n    !! Quadrature type\\n    !! Gauss, GaussLobatto, GaussRadauLeft\\n    !! GaussRadauRight\\n    REAL(DFP) :: ans(0:n)\\n    !! modal values  or coefficients\\n  END FUNCTION Transform\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Discrete orthopol Transform of a function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE FUNCTION Transform(obj, n, f, quadType) &\\n    & RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    !! orthopol\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of jacobi polynomial\\n    PROCEDURE(iface_1DFunction), POINTER, INTENT(IN) :: f\\n    !! 1D space function\\n    INTEGER(I4B), INTENT(IN) :: quadType\\n    !! Quadrature type, Gauss, GaussLobatto, GaussRadau, GaussRadauLeft\\n    !! GaussRadauRight\\n    REAL(DFP) :: ans(0:n)\\n    !! modal values  or coefficients\\n  END FUNCTION Transform\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"invtransform\",\n      children: \"InvTransform\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Discrete Jacobi Inverse Transform\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION InvTransform(obj, n, coeff, x) &\\n    & RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    !! orthopol\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of Jacobi polynomial\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! n+1  coefficient (modal values)\\n    REAL(DFP), INTENT(IN) :: x\\n    !! x point in physical space\\n    REAL(DFP) :: ans\\n    !! value in physical space\\n  END FUNCTION InvTransform\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Discrete Jacobi Inverse Transform\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION InvTransform(obj, n, coeff, x) &\\n    & RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    !! orthopol\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of Jacobi polynomial\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! n+1  coefficient (modal values)\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! x point in physical space\\n    REAL(DFP) :: ans(SIZE(x))\\n    !! value in physical space\\n  END FUNCTION InvTransform\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"gradientcoeff\",\n      children: \"GradientCoeff\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns coefficient for gradient of orthopol expansion\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GradientCoeff(obj, n, coeff) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    !! orthopol\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of Jacobi polynomial\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! coefficients $\\\\tilde{u}_{n}$ obtained from JacobiTransform\\n    REAL(DFP) :: ans(0:n)\\n    !! coefficient of gradient\\n  END FUNCTION GradientCoeff\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"dmatrix\",\n      children: \"DMatrix\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns coefficient for gradient of Jacobi expansion\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION DMatrix(obj, n, x, quadType) RESULT(ans)\\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\\n    !! orthpol\\n    INTEGER(I4B), INTENT(IN) :: n\\n      !! order of Jacobi polynomial\\n    REAL(DFP), INTENT(IN) :: x(0:n)\\n      !! quadrature points\\n    INTEGER(I4B), INTENT(IN) :: quadType\\n      !! Gauss and GaussLobatto\\n    REAL(DFP) :: ans(0:n, 0:n)\\n      !! D matrix\\n  END FUNCTION DMatrix\\nEND INTERFACE\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/AbstractOrthopolSpace1D/index.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);