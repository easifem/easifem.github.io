"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-moving-mesh-set-moving-mesh-param-775-bed"],{

/***/ "./docs/docs-api/MovingMesh/SetMovingMeshParam.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ SetMovingMeshParam_contentTitle),\n  \"default\": () => (/* binding */ SetMovingMeshParam_MDXContent),\n  frontMatter: () => (/* binding */ SetMovingMeshParam_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_moving_mesh_set_moving_mesh_param_md_775_namespaceObject),\n  toc: () => (/* binding */ SetMovingMeshParam_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-moving-mesh-set-moving-mesh-param-md-775.json\nconst site_docs_docs_api_moving_mesh_set_moving_mesh_param_md_775_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"MovingMesh/SetMovingMeshParam\",\"title\":\"SetMovingMeshParam\",\"description\":\"Set MovingMesh parameter.\",\"source\":\"@site/docs/docs-api/MovingMesh/SetMovingMeshParam.md\",\"sourceDirName\":\"MovingMesh\",\"slug\":\"/MovingMesh/SetMovingMeshParam\",\"permalink\":\"/docs-api/MovingMesh/SetMovingMeshParam\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/MovingMesh/SetMovingMeshParam.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Initiate\",\"permalink\":\"/docs-api/MovingMesh/Initiate\"},\"next\":{\"title\":\"MultiIndices\",\"permalink\":\"/docs-api/MultiIndices/\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/MovingMesh/_SetMovingMeshParam_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.p, {\n      children: \"This example shows how to set the parameters for steady stokes flow kernel\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n  USE easifemBase\\n  USE easifemClasses\\n  USE easifemMaterials\\n  USE easifemKernels\\n  USE MovingMesh_Class\\n  IMPLICIT NONE\\n  TYPE( MovingMesh_ ) :: obj\\n  TYPE( HDF5File_ ) :: domainFile\\n  TYPE( Domain_ ) :: dom\\n  TYPE( ParameterList_ ) :: param\\n  CHARACTER( * ), PARAMETER :: engine=\\\"NATIVE_SERIAL\\\"\\n  INTEGER( I4B ), PARAMETER :: CoordinateSystem = KERNEL_CARTESIAN\\n  INTEGER( I4B ), PARAMETER :: nsd = 2\\n  INTEGER( I4B ), PARAMETER :: nnt = 1\\n  REAL( DFP ), PARAMETER :: dt = 0.0_DFP\\n  REAL( DFP ), PARAMETER :: startTime = 0.0_DFP\\n  REAL( DFP ), PARAMETER :: endTime = 0.0_DFP\\n  REAL( DFP ), PARAMETER :: currentTime = 0.0_DFP\\n  INTEGER( I4B ), PARAMETER :: currentTimeStep = 1\\n  INTEGER( I4B ), PARAMETER :: totalTimeStep = 1\\n  REAL( DFP ), PARAMETER :: gravity(3)=[0.0, -9.8, 0.0]\\n  CHARACTER( * ), PARAMETER :: domainFileName=\\\"./mesh.h5\\\"\\n  INTEGER( I4B ), PARAMETER :: materialInterfaces(3) = [1,2,3]\\n  INTEGER( I4B ), PARAMETER :: maxIter = 100\\n  INTEGER( I4B ), PARAMETER :: tMaterials= 1\\n  INTEGER( I4B ), PARAMETER :: tDirichletBC = 2\\n  INTEGER( I4B ), PARAMETER :: tNeumannBC = 1\\n  CHARACTER(*), PARAMETER :: baseInterpolationForSpace=\\\"LagrangeInterpolation\\\"\\n  CHARACTER(*), PARAMETER :: baseContinuityForSpace=\\\"H1\\\"\\n  CHARACTER(*), PARAMETER :: quadratureTypeForSpace=\\\"GaussLegendre\\\"\\n  INTEGER( I4B ), PARAMETER :: postProcessOpt = 1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set parameters for kernel.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL FPL_INIT(); CALL param%Initiate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set parameters for the kernel.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetMovingMeshParam( &\\n  & param=param, &\\n  & engine=engine, &\\n  & coordinateSystem=coordinateSystem, &\\n  & nsd=nsd, &\\n  & nnt=nnt, &\\n  & dt=dt, &\\n  & startTime=startTime, &\\n  & endTime=endTime, &\\n  & currentTime=currentTime, &\\n  & currentTimeStep=currentTimeStep, &\\n  & totalTimeStep=totalTimeStep, &\\n  & gravity=gravity, &\\n  & domainFile=domainFileName, &\\n  & materialInterfaces=materialInterfaces, &\\n  & maxIter=maxIter, &\\n  & tMaterials=tMaterials, &\\n  & tDirichletBC=tDirichletBC, &\\n  & tNeumannBC=tNeumannBC, &\\n  & baseInterpolationForSpace=baseInterpolationForSpace, &\\n  & baseContinuityForSpace=baseContinuityForSpace, &\\n  & quadratureTypeForSpace=quadratureTypeForSpace, &\\n  & postProcessOpt=postProcessOpt)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Let us print the parameter list.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL param%Print()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Let us check the essential parameter.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL param%Deallocate(); CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/MovingMesh/SetMovingMeshParam.md\n\n\nconst SetMovingMeshParam_frontMatter = {};\nconst SetMovingMeshParam_contentTitle = 'SetMovingMeshParam';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst SetMovingMeshParam_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc];\nfunction SetMovingMeshParam_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"setmovingmeshparam\",\n        children: \"SetMovingMeshParam\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set MovingMesh parameter.\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE setMovingMeshParam( &\\n    & param, &\\n    & engine, &\\n    & coordinateSystem, &\\n    & nsd, &\\n    & nnt, &\\n    & dt, &\\n    & startTime, &\\n    & endTime, &\\n    & currentTime, &\\n    & currentTimeStep, &\\n    & totalTimeStep, &\\n    & gravity, &\\n    & domainFile, &\\n    & materialInterfaces, &\\n    & maxIter, &\\n    & tMaterials, &\\n    & tDirichletBC, &\\n    & tNeumannBC, &\\n    & baseInterpolationForSpace, &\\n    & baseContinuityForSpace, &\\n    & quadratureTypeForSpace, &\\n    & postProcessOpt)\\n    !!\\n    TYPE(ParameterList_), INTENT(INOUT) :: param\\n    !! param stores the parameters\\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: engine\\n    !! name of engine\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: coordinateSystem\\n    !! Coordinate system\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: gravity(3)\\n    !! Acceleration due to gravity, default is zero\\n    !! If gravity is zero then we use piezometric pressure\\n    !! If gravity is nonzero then we use thermodynamic pressure\\n    !! If true then we consider the subscale pressure in stabilization\\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: domainFile\\n    !! Mesh/domain file for velocity and pressure\\n    !! Use when pressure and velocity have common domain\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: materialInterfaces(:)\\n    !! Mesh id for material interfaces\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: nsd\\n    !! Number of spatial dimension\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: nnt\\n    !! Number of nodes in time, default 1, has not effect, so ignore\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: dt\\n    !! Initial time step size, useful incase of nonlinear stokes flow\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: startTime\\n    !! Starting time t0 of simulation, default=0.0\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: endTime\\n    !! Final time of simulation, default is 0.0_DFP\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: currentTime\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: currentTimeStep\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: totalTimeStep\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: maxIter\\n    !! maximum iteration for Newton-method\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: tMaterials\\n    !! Total number of fluid materials; default=1\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: tDirichletBC\\n    !! Total number of Dirichlet domain for displacement, default=0\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: tNeumannBC\\n    !! Total number of Neumann domain for displacement\\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: baseInterpolationForSpace\\n    !! Type of interpolation function used for basis function\\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: baseContinuityForSpace\\n    !! Type of continuity of basis function for pressure\\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: quadratureTypeForSpace\\n    !! Type of quadrature for pressure field\\n    !! Type of interpolation function used for velocity\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: postProcessOpt\\n    !!\\n  END SUBROUTINE setMovingMeshParam\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction SetMovingMeshParam_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(SetMovingMeshParam_createMdxContent, {\n      ...props\n    })\n  }) : SetMovingMeshParam_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/MovingMesh/SetMovingMeshParam.md\n");

/***/ })

}]);