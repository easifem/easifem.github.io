"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-abstract-mesh-initiate-node-to-nodes-353-d54"],{

/***/ "./docs/docs-api/AbstractMesh/InitiateNodeToNodes.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_abstract_mesh_initiate_node_to_nodes_md_353_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-abstract-mesh-initiate-node-to-nodes-md-353.json\nconst site_docs_docs_api_abstract_mesh_initiate_node_to_nodes_md_353_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"AbstractMesh/InitiateNodeToNodes\",\"title\":\"InitiateNodeToNodes\",\"description\":\"The obj_InitiateNodetoNodes method builds the node-to-node connectivity mapping in an AbstractMesh object. This mapping represents the topological relationship between nodes in the mesh, creating a graph structure where each node knows which other nodes it\\'s connected to through mesh elements.\",\"source\":\"@site/docs/docs-api/AbstractMesh/InitiateNodeToNodes.md\",\"sourceDirName\":\"AbstractMesh\",\"slug\":\"/AbstractMesh/InitiateNodeToNodes\",\"permalink\":\"/docs-api/AbstractMesh/InitiateNodeToNodes\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMesh/InitiateNodeToNodes.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"InitiateNodeToElements\",\"permalink\":\"/docs-api/AbstractMesh/InitiateNodeToElements\"},\"next\":{\"title\":\"IsAllNodePresent\",\"permalink\":\"/docs-api/AbstractMesh/IsAllNodePresent\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/AbstractMesh/InitiateNodeToNodes.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'InitiateNodeToNodes';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Purpose\",\n  \"id\": \"purpose\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, {\n  \"value\": \"Algorithm\",\n  \"id\": \"algorithm\",\n  \"level\": 2\n}, {\n  \"value\": \"Implementation Details\",\n  \"id\": \"implementation-details\",\n  \"level\": 2\n}, {\n  \"value\": \"Data Structures Modified\",\n  \"id\": \"data-structures-modified\",\n  \"level\": 2\n}, {\n  \"value\": \"Performance Considerations\",\n  \"id\": \"performance-considerations\",\n  \"level\": 2\n}, {\n  \"value\": \"Usage Example\",\n  \"id\": \"usage-example\",\n  \"level\": 2\n}, {\n  \"value\": \"Dependencies\",\n  \"id\": \"dependencies\",\n  \"level\": 2\n}, {\n  \"value\": \"Notes\",\n  \"id\": \"notes\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"initiatenodetonodes\",\n        children: \"InitiateNodeToNodes\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj_InitiateNodetoNodes\"\n      }), \" method builds the node-to-node connectivity mapping in an \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"AbstractMesh\"\n      }), \" object. This mapping represents the topological relationship between nodes in the mesh, creating a graph structure where each node knows which other nodes it's connected to through mesh elements.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"In other words, it generates info of node-numbers in mesh surrounding a node number\"\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"This mapping is stored inside \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj%nodeData%globalNodeNum\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"For a local node number i, obj%nodeData(i)%globalNodeNum denotes the global node data surrounding the local node number.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"This list does not include self node.\"\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The method needs node-to-elements data, therefore if this data is not initiated, then this method calls \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"InitiateNodeToElements()\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"purpose\",\n      children: \"Purpose\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This method establishes a critical data structure that identifies all adjacent nodes for each node in the mesh. The node-to-node connectivity map is essential for:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Implementing finite element and finite volume methods\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Supporting mesh smoothing algorithms\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Applying boundary conditions along interfaces\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Facilitating graph-based operations on the mesh\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Implementing node-based solvers\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Supporting domain decomposition\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Implementing jump-based stabilization techniques\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE InitiateNodetoNodes(obj)\\n    CLASS(AbstractMesh_), INTENT(INOUT) :: obj\\n  END SUBROUTINE InitiateNodetoNodes\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj\"\n        }), \" (INTENT(INOUT)) - The \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"AbstractMesh_\"\n        }), \" object for which to create the node-to-node connectivity map\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"algorithm\",\n      children: \"Algorithm\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"If the mapping is already initialized (\", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj%isNodeToNodesInitiated\"\n        }), \" is true), the method returns immediately\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"If node-to-element mapping isn't initialized, it calls \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj%InitiateNodeToElements()\"\n        }), \" first\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Sets the initialization flag to true\"\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"For each node in the mesh:\", \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"Initializes a boolean array to track which nodes have been found\"\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"Gets all elements that contain this node\"\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"For each connected element:\", \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n              children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: \"Retrieves all nodes in this element\"\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: \"Adds each node to the current node's list of connections (except self)\"\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: \"Marks nodes as found to avoid duplicates\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"Finalizes the node's connection list\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"implementation-details\",\n      children: \"Implementation Details\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Uses a chunk-based allocation strategy for efficient list building\"\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"chunk_size\"\n        }), \" parameter (set to 64) controls memory allocation growth\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"Uses a boolean array \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"found\"\n        }), \" to prevent duplicate entries\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"Performance timing is available when \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj%showTime\"\n        }), \" is enabled\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Debug information is provided when compiled with debug flags\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"data-structures-modified\",\n      children: \"Data Structures Modified\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj%nodeData(inode)%ptr%globalNodes\"\n        }), \" - For each node, stores the list of global node numbers connected to this node\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj%isNodeToNodesInitiated\"\n        }), \" - Flag indicating the node-to-node mapping has been built\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"performance-considerations\",\n      children: \"Performance Considerations\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Time complexity is O(n × e × m) where n is the number of nodes, e is the average number of elements per node, and m is the average number of nodes per element\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Memory usage scales with the total number of node-node connections in the mesh\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"For densely connected meshes, this operation can be memory-intensive\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The chunk-based allocation strategy helps reduce memory reallocation overhead\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"usage-example\",\n      children: \"Usage Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE(Mesh_) :: mesh\\n! ... Initialize mesh ...\\n\\n! Build node-to-node connectivity\\nCALL mesh%InitiateNodeToNodes()\\n\\n! Now we can easily find all nodes connected to a specific node\\nconnectedNodes = mesh%GetNodeToNodes(globalNode=nodeNum, includeSelf=.FALSE.)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"dependencies\",\n      children: \"Dependencies\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This method depends on:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Node-to-element connectivity (must be initialized first)\"\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"NodeData_ExpandGlobalNodes\"\n        }), \" for growing the node lists\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"NodeData_GetTotalGlobalElements\"\n        }), \" for querying element list sizes\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"NodeData_GetPointerToGlobalElements\"\n        }), \" for accessing element lists\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"notes\",\n      children: \"Notes\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The node-to-node mapping does not include self-connections (a node is not considered connected to itself)\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The connectivity map represents the topological connectivity through mesh elements, not geometric proximity\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL2RvY3MtYXBpL0Fic3RyYWN0TWVzaC9Jbml0aWF0ZU5vZGVUb05vZGVzLm1kIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL2RvY3MvZG9jcy1hcGkvQWJzdHJhY3RNZXNoL0luaXRpYXRlTm9kZVRvTm9kZXMubWQ/Y2ZjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge307XG5leHBvcnQgY29uc3QgY29udGVudFRpdGxlID0gJ0luaXRpYXRlTm9kZVRvTm9kZXMnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1ldGFkYXRhfSBmcm9tICdAc2l0ZS8uZG9jdXNhdXJ1cy9kb2N1c2F1cnVzLXBsdWdpbi1jb250ZW50LWRvY3MvZG9jcy1hcGkvc2l0ZS1kb2NzLWRvY3MtYXBpLWFic3RyYWN0LW1lc2gtaW5pdGlhdGUtbm9kZS10by1ub2Rlcy1tZC0zNTMuanNvbidcbmV4cG9ydCBjb25zdCBhc3NldHMgPSB7XG5cbn07XG5cbmltcG9ydCB7RnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4c30gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQge3VzZU1EWENvbXBvbmVudHMgYXMgX3Byb3ZpZGVDb21wb25lbnRzfSBmcm9tIFwiQG1keC1qcy9yZWFjdFwiO1xuZXhwb3J0IGNvbnN0IHRvYyA9IFt7XG4gIFwidmFsdWVcIjogXCJQdXJwb3NlXCIsXG4gIFwiaWRcIjogXCJwdXJwb3NlXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiSW50ZXJmYWNlXCIsXG4gIFwiaWRcIjogXCJpbnRlcmZhY2VcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJBbGdvcml0aG1cIixcbiAgXCJpZFwiOiBcImFsZ29yaXRobVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkltcGxlbWVudGF0aW9uIERldGFpbHNcIixcbiAgXCJpZFwiOiBcImltcGxlbWVudGF0aW9uLWRldGFpbHNcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJEYXRhIFN0cnVjdHVyZXMgTW9kaWZpZWRcIixcbiAgXCJpZFwiOiBcImRhdGEtc3RydWN0dXJlcy1tb2RpZmllZFwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlBlcmZvcm1hbmNlIENvbnNpZGVyYXRpb25zXCIsXG4gIFwiaWRcIjogXCJwZXJmb3JtYW5jZS1jb25zaWRlcmF0aW9uc1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlVzYWdlIEV4YW1wbGVcIixcbiAgXCJpZFwiOiBcInVzYWdlLWV4YW1wbGVcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJEZXBlbmRlbmNpZXNcIixcbiAgXCJpZFwiOiBcImRlcGVuZGVuY2llc1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk5vdGVzXCIsXG4gIFwiaWRcIjogXCJub3Rlc1wiLFxuICBcImxldmVsXCI6IDJcbn1dO1xuZnVuY3Rpb24gX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpIHtcbiAgY29uc3QgX2NvbXBvbmVudHMgPSB7XG4gICAgY29kZTogXCJjb2RlXCIsXG4gICAgaDE6IFwiaDFcIixcbiAgICBoMjogXCJoMlwiLFxuICAgIGhlYWRlcjogXCJoZWFkZXJcIixcbiAgICBsaTogXCJsaVwiLFxuICAgIG9sOiBcIm9sXCIsXG4gICAgcDogXCJwXCIsXG4gICAgcHJlOiBcInByZVwiLFxuICAgIHVsOiBcInVsXCIsXG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gX2pzeHMoX0ZyYWdtZW50LCB7XG4gICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmhlYWRlciwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuaDEsIHtcbiAgICAgICAgaWQ6IFwiaW5pdGlhdGVub2RldG9ub2Rlc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJJbml0aWF0ZU5vZGVUb05vZGVzXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJvYmpfSW5pdGlhdGVOb2RldG9Ob2Rlc1wiXG4gICAgICB9KSwgXCIgbWV0aG9kIGJ1aWxkcyB0aGUgbm9kZS10by1ub2RlIGNvbm5lY3Rpdml0eSBtYXBwaW5nIGluIGFuIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQWJzdHJhY3RNZXNoXCJcbiAgICAgIH0pLCBcIiBvYmplY3QuIFRoaXMgbWFwcGluZyByZXByZXNlbnRzIHRoZSB0b3BvbG9naWNhbCByZWxhdGlvbnNoaXAgYmV0d2VlbiBub2RlcyBpbiB0aGUgbWVzaCwgY3JlYXRpbmcgYSBncmFwaCBzdHJ1Y3R1cmUgd2hlcmUgZWFjaCBub2RlIGtub3dzIHdoaWNoIG90aGVyIG5vZGVzIGl0J3MgY29ubmVjdGVkIHRvIHRocm91Z2ggbWVzaCBlbGVtZW50cy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJbiBvdGhlciB3b3JkcywgaXQgZ2VuZXJhdGVzIGluZm8gb2Ygbm9kZS1udW1iZXJzIGluIG1lc2ggc3Vycm91bmRpbmcgYSBub2RlIG51bWJlclwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlRoaXMgbWFwcGluZyBpcyBzdG9yZWQgaW5zaWRlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJvYmolbm9kZURhdGElZ2xvYmFsTm9kZU51bVwiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiRm9yIGEgbG9jYWwgbm9kZSBudW1iZXIgaSwgb2JqJW5vZGVEYXRhKGkpJWdsb2JhbE5vZGVOdW0gZGVub3RlcyB0aGUgZ2xvYmFsIG5vZGUgZGF0YSBzdXJyb3VuZGluZyB0aGUgbG9jYWwgbm9kZSBudW1iZXIuXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlRoaXMgbGlzdCBkb2VzIG5vdCBpbmNsdWRlIHNlbGYgbm9kZS5cIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJUaGUgbWV0aG9kIG5lZWRzIG5vZGUtdG8tZWxlbWVudHMgZGF0YSwgdGhlcmVmb3JlIGlmIHRoaXMgZGF0YSBpcyBub3QgaW5pdGlhdGVkLCB0aGVuIHRoaXMgbWV0aG9kIGNhbGxzIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJJbml0aWF0ZU5vZGVUb0VsZW1lbnRzKClcIlxuICAgICAgICB9KSwgXCIuXCJdXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwicHVycG9zZVwiLFxuICAgICAgY2hpbGRyZW46IFwiUHVycG9zZVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhpcyBtZXRob2QgZXN0YWJsaXNoZXMgYSBjcml0aWNhbCBkYXRhIHN0cnVjdHVyZSB0aGF0IGlkZW50aWZpZXMgYWxsIGFkamFjZW50IG5vZGVzIGZvciBlYWNoIG5vZGUgaW4gdGhlIG1lc2guIFRoZSBub2RlLXRvLW5vZGUgY29ubmVjdGl2aXR5IG1hcCBpcyBlc3NlbnRpYWwgZm9yOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSW1wbGVtZW50aW5nIGZpbml0ZSBlbGVtZW50IGFuZCBmaW5pdGUgdm9sdW1lIG1ldGhvZHNcIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiU3VwcG9ydGluZyBtZXNoIHNtb290aGluZyBhbGdvcml0aG1zXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkFwcGx5aW5nIGJvdW5kYXJ5IGNvbmRpdGlvbnMgYWxvbmcgaW50ZXJmYWNlc1wiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJGYWNpbGl0YXRpbmcgZ3JhcGgtYmFzZWQgb3BlcmF0aW9ucyBvbiB0aGUgbWVzaFwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJbXBsZW1lbnRpbmcgbm9kZS1iYXNlZCBzb2x2ZXJzXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlN1cHBvcnRpbmcgZG9tYWluIGRlY29tcG9zaXRpb25cIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSW1wbGVtZW50aW5nIGp1bXAtYmFzZWQgc3RhYmlsaXphdGlvbiB0ZWNobmlxdWVzXCJcbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbnRlcmZhY2VcIixcbiAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1mb3J0cmFuXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIklOVEVSRkFDRVxcbiAgTU9EVUxFIFNVQlJPVVRJTkUgSW5pdGlhdGVOb2RldG9Ob2RlcyhvYmopXFxuICAgIENMQVNTKEFic3RyYWN0TWVzaF8pLCBJTlRFTlQoSU5PVVQpIDo6IG9ialxcbiAgRU5EIFNVQlJPVVRJTkUgSW5pdGlhdGVOb2RldG9Ob2Rlc1xcbkVORCBJTlRFUkZBQ0VcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJvYmpcIlxuICAgICAgICB9KSwgXCIgKElOVEVOVChJTk9VVCkpIC0gVGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJBYnN0cmFjdE1lc2hfXCJcbiAgICAgICAgfSksIFwiIG9iamVjdCBmb3Igd2hpY2ggdG8gY3JlYXRlIHRoZSBub2RlLXRvLW5vZGUgY29ubmVjdGl2aXR5IG1hcFwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImFsZ29yaXRobVwiLFxuICAgICAgY2hpbGRyZW46IFwiQWxnb3JpdGhtXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMub2wsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIklmIHRoZSBtYXBwaW5nIGlzIGFscmVhZHkgaW5pdGlhbGl6ZWQgKFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJvYmolaXNOb2RlVG9Ob2Rlc0luaXRpYXRlZFwiXG4gICAgICAgIH0pLCBcIiBpcyB0cnVlKSwgdGhlIG1ldGhvZCByZXR1cm5zIGltbWVkaWF0ZWx5XCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIklmIG5vZGUtdG8tZWxlbWVudCBtYXBwaW5nIGlzbid0IGluaXRpYWxpemVkLCBpdCBjYWxscyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwib2JqJUluaXRpYXRlTm9kZVRvRWxlbWVudHMoKVwiXG4gICAgICAgIH0pLCBcIiBmaXJzdFwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiU2V0cyB0aGUgaW5pdGlhbGl6YXRpb24gZmxhZyB0byB0cnVlXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiRm9yIGVhY2ggbm9kZSBpbiB0aGUgbWVzaDpcIiwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIkluaXRpYWxpemVzIGEgYm9vbGVhbiBhcnJheSB0byB0cmFjayB3aGljaCBub2RlcyBoYXZlIGJlZW4gZm91bmRcIlxuICAgICAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJHZXRzIGFsbCBlbGVtZW50cyB0aGF0IGNvbnRhaW4gdGhpcyBub2RlXCJcbiAgICAgICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXCJGb3IgZWFjaCBjb25uZWN0ZWQgZWxlbWVudDpcIiwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUmV0cmlldmVzIGFsbCBub2RlcyBpbiB0aGlzIGVsZW1lbnRcIlxuICAgICAgICAgICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkFkZHMgZWFjaCBub2RlIHRvIHRoZSBjdXJyZW50IG5vZGUncyBsaXN0IG9mIGNvbm5lY3Rpb25zIChleGNlcHQgc2VsZilcIlxuICAgICAgICAgICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk1hcmtzIG5vZGVzIGFzIGZvdW5kIHRvIGF2b2lkIGR1cGxpY2F0ZXNcIlxuICAgICAgICAgICAgICB9KSwgXCJcXG5cIl1cbiAgICAgICAgICAgIH0pLCBcIlxcblwiXVxuICAgICAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJGaW5hbGl6ZXMgdGhlIG5vZGUncyBjb25uZWN0aW9uIGxpc3RcIlxuICAgICAgICAgIH0pLCBcIlxcblwiXVxuICAgICAgICB9KSwgXCJcXG5cIl1cbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbXBsZW1lbnRhdGlvbi1kZXRhaWxzXCIsXG4gICAgICBjaGlsZHJlbjogXCJJbXBsZW1lbnRhdGlvbiBEZXRhaWxzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJVc2VzIGEgY2h1bmstYmFzZWQgYWxsb2NhdGlvbiBzdHJhdGVneSBmb3IgZWZmaWNpZW50IGxpc3QgYnVpbGRpbmdcIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJUaGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcImNodW5rX3NpemVcIlxuICAgICAgICB9KSwgXCIgcGFyYW1ldGVyIChzZXQgdG8gNjQpIGNvbnRyb2xzIG1lbW9yeSBhbGxvY2F0aW9uIGdyb3d0aFwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJVc2VzIGEgYm9vbGVhbiBhcnJheSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiZm91bmRcIlxuICAgICAgICB9KSwgXCIgdG8gcHJldmVudCBkdXBsaWNhdGUgZW50cmllc1wiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJQZXJmb3JtYW5jZSB0aW1pbmcgaXMgYXZhaWxhYmxlIHdoZW4gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIm9iaiVzaG93VGltZVwiXG4gICAgICAgIH0pLCBcIiBpcyBlbmFibGVkXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJEZWJ1ZyBpbmZvcm1hdGlvbiBpcyBwcm92aWRlZCB3aGVuIGNvbXBpbGVkIHdpdGggZGVidWcgZmxhZ3NcIlxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImRhdGEtc3RydWN0dXJlcy1tb2RpZmllZFwiLFxuICAgICAgY2hpbGRyZW46IFwiRGF0YSBTdHJ1Y3R1cmVzIE1vZGlmaWVkXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJvYmolbm9kZURhdGEoaW5vZGUpJXB0ciVnbG9iYWxOb2Rlc1wiXG4gICAgICAgIH0pLCBcIiAtIEZvciBlYWNoIG5vZGUsIHN0b3JlcyB0aGUgbGlzdCBvZiBnbG9iYWwgbm9kZSBudW1iZXJzIGNvbm5lY3RlZCB0byB0aGlzIG5vZGVcIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIm9iaiVpc05vZGVUb05vZGVzSW5pdGlhdGVkXCJcbiAgICAgICAgfSksIFwiIC0gRmxhZyBpbmRpY2F0aW5nIHRoZSBub2RlLXRvLW5vZGUgbWFwcGluZyBoYXMgYmVlbiBidWlsdFwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInBlcmZvcm1hbmNlLWNvbnNpZGVyYXRpb25zXCIsXG4gICAgICBjaGlsZHJlbjogXCJQZXJmb3JtYW5jZSBDb25zaWRlcmF0aW9uc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiVGltZSBjb21wbGV4aXR5IGlzIE8obiDDlyBlIMOXIG0pIHdoZXJlIG4gaXMgdGhlIG51bWJlciBvZiBub2RlcywgZSBpcyB0aGUgYXZlcmFnZSBudW1iZXIgb2YgZWxlbWVudHMgcGVyIG5vZGUsIGFuZCBtIGlzIHRoZSBhdmVyYWdlIG51bWJlciBvZiBub2RlcyBwZXIgZWxlbWVudFwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJNZW1vcnkgdXNhZ2Ugc2NhbGVzIHdpdGggdGhlIHRvdGFsIG51bWJlciBvZiBub2RlLW5vZGUgY29ubmVjdGlvbnMgaW4gdGhlIG1lc2hcIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiRm9yIGRlbnNlbHkgY29ubmVjdGVkIG1lc2hlcywgdGhpcyBvcGVyYXRpb24gY2FuIGJlIG1lbW9yeS1pbnRlbnNpdmVcIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiVGhlIGNodW5rLWJhc2VkIGFsbG9jYXRpb24gc3RyYXRlZ3kgaGVscHMgcmVkdWNlIG1lbW9yeSByZWFsbG9jYXRpb24gb3ZlcmhlYWRcIlxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInVzYWdlLWV4YW1wbGVcIixcbiAgICAgIGNoaWxkcmVuOiBcIlVzYWdlIEV4YW1wbGVcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJUWVBFKE1lc2hfKSA6OiBtZXNoXFxuISAuLi4gSW5pdGlhbGl6ZSBtZXNoIC4uLlxcblxcbiEgQnVpbGQgbm9kZS10by1ub2RlIGNvbm5lY3Rpdml0eVxcbkNBTEwgbWVzaCVJbml0aWF0ZU5vZGVUb05vZGVzKClcXG5cXG4hIE5vdyB3ZSBjYW4gZWFzaWx5IGZpbmQgYWxsIG5vZGVzIGNvbm5lY3RlZCB0byBhIHNwZWNpZmljIG5vZGVcXG5jb25uZWN0ZWROb2RlcyA9IG1lc2glR2V0Tm9kZVRvTm9kZXMoZ2xvYmFsTm9kZT1ub2RlTnVtLCBpbmNsdWRlU2VsZj0uRkFMU0UuKVxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJkZXBlbmRlbmNpZXNcIixcbiAgICAgIGNoaWxkcmVuOiBcIkRlcGVuZGVuY2llc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhpcyBtZXRob2QgZGVwZW5kcyBvbjpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIk5vZGUtdG8tZWxlbWVudCBjb25uZWN0aXZpdHkgKG11c3QgYmUgaW5pdGlhbGl6ZWQgZmlyc3QpXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIk5vZGVEYXRhX0V4cGFuZEdsb2JhbE5vZGVzXCJcbiAgICAgICAgfSksIFwiIGZvciBncm93aW5nIHRoZSBub2RlIGxpc3RzXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJOb2RlRGF0YV9HZXRUb3RhbEdsb2JhbEVsZW1lbnRzXCJcbiAgICAgICAgfSksIFwiIGZvciBxdWVyeWluZyBlbGVtZW50IGxpc3Qgc2l6ZXNcIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIk5vZGVEYXRhX0dldFBvaW50ZXJUb0dsb2JhbEVsZW1lbnRzXCJcbiAgICAgICAgfSksIFwiIGZvciBhY2Nlc3NpbmcgZWxlbWVudCBsaXN0c1wiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcIm5vdGVzXCIsXG4gICAgICBjaGlsZHJlbjogXCJOb3Rlc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiVGhlIG5vZGUtdG8tbm9kZSBtYXBwaW5nIGRvZXMgbm90IGluY2x1ZGUgc2VsZi1jb25uZWN0aW9ucyAoYSBub2RlIGlzIG5vdCBjb25zaWRlcmVkIGNvbm5lY3RlZCB0byBpdHNlbGYpXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlRoZSBjb25uZWN0aXZpdHkgbWFwIHJlcHJlc2VudHMgdGhlIHRvcG9sb2dpY2FsIGNvbm5lY3Rpdml0eSB0aHJvdWdoIG1lc2ggZWxlbWVudHMsIG5vdCBnZW9tZXRyaWMgcHJveGltaXR5XCJcbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pXVxuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQocHJvcHMgPSB7fSkge1xuICBjb25zdCB7d3JhcHBlcjogTURYTGF5b3V0fSA9IHtcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBNRFhMYXlvdXQgPyBfanN4KE1EWExheW91dCwge1xuICAgIC4uLnByb3BzLFxuICAgIGNoaWxkcmVuOiBfanN4KF9jcmVhdGVNZHhDb250ZW50LCB7XG4gICAgICAuLi5wcm9wc1xuICAgIH0pXG4gIH0pIDogX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpO1xufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./docs/docs-api/AbstractMesh/InitiateNodeToNodes.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);