"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-quadrangle-interpolation-utility-cell-basis-quadranglef-3-f-020"],{

/***/ "./docs/docs-api/QuadrangleInterpolationUtility/CellBasis_Quadrangle.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ CellBasis_Quadrangle_contentTitle),\n  \"default\": () => (/* binding */ CellBasis_Quadrangle_MDXContent),\n  frontMatter: () => (/* binding */ CellBasis_Quadrangle_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_quadrangle_interpolation_utility_cell_basis_quadrangle_md_f3f_namespaceObject),\n  toc: () => (/* binding */ CellBasis_Quadrangle_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-quadrangle-interpolation-utility-cell-basis-quadrangle-md-f3f.json\nconst site_docs_docs_api_quadrangle_interpolation_utility_cell_basis_quadrangle_md_f3f_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"QuadrangleInterpolationUtility/CellBasis_Quadrangle\",\"title\":\"CellBasis\",\"description\":\"Evaluate basis functions in the cell.\",\"source\":\"@site/docs/docs-api/QuadrangleInterpolationUtility/CellBasis_Quadrangle.md\",\"sourceDirName\":\"QuadrangleInterpolationUtility\",\"slug\":\"/QuadrangleInterpolationUtility/CellBasis_Quadrangle\",\"permalink\":\"/docs-api/QuadrangleInterpolationUtility/CellBasis_Quadrangle\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/QuadrangleInterpolationUtility/CellBasis_Quadrangle.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Quadrangle\",\"permalink\":\"/docs-api/QuadrangleInterpolationUtility/\"},\"next\":{\"title\":\"Dubiner\",\"permalink\":\"/docs-api/QuadrangleInterpolationUtility/Dubiner_Quadrangle\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/QuadrangleInterpolationUtility/_CellBasis_Quadrangle_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"program main\\n  use easifembase\\n  use easifemClasses\\n  implicit none\\n  real(dfp), allocatable :: xij(:,:), avec(:)\\n  integer(i4b) :: ii, jj, cnt, n\\n  real(dfp), allocatable :: ans(:,:)\\n  integer(i4b) :: order\\n  type( VTKPlot_ ) :: aplot\\n  character(len=*), parameter :: fname=\\\"./results/\\\"\\n\\n  n = 51\\n  call reallocate(avec, n)\\n  call reallocate(xij, 2, int((n+1)*(n+2)/2))\\n  avec= linspace(0.0_DFP, 1.0_DFP, n)\\n  cnt=0\\n  do ii = 1, n\\n    do jj = 1, n-ii+1\\n      cnt=cnt+1\\n      xij(1,cnt) = avec(ii)\\n      xij(2,cnt) = avec(jj)\\n    end do\\n  end do\\n\\n  order=5\\n  ans = CellBasis_Triangle(order=order, xij=xij, refTriangle=\\\"UNIT\\\")\\n  do ii  = 1, size(ans,2)\\n    call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\\n      & filename=fname//\\\"CellBasis( order=\\\" // tostring(order) // &\\n        & \\\" )\\\" // tostring(ii) // &\\n        & \\\".vtp\\\", &\\n      & label=\\\"P\\\")\\n  end do\\nend program main\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/QuadrangleInterpolationUtility/CellBasis_Quadrangle.md\n\n\nconst CellBasis_Quadrangle_frontMatter = {};\nconst CellBasis_Quadrangle_contentTitle = 'CellBasis';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst CellBasis_Quadrangle_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc];\nfunction CellBasis_Quadrangle_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"cellbasis\",\n        children: \"CellBasis\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluate basis functions in the cell.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE FUNCTION CellBasis_Quadrangle(pb, qb, x, y) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: pb\\n    !! order on bottom vertical edge (e3), it should be greater than 1\\n    INTEGER(I4B), INTENT(IN) :: qb\\n    !! order on top vertical edge(e4), it should be greater than 1\\n    REAL(DFP), INTENT(IN) :: x(:), y(:)\\n    !! point of evaluation\\n    REAL(DFP) :: ans(SIZE(x), (pb - 1) * (qb - 1))\\n  END FUNCTION CellBasis_Quadrangle\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction CellBasis_Quadrangle_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(CellBasis_Quadrangle_createMdxContent, {\n      ...props\n    })\n  }) : CellBasis_Quadrangle_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL2RvY3MtYXBpL1F1YWRyYW5nbGVJbnRlcnBvbGF0aW9uVXRpbGl0eS9DZWxsQmFzaXNfUXVhZHJhbmdsZS5tZCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWFzaWZlbS1kb2NzLy4vZG9jcy9kb2NzLWFwaS9RdWFkcmFuZ2xlSW50ZXJwb2xhdGlvblV0aWxpdHkvX0NlbGxCYXNpc19RdWFkcmFuZ2xlX3Rlc3RfMS5tZD80MTE1Iiwid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL2RvY3MvZG9jcy1hcGkvUXVhZHJhbmdsZUludGVycG9sYXRpb25VdGlsaXR5L0NlbGxCYXNpc19RdWFkcmFuZ2xlLm1kP2E0YTQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjb25zdCBmcm9udE1hdHRlciA9IHt9O1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUaXRsZSA9IHVuZGVmaW5lZDtcblxuXG5cbmltcG9ydCB7anN4IGFzIF9qc3h9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbXTtcbmZ1bmN0aW9uIF9jcmVhdGVNZHhDb250ZW50KHByb3BzKSB7XG4gIGNvbnN0IF9jb21wb25lbnRzID0ge1xuICAgIGNvZGU6IFwiY29kZVwiLFxuICAgIHByZTogXCJwcmVcIixcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1mb3J0cmFuXCIsXG4gICAgICBjaGlsZHJlbjogXCJwcm9ncmFtIG1haW5cXG4gIHVzZSBlYXNpZmVtYmFzZVxcbiAgdXNlIGVhc2lmZW1DbGFzc2VzXFxuICBpbXBsaWNpdCBub25lXFxuICByZWFsKGRmcCksIGFsbG9jYXRhYmxlIDo6IHhpaig6LDopLCBhdmVjKDopXFxuICBpbnRlZ2VyKGk0YikgOjogaWksIGpqLCBjbnQsIG5cXG4gIHJlYWwoZGZwKSwgYWxsb2NhdGFibGUgOjogYW5zKDosOilcXG4gIGludGVnZXIoaTRiKSA6OiBvcmRlclxcbiAgdHlwZSggVlRLUGxvdF8gKSA6OiBhcGxvdFxcbiAgY2hhcmFjdGVyKGxlbj0qKSwgcGFyYW1ldGVyIDo6IGZuYW1lPVxcXCIuL3Jlc3VsdHMvXFxcIlxcblxcbiAgbiA9IDUxXFxuICBjYWxsIHJlYWxsb2NhdGUoYXZlYywgbilcXG4gIGNhbGwgcmVhbGxvY2F0ZSh4aWosIDIsIGludCgobisxKSoobisyKS8yKSlcXG4gIGF2ZWM9IGxpbnNwYWNlKDAuMF9ERlAsIDEuMF9ERlAsIG4pXFxuICBjbnQ9MFxcbiAgZG8gaWkgPSAxLCBuXFxuICAgIGRvIGpqID0gMSwgbi1paSsxXFxuICAgICAgY250PWNudCsxXFxuICAgICAgeGlqKDEsY250KSA9IGF2ZWMoaWkpXFxuICAgICAgeGlqKDIsY250KSA9IGF2ZWMoamopXFxuICAgIGVuZCBkb1xcbiAgZW5kIGRvXFxuXFxuICBvcmRlcj01XFxuICBhbnMgPSBDZWxsQmFzaXNfVHJpYW5nbGUob3JkZXI9b3JkZXIsIHhpaj14aWosIHJlZlRyaWFuZ2xlPVxcXCJVTklUXFxcIilcXG4gIGRvIGlpICA9IDEsIHNpemUoYW5zLDIpXFxuICAgIGNhbGwgYXBsb3Qlc2NhdHRlcjNEKHg9eGlqKDEsOiksIHk9eGlqKDIsIDopLCB6PWFucyg6LGlpKSwgJlxcbiAgICAgICYgZmlsZW5hbWU9Zm5hbWUvL1xcXCJDZWxsQmFzaXMoIG9yZGVyPVxcXCIgLy8gdG9zdHJpbmcob3JkZXIpIC8vICZcXG4gICAgICAgICYgXFxcIiApXFxcIiAvLyB0b3N0cmluZyhpaSkgLy8gJlxcbiAgICAgICAgJiBcXFwiLnZ0cFxcXCIsICZcXG4gICAgICAmIGxhYmVsPVxcXCJQXFxcIilcXG4gIGVuZCBkb1xcbmVuZCBwcm9ncmFtIG1haW5cXG5cIlxuICAgIH0pXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiIsIlxuXG5leHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7fTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSAnQ2VsbEJhc2lzJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtZXRhZGF0YX0gZnJvbSAnQHNpdGUvLmRvY3VzYXVydXMvZG9jdXNhdXJ1cy1wbHVnaW4tY29udGVudC1kb2NzL2RvY3MtYXBpL3NpdGUtZG9jcy1kb2NzLWFwaS1xdWFkcmFuZ2xlLWludGVycG9sYXRpb24tdXRpbGl0eS1jZWxsLWJhc2lzLXF1YWRyYW5nbGUtbWQtZjNmLmpzb24nXG5leHBvcnQgY29uc3QgYXNzZXRzID0ge1xuXG59O1xuXG5pbXBvcnQge0ZyYWdtZW50IGFzIF9GcmFnbWVudCwganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHN9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmltcG9ydCBUYWJzIGZyb20gJ0B0aGVtZS9UYWJzJztcbmltcG9ydCBUYWJJdGVtIGZyb20gJ0B0aGVtZS9UYWJJdGVtJztcbmltcG9ydCBFWEFNUExFMzYsIHt0b2MgYXMgX190b2NFWEFNUExFMzZ9IGZyb20gXCIuL19DZWxsQmFzaXNfUXVhZHJhbmdsZV90ZXN0XzEubWRcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbe1xuICBcInZhbHVlXCI6IFwiSW50ZXJmYWNlXCIsXG4gIFwiaWRcIjogXCJpbnRlcmZhY2VcIixcbiAgXCJsZXZlbFwiOiAyXG59LCAuLi5fX3RvY0VYQU1QTEUzNl07XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBjb2RlOiBcImNvZGVcIixcbiAgICBoMTogXCJoMVwiLFxuICAgIGgyOiBcImgyXCIsXG4gICAgaGVhZGVyOiBcImhlYWRlclwiLFxuICAgIHA6IFwicFwiLFxuICAgIHByZTogXCJwcmVcIixcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBfanN4cyhfRnJhZ21lbnQsIHtcbiAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuaGVhZGVyLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5oMSwge1xuICAgICAgICBpZDogXCJjZWxsYmFzaXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiQ2VsbEJhc2lzXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiRXZhbHVhdGUgYmFzaXMgZnVuY3Rpb25zIGluIHRoZSBjZWxsLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImludGVyZmFjZVwiLFxuICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlXCJcbiAgICB9KSwgXCJcXG5cIiwgXCJcXG5cIiwgX2pzeHMoVGFicywge1xuICAgICAgY2hpbGRyZW46IFtfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiaW50ZXJmYWNlXCIsXG4gICAgICAgIGxhYmVsOiBcItyAIEludGVyZmFjZVwiLFxuICAgICAgICBkZWZhdWx0OiB0cnVlLFxuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiSU5URVJGQUNFXFxuICBNT0RVTEUgUFVSRSBGVU5DVElPTiBDZWxsQmFzaXNfUXVhZHJhbmdsZShwYiwgcWIsIHgsIHkpIFJFU1VMVChhbnMpXFxuICAgIElOVEVHRVIoSTRCKSwgSU5URU5UKElOKSA6OiBwYlxcbiAgICAhISBvcmRlciBvbiBib3R0b20gdmVydGljYWwgZWRnZSAoZTMpLCBpdCBzaG91bGQgYmUgZ3JlYXRlciB0aGFuIDFcXG4gICAgSU5URUdFUihJNEIpLCBJTlRFTlQoSU4pIDo6IHFiXFxuICAgICEhIG9yZGVyIG9uIHRvcCB2ZXJ0aWNhbCBlZGdlKGU0KSwgaXQgc2hvdWxkIGJlIGdyZWF0ZXIgdGhhbiAxXFxuICAgIFJFQUwoREZQKSwgSU5URU5UKElOKSA6OiB4KDopLCB5KDopXFxuICAgICEhIHBvaW50IG9mIGV2YWx1YXRpb25cXG4gICAgUkVBTChERlApIDo6IGFucyhTSVpFKHgpLCAocGIgLSAxKSAqIChxYiAtIDEpKVxcbiAgRU5EIEZVTkNUSU9OIENlbGxCYXNpc19RdWFkcmFuZ2xlXFxuRU5EIElOVEVSRkFDRVxcblwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH0pLCBfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiZXhhbXBsZVwiLFxuICAgICAgICBsYWJlbDogXCLvuI/cgCBTZWUgZXhhbXBsZVwiLFxuICAgICAgICBjaGlsZHJlbjogX2pzeChFWEFNUExFMzYsIHt9KVxuICAgICAgfSksIF9qc3goVGFiSXRlbSwge1xuICAgICAgICB2YWx1ZTogXCJjbG9zZVwiLFxuICAgICAgICBsYWJlbDogXCLihqIgXCJcbiAgICAgIH0pXVxuICAgIH0pXVxuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQocHJvcHMgPSB7fSkge1xuICBjb25zdCB7d3JhcHBlcjogTURYTGF5b3V0fSA9IHtcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBNRFhMYXlvdXQgPyBfanN4KE1EWExheW91dCwge1xuICAgIC4uLnByb3BzLFxuICAgIGNoaWxkcmVuOiBfanN4KF9jcmVhdGVNZHhDb250ZW50LCB7XG4gICAgICAuLi5wcm9wc1xuICAgIH0pXG4gIH0pIDogX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpO1xufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./docs/docs-api/QuadrangleInterpolationUtility/CellBasis_Quadrangle.md\n");

/***/ })

}]);