"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-rank-2-tensor-rank-2-tensor-667-05f"],{

/***/ "./docs/docs-api/Rank2Tensor/Rank2Tensor_.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_rank_2_tensor_rank_2_tensor_md_667_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-rank-2-tensor-rank-2-tensor-md-667.json\nconst site_docs_docs_api_rank_2_tensor_rank_2_tensor_md_667_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"Rank2Tensor/Rank2Tensor_\",\"title\":\"Structure\",\"description\":\"Notice\",\"source\":\"@site/docs/docs-api/Rank2Tensor/Rank2Tensor_.md\",\"sourceDirName\":\"Rank2Tensor\",\"slug\":\"/Rank2Tensor/Rank2Tensor_\",\"permalink\":\"/docs-api/Rank2Tensor/Rank2Tensor_\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/Rank2Tensor/Rank2Tensor_.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Rank2Tensor\",\"permalink\":\"/docs-api/Rank2Tensor/\"},\"next\":{\"title\":\"Raylib\",\"permalink\":\"/docs-api/Raylib/\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/Rank2Tensor/Rank2Tensor_.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'Structure';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Notice\",\n  \"id\": \"notice\",\n  \"level\": 2\n}, {\n  \"value\": \"ToDO\",\n  \"id\": \"todo\",\n  \"level\": 2\n}, {\n  \"value\": \"Structure\",\n  \"id\": \"structure-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Description\",\n  \"id\": \"description\",\n  \"level\": 2\n}, {\n  \"value\": \"Getting Started\",\n  \"id\": \"getting-started\",\n  \"level\": 2\n}, {\n  \"value\": \"Initiating the <code>Tensor_</code> object\",\n  \"id\": \"initiating-the-tensor_-object\",\n  \"level\": 3\n}, {\n  \"value\": \"Checking the status and deallocating the data\",\n  \"id\": \"checking-the-status-and-deallocating-the-data\",\n  \"level\": 3\n}, {\n  \"value\": \"Setting and getting the NSD\",\n  \"id\": \"setting-and-getting-the-nsd\",\n  \"level\": 3\n}, {\n  \"value\": \"Getting the tensor\",\n  \"id\": \"getting-the-tensor\",\n  \"level\": 3\n}, {\n  \"value\": \"Logical Functions for Tensor\",\n  \"id\": \"logical-functions-for-tensor\",\n  \"level\": 3\n}, {\n  \"value\": \"Invariants\",\n  \"id\": \"invariants\",\n  \"level\": 3\n}, {\n  \"value\": \"Tensor Decomposition\",\n  \"id\": \"tensor-decomposition\",\n  \"level\": 3\n}, {\n  \"value\": \"Pull-Back operation\",\n  \"id\": \"pull-back-operation\",\n  \"level\": 3\n}, {\n  \"value\": \"Push-Forward operation\",\n  \"id\": \"push-forward-operation\",\n  \"level\": 3\n}, {\n  \"value\": \"Spectral Decomposition of tensor\",\n  \"id\": \"spectral-decomposition-of-tensor\",\n  \"level\": 2\n}, {\n  \"value\": \"Polar Decomposition\",\n  \"id\": \"polar-decomposition\",\n  \"level\": 3\n}, {\n  \"value\": \"Vector Operations\",\n  \"id\": \"vector-operations\",\n  \"level\": 3\n}, {\n  \"value\": \"Operator Overloading\",\n  \"id\": \"operator-overloading\",\n  \"level\": 3\n}, {\n  \"value\": \"Construction Methods\",\n  \"id\": \"construction-methods\",\n  \"level\": 2\n}, {\n  \"value\": \"Initiate()\",\n  \"id\": \"initiate\",\n  \"level\": 3\n}, {\n  \"value\": \"Tensor_Pointer( )\",\n  \"id\": \"tensor_pointer-\",\n  \"level\": 3\n}, {\n  \"value\": \"Rank2Tensor( )\",\n  \"id\": \"rank2tensor-\",\n  \"level\": 3\n}, {\n  \"value\": \"getNSD( )\",\n  \"id\": \"getnsd-\",\n  \"level\": 3\n}, {\n  \"value\": \"getTensor\",\n  \"id\": \"gettensor\",\n  \"level\": 3\n}, {\n  \"value\": \"Operator Overloading ( * )\",\n  \"id\": \"operator-overloading---\",\n  \"level\": 2\n}, {\n  \"value\": \"MatMul\",\n  \"id\": \"matmul\",\n  \"level\": 3\n}, {\n  \"value\": \"Dyadic Product/Otimes\",\n  \"id\": \"dyadic-productotimes\",\n  \"level\": 3\n}, {\n  \"value\": \"Transpose\",\n  \"id\": \"transpose\",\n  \"level\": 3\n}, {\n  \"value\": \"Addition\",\n  \"id\": \"addition\",\n  \"level\": 3\n}, {\n  \"value\": \"Subtraction\",\n  \"id\": \"subtraction\",\n  \"level\": 3\n}, {\n  \"value\": \"Vector Methods\",\n  \"id\": \"vector-methods\",\n  \"level\": 2\n}, {\n  \"value\": \"VectorProduct\",\n  \"id\": \"vectorproduct\",\n  \"level\": 3\n}, {\n  \"value\": \"BoxProduct\",\n  \"id\": \"boxproduct\",\n  \"level\": 3\n}, {\n  \"value\": \"getAngle\",\n  \"id\": \"getangle\",\n  \"level\": 3\n}, {\n  \"value\": \"getProjection\",\n  \"id\": \"getprojection\",\n  \"level\": 3\n}, {\n  \"value\": \"UnitVector\",\n  \"id\": \"unitvector\",\n  \"level\": 3\n}, {\n  \"value\": \"DotProduct\",\n  \"id\": \"dotproduct\",\n  \"level\": 3\n}, {\n  \"value\": \"getNormalComponent\",\n  \"id\": \"getnormalcomponent\",\n  \"level\": 3\n}, {\n  \"value\": \"getParallelComponent\",\n  \"id\": \"getparallelcomponent\",\n  \"level\": 3\n}, {\n  \"value\": \"Vector3D\",\n  \"id\": \"vector3d\",\n  \"level\": 3\n}, {\n  \"value\": \"Vector2D\",\n  \"id\": \"vector2d\",\n  \"level\": 3\n}, {\n  \"value\": \"Vector1D\",\n  \"id\": \"vector1d\",\n  \"level\": 3\n}, {\n  \"value\": \"Tensor Decomposition\",\n  \"id\": \"tensor-decomposition-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Symmetric Part\",\n  \"id\": \"symmetric-part\",\n  \"level\": 3\n}, {\n  \"value\": \"Symmetric Part\",\n  \"id\": \"symmetric-part-1\",\n  \"level\": 3\n}, {\n  \"value\": \"AntiSymmetric Part\",\n  \"id\": \"antisymmetric-part\",\n  \"level\": 3\n}, {\n  \"value\": \"Hydrostatic Part\",\n  \"id\": \"hydrostatic-part\",\n  \"level\": 3\n}, {\n  \"value\": \"Deviatoric Part\",\n  \"id\": \"deviatoric-part\",\n  \"level\": 3\n}, {\n  \"value\": \"Invariants\",\n  \"id\": \"invariants-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Trace\",\n  \"id\": \"trace\",\n  \"level\": 3\n}, {\n  \"value\": \"Double_DotProduct\",\n  \"id\": \"double_dotproduct\",\n  \"level\": 3\n}, {\n  \"value\": \"Invariant I1\",\n  \"id\": \"invariant-i1\",\n  \"level\": 3\n}, {\n  \"value\": \"Invariant I2\",\n  \"id\": \"invariant-i2\",\n  \"level\": 3\n}, {\n  \"value\": \"Invariant I3\",\n  \"id\": \"invariant-i3\",\n  \"level\": 3\n}, {\n  \"value\": \"Invariant J2\",\n  \"id\": \"invariant-j2\",\n  \"level\": 3\n}, {\n  \"value\": \"Invariant J3\",\n  \"id\": \"invariant-j3\",\n  \"level\": 3\n}, {\n  \"value\": \"LodeAngle\",\n  \"id\": \"lodeangle\",\n  \"level\": 3\n}, {\n  \"value\": \"PullBack\",\n  \"id\": \"pullback\",\n  \"level\": 2\n}, {\n  \"value\": \"PushForward\",\n  \"id\": \"pushforward\",\n  \"level\": 2\n}, {\n  \"value\": \"Spectral Decomposition\",\n  \"id\": \"spectral-decomposition\",\n  \"level\": 2\n}, {\n  \"value\": \"Eigens\",\n  \"id\": \"eigens\",\n  \"level\": 3\n}, {\n  \"value\": \"Principal Value\",\n  \"id\": \"principal-value\",\n  \"level\": 3\n}, {\n  \"value\": \"Spectral Radius\",\n  \"id\": \"spectral-radius\",\n  \"level\": 3\n}, {\n  \"value\": \"Polar Decomposition\",\n  \"id\": \"polar-decomposition-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Rotation Part\",\n  \"id\": \"rotation-part\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    annotation: \"annotation\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    li: \"li\",\n    math: \"math\",\n    mfrac: \"mfrac\",\n    mi: \"mi\",\n    mn: \"mn\",\n    mo: \"mo\",\n    mrow: \"mrow\",\n    msub: \"msub\",\n    msup: \"msup\",\n    p: \"p\",\n    pre: \"pre\",\n    semantics: \"semantics\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"structure\",\n        children: \"Structure\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"notice\",\n      children: \"Notice\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"On 13-July-2018, when I tried to compile this module using ifort then there was an error related to .matmul. I think it is due to the fact that this operator was defined as an method as well as the module generic operator. So I have removed it as a method, and i have kept it only as module generic operator.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"todo\",\n      children: \"ToDO\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"-Extend to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"VelocityGradient_\"\n      }), \"\\n-Extend to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"RightCauchyGreen_\"\n      }), \"\\n-Extend to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"LeftCauchyGreen_\"\n      }), \"\\n-Extend to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"StrainRate_\"\n      }), \"\\n-Extend to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SpinTensor_\"\n      }), \"\\n-Extend to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"ContinuumSpin_\"\n      }), \"\\n-Extend to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"MaterialJacobian_\"\n      }), \" a Rank-4 tensor but in Voigt form\\n-Add methods for getting derivative of invariants and Tensor.\\n-Add methods for Convective Rates\\n-Add methods so that T = Mat2\\n-Add EigenProjection methods.\\n-Add robust tensor-exponentatial function.\\n-Add method for getting the isochoric and volumetric part\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"structure-1\",\n      children: \"Structure\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE, PUBLIC :: Tensor_\\n   REAL( DFP ), ALLOCATABLE, DIMENSION( :, : ) :: T\\n   INTEGER( I4B ) :: NSD\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"description\",\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"NSD\"\n      }), \" stands for number of spatial dimension. Rank2Tensor \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"T\"\n      }), \" is always (3,3), but NSD helps us to identify which components are meaningful.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"getting-started\",\n      children: \"Getting Started\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.h3, {\n      id: \"initiating-the-tensor_-object\",\n      children: [\"Initiating the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Tensor_\"\n      }), \" object\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The subroutine \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Initiate()\"\n      }), \" can be used to create the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Tensor_\"\n      }), \" class.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Initiate( )\\nCALL obj%Initiate( Mat2( :, : ) )\\nCALL obj%Initiate( Scalar )\\nCALL obj%Initiate( VoigtVec, VoigtType )\\nCALL obj%Initiate( obj2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"In addition we can use the function \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor()\"\n      }), \" which returns the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor_\"\n      }), \" type.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj = Rank2Tensor( )\\nobj = Rank2Tensor( Mat2 )\\nobj = Rank2Tensor( Scalar )\\nobj = Rank2Tensor( VoigtVec, VoigtType )\\nobj = Rank2Tensor( obj2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We have also defined function \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor_Pointer()\"\n      }), \" that returns the pointer to the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor_\"\n      }), \" pointer.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj => Rank2Tensor_Pointer( )\\nobj => Rank2Tensor_Pointer( Mat2 )\\nobj => Rank2Tensor_Pointer( Scalar )\\nobj => Rank2Tensor_Pointer( VoigtVec, VoigtType )\\nobj => Rank2Tensor_Pointer( obj2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can also use \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Assignment Operator( = )\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj = Mat2( :, : )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Initiate( )\\nobj = Rank2Tensor( )\\nobj => Rank2Tensor_Pointer( )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The above call will create the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Tensor_\"\n      }), \" object with all zero entries and NSD = 3.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Initiate( Mat2 )\\nobj = Rank2Tensor( Mat2 )\\nobj => Rank2Tensor_Pointer( Mat2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The above call will create the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Tensor_\"\n      }), \" object. Depending upon the size of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Mat2(:,:)\"\n      }), \" NSD is decided.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Initiate( Scalar )\\nobj = Rank2Tensor( Scalar )\\nobj => Rank2Tensor_Pointer( Scalar )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The above call will fill all entries with the scalar, and \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"NSD\"\n      }), \" will be set to 3.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Initiate( VoigtVec, VoigtType )\\nobj = Rank2Tensor( VoigtVec, VoigtType )\\nobj => Rank2Tensor_Pointer( VoigtVec, VoigtType )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The above call will make tensor object from the voigt vector. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"VoigtType\"\n      }), \" can be \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Stress\"\n      }), \" or \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Strain\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Initiate( obj2 )\\nobj = Rank2Tensor( obj2 )\\nobj => Rank2Tensor_Pointer( obj2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The above call will make tensor object from other tensor object.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"checking-the-status-and-deallocating-the-data\",\n      children: \"Checking the status and deallocating the data\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%isInitiated( )\\nCALL obj%Deallocate( )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setting-and-getting-the-nsd\",\n      children: \"Setting and getting the NSD\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"NSD = obj%getNSD( )\\nNSD = .NSD. obj\\nCALL obj%setNSD( NSD )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getting-the-tensor\",\n      children: \"Getting the tensor\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can get the Tensor in a matrix as well as voigt vector. To get tensor in voigt vector we need to call \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"getTensor()\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%getTensor( Mat )\\nCALL obj%getTensor( VoigtVec, VoigtType )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Both \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Mat\"\n      }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"VoigtVec\"\n      }), \" must be allocatable as they are reallocated by the method.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"We can use assignment operator.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Mat = obj\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"logical-functions-for-tensor\",\n      children: \"Logical Functions for Tensor\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We have defined the function \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"isSymmetric()\"\n      }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"isDeviatoric()\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"L = isSymmetric( obj )\\nL = isSymmetric( Mat2 )\\nL = isDeviatoric( obj )\\nL = isDeviatoric( Mat2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"invariants\",\n      children: \"Invariants\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Trace Of Tensor or Matrix\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"t = Trace( obj )\\nt = Trace( Mat )\\nt = .Trace. obj\\nt = .Trace. Mat\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Contraction of Tensors\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"s = DoubleDot_Product( obj, obj2 )\\ns = DoubleDot_Product( obj, Mat )\\ns = DoubleDot_Product( obj, VoigtVec, VoigtType )\\ns = DoubleDot_Product( A, B )\\ns = DoubleDot_Product( A, VoigtType_A, B, VoigtType_B )\\ns = DoubleDot_Product( Mat, VoigtVec, VoigtType )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We also defined the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"DoubleDot\"\n      }), \" operator. This operator works only on matrices and Rank2Tensor_ objects.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"s = obj .doubledot. obj\\ns = obj .doubledot. mat\\ns = mat .doubledot. obj\\ns = mat .doubledot. mat\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Invariant_I1\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"I\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"1\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"r\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"a\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"c\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"e\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"I_1 = Trace( T )\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8333em\",\n                verticalAlign: \"-0.15em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.07847em\"\n                },\n                children: \"I\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3011em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.0785em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"1\"\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"ce\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"I1 = Invarinant_I1( obj )\\nI1 = Invarinant_I1( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Invariant_I2\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        children: \"I2 = 0.5( ( Tr( T )**2 - Tr( T*T ) ) )\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"I2 = Invarinant_I2( obj )\\nI2 = Invarinant_I2( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Invariant_I3\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        children: \"I3 = det( Tensor )\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"I3 = Invarinant_I3( obj )\\nI3 = Invarinant_I3( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Invariant_J2\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        children: \"I2 = 0.5 * Dev( T ): Dev( T )\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"J2 = Invarinant_J2( obj )\\nJ2 = Invarinant_J2( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Invariant_J3\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        children: \"J3 = det( Dev( T ) )\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"J3 = Invarinant_J3( obj )\\nJ3 = Invarinant_J3( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"LodeAngle\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"theta = LodeAngle( J2, J3, LodeAngleType )\\ntheta = LodeAngle( obj, LodeAngleType )\\ntheta = LodeAngle( Mat, LodeAngleType )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"LodeAngleType\"\n      }), \" can be \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Sine\"\n      }), \" or \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Cosine\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"tensor-decomposition\",\n      children: \"Tensor Decomposition\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Getting Symmetric and Skew Symmetric Part\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = SymmetricPart( obj )\\nDummy = SymmetricPart( Mat )\\nDummy = AntiSymmetricPart( obj )\\nDummy = AntiSymmetricPart( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can also use the operator \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \".Sym.\"\n      }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \".Anti.\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = .Sym. obj\\nDummy = .Sym. Mat\\nDummy = .Anti. obj\\nDummy = .Anti. Mat\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"getting the Hydrostatic Part\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Trace( T ) / 3\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = HydrostaticPart( obj )\\nDummy = HydrostaticPart( Mat )\\nDummy = SphericalPart( obj )\\nDummy = Spherical( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can also use \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \".Hydro.\"\n      }), \" operator.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = .Hydro. obj\\nDummy = .Hydro. Mat\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Getting the Deviatoric Part\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = DeviatoricPart( obj )\\nDummy = DeviatoricPart( Mat )\\nDummy = .Dev.( obj )\\nDummy = .Dev.( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"pull-back-operation\",\n      children: \"Pull-Back operation\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = Pullback( T, F, indx1, indx2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"T\"\n      }), \" can be a \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor_\"\n      }), \" object or Matrix of (3,3) shape. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"F\"\n      }), \" can be a \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor_\"\n      }), \" or Matrix of (3,3) shape. Indx1, and Indx2 should be \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Contra\"\n      }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"CoVar\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can also use \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Pullback\"\n      }), \" of vector using the same functions.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = Pullback( Vec, F, indx1 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"F\"\n      }), \" can be a \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor_\"\n      }), \" object or Matrix of (3,3) shape.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"push-forward-operation\",\n      children: \"Push-Forward operation\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = PushForward( T, F, indx1, indx2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"T\"\n      }), \" can be a \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor_\"\n      }), \" object or Matrix of (3,3) shape. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"F\"\n      }), \" can be a \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor_\"\n      }), \" or Matrix of (3,3) shape. Indx1, and Indx2 should be \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Contra\"\n      }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"CoVar\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can also use \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Pullback\"\n      }), \" of vector using the same functions.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = PushForward( Vec, F, indx1 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"F\"\n      }), \" can be a \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Rank2Tensor_\"\n      }), \" object or Matrix of (3,3) shape.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"spectral-decomposition-of-tensor\",\n      children: \"Spectral Decomposition of tensor\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Getting the EigenValues and EigenVectors\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We have defined the routine called \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Tensor_Eigens\"\n      }), \" for getting the eigen values and eigen-vectors.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Tensor_Eigens( Mat, EigenValues, EigenVectors )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"EigenValues can be Rank-2 or Rank-1 fortran array. If Rank-1 then only real parts of eigen-values will be returned.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Getting the PrincipalValue\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Principal values is defined by the maximum eigen value.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"dummy = Tensor_PrincipalValue( obj )\\ndummy = Tensor_PrincipalValue( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Getting the SpectralRadius\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"dummy = Tensor_SpectralRadius( obj )\\ndummy = Tensor_SpectralRadius( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"polar-decomposition\",\n      children: \"Polar Decomposition\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL PolarDecomposition( Mat, R, H, PDType )\\nCALL PolarDecomposition( obj, R, H, PDType )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"R = RotationPart( Mat )\\nR = RotationPart( obj )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"vector-operations\",\n      children: \"Vector Operations\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"VectorProduct\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We have defined \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"VectorProduct()\"\n      }), \" function for computing the cross product( also known as vector product ), It returns a length 3 vector. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"VectorProduct(u,v)\"\n      }), \" is \", (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"u\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"×\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"u \\\\times v\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6667em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"u\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"×\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            })]\n          })]\n        })]\n      }), \". \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"VectorProduct(u,v,w)\"\n      }), \" is equivalent to \", (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"u\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"×\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"×\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"w\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"u \\\\times ( v \\\\times w )\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6667em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"u\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"×\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"×\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02691em\"\n              },\n              children: \"w\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Vec = VectorProduct( u, v )\\nVec = u .X. v\\nVec = VectorProduct( u, v, w )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"BoxProduct\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"BoxProduct(u,v,w)\"\n      }), \" is equivalent to \", (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"[\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"u\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  separator: \"true\",\n                  children: \",\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  separator: \"true\",\n                  children: \",\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"w\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"]\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"u\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"⋅\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"×\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"w\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"[u,v,w] = u \\\\cdot ( v \\\\times w )\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"[\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"u\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mpunct\",\n              children: \",\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mpunct\",\n              children: \",\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02691em\"\n              },\n              children: \"w\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \"]\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4445em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"u\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"⋅\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"×\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02691em\"\n              },\n              children: \"w\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Dummy = BoxProduct( u, v, w)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"getAngle\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the angle (in radians) betrween two vectors\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"theta = getAngle( u, v )\\ntheta = u .Angle. v\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"getProjection\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"getProjection(u,v)\"\n      }), \" project vector u on v and returns the projection vector in the direction of v.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"P = u .ProjectOn. v\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"UnitVector\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the unit vector\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"uhat = UnitVector( u )\\nuhat = .UnitVector. u\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Dot Product\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"s =  DOT_PRODUCT( u, v )\\ns = u .dot. v\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Normal and Parallel components\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"We have defined two operators to decompose a vector in the direction along and perpendicular to some vector.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"p = u .ComponentParallelTo. v\\nn = u .ComponentNormalTo. v\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Vector2D\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"Vector2D\"\n      }), \" converts any vector in two 2D vector format.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Vector3D\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"vector3D\"\n      }), \" converts any vector in 3D vector format.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Vector1D\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"vector1D\"\n      }), \" converts any vector in 1D vector format.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"operator-overloading\",\n      children: \"Operator Overloading\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.strong, {\n        children: \"Contraction\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj .Contraction. MaterialJacobianobj\\nMaterialJaconbianobj .Contraction. obj\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"construction-methods\",\n      children: \"Construction Methods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%initiate( )\\nCALL obj%Initiate( Mat )\\nCALL obj%Initiate( Scalar )\\nCALL obj%Initiate( VoigtVec, VoigtType )\\nCALL obj%Initiate( obj2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj => Tensor_Pointer( )\\nobj => Tensor_Pointer( Mat )\\nobj => Tensor_Pointer( Scalar )\\nobj => Tensor_Pointer( VoigtVec, VoigtType )\\nobj => Tensor_Pointer( obj2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj = Rank2Tensor( )\\nobj = Rank2Tensor( Mat )\\nobj = Rank2Tensor( Scalar )\\nobj = Rank2Tensor( VoigtVec, VoigtType )\\nobj = Rank2Tensor( obj2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"initiate\",\n      children: \"Initiate()\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"SUBROUTINE Initiate1( obj )\\n   CLASS( Tensor_ ), INTENT( INOUT ) :: obj\\n   IF( ALLOCATED( obj%T ) ) DEALLOCATE( obj%T )\\n   ALLOCATE( obj%T( 3, 3 ) )\\n   obj%NSD = 3\\n   obj%T = 0.0_DFP\\nEND SUBROUTINE Initiate1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"See the above code.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"SUBROUTINE Initiate2( obj, A )\\n   CLASS( Tensor_ ), INTENT( INOUT ) :: obj\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: A\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Here \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"A\"\n      }), \" should be a square matrix of the size in the list \", (1, 2, 3), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" SUBROUTINE Initiate3( obj, A )\\n    CLASS( Tensor_ ), INTENT( INOUT ) :: obj\\n    REAL( DFP ), INTENT( IN ) :: A\\n\\n    IF( ALLOCATED( obj%T ) ) DEALLOCATE( obj%T )\\n    ALLOCATE( obj%T( 3, 3 ) )\\n    obj%T = A\\n END SUBROUTINE Initiate3\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"See the code above\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"SUBROUTINE Initiate4( obj, A, VoigtType )\\n   USE Voigt\\n   CLASS( Tensor_ ), INTENT( INOUT ) :: obj\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: A\\n   CHARACTER( LEN = * ), INTENT( IN ) :: VoigtType\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Coverts a Voigt vector into a tensor.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-5\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"SUBROUTINE Initiate5( obj, obj2 )\\n   CLASS( Tensor_ ), INTENT( INOUT ) :: obj\\n   CLASS( Tensor_ ), INTENT( IN ) :: obj2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Coverts a Voigt vector into a tensor.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"tensor_pointer-\",\n      children: \"Tensor_Pointer( )\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Constructor1( )\\n    CLASS( Tensor_ ), POINTER :: Constructor1\\n\\n    ALLOCATE( Tensor_ :: Constructor1 )\\n    CALL Constructor1%Initiate( )\\n END FUNCTION Constructor1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION Constructor2( A )\\n   CLASS( Tensor_ ), POINTER :: Constructor2\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: A\\n   Error_Flag = .FALSE.\\n   ALLOCATE( Tensor_ :: Constructor2 )\\n   CALL Constructor2%Initiate( A )\\nEND FUNCTION Constructor2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Constructor3( A )\\n    CLASS( Tensor_ ), POINTER :: Constructor3\\n    REAL( DFP ), INTENT( IN ) :: A\\n\\n    Error_Flag = .FALSE.\\n\\n    ALLOCATE( Tensor_ :: Constructor3 )\\n    CALL Constructor3%Initiate( A )\\n END FUNCTION Constructor3\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Constructor4( A, VoigtType )\\n    USE Voigt\\n    CLASS( Tensor_ ), POINTER :: Constructor4\\n    REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: A\\n    CHARACTER( LEN = * ), INTENT( IN ) :: VoigtType\\n\\n    Error_Flag = .FALSE.\\n    ALLOCATE( Tensor_ :: Constructor4 )\\n    CALL Constructor4%Initiate( A, VoigtType )\\n END FUNCTION Constructor4\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-5\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Constructor10( obj )\\n    CLASS( Tensor_ ), POINTER :: Constructor10\\n    CLASS( Tensor_ ), INTENT( IN ) :: obj\\n\\n    ALLOCATE( Constructor10 )\\n    CALL Constructor10%Initiate( obj )\\n END FUNCTION Constructor10\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"rank2tensor-\",\n      children: \"Rank2Tensor( )\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Constructor5( )\\n    TYPE( Tensor_ ) :: Constructor5\\n\\n    CALL Constructor5%Initiate( )\\n END FUNCTION Constructor5\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Constructor6( A )\\n    TYPE( Tensor_ ) :: Constructor6\\n    REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: A\\n\\n    Error_Flag = .FALSE.\\n    CALL Constructor6%Initiate( A )\\n END FUNCTION Constructor6\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Constructor7( A )\\n    TYPE( Tensor_ ) :: Constructor7\\n    REAL( DFP ), INTENT( IN ) :: A\\n\\n    Error_Flag = .FALSE.\\n\\n    CALL Constructor7%Initiate( A )\\n END FUNCTION Constructor7\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Constructor8( A, VoigtType )\\n    USE Voigt\\n    TYPE( Tensor_ ) :: Constructor8\\n    REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: A\\n    CHARACTER( LEN = * ), INTENT( IN ) :: VoigtType\\n\\n\\n    Error_Flag = .FALSE.\\n    CALL Constructor8%Initiate( A, VoigtType )\\n\\n    CALL Check_Error( &\\n        \\\"Tensor_Class.f90>>Constructor.part>>Constructor8()\\\", &\\n        \\\"TraceBack --->  CALL Constructor8%Initiate( A, VoigtType )\\\" &\\n        )\\n END FUNCTION Constructor8\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-5\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Constructor9( obj )\\n    TYPE( Tensor_ ) :: Constructor9\\n    CLASS( Tensor_ ), INTENT( IN ) :: obj\\n\\n    CALL Constructor9%Initiate( obj )\\n END FUNCTION Constructor9\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getnsd-\",\n      children: \"getNSD( )\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTEGER( I4B ) FUNCTION getNSD( obj )\\n   CLASS( Tensor_ ), INTENT( IN ) :: obj\\n   getNSD = obj%NSD\\nEND FUNCTION getNSD\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"gettensor\",\n      children: \"getTensor\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" SUBROUTINE getTensor_1( obj, T )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n    REAL( DFP ), ALLOCATABLE, DIMENSION( :, : ), INTENT( INOUT ) :: T\\n\\n    Error_Flag = .FALSE.\\n\\n    IF( .NOT. obj%isInitiated( ) ) THEN\\n        CALL Err_Msg(                                       &\\n                      \\\"Tensor_Class.f90>>getTensor_1.part\\\",   &\\n                      \\\"getTensor_1()\\\",                        &\\n                      \\\"Tensor obj is Not Initiated\\\"         &\\n                    )\\n        Error_Flag = .TRUE.\\n        RETURN\\n\\n    END IF\\n\\n    IF( ALLOCATED( T )  ) DEALLOCATE( T )\\n    T = obj%T\\n\\nEND SUBROUTINE getTensor_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"SUBROUTINE getTensor_2( obj, Vec, VoigtType )\\n   USE Voigt\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), ALLOCATABLE, DIMENSION( : ), INTENT( INOUT ) :: Vec\\n   CHARACTER( LEN = * ), INTENT( IN ) :: VoigtType\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj%NSD\"\n      }), \" is 2 then \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Vec\"\n      }), \" has length 4. Note that \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Vec\"\n      }), \" is reallocated by the routine.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"SUBROUTINE getTensor_3( T, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), ALLOCATABLE, DIMENSION( :, : ), INTENT( OUT ) :: T\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"This subroutine is used for overloading the assignment operator. Now we can obtain the value using \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat = obj\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"operator-overloading---\",\n      children: \"Operator Overloading ( * )\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION TensorTimesScalar_1( obj, Scalar )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), INTENT( IN ) :: Scalar\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: TensorTimesScalar_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj * 2.0_DFP\"\n      }), \" returns a (3,3) matrix.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION TensorTimesScalar_2( Scalar, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), INTENT( IN ) :: Scalar\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: TensorTimesScalar_2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"2.0_DFP * obj\"\n      }), \" returns a (3,3) matrix.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION TensorTimesScalar_3( obj, Scalar )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   INTEGER( I4B ), INTENT( IN ) :: Scalar\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: TensorTimesScalar_3\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj * 2\"\n      }), \" returns a (3,3) matrix.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION TensorTimesScalar_4( Scalar, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   INTEGER( I4B ), INTENT( IN ) :: Scalar\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: TensorTimesScalar_4\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"2 * obj\"\n      }), \" returns a (3,3) matrix.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-5\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION TensorTimesTensor( obj, obj2 )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj, obj2\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: TensorTimesTensor\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj1 * obj2\"\n      }), \" perfoms element wise multiplication\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-6\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION TensorTimesVector( obj, Vec )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: Vec\\n   REAL( DFP ), DIMENSION( 3 ) :: TensorTimesVector\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj * Vec\"\n      }), \" returns array of length-3 after performing matrix vector multiplication. Symbolically, \", (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"w\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"⋅\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"w = T \\\\cdot v\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02691em\"\n              },\n              children: \"w\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"⋅\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TENSOR =\\n\\n         1.000000         1.000000         1.000000\\n         1.000000         1.000000         1.000000\\n         1.000000         1.000000         1.000000\\n\\nNSD =  3\\n\\nVec2 = T * Vec1\\n     6.0000         6.0000         6.0000\\n\\nVec2 = T * [1.d0, 2.d0, 3.d0]\\n     6.0000         6.0000         6.0000\\n\\nVec1 = T * Vec1\\n     6.0000         6.0000         6.0000\\n\\nVec2 = T * [1.d0, 2.d0]\\n     3.0000         3.0000         0.0000\\n\\nVec2 = T * [1.d0]\\n     1.0000         0.0000         0.0000\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-7\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION VectorTimesTensor( Vec, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: Vec\\n   REAL( DFP ), DIMENSION( 3 ) :: VectorTimesTensor\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"Vec * obj\"\n      }), \" returns array of length-3 after performing matrix vector multiplication. Symbolically \", (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"w\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"⋅\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"w = v \\\\cdot T\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02691em\"\n              },\n              children: \"w\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4445em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"⋅\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TENSOR =\\n\\n         1.000000         2.000000         3.000000\\n         1.000000         2.000000         3.000000\\n         1.000000         2.000000         3.000000\\n\\nNSD =  3\\n\\nVec2 = Vec1 * T\\n     6.0000         12.000         18.000\\n\\nVec2 = [1.d0, 2.d0, 3.d0] * T\\n     6.0000         12.000         18.000\\n\\nVec1 = Vec1 * T\\n     6.0000         12.000         18.000\\n\\nVec2 = [1.d0, 2.d0] * T\\n     3.0000         6.0000         0.0000\\n\\nVec2 = [1.d0] * T\\n     1.0000         0.0000         0.0000\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-8\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION TensorTimesMat( obj, Mat )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: TensorTimesMat\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-9\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION MatTimesTensor( Mat, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: MatTimesTensor\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"matmul\",\n      children: \"MatMul\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION MatMul_1( obj, obj2 )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj, obj2\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: MatMul_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION MatMul_2( obj, Mat2 )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat2\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: MatMul_2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION MatMul_3( Mat2, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat2\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: MatMul_3\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION VectorTimesTensor( Vec, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: Vec\\n   REAL( DFP ), DIMENSION( 3 ) :: VectorTimesTensor\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-5\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION TensorTimesVector( obj, Vec )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: Vec\\n   REAL( DFP ), DIMENSION( 3 ) :: TensorTimesVector\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"dyadic-productotimes\",\n      children: \"Dyadic Product/Otimes\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION Tensor_Dyadic_Tensor( obj, obj2 )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj, obj2\\n   REAL( DFP ), DIMENSION( 6, 6 ) :: Tensor_Dyadic_Tensor\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION Tensor_Dyadic_Mat( obj, Mat )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 6, 6 ) :: Tensor_Dyadic_Mat\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(\"mark\", {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION Mat_Dyadic_Tensor( Mat, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 6, 6 ) :: Mat_Dyadic_Tensor\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"Note that .Otimes. always return a (6,6) matrix. If you want to use (4,4) or (3,3) matrix then use \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat4_From_Mat6\"\n        }), \", and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat3_From_Mat6\"\n        }), \" function.\\nFor Voigt represent of rank-2 tensor dyadic product both tensor must be symmetric.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Examples\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"    CALL T%FreeThePointer( T )\\n\\n    T => Rank2Tensor_Pointer( RESHAPE( [                  &\\n                                        1.d0, 1.d0, 1.d0, &\\n                                        1.d0, 2.d0, 3.d0, &\\n                                        1.d0, 3.d0, 3.d0  &\\n                                        ],                &\\n                                        [3,3]             &\\n                                    )                     &\\n                            )\\n\\n    CALL T%Display( )\\n\\n    DummyMat = T .Otimes. T\\n\\n    CALL Display_Array( DummyMat, \\\"T .Otimes. T\\\" )\\n\\n    DummyMat = T\\n    CALL Display_Array( ( T .Otimes. DummyMat ), \\\"T .Otimes. DummyMat \\\" )\\n\\n    DummyMat = T .Otimes. DummyMat\\n    CALL Display_Array( DummyMat, \\\"DummyMat = T .Otimes. DummyMat \\\" )\\n\\n    DummyMat = T\\n    CALL Display_Array( ( DummyMat .Otimes. T ), \\\"DummyMat .Otimes. T \\\" )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Resutls\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TENSOR =\\n\\n         1.000000         1.000000         1.000000\\n         1.000000         2.000000         3.000000\\n         1.000000         3.000000         3.000000\\n\\nNSD =  3\\n\\n\\nT .Otimes. T=\\n\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n           2.000000         4.000000         6.000000         2.000000         6.000000         2.000000\\n           3.000000         6.000000         9.000000         3.000000         9.000000         3.000000\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n           3.000000         6.000000         9.000000         3.000000         9.000000         3.000000\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n\\n\\nT .Otimes. DummyMat=\\n\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n           2.000000         4.000000         6.000000         2.000000         6.000000         2.000000\\n           3.000000         6.000000         9.000000         3.000000         9.000000         3.000000\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n           3.000000         6.000000         9.000000         3.000000         9.000000         3.000000\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n\\n\\nDummyMat = T .Otimes. DummyMat=\\n\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n           2.000000         4.000000         6.000000         2.000000         6.000000         2.000000\\n           3.000000         6.000000         9.000000         3.000000         9.000000         3.000000\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n           3.000000         6.000000         9.000000         3.000000         9.000000         3.000000\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n\\nDummyMat .Otimes. T=\\n\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n           2.000000         4.000000         6.000000         2.000000         6.000000         2.000000\\n           3.000000         6.000000         9.000000         3.000000         9.000000         3.000000\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n           3.000000         6.000000         9.000000         3.000000         9.000000         3.000000\\n           1.000000         2.000000         3.000000         1.000000         3.000000         1.000000\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example of getting (4,4) array from (6,6) array\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"DummyMat = Mat4_From_Mat6( DummyMat .Otimes. T )\\nCALL Display_Array( DummyMat, \\\"DummyMat = Mat4_From_Mat6( DummyMat .Otimes. T ) \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Result\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"DummyMat = Mat4_From_Mat6( DummyMat .Otimes. T )=\\n\\n           1.000000         2.000000         1.000000         3.000000\\n           2.000000         4.000000         2.000000         6.000000\\n           1.000000         2.000000         1.000000         3.000000\\n           3.000000         6.000000         3.000000         9.000000\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"transpose\",\n      children: \"Transpose\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION Transpose_1( obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: Transpose_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n        children: \"Returns a (3,3) matrix.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"addition\",\n      children: \"Addition\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION obj_Add_obj( obj, obj2 )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj, obj2\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: obj_Add_obj\\n   obj_Add_obj = obj%T + obj2%T\\nEND FUNCTION obj_Add_obj\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Example : \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj + obj2\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION obj_Add_Mat( obj, Mat )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: obj_Add_Mat\\n   obj_Add_Mat = obj%T + Mat\\nEND FUNCTION obj_Add_Mat\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Example: \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj + Mat\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION Mat_Add_obj( Mat, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: Mat_Add_obj\\n   Mat_Add_obj = obj%T + Mat\\nEND FUNCTION Mat_Add_obj\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Example: \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Mat + obj\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"subtraction\",\n      children: \"Subtraction\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION obj_Minus_obj( obj, obj2 )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj, obj2\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: obj_Minus_obj\\n   obj_Minus_obj = obj%T - obj2%T\\nEND FUNCTION obj_Minus_obj\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Example : \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj - obj2\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION obj_Minus_Mat( obj, Mat )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: obj_Minus_Mat\\n   obj_Minus_Mat = obj%T - Mat\\nEND FUNCTION obj_Minus_Mat\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Example: \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"obj - Mat\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION Mat_Minus_obj( Mat, obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: Mat_Minus_obj\\n   Mat_Minus_obj = obj%T - Mat\\nEND FUNCTION Mat_Minus_obj\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Example: \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Mat - obj\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"vector-methods\",\n      children: \"Vector Methods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"vectorproduct\",\n      children: \"VectorProduct\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION VectorProduct2( u, v )\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: u, v\\n   REAL( DFP ), DIMENSION( 3 ) :: VectorProduct2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Computes \", (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"u\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"×\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"u \\\\times v\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6667em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"u\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"×\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION VectorProduct3( u, v, w )\\n   REAL( DFP ), DIMENSION( 3 ), INTENT( IN ) :: u, v, w\\n   REAL( DFP ), DIMENSION( 3 ) :: VectorProduct3\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Computes \", (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"u\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"×\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"×\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"w\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"u \\\\times ( v \\\\times w )\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6667em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"u\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"×\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"×\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02691em\"\n              },\n              children: \"w\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"boxproduct\",\n      children: \"BoxProduct\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION BoxProduct( u, v, w )\\n   USE Utility, ONLY: Det\\n   REAL( DFP ), DIMENSION( 3 ), INTENT( IN ) :: u, v, w\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Computes \", (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"[\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"u\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  separator: \"true\",\n                  children: \",\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  separator: \"true\",\n                  children: \",\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"w\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"]\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"u\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"⋅\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"×\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"w\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"[u,v,w] = u \\\\cdot (v \\\\times w)\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"[\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"u\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mpunct\",\n              children: \",\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mpunct\",\n              children: \",\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02691em\"\n              },\n              children: \"w\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \"]\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4445em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"u\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"⋅\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"×\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02691em\"\n              },\n              children: \"w\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"    Vec1 = [1.d0, 2.d0, 0.d0]\\n    Vec2 = [1.d0, 1.d0, 0.d0]\\n    Vec3 = Vec1 .X. Vec2\\n    CALL Display_Array( Vec3, \\\"Vec3 = Vec1 .X. Vec2 \\\")\\n    CALL Display_Array( &\\n                        VectorProduct( Vec1, Vec2, Vec3 ),  &\\n                        \\\"VectorProduct( Vec1, Vec2, Vec3 )\\\" &\\n                      )\\n\\n    CALL Display_Array(                             &\\n                        -Vec2 .x. Vec3 .x. Vec1,    &\\n                        \\\"-Vec2 .x. Vec3 .x. Vec1\\\"   &\\n                      )\\n    CALL Display_Array( [Box(Vec1, Vec2, Vec3)], \\\"Box[V1, V2, V3] \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getangle\",\n      children: \"getAngle\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-Fortran\",\n        children: \"REAL( DFP ) FUNCTION getAngle( u, v )\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: u, v\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns angle between two vectors\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"    Vec1 = [1.d0, 0.d0, 0.d0]\\n    Vec2 = [1.d0, 1.d0, 0.d0]\\n\\n    CALL Display_Array( [Vec1.Angle.Vec2], \\\"Vec1.Angle.Vec2\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getprojection\",\n      children: \"getProjection\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION getProjection( u, v )\\n   REAL( DFP ), DIMENSION( 3 ), INTENT( IN ) :: u, v\\n   REAL( DFP ), DIMENSION( 3 ) :: getProjection\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Project u on v. New Operator is defined \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"u .ProjectOn. v\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"    Vec1 = [1.d0, 0.d0, 0.d0]\\n    Vec2 = [-1.d0, 1.d0, 0.d0]\\n\\n    CALL T%FreeThePointer( T )\\n    T => Rank2Tensor_Pointer( RESHAPE( [                  &\\n                                        1.d0, 1.d0, 1.d0, &\\n                                        2.d0, 2.d0, 2.d0, &\\n                                        3.d0, 3.d0, 3.d0  &\\n                                        ],                &\\n                                        [3,3]             &\\n                                    )                     &\\n                            )\\n\\n    CALL Display_Array( T*Vec2 .ProjectOn. Vec1, \\\"T*Vec2 .ProjectOn. Vec1\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"unitvector\",\n      children: \"UnitVector\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION UnitVector( u )\\n   REAL( DFP ), DIMENSION( 3 ), INTENT( IN ) :: u\\n   REAL( DFP ), DIMENSION( 3 ) :: UnitVector\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the unit vector.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"dotproduct\",\n      children: \"DotProduct\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION DotProduct( u, v )\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: u, v\\n   REAL( DFP ) :: DotProduct\\n   DotProduct = DOT_PRODUCT( u, v )\\nEND FUNCTION DotProduct\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Returns the dot product, used for defining the operator \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"u .dot. v\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Vec1 = [1.d0, -1.d0, 0.d0]\\nVec2 = [-1.d0, 1.d0, 0.d0]\\ndp = Vec1 .dot. Vec2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getnormalcomponent\",\n      children: \"getNormalComponent\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION getNormalComponent( u, v )\\n   REAL( DFP ), DIMENSION( 3 ), INTENT( IN ) :: u, v\\n   REAL( DFP ), DIMENSION( 3 ) :: getNormalComponent\\n   getNormalComponent = u - ( u .ProjectOn. v )\\nEND FUNCTION getNormalComponent\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Returns component of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"u\"\n      }), \" that is normal to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"v\"\n      }), \". New operator is defined \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"u .ComponentNormalTo. v\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getparallelcomponent\",\n      children: \"getParallelComponent\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Alias of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"getProjection\"\n      }), \" method. it is used to define a new operator \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"u .ComponentParallelTo. v\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"    Vec1 = [1.d0, 1.d0, 1.d0]\\n    CALL Display_Array( Vec1, \\\"Vec1 \\\")\\n\\n    Vec2 = [1.d0, 0.d0, 0.d0]\\n    CALL Display_Array( Vec2, \\\"Vec2 \\\")\\n\\n    Vec3 = Vec1 .ComponentParallelTo. Vec2\\n    CALL Display_Array( Vec3, \\\"Vec3 = Vec1 .ComponentParallelTo. Vec2 \\\")\\n\\n    Vec3 = Vec1 .ComponentNormalTo. Vec2\\n    CALL Display_Array( Vec3, \\\"Vec3 = Vec1 .ComponentNormalTo. Vec2 \\\")\\n\\n    Vec3 = (Vec1 .ComponentNormalTo. Vec2) + (Vec1 .ComponentParallelTo. Vec2)\\n    CALL Display_Array( Vec3, &\\n    \\\" Vec3 = Vec1 .ComponentNormalTo. Vec2 + Vec1 .ComponentParallelTo. Vec2 \\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"vector3d\",\n      children: \"Vector3D\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION Vector3D( u )\\n    REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: u\\n    REAL( DFP ), DIMENSION( 3 ) :: Vector3D\\n\\n    Vector3D = 0.0_DFP\\n    SELECT CASE( SIZE( u ) )\\n        CASE( 1 )\\n            Vector3D( 1 ) = u( 1 )\\n        CASE( 2 )\\n            Vector3D( 1 : 2 ) = u( 1 : 2 )\\n        CASE DEFAULT\\n            Vector3D( 1: 3 ) = u( 1 : 3 )\\n    END SELECT\\n END FUNCTION Vector3D\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"vector2d\",\n      children: \"Vector2D\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION Vector2D( u )\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: u\\n   REAL( DFP ), DIMENSION( 2 ) :: Vector2D\\n   Vector2D = 0.0_DFP\\n   SELECT CASE( SIZE( U ) )\\n   CASE( 1 )\\n       Vector2D( 1 ) = U( 1 )\\n   CASE DEFAULT\\n       Vector2D( 1: 2 ) = U( 1: 2 )\\n   END SELECT\\nEND FUNCTION Vector2D\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"vector1d\",\n      children: \"Vector1D\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION Vector1D( u )\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: u\\n   REAL( DFP ), DIMENSION( 1 ) :: Vector1D\\n   Vector1D( 1 ) = u( 1 )\\nEND FUNCTION Vector1D\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n        children: \"We have made BoxProduct, VectorProduct, Box, getAngle, getProjection, UnitVector, getParallelComponent, getNormalComponent, Vector2D, Vector3D, Vector1D public. These functions can be used as vector functions.\\nIn addition we have defined the OPERATOR( .X. ), OPERATOR( .Angle. ), OPERATOR( .ProjectOn. ), OPERATOR( .dot. ), OPERATOR( .ComponentParallelTo. ), OPERATOR( .ComponentNormalTo. ).\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"tensor-decomposition-1\",\n      children: \"Tensor Decomposition\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"symmetric-part\",\n      children: \"Symmetric Part\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"symmetric-part-1\",\n      children: \"Symmetric Part\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION m_SymmetricPart( obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: m_SymmetricPart\\n   m_SymmetricPart = 0.5_DFP * ( obj%T + TRANSPOSE( obj%T ) )\\nEND FUNCTION m_SymmetricPart\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION f_SymmetricPart( Mat )\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( SIZE( Mat, 1 ), SIZE( Mat, 2 ) ) :: f_SymmetricPart\\n   f_SymmetricPart = 0.5_DFP * ( Mat + TRANSPOSE( Mat ) )\\nEND FUNCTION f_SymmetricPart\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"antisymmetric-part\",\n      children: \"AntiSymmetric Part\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION m_AntiSymmetricPart( obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: m_AntiSymmetricPart\\n   m_AntiSymmetricPart = 0.5_DFP * ( obj%T - TRANSPOSE( obj%T ) )\\nEND FUNCTION m_AntiSymmetricPart\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION f_AntiSymmetricPart( Mat )\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( SIZE( Mat, 1 ), SIZE( Mat, 2 ) ) :: &\\n                                                       f_AntiSymmetricPart\\n   f_AntiSymmetricPart = 0.5_DFP * ( Mat - TRANSPOSE( Mat ) )\\nEND FUNCTION f_AntiSymmetricPart\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"hydrostatic-part\",\n      children: \"Hydrostatic Part\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION m_HydrostaticPart( obj )\\n   USE Utility, ONLY : Eye\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: m_HydrostaticPart\\n   m_HydrostaticPart = Trace( obj ) * Eye( 3 ) / 3\\nEND FUNCTION m_HydrostaticPart\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION f_HydrostaticPart( Mat )\\n   USE Utility, ONLY : Eye\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: f_HydrostaticPart\\n   f_HydrostaticPart = Trace( Mat ) * Eye( 3 ) / 3\\nEND FUNCTION f_HydrostaticPart\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"deviatoric-part\",\n      children: \"Deviatoric Part\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION m_DeviatoricPart( obj )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n    REAL( DFP ), DIMENSION( 3, 3 ) :: m_DeviatoricPart\\n\\n    m_DeviatoricPart = obj%T - HydrostaticPart( obj )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION f_DeviatoricPart( Mat )\\n   REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: f_DeviatoricPart\\n   f_DeviatoricPart = Mat - HydrostaticPart( Mat )\\nEND FUNCTION f_DeviatoricPart\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"invariants-1\",\n      children: \"Invariants\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"trace\",\n      children: \"Trace\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"I = obj%Trace( )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the trace of Tensor object.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Module Function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"I = Trace( T )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Returns the trace of fortran array \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"T\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"double_dotproduct\",\n      children: \"Double_DotProduct\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"There is a generic method \", (0,jsx_runtime.jsx)(_components.em, {\n        children: \"Double_DotProduct\"\n      }), \" and module-function called \", (0,jsx_runtime.jsx)(_components.em, {\n        children: \"Double_DotProduct\"\n      }), \". Therefore you can use this function e.g. \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"real_val = obj%Double_DotProduct( ... )\"\n      }), \" as a method as well as a module-function \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"real_val = Double_DotProduct()\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION DoubleDot_Product1( obj, obj2 )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj, obj2\\n   DoubleDot_Product1 = SUM( obj * obj2 )\\nEND FUNCTION DoubleDot_Product1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION DoubleDot_Product2( obj, A )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: A\\n   DoubleDot_Product2 = SUM( obj * A )\\nEND FUNCTION DoubleDot_Product2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION DoubleDot_Product3( A, B )\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: A, B\\n   DoubleDot_Product3 = SUM( A * B )\\nEND FUNCTION DoubleDot_Product3\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" REAL( DFP ) FUNCTION DoubleDot_Product4( obj, A, VoigtType )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n    REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: A\\n    CHARACTER( LEN = * ), INTENT( IN ) :: VoigtType\\n\\n    TYPE( Rank2Tensor_ ) :: T\\n    T = Rank2Tensor( A, VoigtType )\\n    DoubleDot_Product4 = SUM( T*obj )\\n\\n    CALL T%Deallocate( )\\n\\n END FUNCTION DoubleDot_Product4\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-5\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" REAL( DFP ) FUNCTION DoubleDot_Product5( A, B, VoigtType )\\n    REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: A\\n    REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: B\\n    CHARACTER( LEN = * ), INTENT( IN ) :: VoigtType\\n\\n    TYPE( Rank2Tensor_ ) :: T\\n    T = Rank2Tensor( B, VoigtType )\\n    DoubleDot_Product5 = SUM( T * A )\\n    CALL T%Deallocate( )\\n END FUNCTION DoubleDot_Product5\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-6\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION DoubleDot_Product6( A, VoigtType_A, B, VoigtType_B )\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: A, B\\n   CHARACTER( LEN = * ), INTENT( IN ) :: VoigtType_A, VoigtType_B\\n   TYPE( Rank2Tensor_ ) :: T1, T2\\n   T1 = Rank2Tensor( A, VoigtType_A )\\n   T2 = Rank2Tensor( B, VoigtType_B )\\n   DoubleDot_Product6 = SUM( T1 * T2 )\\n   CALL T1%Deallocate( )\\n   CALL T2%Deallocate( )\\nEND FUNCTION DoubleDot_Product6\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We have also defined two operators called \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \".DoubleDot.\"\n      }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \".Contraction.\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Use of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \".DoubleDot.\"\n      }), \" operator.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj .DoubleDot. obj\"\n        }), \" returns scalar\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj .DoubleDot. Mat\"\n        }), \" returns scalar\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat .DoubleDot. obj\"\n        }), \" returns scalar\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat .DoubleDot. Mat\"\n        }), \" returns scalar\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Use of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \".Contraction.\"\n      }), \" operator.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj .Contraction. obj\"\n        }), \" returns scalar\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj .Contraction. Mat\"\n        }), \" returns scalar\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat .Contraction. obj\"\n        }), \" returns scalar\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat .Contraction. Mat\"\n        }), \" returns scalar\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat .Contraction. Mat\"\n        }), \" returns scalar\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat .Contraction. Vec\"\n        }), \" returns vector\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"Mat .Contraction. Vec\"\n        }), \" returns vector \", (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex\",\n          children: [(0,jsx_runtime.jsx)(_components.span, {\n            className: \"katex-mathml\",\n            children: (0,jsx_runtime.jsx)(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: (0,jsx_runtime.jsxs)(_components.semantics, {\n                children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"T\"\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    children: \"⋅\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"v\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"T \\\\cdot v\"\n                })]\n              })\n            })\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: [(0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6833em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.13889em\"\n                },\n                children: \"T\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2222em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mbin\",\n                children: \"⋅\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2222em\"\n                }\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.03588em\"\n                },\n                children: \"v\"\n              })]\n            })]\n          })]\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"Vec .Contraction. Mat\"\n        }), \" returns vector \", (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex\",\n          children: [(0,jsx_runtime.jsx)(_components.span, {\n            className: \"katex-mathml\",\n            children: (0,jsx_runtime.jsx)(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: (0,jsx_runtime.jsxs)(_components.semantics, {\n                children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                  children: [(0,jsx_runtime.jsxs)(_components.msup, {\n                    children: [(0,jsx_runtime.jsx)(_components.mi, {\n                      children: \"T\"\n                    }), (0,jsx_runtime.jsx)(_components.mi, {\n                      children: \"T\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    children: \"⋅\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"v\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"T^T \\\\cdot v\"\n                })]\n              })\n            })\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: [(0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.8413em\"\n                }\n              }), (0,jsx_runtime.jsxs)(_components.span, {\n                className: \"mord\",\n                children: [(0,jsx_runtime.jsx)(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.13889em\"\n                  },\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.span, {\n                  className: \"msupsub\",\n                  children: (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-t\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-r\",\n                      children: (0,jsx_runtime.jsx)(_components.span, {\n                        className: \"vlist\",\n                        style: {\n                          height: \"0.8413em\"\n                        },\n                        children: (0,jsx_runtime.jsxs)(_components.span, {\n                          style: {\n                            top: \"-3.063em\",\n                            marginRight: \"0.05em\"\n                          },\n                          children: [(0,jsx_runtime.jsx)(_components.span, {\n                            className: \"pstrut\",\n                            style: {\n                              height: \"2.7em\"\n                            }\n                          }), (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"sizing reset-size6 size3 mtight\",\n                            children: (0,jsx_runtime.jsx)(_components.span, {\n                              className: \"mord mathnormal mtight\",\n                              style: {\n                                marginRight: \"0.13889em\"\n                              },\n                              children: \"T\"\n                            })\n                          })]\n                        })\n                      })\n                    })\n                  })\n                })]\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2222em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mbin\",\n                children: \"⋅\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2222em\"\n                }\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.03588em\"\n                },\n                children: \"v\"\n              })]\n            })]\n          })]\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"invariant-i1\",\n      children: \"Invariant I1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"I\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"1\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"r\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"a\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"c\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"e\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"I_1 = Trace( T )\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8333em\",\n                verticalAlign: \"-0.15em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.07847em\"\n                },\n                children: \"I\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3011em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.0785em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"1\"\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"ce\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"There are methods as well as module-function for this.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj%Invariant_I1( )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Module-function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Invariant_I1( obj )\\nInvariant_I1( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"invariant-i2\",\n      children: \"Invariant I2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"I\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsxs)(_components.mfrac, {\n                  children: [(0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"1\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  fence: \"false\",\n                  stretchy: \"true\",\n                  minsize: \"1.8em\",\n                  maxsize: \"1.8em\",\n                  children: \"[\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"r\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"a\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"c\"\n                }), (0,jsx_runtime.jsxs)(_components.msup, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"e\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"−\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"r\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"a\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"c\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"e\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsxs)(_components.msup, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"T\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  fence: \"false\",\n                  stretchy: \"true\",\n                  minsize: \"1.8em\",\n                  maxsize: \"1.8em\",\n                  children: \"]\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"I_2 = \\\\frac{1}{2} \\\\Big [ Trace^2( T ) - Trace( T^2 ) \\\\Big ]\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8333em\",\n                verticalAlign: \"-0.15em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.07847em\"\n                },\n                children: \"I\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3011em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.0785em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"2\"\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mfrac\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsxs)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [(0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"mord\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord\",\n                            children: \"2\"\n                          })\n                        })]\n                      }), (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"mord\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord\",\n              children: (0,jsx_runtime.jsx)(_components.span, {\n                className: \"delimsizing size2\",\n                children: \"[\"\n              })\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"c\"\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"e\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsx)(_components.span, {\n                  className: \"vlist-t\",\n                  children: (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.8641em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-3.113em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"2\"\n                          })\n                        })]\n                      })\n                    })\n                  })\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mbin\",\n              children: \"−\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1.8em\",\n                verticalAlign: \"-0.65em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"ce\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.13889em\"\n                },\n                children: \"T\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsx)(_components.span, {\n                  className: \"vlist-t\",\n                  children: (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.8641em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-3.113em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"2\"\n                          })\n                        })]\n                      })\n                    })\n                  })\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord\",\n              children: (0,jsx_runtime.jsx)(_components.span, {\n                className: \"delimsizing size2\",\n                children: \"]\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"There are methods as well as module-function for this.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj%Invariant_I2( )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Module-function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Invariant_I2( obj )\\nInvariant_I2( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"invariant-i3\",\n      children: \"Invariant I3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"I\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"3\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"det\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"⁡\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"I_3 = \\\\det{T}\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8333em\",\n                verticalAlign: \"-0.15em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.07847em\"\n                },\n                children: \"I\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3011em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.0785em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"3\"\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6944em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mop\",\n              children: \"det\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord\",\n              children: (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.13889em\"\n                },\n                children: \"T\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"There are methods as well as module-function for this.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj%Invaria3t_I2( )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Module-function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"Invariant_I3( obj )\\nInvariant_I3( Mat )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"invariant-j2\",\n      children: \"Invariant J2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"J\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsxs)(_components.mfrac, {\n                  children: [(0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"1\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"d\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"e\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \":\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"d\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"e\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"J_2 = \\\\frac{1}{2} dev(T):dev(T)\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8333em\",\n                verticalAlign: \"-0.15em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.09618em\"\n                },\n                children: \"J\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3011em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.0962em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"2\"\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mfrac\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsxs)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [(0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"mord\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord\",\n                            children: \"2\"\n                          })\n                        })]\n                      }), (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"mord\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"d\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"d\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION  m_Invariant_J2( obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), ALLOCATABLE :: S( :, : )\\n   IF( isDeviatoric( obj ) ) THEN\\n        m_Invariant_J2 = 0.5_DFP * ( obj .Contraction. obj )\\n   ELSE\\n       S = DeviatoricPart( obj )\\n       m_Invariant_J2 = 0.5_DFP * ( S .Contraction. S )\\n   END IF\\n   IF( ALLOCATED( S ) ) DEALLOCATE( S )\\nEND FUNCTION  m_Invariant_J2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Module Function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION  f_Invariant_J2( Mat )\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n   REAL( DFP ), ALLOCATABLE :: S( :, : )\\n   IF( isDeviatoric( Mat ) ) THEN\\n        f_Invariant_J2 = 0.5_DFP * ( Mat .Contraction. Mat )\\n   ELSE\\n       S = DeviatoricPart( Mat )\\n       f_Invariant_J2 = 0.5_DFP * ( S .Contraction. S )\\n   END IF\\n   IF( ALLOCATED( S ) ) DEALLOCATE( S )\\nEND FUNCTION  f_Invariant_J2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"invariant-j3\",\n      children: \"Invariant J3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.span, {\n      className: \"katex-display\",\n      children: (0,jsx_runtime.jsxs)(_components.span, {\n        className: \"katex\",\n        children: [(0,jsx_runtime.jsx)(_components.span, {\n          className: \"katex-mathml\",\n          children: (0,jsx_runtime.jsx)(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: (0,jsx_runtime.jsxs)(_components.semantics, {\n              children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                children: [(0,jsx_runtime.jsxs)(_components.msub, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"J\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"3\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"=\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"det\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  children: \"⁡\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"d\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"e\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"v\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), (0,jsx_runtime.jsx)(_components.mi, {\n                  children: \"T\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), (0,jsx_runtime.jsx)(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), (0,jsx_runtime.jsx)(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"J_3 = \\\\det( dev( T ) )\"\n              })]\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [(0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8333em\",\n                verticalAlign: \"-0.15em\"\n              }\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"mord\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.09618em\"\n                },\n                children: \"J\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"msupsub\",\n                children: (0,jsx_runtime.jsxs)(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [(0,jsx_runtime.jsxs)(_components.span, {\n                    className: \"vlist-r\",\n                    children: [(0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3011em\"\n                      },\n                      children: (0,jsx_runtime.jsxs)(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.0962em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [(0,jsx_runtime.jsx)(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), (0,jsx_runtime.jsx)(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: (0,jsx_runtime.jsx)(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"3\"\n                          })\n                        })]\n                      })\n                    }), (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), (0,jsx_runtime.jsx)(_components.span, {\n                    className: \"vlist-r\",\n                    children: (0,jsx_runtime.jsx)(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: (0,jsx_runtime.jsx)(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"base\",\n            children: [(0,jsx_runtime.jsx)(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mop\",\n              children: \"det\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"d\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"v\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.13889em\"\n              },\n              children: \"T\"\n            }), (0,jsx_runtime.jsx)(_components.span, {\n              className: \"mclose\",\n              children: \"))\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION  m_Invariant_J3( obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), ALLOCATABLE :: S( :, : )\\n   IF( isDeviatoric( obj ) ) THEN\\n        m_Invariant_J3 = Invariant_I3( obj )\\n   ELSE\\n       S = DeviatoricPart( obj )\\n       m_Invariant_J3 =  Invariant_I3( S )\\n   END IF\\n   IF( ALLOCATED( S ) ) DEALLOCATE( S )\\nEND FUNCTION  m_Invariant_J3\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Module Function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION  f_Invariant_J3( Mat )\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n   REAL( DFP ), ALLOCATABLE :: S( :, : )\\n   IF( isDeviatoric( Mat ) ) THEN\\n        f_Invariant_J3 = Invariant_I3( Mat )\\n   ELSE\\n       S = DeviatoricPart( Mat )\\n       f_Invariant_J3 =  Invariant_I3( S )\\n   END IF\\n   IF( ALLOCATED( S ) ) DEALLOCATE( S )\\nEND FUNCTION  f_Invariant_J3\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"lodeangle\",\n      children: \"LodeAngle\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" REAL( DFP ) f_LodeAngle_1( J2, J3, LodeAngleType )\\n    REAL( DFP ), INTENT( IN ) :: J2, J3\\n    CHARACTER( LEN = * ), INTENT( IN ) :: LodeAngleType\\n    REAL( DFP ) :: Dummy\\n\\n    IF( J2 .EQ. 0.0_DFP ) THEN\\n        f_LodeAngle_1 = 0.0_DFP\\n        RETURN\\n    END IF\\n\\n    Dummy = 1.5_DFP * SQRT( 3.0_DFP ) * J3 / J2 / SQRT( J2 )\\n\\n    IF( Dummy .GE. 1.0_DFP ) Dummy = 1.0_DFP\\n    IF( Dummy .LE. -1.0_DFP ) Dummy = -1.0_DFP\\n\\n    SELECT CASE( TRIM( LodeAngleType ) )\\n        CASE( \\\"SIN\\\", \\\"SINE\\\", \\\"Sin\\\", \\\"Sine\\\", \\\"sine\\\", \\\"sin\\\" )\\n            f_LodeAngle_1 = ASIN( -Dummy ) / 3.0_DFP\\n        CASE DEFAULT\\n            f_LodeAngle_1 = ACOS( Dummy ) / 3.0_DFP\\n    END SELECT\\n END FUNCTION f_LodeAngle_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" REAL( DFP ) m_LodeAngle( obj, LodeAngleType )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n    CHARACTER( LEN = * ), INTENT( IN ) :: LodeAngleType\\n\\n    REAL( DFP ) :: J2, J3\\n    J2 = Invariant_J2( obj )\\n    J3 = Invariant_J3( obj )\\n    m_LodeAngle = f_LodeAngle_1( J2, J3, LodeAngleType )\\n END FUNCTION m_LodeAngle\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" REAL( DFP ) f_LodeAngle_2( Mat, LodeAngleType )\\n    REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n    CHARACTER( LEN = * ), INTENT( IN ) :: LodeAngleType\\n\\n    REAL( DFP ) :: J2, J3\\n    J2 = Invariant_J2( Mat )\\n    J3 = Invariant_J3( Mat )\\n    f_LodeAngle_2 = f_LodeAngle_1( J2, J3, LodeAngleType )\\n END FUNCTION f_LodeAngle_2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"pullback\",\n      children: \"PullBack\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION f_Rank2PullBack_1( T, F, indx1, indx2 )\\n   USE Utility, ONLY: det, INV\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) ::  T, F\\n   REAL( DFP ), DIMENSION( SIZE( T, 1 ), SIZE( T, 2 ) ) ::  f_Rank2PullBack_1\\n   CHARACTER( LEN = * ), INTENT( IN ) :: indx1, indx2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To be added later. See page-123 of Hashiguchi and Yamakawa, 2014.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION f_Rank2PullBack_2( T, obj, indx1, indx2 )\\n    REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) ::  T\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n    REAL( DFP ), DIMENSION( 3, 3 ) ::  f_Rank2PullBack_2\\n    CHARACTER( LEN = * ), INTENT( IN ) :: indx1, indx2\\n\\n    REAL( DFP ), ALLOCATABLE :: F( :, :)\\n\\n    F = obj\\n\\n    f_Rank2PullBack_2 = f_Rank2PullBack_1( T, F, indx1, indx2 )\\n\\n    DEALLOCATE( F )\\n\\n END FUNCTION f_Rank2PullBack_2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION m_Rank2PullBack_1( obj, F, indx1, indx2 )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n    REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) ::  F\\n    REAL( DFP ), DIMENSION( 3, 3 ) ::  m_Rank2PullBack_1\\n    CHARACTER( LEN = * ), INTENT( IN ) :: indx1, indx2\\n\\n    REAL( DFP ), ALLOCATABLE :: T( :, : )\\n    T = obj\\n    m_Rank2PullBack_1 = f_Rank2PullBack_1( T, F, indx1, indx2 )\\n END FUNCTION m_Rank2PullBack_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To be added later. See page-123 of Hashiguchi and Yamakawa, 2014.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION m_Rank2PullBack_2( obj, obj2, indx1, indx2 )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj, obj2\\n    REAL( DFP ), DIMENSION( 3, 3 ) ::  m_Rank2PullBack_2\\n    CHARACTER( LEN = * ), INTENT( IN ) :: indx1, indx2\\n\\n    REAL( DFP ), ALLOCATABLE :: T( :, : ), F\\n    T = obj\\n    F = obj2\\n    m_Rank2PullBack_2 = f_Rank2PullBack_1( T, F, indx1, indx2 )\\n END FUNCTION m_Rank2PullBack_2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To be added later. See page-123 of Hashiguchi and Yamakawa, 2014.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-5\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION f_VecPullBack_1( Vec, F, indx1 )\\n   USE Utility, ONLY: det, INV\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) ::  Vec\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) ::  F\\n   REAL( DFP ), DIMENSION( SIZE( Vec ) ) ::  f_VecPullBack_1\\n   CHARACTER( LEN = * ), INTENT( IN ) :: indx1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-6\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION f_VecPullBack_2( Vec, obj, indx1 )\\n    REAL( DFP ), DIMENSION( 3 ), INTENT( IN ) ::  Vec\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n    REAL( DFP ), DIMENSION( 3 ) ::  f_VecPullBack_2\\n    CHARACTER( LEN = * ), INTENT( IN ) :: indx1\\n\\n    REAL( DFP ), ALLOCATABLE, DIMENSION( :, : ) :: F\\n\\n    F = obj\\n    f_VecPullBack_2 = f_VecPullBack_1( Vec, F, indx1 )\\n    DEALLOCATE( F )\\n\\n END FUNCTION f_VecPullBack_2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"pushforward\",\n      children: \"PushForward\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION f_Rank2PushForward_1( T, F, indx1, indx2 )\\n   USE Utility, ONLY: det, INV\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) ::  T, F\\n   REAL( DFP ), DIMENSION( SIZE( T, 1 ), SIZE( T, 2 ) ) ::  f_Rank2PushForward_1\\n   CHARACTER( LEN = * ), INTENT( IN ) :: indx1, indx2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To be added later. See page-123 of Hashiguchi and Yamakawa, 2014.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION f_Rank2PushForward_2( T, obj, indx1, indx2 )\\n    REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) ::  T\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n    REAL( DFP ), DIMENSION( 3, 3 ) ::  f_Rank2PushForward_2\\n    CHARACTER( LEN = * ), INTENT( IN ) :: indx1, indx2\\n\\n    REAL( DFP ), ALLOCATABLE :: F( :, :)\\n\\n    F = obj\\n\\n    f_Rank2PushForward_2 = f_Rank2PushForward_1( T, F, indx1, indx2 )\\n\\n    DEALLOCATE( F )\\n\\n END FUNCTION f_Rank2PushForward_2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION m_Rank2PushForward_1( obj, F, indx1, indx2 )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n    REAL( DFP ), DIMENSION( 3, 3 ), INTENT( IN ) ::  F\\n    REAL( DFP ), DIMENSION( 3, 3 ) ::  m_Rank2PushForward_1\\n    CHARACTER( LEN = * ), INTENT( IN ) :: indx1, indx2\\n\\n    REAL( DFP ), ALLOCATABLE :: T( :, : )\\n    T = obj\\n    m_Rank2PushForward_1 = f_Rank2PushForward_1( T, F, indx1, indx2 )\\n END FUNCTION m_Rank2PushForward_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To be added later. See page-123 of Hashiguchi and Yamakawa, 2014.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION m_Rank2PushForward_2( obj, obj2, indx1, indx2 )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj, obj2\\n    REAL( DFP ), DIMENSION( 3, 3 ) ::  m_Rank2PushForward_2\\n    CHARACTER( LEN = * ), INTENT( IN ) :: indx1, indx2\\n\\n    REAL( DFP ), ALLOCATABLE :: T( :, : ), F\\n    T = obj\\n    F = obj2\\n    m_Rank2PushForward_2 = f_Rank2PushForward_1( T, F, indx1, indx2 )\\n END FUNCTION m_Rank2PushForward_2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"To be added later. See page-123 of Hashiguchi and Yamakawa, 2014.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-5\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION f_VecPushForward_1( Vec, F, indx1 )\\n   USE Utility, ONLY: det, INV\\n   REAL( DFP ), DIMENSION( : ), INTENT( IN ) ::  Vec\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) ::  F\\n   REAL( DFP ), DIMENSION( SIZE( Vec ) ) ::  f_VecPushForward_1\\n   CHARACTER( LEN = * ), INTENT( IN ) :: indx1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-6\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" FUNCTION f_VecPushForward_2( Vec, obj, indx1 )\\n    REAL( DFP ), DIMENSION( 3 ), INTENT( IN ) ::  Vec\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n    REAL( DFP ), DIMENSION( 3 ) ::  f_VecPushForward_2\\n    CHARACTER( LEN = * ), INTENT( IN ) :: indx1\\n\\n    REAL( DFP ), ALLOCATABLE, DIMENSION( :, : ) :: F\\n\\n    F = obj\\n    f_VecPushForward_2 = f_VecPushForward_1( Vec, F, indx1 )\\n    DEALLOCATE( F )\\n\\n END FUNCTION f_VecPushForward_2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"spectral-decomposition\",\n      children: \"Spectral Decomposition\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"eigens\",\n      children: \"Eigens\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" SUBROUTINE f_Eigens( Mat, EigenVectors, EigenValues )\\n!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .\\n!       1.  Eigen values are computed using DGEEV( ) subroutine of\\n!           lapack libarary.\\n!       2.  EigenValues( :, 2 ) has two columns, the first column denotes\\n!           the real value of eigen value and second column denotes the\\n!           imaginary/complex value of eigenvalue. The conjugate values\\n!           are put next to each other. With positive imaginary value\\n!           put first.\\n!       3.  If j-th eigen value is imaginary then j-th and j+1 th Eigenvectors\\n!           are given by\\n!           v(j) = EigenVectors( :, j ) + i * EigenVectors( :, j +1 )\\n!           v(j+1) = EigenVectors( :, j ) - i * EigenVectors( :, j +1 )\\n!\\n!       4.  DGEEV function from lapack library has been used.\\n!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .\\n\\n    REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n    REAL( DFP ), ALLOCATABLE, INTENT( OUT ) ::  EigenValues( :, : ), &\\n                                                EigenVectors( :, : )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" SUBROUTINE m_Eigens( obj, EigenVectors, EigenValues )\\n!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .\\n!       1.  Eigen values are computed using DGEEV( ) subroutine of\\n!           lapack libarary.\\n!       2.  EigenValues( :, 2 ) has two columns, the first column denotes\\n!           the real value of eigen value and second column denotes the\\n!           imaginary/complex value of eigenvalue. The conjugate values\\n!           are put next to each other. With positive imaginary value\\n!           put first.\\n!       3.  If j-th eigen value is imaginary then j-th and j+1 th Eigenvectors\\n!           are given by\\n!           v(j) = EigenVectors( :, j ) + i * EigenVectors( :, j +1 )\\n!           v(j+1) = EigenVectors( :, j ) - i * EigenVectors( :, j +1 )\\n!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n    REAL( DFP ), ALLOCATABLE, INTENT( OUT ) ::  EigenValues( :, : ), &\\n                                                EigenVectors( :, : )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Tensor_Eigens( Mat, EigenVectors, EigenValues )\\nCALL Tensor_Eigens( obj, EigenVectors, EigenValues )\\nCALL obj%Eigens( EigenVectors, EigenValues )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"principal-value\",\n      children: \"Principal Value\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION f_PrincipalValue_1( Mat )\\n    REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n    REAL( DFP ), ALLOCATABLE :: EigenVectors( :, : ), EigenValues( :, : )\\n    CALL f_Eigens( Mat, EigenVectors, EigenValues )\\n    f_PrincipalValue_1 = MAXVAL( EigenValues( :, 1 ) )\\n    DEALLOCATE( EigenValues, EigenVectors )\\nEND FUNCTION f_PrincipalValue_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the max( Real( eigenvalue ) )\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION m_PrincipalValue_1( obj )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n    REAL( DFP ), ALLOCATABLE :: EigenVectors( :, : ), EigenValues( :, : )\\n    CALL m_Eigens( obj, EigenVectors, EigenValues )\\n    m_PrincipalValue_1 = MAXVAL( Eigenvalues( :, 1 ) )\\n    DEALLOCATE( EigenValues, EigenVectors )\\nEND FUNCTION m_PrincipalValue_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Exam\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"spectral-radius\",\n      children: \"Spectral Radius\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION f_SpectralRadius_1( Mat )\\n    REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n    REAL( DFP ), ALLOCATABLE :: EigenVectors( :, : ), EigenValues( :, : )\\n    COMPLEX( DFP ), ALLOCATABLE :: Lambda( :, : )\\n    INTEGER( I4B ) :: N\\n\\n    CALL f_Eigens( Mat, EigenVectors, EigenValues )\\n    f_SpectralRadius_1 = MAXVAL( EigenValues( :, 1 ) )\\n    N = SIZE( Eigenvalues, 1 )\\n    ALLOCATE( Lambda( N ) )\\n    Lambda( 1 : N ) = CMPLX( EigenValues( 1 : N, 1 ), EigenValues( 1 : N, 2 ) )\\n    EigenValues = MAXVAL( ABS( Lambda ) )\\n    DEALLOCATE( EigenValues, EigenVectors, Lambda )\\n\\nEND FUNCTION f_SpectralRadius_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the max( Real( eigenvalue ) )\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"REAL( DFP ) FUNCTION m_SpectralRadius_1( obj )\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n\\n    REAL( DFP ), ALLOCATABLE :: Mat( :, : )\\n    Mat = obj\\n    m_SpectralRadius_1 = f_SpectralRadius_1( Mat )\\n    DEALLOCATE( Mat )\\nEND FUNCTION m_SpectralRadius_1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the max( Real( eigenvalue ) )\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"polar-decomposition-1\",\n      children: \"Polar Decomposition\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" SUBROUTINE f_getPolarDecomp_1( Mat, R, H, PDType )\\n\\n!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .\\n!       1.  Ref: Higham and Noferini, 2015 Algorithm 3.1 for NSD = 3\\n!       2. PDType = \\\"Right\\\", \\\"U\\\", \\\"Left\\\", \\\"V\\\", \\\"RU\\\", \\\"VR\\\"\\n!  3. Mat = RU = VR, Therefore H denotes either U or V\\n!  4. RU is called \\\"Right\\\" polar decomposition and VR is called left\\n!   polar decomposition\\n!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .\\n\\n    USE LinearAlgebra, ONLY: JacobiMethod\\n    USE Utility, ONLY: IMAXLOC, INV\\n\\n ! Define intent of dummy variables\\n    REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n    REAL( DFP ), ALLOCATABLE, DIMENSION( :, : ), INTENT( OUT ) :: R\\n    REAL( DFP ), ALLOCATABLE, DIMENSION( :, : ), INTENT( OUT ) :: H\\n    CHARACTER( LEN = * ), INTENT( IN ) :: PDType\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \" SUBROUTINE m_getPolarDecomp_1( obj, R, H, PDType )\\n\\n!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .\\n!       1.  Ref: Higham and Noferini, 2015 Algorithm 3.1 for NSD = 3\\n!       2. PDType = \\\"Right\\\", \\\"U\\\", \\\"Left\\\", \\\"V\\\", \\\"RU\\\", \\\"VR\\\"\\n!  3. Mat = RU = VR, Therefore H denotes either U or V\\n!  4. RU is called \\\"Right\\\" polar decomposition and VR is called left\\n!   polar decomposition\\n!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .\\n\\n ! Define intent of dummy variables\\n    CLASS( Rank2Tensor_ ), INTENT( IN ) ::  obj\\n    REAL( DFP ), ALLOCATABLE, DIMENSION( :, : ), INTENT( OUT ) :: R\\n    REAL( DFP ), ALLOCATABLE, DIMENSION( :, : ), INTENT( OUT ) :: H\\n    CHARACTER( LEN = * ), INTENT( IN ) :: PDType\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"rotation-part\",\n      children: \"Rotation Part\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION f_getRotationPart( Mat )\\n   USE LinearAlgebra, ONLY: JacobiMethod\\n   USE Utility, ONLY: IMAXLOC, INV\\n   REAL( DFP ), DIMENSION( :, : ), INTENT( IN ) :: Mat\\n   REAL( DFP ), DIMENSION( SIZE( Mat, 1 ), SIZE( Mat, 2 ) ) :: f_getRotationPart\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Type-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"FUNCTION m_getRotationPart( obj )\\n   CLASS( Rank2Tensor_ ), INTENT( IN ) :: obj\\n   REAL( DFP ), DIMENSION( 3, 3 ) :: m_getRotationPart\\nREAL( DFP ), ALLOCATABLE :: Mat( :, : )\\nMat = obj\\nm_getRotationPart = f_getRotationPart( Mat )\\nDEALLOCATE( Mat )\\nEND FUNCTION m_getRotationPart\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/Rank2Tensor/Rank2Tensor_.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);