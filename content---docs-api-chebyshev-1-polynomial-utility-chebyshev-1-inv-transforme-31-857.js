"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-chebyshev-1-polynomial-utility-chebyshev-1-inv-transforme-31-857"],{

/***/ "./docs/docs-api/Chebyshev1PolynomialUtility/Chebyshev1InvTransform.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ Chebyshev1InvTransform_contentTitle),\n  \"default\": () => (/* binding */ Chebyshev1InvTransform_MDXContent),\n  frontMatter: () => (/* binding */ Chebyshev1InvTransform_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_chebyshev_1_polynomial_utility_chebyshev_1_inv_transform_md_e31_namespaceObject),\n  toc: () => (/* binding */ Chebyshev1InvTransform_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-chebyshev-1-polynomial-utility-chebyshev-1-inv-transform-md-e31.json\nconst site_docs_docs_api_chebyshev_1_polynomial_utility_chebyshev_1_inv_transform_md_e31_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"Chebyshev1PolynomialUtility/Chebyshev1InvTransform\",\"title\":\"Chebyshev1InvTransform\",\"description\":\"Discrete Inverse Chebyshev1 transform.\",\"source\":\"@site/docs/docs-api/Chebyshev1PolynomialUtility/Chebyshev1InvTransform.md\",\"sourceDirName\":\"Chebyshev1PolynomialUtility\",\"slug\":\"/Chebyshev1PolynomialUtility/Chebyshev1InvTransform\",\"permalink\":\"/docs-api/Chebyshev1PolynomialUtility/Chebyshev1InvTransform\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/Chebyshev1PolynomialUtility/Chebyshev1InvTransform.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Chebyshev1GradientEvalSum\",\"permalink\":\"/docs-api/Chebyshev1PolynomialUtility/Chebyshev1GradientEvalSum\"},\"next\":{\"title\":\"Chebyshev1JacobiLobattoMatrix\",\"permalink\":\"/docs-api/Chebyshev1PolynomialUtility/Chebyshev1JacobiLobattoMatrix\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/Chebyshev1PolynomialUtility/_Chebyshev1InvTransform_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    li: \"li\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"This example shows the usage of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Chebyshev1InvTransform\"\n        }), \" method.\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"This routine performs the inverse Chebyshev1 transform at a single point.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\n  use easifembase\\n  implicit none\\n  integer( i4b ) :: n\\n  real(dfp), allocatable :: uhat(:), u( : ), pt( : ), wt(:), error(:,:)\\n  real( dfp ), parameter :: tol=1.0E-10\\n  type(string) :: astr\\n  integer( i4b ), parameter :: quadType = GaussLobatto\\n  real( dfp ) :: x, ans, exact\\n  call reallocate(error, 30, 2)\\n  do n = 1, size(error,1)\\n    call reallocate( pt, n+1, wt, n+1 )\\n    call Chebyshev1Quadrature( n=n+1, pt=pt, wt=wt, quadType=quadType )\\n    u = 1.0 / (1.0 + 16.0 * pt**2)\\n    uhat = Chebyshev1Transform(n=n, coeff=u, x=pt, w=wt, quadType=quadType)\\n    x = 0.1\\n    exact = 1.0 / (1.0 + 16.0 * x**2)\\n    ans = Chebyshev1InvTransform(n=n, x=x, coeff=uhat)\\n    error(n,1) = n\\n    error(n,2) = ABS(exact-ans)\\n  end do\\n  call display(MdEncode(error), \\\"error\\\"//CHAR_LF )\\nend program main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.table, {\n      children: [(0,jsx_runtime.jsx)(_components.thead, {\n        children: (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.th, {\n            children: \"n\"\n          }), (0,jsx_runtime.jsx)(_components.th, {\n            children: \"error\"\n          })]\n        })\n      }), (0,jsx_runtime.jsxs)(_components.tbody, {\n        children: [(0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"1\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"0.80325\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"2\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"0.12852\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"3\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"0.61689\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"4\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"0.11195\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"5\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"0.3907\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"10\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"4.75496E-02\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"15\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"2.77239E-03\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"20\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"4.28428E-03\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"25\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"2.75076E-03\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: \"30\"\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"5.40866E-05\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/Chebyshev1PolynomialUtility/_Chebyshev1InvTransform_test_2.md\n\n\nconst _Chebyshev1InvTransform_test_2_frontMatter = {};\nconst _Chebyshev1InvTransform_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _Chebyshev1InvTransform_test_2_toc = [];\nfunction _Chebyshev1InvTransform_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    li: \"li\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"This example shows the usage of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Chebyshev1InvTransform\"\n        }), \" method.\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"This routine performs the inverse Chebyshev1 transform at several points.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\n  use easifembase\\n  use easifemclasses\\n  implicit none\\n  integer( i4b ) :: ii, n\\n  real(dfp), allocatable :: uhat(:), u( : ), pt( : ), wt(:), &\\n    & x(:), ans(:), exact(:)\\n  real( dfp ), parameter :: tol=1.0E-10\\n  type(string) :: astr\\n  integer( i4b ), parameter :: quadType = GaussLobatto\\n  type(PlPlot_) :: aplot\\n  character( len=* ), parameter :: fname = \\\"./results/test24\\\"\\n  CALL aplot%Initiate()\\n  CALL aplot%Set( &\\n    & device=\\\"svg\\\", &\\n    & filename=fname//\\\"-%n.svg\\\")\\n  CALL aplot%figure()\\n  x = linspace(-1.0_DFP, 1.0_DFP, 101_I4B)\\n  ii = 0\\n  do n = 5,25,5\\n    ii = ii + 1\\n    CALL aplot%subplot(5,1,ii)\\n    CALL aplot%setXYLim([-1.0_DFP, 1.0_DFP], [ -2.0_DFP, 2.0_DFP])\\n    CALL aplot%setTicks()\\n    call reallocate( pt, n+1, wt, n+1 )\\n    call Chebyshev1Quadrature( n=n+1, pt=pt, wt=wt, quadType=quadType )\\n    u = 1.0/(1.0 + 16.0 * pt**2)\\n    uhat = Chebyshev1Transform(n=n, coeff=u, x=pt, w=wt, quadType=quadType)\\n    exact = 1.0/(1.0 + 16.0 * x**2)\\n    ans = Chebyshev1InvTransform(n=n, x=x, coeff=uhat)\\n    CALL aplot%plot2D( x=x,y=ans)\\n    CALL aplot%plot2D( x=x,y=exact, pointType=PS_DOT, lineWidth=0.0_DFP )\\n    CALL aplot%setLabels(\\\"x\\\",\\\"u(x)\\\",\\\"n=\\\"//tostring(n))\\n  end do\\n  CALL aplot%Show()\\n  CALL aplot%deallocate()\\nend program main\\n\"\n      })\n    })]\n  });\n}\nfunction _Chebyshev1InvTransform_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Chebyshev1InvTransform_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _Chebyshev1InvTransform_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/Chebyshev1PolynomialUtility/Chebyshev1InvTransform.md\n\n\nconst Chebyshev1InvTransform_frontMatter = {};\nconst Chebyshev1InvTransform_contentTitle = 'Chebyshev1InvTransform';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\nconst Chebyshev1InvTransform_toc = [{\n  \"value\": \"Interface 1\",\n  \"id\": \"interface-1\",\n  \"level\": 2\n}, ...toc, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}, ..._Chebyshev1InvTransform_test_2_toc];\nfunction Chebyshev1InvTransform_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"chebyshev1invtransform\",\n        children: \"Chebyshev1InvTransform\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Discrete Inverse Chebyshev1 transform.\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1\",\n      children: \"Interface 1\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE FUNCTION Chebyshev1InvTransform(n, coeff, x) &\\n        & RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of Jacobi polynomial\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! n+1  coefficient (modal values)\\n    REAL(DFP), INTENT(IN) :: x\\n    !! x point in physical space\\n    REAL(DFP) :: ans\\n    !! value in physical space\\n  END FUNCTION Chebyshev1InvTransform\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE FUNCTION Chebyshev1InvTransform(n, coeff, x) &\\n        & RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! order of Jacobi polynomial\\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\\n    !! n+1  coefficient (modal values)\\n    REAL(DFP), INTENT(IN) :: x(:)\\n    !! x point in physical space\\n    REAL(DFP) :: ans(SIZE(x))\\n    !! value in physical space\\n  END FUNCTION Chebyshev1InvTransform\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(_Chebyshev1InvTransform_test_2_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction Chebyshev1InvTransform_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(Chebyshev1InvTransform_createMdxContent, {\n      ...props\n    })\n  }) : Chebyshev1InvTransform_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/Chebyshev1PolynomialUtility/Chebyshev1InvTransform.md\n");

/***/ })

}]);