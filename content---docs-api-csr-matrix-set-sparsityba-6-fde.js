"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-csr-matrix-set-sparsityba-6-fde"],{

/***/ "./docs/docs-api/CSRMatrix/SetSparsity.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ SetSparsity_contentTitle),\n  \"default\": () => (/* binding */ SetSparsity_MDXContent),\n  frontMatter: () => (/* binding */ SetSparsity_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_csr_matrix_set_sparsity_md_ba6_namespaceObject),\n  toc: () => (/* binding */ SetSparsity_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-csr-matrix-set-sparsity-md-ba6.json\nconst site_docs_docs_api_csr_matrix_set_sparsity_md_ba6_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"CSRMatrix/SetSparsity\",\"title\":\"SetSparsity\",\"description\":\"SetSparsity() method sets the sparsity pattern in the sparse matrix.\",\"source\":\"@site/docs/docs-api/CSRMatrix/SetSparsity.md\",\"sourceDirName\":\"CSRMatrix\",\"slug\":\"/CSRMatrix/SetSparsity\",\"permalink\":\"/docs-api/CSRMatrix/SetSparsity\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/CSRMatrix/SetSparsity.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"SetRow\",\"permalink\":\"/docs-api/CSRMatrix/SetRow\"},\"next\":{\"title\":\"Shape\",\"permalink\":\"/docs-api/CSRMatrix/Shape\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/CSRMatrix/_SetSparsity_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n  USE easifemBase\\n  IMPLICIT NONE\\n  TYPE( CSRMatrix_ ) :: obj\\n  TYPE( DOF_ ) :: dofobj\\n  REAL(DFP), ALLOCATABLE :: m2(:,:)\\n  INTEGER( I4B ) :: i, unitNo\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Initiate( obj=dofobj, tNodes=[5], names=['K'], &\\n  & spaceCompo=[1], timeCompo=[1], storageFMT=FMT_NODES )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Initiate( obj, ncol=(.tnodes. dofobj), &\\n  & nrow=(.tnodes. dofobj), idof=dofobj, jdof=dofobj )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Setsparsity( obj, 1, [1,2,3,5] )\\nCALL Setsparsity( obj, 2, [2,1,3] )\\nCALL Setsparsity( obj, 3, [3,1,2,4,5] )\\nCALL Setsparsity( obj, 4, [4,3,5] )\\nCALL Setsparsity( obj, 5, [5,1,3,4] )\\nCALL SetSparsity(obj)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"obj = 2.0_DFP\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Display( obj, \\\"obj\\\" )\\nm2=obj\\nCALL Display(m2, \\\"test-4:\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"  CALL Deallocate( obj )\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/_SetSparsity_test_2.md\n\n\nconst _SetSparsity_test_2_frontMatter = {};\nconst _SetSparsity_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _SetSparsity_test_2_toc = [];\nfunction _SetSparsity_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"PROGRAM main\\n  USE easifemBase\\n  IMPLICIT NONE\\n  TYPE( CSRMatrix_ ) :: obj\\n  TYPE( DOF_ ) :: dofobj\\n  INTEGER( I4B ) :: i, unitNo\\n\\nCALL Initiate( obj=dofobj, tNodes=[12, 5], names=['V', 'P'], &\\n  & spaceCompo=[2, 1], timeCompo=[1,1], storageFMT=FMT_DOF )\\n\\nCALL Initiate( obj, ncol=(.tnodes. dofobj), &\\n  & nrow=(.tnodes. dofobj), idof=dofobj, jdof=dofobj )\\n\\nCALL SetSparsity( obj, 1, [1,2,3,5,6,7,10,11,12], 1, 1 )\\nCALL SetSparsity( obj, 2, [2,1,3,6,7,11], 1, 1 )\\nCALL SetSparsity( obj, 3, [3,1,2,4,5,6,7,11,8,9,12,10], 1, 1 )\\nCALL SetSparsity( obj, 4, [4,3,5,8,9,12], 1, 1 )\\nCALL SetSparsity( obj, 5, [5,1,3,4,10,11,8,9,12], 1, 1 )\\nCALL SetSparsity( obj, 6, [6,1,2,3,7,11], 1, 1 )\\nCALL SetSparsity( obj, 7, [7,1,2,3,6,7,11], 1, 1 )\\nCALL SetSparsity( obj, 8, [8,3,4,5,8,9,12], 1, 1 )\\nCALL SetSparsity( obj, 9, [9,3,4,5,8,9,12], 1, 1 )\\nCALL SetSparsity( obj, 10, [10,1,3,5,11,12], 1, 1 )\\nCALL SetSparsity( obj, 11, [11,1,2,3,5,6,7,12,10], 1, 1 )\\nCALL SetSparsity( obj, 12, [12,1,3,4,5,10,11,8,9], 1, 1 )\\n\\nCALL SetSparsity( obj, 1, [1,2,3,5], 1, 2 )\\nCALL SetSparsity( obj, 2, [2,1,3], 1, 2 )\\nCALL SetSparsity( obj, 3, [3,1,2,4,5], 1, 2 )\\nCALL SetSparsity( obj, 4, [4,3,5], 1, 2 )\\nCALL SetSparsity( obj, 5, [5,1,3,4], 1, 2 )\\nCALL SetSparsity( obj, 6, [1,2,3], 1, 2 )\\nCALL SetSparsity( obj, 7, [1,2,3], 1, 2 )\\nCALL SetSparsity( obj, 8, [3,4,5], 1, 2 )\\nCALL SetSparsity( obj, 9, [3,4,5], 1, 2 )\\nCALL SetSparsity( obj, 10, [1,3,5], 1, 2 )\\nCALL SetSparsity( obj, 11, [1,2,3,5], 1, 2 )\\nCALL SetSparsity( obj, 12, [1,3,4,5], 1, 2 )\\n\\nCALL SetSparsity( obj, 1, [1,2,3,5,6,7,10,11,12], 2, 1 )\\nCALL SetSparsity( obj, 2, [2,1,3,6,7,11], 2, 1 )\\nCALL SetSparsity( obj, 3, [3,1,2,4,5,6,7,11,8,9,12,10], 2, 1 )\\nCALL SetSparsity( obj, 4, [4,3,5,12,8,9], 2, 1 )\\nCALL SetSparsity( obj, 5, [5,1,3,4,10,11,8,9,12], 2, 1 )\\n\\nCALL SetSparsity( obj, 1, [1,2,3,5], 2, 2 )\\nCALL SetSparsity( obj, 2, [2,1,3], 2, 2 )\\nCALL SetSparsity( obj, 3, [3,1,2,4,5], 2, 2 )\\nCALL SetSparsity( obj, 4, [4,3,5], 2, 2 )\\nCALL SetSparsity( obj, 5, [5,1,3,4], 2, 2 )\\n\\nCALL SetSparsity(obj)\\n\\nobj = 2.0_DFP\\n\\nCALL SPY( obj, \\\"test_7\\\", \\\".svg\\\" )\\n\\n  CALL Deallocate( obj )\\nEND PROGRAM main\\n\"\n    })\n  });\n}\nfunction _SetSparsity_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_SetSparsity_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _SetSparsity_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/_SetSparsity_test_3.md\n\n\nconst _SetSparsity_test_3_frontMatter = {};\nconst _SetSparsity_test_3_contentTitle = undefined;\n\n\n\n\n\nconst _SetSparsity_test_3_toc = [];\nfunction _SetSparsity_test_3_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n    USE easifemBase\\n    USE HDF5File_Class\\n    IMPLICIT NONE\\n    TYPE( CSRMatrix_ ) :: obj\\n    TYPE( DOF_ ) :: dofobj\\n    REAL( DFP ), ALLOCATABLE :: m2(:,:)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"  CALL Initiate( obj=dofobj, tNodes=[12, 5], names=['V', 'P'], &\\n    & spaceCompo=[2, 1], timeCompo=[1,1], storageFMT=FMT_DOF )\\n\\n  CALL Initiate( obj, ncol=(.tnodes. dofobj), &\\n    & nrow=(.tnodes. dofobj), idof=dofobj, jdof=dofobj )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetSparsity( obj=obj, row=1, col=[1,2,3,5,6,7,10,11,12], ivar=1, jvar=1 )\\nCALL SetSparsity( obj, 2, [2,1,3,6,7,11], 1, 1 )\\nCALL SetSparsity( obj, 3, [3,1,2,4,5,6,7,11,8,9,12,10], 1, 1 )\\nCALL SetSparsity( obj, 4, [4,3,5,8,9,12], 1, 1 )\\nCALL SetSparsity( obj, 5, [5,1,3,4,10,11,8,9,12], 1, 1 )\\nCALL SetSparsity( obj, 6, [6,1,2,3,7,11], 1, 1 )\\nCALL SetSparsity( obj, 7, [7,1,2,3,6,7,11], 1, 1 )\\nCALL SetSparsity( obj, 8, [8,3,4,5,8,9,12], 1, 1 )\\nCALL SetSparsity( obj, 9, [9,3,4,5,8,9,12], 1, 1 )\\nCALL SetSparsity( obj, 10, [10,1,3,5,11,12], 1, 1 )\\nCALL SetSparsity( obj, 11, [11,1,2,3,5,6,7,12,10], 1, 1 )\\nCALL SetSparsity( obj, 12, [12,1,3,4,5,10,11,8,9], 1, 1 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetSparsity( obj, 1, [1,2,3,5], 1, 2 )\\nCALL SetSparsity( obj, 2, [2,1,3], 1, 2 )\\nCALL SetSparsity( obj, 3, [3,1,2,4,5], 1, 2 )\\nCALL SetSparsity( obj, 4, [4,3,5], 1, 2 )\\nCALL SetSparsity( obj, 5, [5,1,3,4], 1, 2 )\\nCALL SetSparsity( obj, 6, [1,2,3], 1, 2 )\\nCALL SetSparsity( obj, 7, [1,2,3], 1, 2 )\\nCALL SetSparsity( obj, 8, [3,4,5], 1, 2 )\\nCALL SetSparsity( obj, 9, [3,4,5], 1, 2 )\\nCALL SetSparsity( obj, 10, [1,3,5], 1, 2 )\\nCALL SetSparsity( obj, 11, [1,2,3,5], 1, 2 )\\nCALL SetSparsity( obj, 12, [1,3,4,5], 1, 2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetSparsity( obj, 1, [1,2,3,5,6,7,10,11,12], 2, 1 )\\nCALL SetSparsity( obj, 2, [2,1,3,6,7,11], 2, 1 )\\nCALL SetSparsity( obj, 3, [3,1,2,4,5,6,7,11,8,9,12,10], 2, 1 )\\nCALL SetSparsity( obj, 4, [4,3,5,12,8,9], 2, 1 )\\nCALL SetSparsity( obj, 5, [5,1,3,4,10,11,8,9,12], 2, 1 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetSparsity( obj, 1, [1,2,3,5], 2, 2 )\\nCALL SetSparsity( obj, 2, [2,1,3], 2, 2 )\\nCALL SetSparsity( obj, 3, [3,1,2,4,5], 2, 2 )\\nCALL SetSparsity( obj, 4, [4,3,5], 2, 2 )\\nCALL SetSparsity( obj, 5, [5,1,3,4], 2, 2 )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"  CALL SetSparsity(obj)\\n\\n  obj = 1.0_DFP\\n\\n  m2=obj\\n  CALL Display(m2, 'test8:')\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"  CALL Deallocate( obj )\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction _SetSparsity_test_3_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_SetSparsity_test_3_createMdxContent, {\n      ...props\n    })\n  }) : _SetSparsity_test_3_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/SetSparsity.md\n\n\nconst SetSparsity_frontMatter = {};\nconst SetSparsity_contentTitle = 'SetSparsity';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\n\nconst SetSparsity_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc, ..._SetSparsity_test_2_toc, ..._SetSparsity_test_3_toc];\nfunction SetSparsity_createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"setsparsity\",\n        children: \"SetSparsity\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"SetSparsity()\"\n      }), \" method sets the sparsity pattern in the sparse matrix.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"There are two interfaces for this purpose. The use of this method is exactly the same as the one described for \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/CSRSparsity/CSRSparsity_\",\n        children: \"CSRSparsity\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"While calling \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"SetSparsity()\"\n        }), \" user has to deal with the node numbers only, because this routine reads the information stored inside the \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"/docs-api/DOF/DOF_\",\n          children: \"DOF\"\n        }), \" object field, and take care of sparsity patterns for all degrees of freedom.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"please note that when you are done with setting the sparsity pattern make sure you call \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"SetSparsity(obj)\"\n        }), \". This will clean up the workspace, and prepare the compacted data inside \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"CSRMatrix_\"\n        }), \" object.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ SetSparsity(obj, row, col)\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE SetSparsity(obj, row, col)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: row\\n    INTEGER(I4B), INTENT(IN) :: col(:)\\n  END SUBROUTINE SetSparsity\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"This method should be used for setting sparsity pattern for problems in which there is only primary unknown (i.e., single physical variable).\"\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"This subroutine sets the sparsity pattern of a given row.\"\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"obj%tdof\"\n            }), \" is equal to 1, then \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"Col\"\n            }), \" is sorted in increasing order, and appended to \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"obj%Row(Row)\"\n            })]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"obj%tdof\"\n            }), \" is not equal to 1, then based on the storage format (see \", (0,jsx_runtime.jsx)(_components.a, {\n              href: \"/docs-api/DOF/DOF_\",\n              children: \"DOF_\"\n            }), \") we generate \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"Col\"\n            }), \" connectivity information.\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"܀ Example 1\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"iface2\",\n        label: \"܀ SetSparsity(obj, row, col)\",\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE SetSparsity(obj, row, col)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: row(:)\\n    !! row indices\\n    TYPE(IntVector_), INTENT(IN) :: col(:)\\n    !! each intVector, col(i), contains col indices of row(i)\\n  END SUBROUTINE SetSparsity\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"܀ Example\",\n        children: (0,jsx_runtime.jsx)(_components.p, {\n          children: \"TODO\"\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"iface3\",\n        label: \"܀ SetSparsity(obj, row, col, ivar, jvar)\",\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE SetSparsity(obj, row, col, ivar, jvar)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: row\\n    !! row index\\n    INTEGER(I4B), INTENT(IN) :: col(:)\\n    !! col indices\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    !! physical variable i\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n    !! physical variable j\\n  END SUBROUTINE SetSparsity\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"To set sparsity patterns in multi-physics applications, use the following command.\"\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"܀ Example 1\",\n        children: (0,jsx_runtime.jsx)(_SetSparsity_test_2_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example2\",\n        label: \"܀ Example 2\",\n        children: (0,jsx_runtime.jsx)(_SetSparsity_test_3_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"iface4\",\n        label: \"܀ SetSparsity(obj, row, col, ivar, jvar)\",\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE SetSparsity(obj, row, col, ivar, jvar)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    INTEGER(I4B), INTENT(IN) :: row(:)\\n    TYPE(IntVector_), INTENT(IN) :: col(:)\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), INTENT(IN) :: jvar\\n  END SUBROUTINE SetSparsity\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"This routine is like Interface 3, but in this case we can specify many rows and corresponding columns.\"\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"܀ Example\",\n        children: (0,jsx_runtime.jsx)(_components.p, {\n          children: \"TODO\"\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    })]\n  });\n}\nfunction SetSparsity_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(SetSparsity_createMdxContent, {\n      ...props\n    })\n  }) : SetSparsity_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/CSRMatrix/SetSparsity.md\n");

/***/ })

}]);