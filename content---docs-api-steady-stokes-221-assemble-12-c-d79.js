"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-steady-stokes-221-assemble-12-c-d79"],{

/***/ "./docs/docs-api/SteadyStokes221/Assemble.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ Assemble_contentTitle),\n  \"default\": () => (/* binding */ Assemble_MDXContent),\n  frontMatter: () => (/* binding */ Assemble_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_steady_stokes_221_assemble_md_12c_namespaceObject),\n  toc: () => (/* binding */ Assemble_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-steady-stokes-221-assemble-md-12c.json\nconst site_docs_docs_api_steady_stokes_221_assemble_md_12c_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"SteadyStokes221/Assemble\",\"title\":\"Assemble\",\"description\":\"This procedure pointer assembles the problem\",\"source\":\"@site/docs/docs-api/SteadyStokes221/Assemble.md\",\"sourceDirName\":\"SteadyStokes221\",\"slug\":\"/SteadyStokes221/Assemble\",\"permalink\":\"/docs-api/SteadyStokes221/Assemble\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes221/Assemble.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"ApplyDirichletBC\",\"permalink\":\"/docs-api/SteadyStokes221/ApplyDirichletBC\"},\"next\":{\"title\":\"AssembleRHS\",\"permalink\":\"/docs-api/SteadyStokes221/AssembleRHS\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/SteadyStokes221/_Assemble_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"This example tests and demonstrates the usage of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"AssembleTanMat()\"\n      }), \" method.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n  USE easifemBase\\n  USE easifemClasses\\n  USE easifemMaterials\\n  USE easifemKernels\\n  USE SteadyStokes221_Class\\n  IMPLICIT NONE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Declare variables\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE( SteadyStokes221_ ) :: obj\\nTYPE( ParameterList_ ) :: param\\nTYPE( DomainPointer_ ) :: domains(2)\\nCLASS( Domain_ ), POINTER :: dom => NULL()\\nCHARACTER( LEN = * ), PARAMETER :: domainFileNamePressure=\\\"./mesh_tri3.h5\\\"\\nCHARACTER( LEN = * ), PARAMETER :: domainFileNameVelocity=\\\"./mesh_tri6.h5\\\"\\nTYPE(String) :: filename(2)\\nTYPE( MeshSelection_ ) :: region\\nCLASS( DirichletBC_ ), POINTER :: dbc => NULL()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set parameters\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Initiate an instance of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/ParameterList/ParameterList_\",\n        children: \"ParameterList_\"\n      }), \", param, this will be used to initiate several objects.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"Initiate param\\\"\",\n        children: \"CALL FPL_INIT(); CALL param%Initiate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"{5} title=\\\"set SteadyStokes221 parameters\\\"\",\n        children: \"CALL SetSteadyStokes221Param( &\\n  & param=param, &\\n  & isConservativeForm=.TRUE., &\\n  & gravity = [0.0_DFP, -9.8_DFP, 0.0_DFP], &\\n  & domainFileForPressure = domainFileNamePressure, &\\n  & domainFileForVelocity = domainFileNameVelocity, &\\n  & engine=\\\"NATIVE_SERIAL\\\", &\\n  & CoordinateSystem=KERNEL_CARTESIAN, &\\n  & maxIter = 100, &\\n  & rtoleranceForPressure = REAL( 1.0E-6, DFP ), &\\n  & rtoleranceForVelocity = REAL( 1.0E-6, DFP ), &\\n  & atoleranceForPressure = REAL( 1.0E-6, DFP ), &\\n  & atoleranceForVelocity = REAL( 1.0E-6, DFP ), &\\n  & toleranceForSteadyState = REAL( 1.0E-6, DFP ), &\\n  & tFluidMaterials=1, &\\n  & tDirichletBCForPressure=1, &\\n  & tDirichletBCForVelocity=3, &\\n  & baseInterpolationForSpace=\\\"LagrangeInterpolation\\\", &\\n  & baseContinuityForSpace=\\\"H1\\\", &\\n  & quadratureTypeForSpace=\\\"GaussLegendre\\\", &\\n  & postProcessOpt=1)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"Set param for linSolver\\\"\",\n        children: \"CALL SetLinSolverParam( &\\n  & param=param, &\\n  & solverName=LIS_GMRES,&\\n  & preconditionOption=NO_PRECONDITION, &\\n  & convergenceIn=convergenceInRes, &\\n  & convergenceType=relativeConvergence, &\\n  & maxIter=100, &\\n  & relativeToRHS=.TRUE., &\\n  & KrylovSubspaceSize=20, &\\n  & rtol=REAL( 1.0E-10, DFP ), &\\n  & atol=REAL( 1.0D-10, DFP ) )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate domain\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"{1} title=\\\"Initiate domain\\\"\",\n        children: \"filename = [String(domainFileNameVelocity), &\\n  & String(domainFileNamePressure)]\\nCALL e%setQuietMode(.TRUE.)\\nCALL Initiate(domains=domains, filename=filename)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      title: \"In line 1, make sure that Velocity domain comes first.\",\n      type: \"caution\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate kernel\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"{1} title=\\\"Initiate kernel\\\"\",\n        children: \"CALL e%setQuietMode(.TRUE.)\\nCALL obj%Initiate(param=param, domains=domains )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Here, line 1 is to allow verbosity.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Add fluid material to kernel. To do so, we first create an instance of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/MeshSelection/MeshSelection_\",\n        children: \"MeshSelection_\"\n      }), \". Then we add this instance to the kernel.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"adding fluid material\\\"\",\n        children: \"CALL e%setQuietMode(.TRUE.)\\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd, meshID=[1] )\\nCALL SetFluidMaterialParam( &\\n  & param=param, &\\n  & name=\\\"fluidMaterial\\\", &\\n  & massDensity=1000.0_DFP, &\\n  & dynamicViscosity = 0.001_DFP, &\\n  & stressStrainModel=\\\"NewtonianFluidModel\\\" )\\nCALL SetNewtonianFluidModelParam( &\\n  & param = param, &\\n  & dynamicViscosity = 0.001_DFP )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL e%setQuietMode(.TRUE.)\\nCALL obj%AddFluidMaterial( &\\n  & materialNo=1, &\\n  & materialName=\\\"fluidMaterial\\\", &\\n  & param=param, &\\n  & region=region)\\nCALL region%Deallocate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add Dirichlet boundary condition\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"V1=0, Now we show how to add dirichlet boundary condition. To this end first we create an instance of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/MeshSelection/MeshSelection_\",\n        children: \"MeshSelection_\"\n      }), \" to select the region of the mesh. Then we define the dirichlet bonundary condition, and pass these two information to kernel.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set parameters for dirichlet boundary condition:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetDirichletBCParam( &\\n  & param=param, &\\n  & name=\\\"ZeroV1\\\", &\\n  & idof=1, &\\n  & nodalValueType=Constant, &\\n  & useFunction=.FALSE. )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Select the mesh region:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"#define BOTTOM 1\\n#define RIGHT 2\\n#define TOP 3\\n#define LEFT 4\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM, RIGHT, LEFT] )\\nCALL region%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add dirichlet boundary condition and the region to kernel:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%AddVelocityDirichletBC( &\\n  & dbcNo=1, &\\n  & param=param, &\\n  & boundary=region )\\ndbc => obj%GetVelocityDirichletBCPointer( dbcNo=1 )\\nCALL dbc%Set( ConstantNodalValue=0.0_DFP )\\ndbc=>NULL()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"V1=U, Set parameters for dirichlet boundary condition:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetDirichletBCParam( &\\n  & param=param, &\\n  & name=\\\"UpstreamV1\\\", &\\n  & idof=1, &\\n  & nodalValueType=Constant, &\\n  & useFunction=.FALSE. )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Select the mesh region:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL region%Deallocate()\\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd-1, meshID=[TOP] )\\nCALL region%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add dirichlet boundary condition and the region to kernel:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%AddVelocityDirichletBC( &\\n  & dbcNo=2, &\\n  & param=param, &\\n  & boundary=region )\\ndbc => obj%GetVelocityDirichletBCPointer( dbcNo=2 )\\nCALL dbc%Set( ConstantNodalValue=0.1_DFP )\\ndbc=>NULL()\\nCALL region%Deallocate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"V2=0, Set parameters for dirichlet boundary condition:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetDirichletBCParam( &\\n  & param=param, &\\n  & name=\\\"ZeroV2\\\", &\\n  & idof=2, &\\n  & nodalValueType=Constant, &\\n  & useFunction=.FALSE. )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Select the mesh region:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL region%Deallocate()\\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM, RIGHT, TOP, LEFT] )\\nCALL region%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add dirichlet boundary condition and the region to kernel:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%AddVelocityDirichletBC( &\\n  & dbcNo=3, &\\n  & param=param, &\\n  & boundary=region )\\ndbc => obj%GetVelocityDirichletBCPointer( dbcNo=3 )\\nCALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\\nCALL region%Deallocate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"P=0, Set parameters for dirichlet boundary condition:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"setting boundary condition P=0\\\"\",\n        children: \"CALL SetDirichletBCParam( &\\n  & param=param, &\\n  & name=\\\"ZeroP\\\", &\\n  & idof=1, &\\n  & nodalValueType=Constant, &\\n  & useFunction=.FALSE. )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Select the mesh region:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL region%Deallocate()\\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM] )\\nCALL region%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add dirichlet boundary condition and the region to kernel:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%AddPressureDirichletBC( dbcNo=1, param=param, &\\n  & boundary=region )\\ndbc => obj%GetPressureDirichletBCPointer( dbcNo=1 )\\nCALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\\nCALL region%Deallocate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Now that we are done with the setup, we should call \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Set\"\n      }), \" method. In this method, the kernel checks the data, configuration, and intiates appropriate variables.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"AssembleTanMat\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"assembling tangent matrix\\\"\",\n        children: \"CALL e%setQuietMode(.TRUE.)\\nCALL obj%AssembleTanmat()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-comment\",\n        metastring: \"title=\\\"checking sparsity pattern\\\"\",\n        children: \"CALL obj%Kmat%SPY(filename=\\\"./Kmat\\\", ext=\\\".png\\\")\\nCALL obj%Gmat%SPY(filename=\\\"./Gmat\\\", ext=\\\".png\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Assemble\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"assemble\\\"\",\n        children: \"CALL e%setQuietMode(.FALSE.)\\nCALL obj%Assemble()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Cleanup\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"  CALL obj%Deallocate()\\n  CALL param%Deallocate()\\n  CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/SteadyStokes221/Assemble.md\n\n\nconst Assemble_frontMatter = {};\nconst Assemble_contentTitle = 'Assemble';\n\nconst assets = {\n\n};\n\n\n\n\nconst Assemble_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, {\n  \"value\": \"Example\",\n  \"id\": \"example\",\n  \"level\": 2\n}, ...toc];\nfunction Assemble_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"assemble\",\n        children: \"Assemble\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This procedure pointer assembles the problem\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE Assemble(obj)\\n    CLASS(AbstractSteadyStokes_), INTENT(INOUT) :: obj\\n  END SUBROUTINE Assemble\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example\",\n      children: \"Example\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(MDXContent, {})]\n  });\n}\nfunction Assemble_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(Assemble_createMdxContent, {\n      ...props\n    })\n  }) : Assemble_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/SteadyStokes221/Assemble.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);