"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-jacobi-polynomial-utility-jacobi-jacobi-radau-matrix-273-a1f"],{

/***/ "./docs/docs-api/JacobiPolynomialUtility/JacobiJacobiRadauMatrix.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ JacobiJacobiRadauMatrix_contentTitle),\n  \"default\": () => (/* binding */ JacobiJacobiRadauMatrix_MDXContent),\n  frontMatter: () => (/* binding */ JacobiJacobiRadauMatrix_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_jacobi_polynomial_utility_jacobi_jacobi_radau_matrix_md_273_namespaceObject),\n  toc: () => (/* binding */ JacobiJacobiRadauMatrix_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-jacobi-polynomial-utility-jacobi-jacobi-radau-matrix-md-273.json\nconst site_docs_docs_api_jacobi_polynomial_utility_jacobi_jacobi_radau_matrix_md_273_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"JacobiPolynomialUtility/JacobiJacobiRadauMatrix\",\"title\":\"JacobiJacobiRadauMatrix\",\"description\":\"Jacobi Radau matrix for Jacobi polynomials.\",\"source\":\"@site/docs/docs-api/JacobiPolynomialUtility/JacobiJacobiRadauMatrix.md\",\"sourceDirName\":\"JacobiPolynomialUtility\",\"slug\":\"/JacobiPolynomialUtility/JacobiJacobiRadauMatrix\",\"permalink\":\"/docs-api/JacobiPolynomialUtility/JacobiJacobiRadauMatrix\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/JacobiPolynomialUtility/JacobiJacobiRadauMatrix.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"JacobiJacobiMatrix\",\"permalink\":\"/docs-api/JacobiPolynomialUtility/JacobiJacobiMatrix\"},\"next\":{\"title\":\"JacobiLeadingCoeff\",\"permalink\":\"/docs-api/JacobiPolynomialUtility/JacobiLeadingCoeff\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/JacobiPolynomialUtility/_JacobiJacobiRadauMatrix_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\n\\nINTEGER( I4B ), parameter :: n = 5\\nREAL( DFP ) :: D(n+1), E(n+1), alphaCoeff(n+1), betaCoeff(n+1)\\nCALL JacobiJacobiRadauMatrix(-1.0_DFP, n, 0.0_DFP, 0.0_DFP, D, E, alphaCoeff, betaCoeff)\\nCALL Display(D, \\\"D: \\\")\\nCALL Display(E, \\\"E: \\\")\\nCALL Display(alphaCoeff, \\\"alphaCoeff: \\\")\\nCALL Display(betaCoeff, \\\"betaCoeff: \\\")\\nend program main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See results\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            metastring: \"title=\\\"results\\\"\",\n            children: \"   D:   \\n--------\\n 0.00000\\n 0.00000\\n 0.00000\\n 0.00000\\n 0.00000\\n-0.54545\\n  E:   \\n-------\\n0.57735\\n0.51640\\n0.50709\\n0.50395\\n0.50252\\n0.00000\\nalphaCoeff: \\n------------\\n   0.00000  \\n   0.00000  \\n   0.00000  \\n   0.00000  \\n   0.00000  \\n  -0.00000  \\nbetaCoeff: \\n-----------\\n  2.00000  \\n  0.33333  \\n  0.26667  \\n  0.25714  \\n  0.25397  \\n  0.00000\\n\"\n          })\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n\n;// ./docs/docs-api/JacobiPolynomialUtility/JacobiJacobiRadauMatrix.md\n\n\nconst JacobiJacobiRadauMatrix_frontMatter = {};\nconst JacobiJacobiRadauMatrix_contentTitle = 'JacobiJacobiRadauMatrix';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst JacobiJacobiRadauMatrix_toc = [{\n  \"value\": \"Examples\",\n  \"id\": \"examples\",\n  \"level\": 2\n}, ...toc];\nfunction JacobiJacobiRadauMatrix_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"jacobijacobiradaumatrix\",\n        children: \"JacobiJacobiRadauMatrix\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Jacobi Radau matrix for Jacobi polynomials.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE SUBROUTINE JacobiJacobiRadauMatrix(a, n, alpha, beta, D, &\\n    & E, alphaCoeff, betaCoeff)\\n    REAL(DFP), INTENT(IN) :: a\\n    !! one of the end of the domain\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! n should be greater than or equal to 1\\n    REAL(DFP), INTENT(IN) :: alpha\\n    !! alpha of jacobu poly\\n    REAL(DFP), INTENT(IN) :: beta\\n    !! beta of jacobi poly\\n    REAL(DFP), INTENT(OUT) :: D(:)\\n    !! the size should be 1:n+1\\n    REAL(DFP), INTENT(OUT) :: E(:)\\n    !! the size should be 1:n\\n    REAL(DFP), OPTIONAL, INTENT(OUT) :: alphaCoeff(0:)\\n    REAL(DFP), OPTIONAL, INTENT(OUT) :: betaCoeff(0:)\\n  END SUBROUTINE JacobiJacobiRadauMatrix\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"examples\",\n      children: \"Examples\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    })]\n  });\n}\nfunction JacobiJacobiRadauMatrix_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(JacobiJacobiRadauMatrix_createMdxContent, {\n      ...props\n    })\n  }) : JacobiJacobiRadauMatrix_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/JacobiPolynomialUtility/JacobiJacobiRadauMatrix.md\n");

/***/ })

}]);