"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-arpack-sym-largest-eigenvale-0-b-826"],{

/***/ "./docs/docs-api/ARPACK/SymLargestEigenval.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_arpack_sym_largest_eigenval_md_e0b_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-arpack-sym-largest-eigenval-md-e0b.json\nconst site_docs_docs_api_arpack_sym_largest_eigenval_md_e0b_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"ARPACK/SymLargestEigenval\",\"title\":\"SymLargestEigenval\",\"description\":\"This function computes the largest eigenvalue of a symmetric matrix.\",\"source\":\"@site/docs/docs-api/ARPACK/SymLargestEigenval.md\",\"sourceDirName\":\"ARPACK\",\"slug\":\"/ARPACK/SymLargestEigenval\",\"permalink\":\"/docs-api/ARPACK/SymLargestEigenval\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/ARPACK/SymLargestEigenval.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"SSEUPD\",\"permalink\":\"/docs-api/ARPACK/SSEUPD\"},\"next\":{\"title\":\"SymSmallestEigenVal\",\"permalink\":\"/docs-api/ARPACK/SymSmallestEigenval\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/ARPACK/SymLargestEigenval.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'SymLargestEigenval';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"symlargesteigenval\",\n        children: \"SymLargestEigenval\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This function computes the largest eigenvalue of a symmetric matrix.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"This function calls ARPACK's \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/ARPACK/SSAUPD\",\n        children: \"SSAUPD\"\n      }), \" or DSAUPD routine.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Currently, there are two interfaces under this generic method.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ans = SymLargestEigenVal(real::mat(:,:), char::which, int::NCV, int::maxIter, real::tol)\\nans(1:nev) = SymLargestEigenVal(real::mat(:,:), int::nev, char::which, int::NCV, int::maxIter, real::tol)\\n\"\n      })\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface 1\",\n        label: \"܀ Interface 1\",\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE FUNCTION SymLargestEigenVal(mat, which, NCV, maxIter, tol) &\\n    & RESULT(ans)\\n    REAL(DFP), INTENT(IN) :: mat(:, :)\\n    !! dense matrix\\n    CHARACTER(LEN=*), OPTIONAL, INTENT(IN) :: which\\n    !! `which = \\\"LM\\\"` ⇨ absolute largest eigenvalue\\n    !! `which = \\\"LA\\\"` ⇨ algebraic largest eigenvalue\\n    !! default is \\\"LA\\\"\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: NCV\\n    !! Number of Lanczos vectors generated\\n    !! It must be greater than 1 and smaller than `size(mat,1)`\\n    !! Default is `NCV = MIN(n, 20)`\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: maxIter\\n    !! Maximum number of iteration default = `N*10`\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: tol\\n    !! tolerance, default = 0.0\\n    REAL(DFP) :: ans\\n    !! maximum eigenvalue\\n  END FUNCTION SymLargestEigenVal\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"mat\"\n            }), \" is dense matrix\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"which = \\\"LM\\\"\"\n            }), \" ⇨ absolute largest eigenvalue\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"which = \\\"LA\\\"\"\n            }), \" ⇨ algebraic largest eigenvalue\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"Default value of \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"which\"\n            }), \" is \\\"LA\\\"\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"NCV\"\n            }), \" Number of Lanczos vectors generated. It must be greater than 1 and smaller than \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"size(mat,1)\"\n            }), \". Default is \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"NCV = MIN(n, 20)\"\n            })]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"maxIter\"\n            }), \" Maximum number of iteration default = \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"N*10\"\n            })]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"tol\"\n            }), \" tolerance, default = 0.0\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"ans\"\n            }), \" maximum eigenvalue.\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface 2\",\n        label: \"܀ Interface 2\",\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE FUNCTION SymLargestEigenVal(mat, nev, which, NCV, maxIter, tol) &\\n    & RESULT(ans)\\n    REAL(DFP), INTENT(IN) :: mat(:, :)\\n    !! dense matrix\\n    INTEGER(I4B), INTENT(IN) :: nev\\n    !! number of eigenvalues requested\\n    CHARACTER(LEN=*), OPTIONAL, INTENT(IN) :: which\\n    !! `which = \\\"LM\\\"` ⇨ absolute largest eigenvalue\\n    !! `which = \\\"LA\\\"` ⇨ algebraic largest eigenvalue\\n    !! default is \\\"LA\\\"\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: NCV\\n    !! Number of Lanczos vectors generated\\n    !! It must be greater than 1 and smaller than `size(mat,1)`\\n    !! Default is `NCV = MIN(n, MAX(2*nev+1, 20))`\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: maxIter\\n    !! Maximum number of iteration default = `N*10`\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: tol\\n    !! tolerance, default = 0.0\\n    REAL(DFP) :: ans(nev)\\n    !! first k, largest eigenvalue\\n  END FUNCTION SymLargestEigenVal\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"mat\"\n            }), \" dense matrix\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"nev\"\n            }), \" number of eigenvalues requested\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"which = \\\"LM\\\"\"\n            }), \" ⇨ absolute largest eigenvalue\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"which = \\\"LA\\\"\"\n            }), \" ⇨ algebraic largest eigenvalue\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"Default value of \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"which\"\n            }), \" is \\\"LA\\\"\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"NCV\"\n            }), \" Number of Lanczos vectors generated. It must be greater than 1 and smaller than \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"size(mat,1)\"\n            }), \". Default is \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"NCV = MIN(n, MAX(2*nev+1, 20))\"\n            })]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"maxIter\"\n            }), \" Maximum number of iteration default = \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"N*10\"\n            })]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"tol\"\n            }), \" tolerance, default = 0.0\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"ans(nev)\"\n            }), \" first k, the largest eigenvalue.\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ Close\",\n        default: true\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/ARPACK/SymLargestEigenval.md\n");

/***/ })

}]);