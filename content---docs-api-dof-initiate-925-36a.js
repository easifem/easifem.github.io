"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-dof-initiate-925-36a"],{

/***/ "./docs/docs-api/DOF/Initiate.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ Initiate_contentTitle),\n  \"default\": () => (/* binding */ Initiate_MDXContent),\n  frontMatter: () => (/* binding */ Initiate_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_dof_initiate_md_925_namespaceObject),\n  toc: () => (/* binding */ Initiate_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-dof-initiate-md-925.json\nconst site_docs_docs_api_dof_initiate_md_925_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"DOF/Initiate\",\"title\":\"Initiate\",\"description\":\"Initiate an instance of DOF.\",\"source\":\"@site/docs/docs-api/DOF/Initiate.md\",\"sourceDirName\":\"DOF\",\"slug\":\"/DOF/Initiate\",\"permalink\":\"/docs-api/DOF/Initiate\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/DOF/Initiate.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"sidebarPosition\":6,\"frontMatter\":{\"sidebar_position\":6},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetNodeLoc\",\"permalink\":\"/docs-api/DOF/GetNodeLoc\"},\"next\":{\"title\":\"Add\",\"permalink\":\"/docs-api/DOF/Add\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/DOF/examples/_Initiate_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.p, {\n      children: \"This example show how to create an instance of DOF and use it to create a vector of reals.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE easifemBase\\nIMPLICIT NONE\\nTYPE( DOF_ ) :: obj\\nREAL( DFP ), ALLOCATABLE :: val( : )\\n\\nCALL Initiate( obj, tNodes=[10], names=[\\\"U\\\"], spaceCompo=[3],  &\\n timeCompo=[1], storageFMT = FMT_DOF )\\n\\n! Initiate a real vector using `DOF_` object.\\n\\nCALL Initiate( Val=val, obj=obj )\\n\\nCALL Display( obj, \\\"CALL Initiate( Val=val, obj=obj ) : \\\" )\\n\\nCALL Deallocate( obj )\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/DOF/examples/_Initiate_test_2.md\n\n\nconst _Initiate_test_2_frontMatter = {};\nconst _Initiate_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_2_toc = [];\nfunction _Initiate_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"This example show how to initiate an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"DOF\"\n      }), \". Then we use it to create an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"RealVector\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE BaseType, ONLY: DOF_\\nUSE GlobalData\\nUSE DOF_Method\\n\\nIMPLICIT NONE\\nTYPE(DOF_) :: obj\\nTYPE(RealVector_) :: val\\n\\n! Create an instance of[[DOF_]]\\n\\nCALL Initiate(obj, tNodes=[10], names=[\\\"U\\\"], spaceCompo=[3], &\\n              timeCompo=[1], storageFMT=FMT_DOF)\\n\\n! Initiate a vector of REAL using an instance of[[DOF_]]\\n\\nCALL Initiate(Val=val, obj=obj)\\n\\nCALL Display(Val, \\\"CALL Initiate( Val=val, obj=obj ) : \\\")\\n\\nCALL DEALLOCATE (obj)\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction _Initiate_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/DOF/examples/_Initiate_test_3.md\n\n\nconst _Initiate_test_3_frontMatter = {};\nconst _Initiate_test_3_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_3_toc = [];\nfunction _Initiate_test_3_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"PROGRAM main\\nUSE GlobalData\\nUSE BaseType, ONLY: DOF_, RealVector_\\nUSE DOF_Method\\nUSE RealVector_Method, ONLY: Display, RealVector_Initiate => Initiate\\n\\nIMPLICIT NONE\\n\\nTYPE(DOF_) :: obj\\nTYPE(RealVector_), ALLOCATABLE :: val(:)\\n\\nCALL Initiate(obj, tNodes=[10], names=[\\\"U\\\"], spaceCompo=[3], &\\n              timeCompo=[1], storageFMT=FMT_DOF)\\n\\nCALL RealVector_Initiate(dofobj=obj, obj=val)\\n\\nCALL Display(val, \\\"CALL Initiate( val=val, obj=obj ) : \\\")\\n\\nCALL DEALLOCATE (obj)\\nEND PROGRAM main\\n\"\n    })\n  });\n}\nfunction _Initiate_test_3_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_3_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_3_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/DOF/examples/_Initiate_test_4.md\n\n\nconst _Initiate_test_4_frontMatter = {};\nconst _Initiate_test_4_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_4_toc = [];\nfunction _Initiate_test_4_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"This example shows the usage of assignment operator to construct an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"DOF\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE GlobalData\\nUSE BaseType, ONLY: DOF_\\nUSE DOF_Method\\n\\nIMPLICIT NONE\\n\\nTYPE(DOF_) :: obj, anotherObj\\n\\nCALL Initiate(obj, tNodes=[10], names=[\\\"U\\\"], spaceCompo=[3], &\\n              timeCompo=[1], storageFMT=FMT_DOF)\\n\\nanotherObj = obj\\n\\nCALL Display(anotherObj, \\\"anotherObj=obj : \\\")\\n\\nCALL DEALLOCATE (obj)\\nCALL DEALLOCATE (anotherObj)\\n\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction _Initiate_test_4_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_4_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_4_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/DOF/examples/_Initiate_test_5.md\n\n\nconst _Initiate_test_5_frontMatter = {};\nconst _Initiate_test_5_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_5_toc = [];\nfunction _Initiate_test_5_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"PROGRAM main\\nUSE GlobalData\\nUSE BaseType, ONLY: DOF_\\nUSE DOF_Method\\n\\nIMPLICIT NONE\\n\\nTYPE(DOF_) :: obj\\n\\nobj = DOF(tNodes=[10], names=[\\\"U\\\"], spaceCompo=[3], &\\n          timeCompo=[1], storageFMT=FMT_DOF)\\n\\nCALL Display(obj, \\\"DOF() : \\\")\\n\\nCALL DEALLOCATE (obj)\\nEND PROGRAM main\\n\"\n    })\n  });\n}\nfunction _Initiate_test_5_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_5_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_5_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/DOF/examples/_Initiate_test_6.md\n\n\nconst _Initiate_test_6_frontMatter = {};\nconst _Initiate_test_6_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_6_toc = [];\nfunction _Initiate_test_6_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"PROGRAM main\\nUSE GlobalData\\nUSE BaseType, ONLY: DOF_\\nUSE DOF_Method\\n\\nIMPLICIT NONE\\n\\nTYPE(DOF_), POINTER :: obj\\n\\nobj => DOF_POINTER(tNodes=[10], names=[\\\"U\\\"], spaceCompo=[3], &\\n                   timeCompo=[1], storageFMT=FMT_DOF)\\n\\nCALL Display(obj, \\\"DOF() : \\\")\\n\\nCALL DEALLOCATE (obj)\\nEND PROGRAM main\\n\"\n    })\n  });\n}\nfunction _Initiate_test_6_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_6_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_6_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/DOF/examples/_Initiate_test_7.md\n\n\nconst _Initiate_test_7_frontMatter = {};\nconst _Initiate_test_7_contentTitle = undefined;\n\n\n\n\n\nconst _Initiate_test_7_toc = [];\nfunction _Initiate_test_7_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.p, {\n      children: \"This example show how to initiate an instance of DOF_\\nand use it to create a vector of reals.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\nUSE GlobalData\\nUSE BaseType, ONLY: DOF_\\nUSE DOF_Method\\n\\nIMPLICIT NONE\\n\\nTYPE(DOF_) :: obj\\nREAL(DFP), ALLOCATABLE :: val(:)\\n\\nCALL Initiate(obj, tNodes=[10], names=[\\\"U\\\"], spaceCompo=[3], &\\n              timeCompo=[1], storageFMT=FMT_DOF)\\n\\nCALL Initiate(Val=val, obj=obj)\\n\\nval(1:10) = 1; val(11:20) = 2; val(21:) = 3\\n\\nCALL Display(Val, obj, \\\"CALL Initiate( Val=val, obj=obj ) : \\\")\\n\\nCALL DEALLOCATE (obj)\\n\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction _Initiate_test_7_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_Initiate_test_7_createMdxContent, {\n      ...props\n    })\n  }) : _Initiate_test_7_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/DOF/Initiate.md\n\n\nconst Initiate_frontMatter = {\n\tsidebar_position: 6\n};\nconst Initiate_contentTitle = 'Initiate';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\n\n\n\nconst Initiate_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc, {\n  \"value\": \"Interfaces for constructing vectors using DOF\",\n  \"id\": \"interfaces-for-constructing-vectors-using-dof\",\n  \"level\": 2\n}, {\n  \"value\": \"Constructing navtive vectors\",\n  \"id\": \"constructing-navtive-vectors\",\n  \"level\": 2\n}, ..._Initiate_test_2_toc, {\n  \"value\": \"Constructing RealVector\",\n  \"id\": \"constructing-realvector\",\n  \"level\": 2\n}, ..._Initiate_test_3_toc, {\n  \"value\": \"Constructing vector of RealVector\",\n  \"id\": \"constructing-vector-of-realvector\",\n  \"level\": 2\n}, ..._Initiate_test_4_toc, {\n  \"value\": \"Assignment(=)\",\n  \"id\": \"assignment\",\n  \"level\": 2\n}, ..._Initiate_test_5_toc, {\n  \"value\": \"DOF Function\",\n  \"id\": \"dof-function\",\n  \"level\": 2\n}, ..._Initiate_test_6_toc, {\n  \"value\": \"DOF_Pointer\",\n  \"id\": \"dof_pointer\",\n  \"level\": 2\n}, ..._Initiate_test_7_toc];\nfunction Initiate_createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {TabItem, Tabs} = _components;\n  if (!TabItem) _missingMdxReference(\"TabItem\", true);\n  if (!Tabs) _missingMdxReference(\"Tabs\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"initiate\",\n        children: \"Initiate\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Initiate an instance of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/DOF/DOF_\",\n        children: \"DOF\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can construct \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"DOF_\"\n      }), \" object by calling the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Initiate()\"\n      }), \" subroutine.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"Initiate\\\"\",\n        children: \"INTERFACE\\nMODULE PURE SUBROUTINE Initiate( obj, tNodes, Names, spacecompo, &\\n  & timecompo, StorageFMT )\\n  CLASS( DOF_ ), INTENT( INOUT ) :: obj\\n    !! degree of freedom object\\n  INTEGER( I4B ), INTENT( IN ) :: tNodes( : )\\n    !! number of nodes for each physical variable\\n  CHARACTER( LEN = 1 ), INTENT( IN ) :: Names( : )\\n    !! Names of each physical variable\\n  INTEGER( I4B ), INTENT( IN ) :: spacecompo( : )\\n    !! Space component of each physical variable\\n  INTEGER( I4B ), INTENT( IN ) :: timecompo( : )\\n    !! Time component of each physical variable\\n  INTEGER( I4B ), INTENT( IN ) :: StorageFMT\\n    !! Storage format `FMT_DOF`, `FMT_Nodes`\\nEND SUBROUTINE Initiate\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"tNodes\"\n        }), \" denotes the total number of nodes in each physical variables\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"Names\"\n        }), \" is the name of each physical variables\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"SpaceCompo\"\n        }), \" is the number of spatial components in each physical variable, if a physical variable is scalar then one can use also use -1 instead of 1 for the total number of space components\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"TimeCompo\"\n        }), \" is the number of time components in each physical variables\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"StorageFMT\"\n        }), \" is the storage format, it can be \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"FMT_DOF\"\n        }), \" or \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"FMT_Nodes\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"The size of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"tNodes\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Names\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"SpaceCompo\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"TimeCompo\"\n        }), \" vectors should be equal to the total number of physical variables.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interfaces-for-constructing-vectors-using-dof\",\n      children: \"Interfaces for constructing vectors using DOF\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Initiate()\"\n      }), \" method has been extended for constructing\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Rank-1 fortran arrays\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.a, {\n          href: \"/docs-api/RealVector/RealVector_\",\n          children: \"RealVector_\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"Vector of \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"/docs-api/RealVector/RealVector_\",\n          children: \"RealVector_\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This topic is covered below.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"constructing-navtive-vectors\",\n      children: \"Constructing navtive vectors\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ See Interface\",\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            metastring: \"title=\\\"Interface\\\"\",\n            children: \"INTERFACE\\nMODULE PURE SUBROUTINE Initiate( val, obj )\\n  REAL( DFP ), ALLOCATABLE, INTENT( INOUT ) :: val( : )\\n    !! This vector will be initiated by using obj\\n  CLASS( DOF_ ), INTENT( IN ) :: obj\\n    !! DOF object\\nEND SUBROUTINE Initiate\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"܀ See example\",\n        children: (0,jsx_runtime.jsx)(_Initiate_test_2_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"constructing-realvector\",\n      children: \"Constructing RealVector\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(_Initiate_test_3_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"constructing-vector-of-realvector\",\n      children: \"Constructing vector of RealVector\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(_Initiate_test_4_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"assignment\",\n      children: \"Assignment(=)\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can use an assignment operator to copy the contents of one \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"DOF_\"\n      }), \" object into another \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"DOF_\"\n      }), \" object.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"܀ See example\",\n        children: (0,jsx_runtime.jsx)(_Initiate_test_5_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"dof-function\",\n      children: \"DOF Function\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can also use \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"DOF()\"\n      }), \" function for the constructing the DOF object.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"܀ See example\",\n        children: (0,jsx_runtime.jsx)(_Initiate_test_6_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"dof_pointer\",\n      children: \"DOF_Pointer\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"We can also use \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"DOF_Pointer()\"\n      }), \" function for get a pointer to a newly created an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"DOF_\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"܀ See example\",\n        children: (0,jsx_runtime.jsx)(_Initiate_test_7_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    })]\n  });\n}\nfunction Initiate_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(Initiate_createMdxContent, {\n      ...props\n    })\n  }) : Initiate_createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/DOF/Initiate.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);