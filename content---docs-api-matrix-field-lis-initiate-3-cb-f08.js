"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-matrix-field-lis-initiate-3-cb-f08"],{

/***/ "./docs/docs-api/MatrixFieldLis/Initiate.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_matrix_field_lis_initiate_md_3cb_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-matrix-field-lis-initiate-md-3cb.json\nconst site_docs_docs_api_matrix_field_lis_initiate_md_3cb_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"MatrixFieldLis/Initiate\",\"title\":\"Initiate\",\"description\":\"This method constructs an instance of AbstractMatrixField.\",\"source\":\"@site/docs/docs-api/MatrixFieldLis/Initiate.md\",\"sourceDirName\":\"MatrixFieldLis\",\"slug\":\"/MatrixFieldLis/Initiate\",\"permalink\":\"/docs-api/MatrixFieldLis/Initiate\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/MatrixFieldLis/Initiate.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Import\",\"permalink\":\"/docs-api/MatrixFieldLis/Import\"},\"next\":{\"title\":\"IsPreconditionSet\",\"permalink\":\"/docs-api/MatrixFieldLis/IsPreconditionSet\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/MatrixFieldLis/Initiate.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'Initiate';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    input: \"input\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"initiate\",\n        children: \"Initiate\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This method constructs an instance of AbstractMatrixField.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Calling examples:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Initiate( AbstractMatrixField_ :: obj, ParameterList_ :: param, Domain_ :: dom )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Initiate( &\\n  & AbstractMatrixField_ :: obj, &\\n  & AbstractMatrixField_ :: obj2 &\\n  <& , Bool::copyFull> &\\n  <& , Bool::copyStructure> &\\n  <& , Bool :: usePointer> )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Initiate( &\\n  & AbstractMatrixField_ :: obj, &\\n  & ParameterList_ :: param, &\\n  & DomainPointer_ :: dom)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"1\",\n        label: \"Interface 1\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\nSUBROUTINE Initiate( obj, param, dom )\\n  CLASS( AbstractMatrixField_ ), INTENT( INOUT ) :: obj\\n  TYPE( ParameterList_), INTENT( IN ) :: param\\n  TYPE( Domain_ ), TARGET, INTENT( IN ) :: dom\\nEND SUBROUTINE Initiate\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"This routine creates a square sparse matrix.\"\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine initiates an instance of \", (0,jsx_runtime.jsx)(_components.a, {\n            href: \"/docs-api/MatrixField/MatrixField_\",\n            children: \"MatrixField_\"\n          }), \".\\nThe options/arguments to initiate the matrix field are\\ncontained inside param, which is an instance of \", (0,jsx_runtime.jsx)(_components.a, {\n            href: \"/docs-api/ParameterList/ParameterList_\",\n            children: \"ParameterList_\"\n          }), \".\\nIn addition, \", (0,jsx_runtime.jsx)(_components.a, {\n            href: \"/docs-api/Domain/Domain_\",\n            children: \"Domain_\"\n          }), \" \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"dom\"\n          }), \" is target to the pointer \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"obj%domain\"\n          }), \".\"]\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"Param contains both essential and optional parameters which are used in\\nconstructing the matrix field\"\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"dom is a pointer to a domain, where we are interested in constructing the\\nmatrix\"\n          }), \"\\n\"]\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"ESSENTIAL PARAMETERS are\"\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"name\"\n            }), \" This is name of field (char)\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"matrixProp\"\n            }), \", UNSYM, SYM (char)\"]\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"engine\"\n            })\n          }), \"\\n\"]\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"OPTIONAL PARAMETERS\"\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"spaceCompo\"\n            }), \", INT, default is 1\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"timeCompo\"\n            }), \", INT, default is 1\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"fieldType\"\n            }), \", INT, default is FIELD_TYPE_NORMAL\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"Ü€ Examples\",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"2\",\n        label: \"Interface 2\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\nSUBROUTINE Initiate( obj, obj2, copyFull, copyStructure, &\\n  & usePointer )\\n  CLASS( AbstractMatrixField_ ), INTENT( INOUT ) :: obj\\n  CLASS( AbstractMatrixField_ ), INTENT( INOUT ) :: obj2\\n  LOGICAL( LGT ), OPTIONAL, INTENT( IN ) :: copyFull\\n  LOGICAL( LGT ), OPTIONAL, INTENT( IN ) :: copyStructure\\n  LOGICAL( LGT ), OPTIONAL, INTENT( IN ) :: usePointer\\nEND SUBROUTINE Initiate\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"Initiate by copying from other fields. This routine initiates the \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"obj\"\n          }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n            href: \"/docs-api/MatrixFieldLis/MatrixFieldLis_\",\n            children: \"MatrixFieldLis_\"\n          }), \" by copying contents from \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"obj2\"\n          }), \", an instance of child class of \", (0,jsx_runtime.jsx)(_components.a, {\n            href: \"/docs-api/AbstractField/AbstractField_\",\n            children: \"AbstractField_\"\n          }), \".\"]\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"In this way we try to minimize the computation effort.\"\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"copyFull, copyStructure, usePointer\"\n          }), \" are absent then this subroutine,\\ncopies the value of the matrix from obj2 to obj.\"]\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"At present, the routine works for \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"copyFull=.TRUE., copyStructure=.TRUE., usePointer=.TRUE.\"\n          }), \", which equivalent to the default behavior.\"]\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            className: \"task-list-item\",\n            children: [(0,jsx_runtime.jsx)(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \"TODO Add functionality for other options too.\"]\n          }), \"\\n\"]\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"note\",\n          children: (0,jsx_runtime.jsxs)(_components.p, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"obj2\"\n            }), \" should be an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"MatrixField_\"\n            })]\n          })\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"Ü€ Examples\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"3\",\n        label: \"Interface 3\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE Initiate(obj, param, dom)\\n    CLASS(AbstractMatrixField_), INTENT(INOUT) :: obj\\n    TYPE(ParameterList_), INTENT(IN) :: param\\n    TYPE(DomainPointer_), TARGET, INTENT(IN) :: dom(:)\\n  END SUBROUTINE Initiate\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"This routine can only construct a rectangle matrix.\"\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"The matrix has a block struture, wherein, col and rows corresponds to the different physical variables.\"\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"Total number of physical variables can be atmost 2.\"\n          }), \"\\n\"]\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"The rectan\"\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"Ü€ Examples\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/MatrixFieldLis/Initiate.md\n");

/***/ })

}]);