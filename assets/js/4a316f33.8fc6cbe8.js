"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[97132],{59804:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>I,frontMatter:()=>d,metadata:()=>i,toc:()=>N});const i=JSON.parse('{"id":"IntegerUtility/RemoveDuplicates","title":"RemoveDuplicates","description":"This routine removes duplicate entries from the set of integer.","source":"@site/docs/docs-api/IntegerUtility/RemoveDuplicates.md","sourceDirName":"IntegerUtility","slug":"/IntegerUtility/RemoveDuplicates","permalink":"/docs-api/IntegerUtility/RemoveDuplicates","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/IntegerUtility/RemoveDuplicates.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"IsIn","permalink":"/docs-api/IntegerUtility/IsIn"},"next":{"title":"Repeat","permalink":"/docs-api/IntegerUtility/RepeatMe"}}');var s=t(23420),o=t(54213);function r(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["This example shows the usage of ",(0,s.jsx)(n.code,{children:"RemoveDuplicates"})," method which is defined in ",(0,s.jsx)(n.code,{children:"IntegerUtility"})," MODULE"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifembase\n  implicit none\n  integer(i4b), allocatable :: intvec( : )\n  intvec = [ 5, 4, 4, 4, 3, 3, 2, 2, 1, 1, 1 ]\n  call RemoveDuplicates( intvec )\n  call display( intvec, "intvec = " )\nend program main\n'})}),"\n",(0,s.jsx)(n.h2,{id:"results",children:"Results"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"intvec = \n---------\n    1    \n    2    \n    3    \n    4    \n    5\n"})})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}function c(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifembase\n\nIMPLICIT NONE\n\nINTEGER(i4b), ALLOCATABLE :: intvec(:)\nINTEGER(I4B) :: tsize\nintvec = [5, 4, 4, 4, 3, 3, 2, 2, 1, 1, 1]\n\nCALL RemoveDuplicates_(intvec, tsize, .FALSE.)\nCALL Display(intvec(1:tsize), "intvec = ")\nEND PROGRAM main\n'})})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}const d={},u="RemoveDuplicates",p={},N=[{value:"Interface",id:"interface",level:2},{value:"Results",id:"results",level:2},{value:"Interface 2",id:"interface-2",level:2}];function E(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components},{TabItem:t,Tabs:i}=n;return t||T("TabItem",!0),i||T("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"removeduplicates",children:"RemoveDuplicates"})}),"\n",(0,s.jsx)(n.p,{children:"This routine removes duplicate entries from the set of integer."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"RemoveDuplicates"})," will perform reallocation. If you do not want reallocation then use ",(0,s.jsx)(n.code,{children:"RemoveDuplicates_"})]})}),"\n",(0,s.jsx)(n.p,{children:"Calling example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"CALL RemoveDuplicates(avec)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Without reallocation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"CALL RemoveDuplicates_(avec, tsize, isSorted)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)(t,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"INTERFACE RemoveDuplicates\n  MODULE PURE SUBROUTINE RemoveDuplicates_1a(obj)\n    INTEGER(INT8), ALLOCATABLE, INTENT(INOUT) :: obj(:)\n  END SUBROUTINE RemoveDuplicates_1a\n  MODULE PURE SUBROUTINE RemoveDuplicates_1b(obj)\n    INTEGER(INT16), ALLOCATABLE, INTENT(INOUT) :: obj(:)\n  END SUBROUTINE RemoveDuplicates_1b\n  MODULE PURE SUBROUTINE RemoveDuplicates_1c(obj)\n    INTEGER(INT32), ALLOCATABLE, INTENT(INOUT) :: obj(:)\n  END SUBROUTINE RemoveDuplicates_1c\n  MODULE PURE SUBROUTINE RemoveDuplicates_1d(obj)\n    INTEGER(INT64), ALLOCATABLE, INTENT(INOUT) :: obj(:)\n  END SUBROUTINE RemoveDuplicates_1d\nEND INTERFACE RemoveDuplicates\n"})})}),(0,s.jsx)(t,{value:"example",label:"\ufe0f\u0700 See example",children:(0,s.jsx)(a,{})}),(0,s.jsx)(t,{value:"close",label:"\u21a2 "})]}),"\n",(0,s.jsx)(n.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)(t,{value:"interface",label:"Interface",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"INTERFACE RemoveDuplicates_\n  MODULE PURE SUBROUTINE RemoveDuplicates_1a_(obj, tsize, isSorted)\n    INTEGER(INT8), INTENT(INOUT) :: obj(:)\n    !! obj(1:tsize) will have unique entries\n    LOGICAL(LGT), INTENT(IN) :: isSorted\n    !! if obj is sorted then set isSorted to true\n    INTEGER(I4B), INTENT(OUT) :: tsize\n    !! number of unique entries found\n  END SUBROUTINE RemoveDuplicates_1a_\n\n  MODULE PURE SUBROUTINE RemoveDuplicates_1b_(obj, tsize, isSorted)\n    INTEGER(INT16), INTENT(INOUT) :: obj(:)\n    !! obj(1:tsize) will have unique entries\n    LOGICAL(LGT), INTENT(IN) :: isSorted\n    !! if obj is sorted then set isSorted to true\n    INTEGER(I4B), INTENT(OUT) :: tsize\n    !! number of unique entries found\n  END SUBROUTINE RemoveDuplicates_1b_\n\n  MODULE PURE SUBROUTINE RemoveDuplicates_1c_(obj, tsize, isSorted)\n    INTEGER(INT32), INTENT(INOUT) :: obj(:)\n    !! obj(1:tsize) will have unique entries\n    LOGICAL(LGT), INTENT(IN) :: isSorted\n    !! if obj is sorted then set isSorted to true\n    INTEGER(I4B), INTENT(OUT) :: tsize\n    !! number of unique entries found\n  END SUBROUTINE RemoveDuplicates_1c_\n\n  MODULE PURE SUBROUTINE RemoveDuplicates_1d_(obj, tsize, isSorted)\n    INTEGER(INT64), INTENT(INOUT) :: obj(:)\n    !! obj(1:tsize) will have unique entries\n    LOGICAL(LGT), INTENT(IN) :: isSorted\n    !! if obj is sorted then set isSorted to true\n    INTEGER(I4B), INTENT(OUT) :: tsize\n    !! number of unique entries found\n  END SUBROUTINE RemoveDuplicates_1d_\n\nEND INTERFACE RemoveDuplicates_\n"})})}),(0,s.jsx)(t,{value:"example",label:"example",children:(0,s.jsx)(l,{})}),(0,s.jsx)(t,{value:"close",label:"\u21a2 close"})]})]})}function I(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(E,{...e})}):E(e)}function T(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},54213:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(36672);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);