"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[44942],{36799:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"AbstractMesh/GetElementToElements","title":"GetElementToElements","description":"Get element to elements connectivity information.","source":"@site/docs/docs-api/AbstractMesh/GetElementToElements.md","sourceDirName":"AbstractMesh","slug":"/AbstractMesh/GetElementToElements","permalink":"/docs-api/AbstractMesh/GetElementToElements","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMesh/GetElementToElements.md","tags":[],"version":"current","lastUpdatedAt":1746669288000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetElemNum","permalink":"/docs-api/AbstractMesh/GetElemNum"},"next":{"title":"GetFacetConnectivity","permalink":"/docs-api/AbstractMesh/GetFacetConnectivity"}}');var o=n(23420),l=n(54213);const i={},r="GetElementToElements",a={},c=[{value:"Interface",id:"interface",level:2}];function m(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"getelementtoelements",children:"GetElementToElements"})}),"\n",(0,o.jsx)(t.p,{children:"Get element to elements connectivity information."}),"\n",(0,o.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-fortran",children:"MODULE PURE FUNCTION getElementToElements(obj, globalElement, &\n  & onlyElements) RESULT(ans)\n  CLASS(Mesh_), INTENT(IN) :: obj\n  !! mesh data\n  INTEGER(I4B), INTENT(IN) :: globalElement\n  !! Global element number\n  LOGICAL(LGT), OPTIONAL, INTENT(IN) :: onlyElements\n  !! If onlyElements is absent or it is FALSE then full information\n  !! about the elements connected to element iel is given\n  !! If onlyElements is present and it is TRUE then only the\n  !! information about the elements connected to element iel is given\n  INTEGER(I4B), ALLOCATABLE :: ans(:, :)\n  !! list of elements surrounding elements\nEND FUNCTION getElementToElements\n"})})]})}function d(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},54213:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var s=n(36672);const o={},l=s.createContext(o);function i(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);