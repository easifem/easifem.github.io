"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[55598],{53074:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>E,frontMatter:()=>t,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"AbstractOrthopolSpace1D/index","title":"AbstractOrthoSpace1D","description":"Full name: AbstractOrthopolSpace1D","source":"@site/docs/docs-api/AbstractOrthopolSpace1D/index.md","sourceDirName":"AbstractOrthopolSpace1D","slug":"/AbstractOrthopolSpace1D/","permalink":"/docs-api/AbstractOrthopolSpace1D/","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractOrthopolSpace1D/index.md","tags":[{"inline":true,"label":"easifemClasses","permalink":"/docs-api/tags/easifem-classes"},{"inline":true,"label":"shapeFunctions","permalink":"/docs-api/tags/shape-functions"},{"inline":true,"label":"basis","permalink":"/docs-api/tags/basis"},{"inline":true,"label":"orthogonalBasis","permalink":"/docs-api/tags/orthogonal-basis"},{"inline":true,"label":"higher-order","permalink":"/docs-api/tags/higher-order"}],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"date":"2023-08-04T00:00:00.000Z","update":"2023-08-04T00:00:00.000Z","status":"stable","docs":"done","extpkgs":"none","category":["Basis","ShapeFunctions"],"tags":["easifemClasses","shapeFunctions","basis","orthogonalBasis","higher-order"]},"sidebar":"tutorialSidebar","previous":{"title":"Structure","permalink":"/docs-api/AbstractOrthopol1D/AbstractOrthopol1D_"},"next":{"title":"Structure","permalink":"/docs-api/AbstractOrthopolSpace1D/AbstractOrthopolSpace1D_"}}');var r=s(23420),l=s(54213);const t={sidebar_position:1,date:new Date("2023-08-04T00:00:00.000Z"),update:new Date("2023-08-04T00:00:00.000Z"),status:"stable",docs:"done",extpkgs:"none",category:["Basis","ShapeFunctions"],tags:["easifemClasses","shapeFunctions","basis","orthogonalBasis","higher-order"]},o="AbstractOrthoSpace1D",i={},c=[{value:"Structure",id:"structure",level:2},{value:"Methods",id:"methods",level:2},{value:"Deallocate",id:"deallocate",level:3},{value:"SetParam",id:"setparam",level:3},{value:"Display",id:"display",level:3},{value:"GetRecurrenceCoeff",id:"getrecurrencecoeff",level:3},{value:"GetRecurrenceCoeff2",id:"getrecurrencecoeff2",level:3},{value:"GetAlpha",id:"getalpha",level:3},{value:"GetBeta",id:"getbeta",level:3},{value:"GetLeadingCoeff",id:"getleadingcoeff",level:3},{value:"GetLeadingCoeffRatio",id:"getleadingcoeffratio",level:3},{value:"GetNormSqr",id:"getnormsqr",level:3},{value:"GetNormSqr2",id:"getnormsqr2",level:3},{value:"GetNormSqrRatio",id:"getnormsqrratio",level:3},{value:"GetZeros",id:"getzeros",level:3},{value:"GetQuadrature",id:"getquadrature",level:3},{value:"EvalAll",id:"evalall",level:3},{value:"Eval",id:"eval",level:3},{value:"EvalSum",id:"evalsum",level:3},{value:"EvalSum",id:"evalsum-1",level:3},{value:"GradientEvalAll",id:"gradientevalall",level:3},{value:"GradientEval",id:"gradienteval",level:3},{value:"GradientEvalSum",id:"gradientevalsum",level:3},{value:"Transform",id:"transform",level:3},{value:"InvTransform",id:"invtransform",level:3},{value:"GradientCoeff",id:"gradientcoeff",level:3},{value:"DMatrix",id:"dmatrix",level:3}];function N(n){const e={annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msub:"msub",p:"p",pre:"pre",semantics:"semantics",span:"span",...(0,l.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"abstractorthospace1d",children:"AbstractOrthoSpace1D"})}),"\n",(0,r.jsx)("span",{class:"badge badge--primary",children:"Full name: AbstractOrthopolSpace1D "}),"\n",(0,r.jsx)(e.h2,{id:"structure",children:"Structure"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"TYPE, ABSTRACT :: AbstractOrthopolSpace1D_\n  PRIVATE\n  REAL(DFP) :: domain(2) = [-1.0_DFP, 1.0_DFP]\n    !! domain of orthogonal polynomials\nCONTAINS\n"})}),"\n",(0,r.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(e.h3,{id:"deallocate",children:"Deallocate"}),"\n",(0,r.jsx)(e.p,{children:"Deallocate the object"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE Deallocate(obj)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(INOUT) :: obj\n  END SUBROUTINE Deallocate\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"setparam",children:"SetParam"}),"\n",(0,r.jsx)(e.p,{children:"Set the parameters"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE SetParam(obj, domain)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(INOUT) :: obj\n    REAL(DFP), OPTIONAL, INTENT(IN) :: domain(2)\n  END SUBROUTINE SetParam\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"display",children:"Display"}),"\n",(0,r.jsx)(e.p,{children:"Display the contents"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE Display(obj, msg, unitno)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(INOUT) :: obj\n    CHARACTER(LEN=*), INTENT(IN) :: msg\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: unitno\n  END SUBROUTINE Display\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getrecurrencecoeff",children:"GetRecurrenceCoeff"}),"\n",(0,r.jsx)(e.p,{children:"Returns the recurrence coefficient of monic polynomials"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetRecurrenceCoeff(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans(0:n - 1, 1:2)\n    !! ans(:,1) = alpha\n    !! ans(:,2) = beta\n  END FUNCTION GetRecurrenceCoeff\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getrecurrencecoeff2",children:"GetRecurrenceCoeff2"}),"\n",(0,r.jsx)(e.p,{children:"Returns the recurrence coefficient of standard polynomials."}),"\n",(0,r.jsx)(e.span,{className:"katex-display",children:(0,r.jsxs)(e.span,{className:"katex",children:[(0,r.jsx)(e.span,{className:"katex-mathml",children:(0,r.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,r.jsxs)(e.semantics,{children:[(0,r.jsxs)(e.mrow,{children:[(0,r.jsxs)(e.msub,{children:[(0,r.jsx)(e.mi,{children:"p"}),(0,r.jsxs)(e.mrow,{children:[(0,r.jsx)(e.mi,{children:"n"}),(0,r.jsx)(e.mo,{children:"+"}),(0,r.jsx)(e.mn,{children:"1"})]})]}),(0,r.jsx)(e.mo,{children:"="}),(0,r.jsx)(e.mo,{stretchy:"false",children:"("}),(0,r.jsxs)(e.msub,{children:[(0,r.jsx)(e.mi,{children:"a"}),(0,r.jsx)(e.mi,{children:"n"})]}),(0,r.jsx)(e.mi,{children:"x"}),(0,r.jsx)(e.mo,{children:"+"}),(0,r.jsxs)(e.msub,{children:[(0,r.jsx)(e.mi,{children:"b"}),(0,r.jsx)(e.mi,{children:"n"})]}),(0,r.jsx)(e.mo,{stretchy:"false",children:")"}),(0,r.jsxs)(e.msub,{children:[(0,r.jsx)(e.mi,{children:"p"}),(0,r.jsx)(e.mi,{children:"n"})]}),(0,r.jsx)(e.mo,{children:"\u2212"}),(0,r.jsxs)(e.msub,{children:[(0,r.jsx)(e.mi,{children:"c"}),(0,r.jsx)(e.mi,{children:"n"})]}),(0,r.jsxs)(e.msub,{children:[(0,r.jsx)(e.mi,{children:"p"}),(0,r.jsxs)(e.mrow,{children:[(0,r.jsx)(e.mi,{children:"n"}),(0,r.jsx)(e.mo,{children:"\u2212"}),(0,r.jsx)(e.mn,{children:"1"})]})]})]}),(0,r.jsx)(e.annotation,{encoding:"application/x-tex",children:"p_{n+1} = (a_{n}x+b_{n})p_{n}-c_{n}p_{n-1}"})]})})}),(0,r.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"0.6389em",verticalAlign:"-0.2083em"}}),(0,r.jsxs)(e.span,{className:"mord",children:[(0,r.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,r.jsx)(e.span,{className:"msupsub",children:(0,r.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,r.jsxs)(e.span,{className:"vlist-r",children:[(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.3011em"},children:(0,r.jsxs)(e.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,r.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsxs)(e.span,{className:"mord mtight",children:[(0,r.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"}),(0,r.jsx)(e.span,{className:"mbin mtight",children:"+"}),(0,r.jsx)(e.span,{className:"mord mtight",children:"1"})]})})]})}),(0,r.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,r.jsx)(e.span,{className:"vlist-r",children:(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.2083em"},children:(0,r.jsx)(e.span,{})})})]})})]}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(e.span,{className:"mrel",children:"="}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(e.span,{className:"mopen",children:"("}),(0,r.jsxs)(e.span,{className:"mord",children:[(0,r.jsx)(e.span,{className:"mord mathnormal",children:"a"}),(0,r.jsx)(e.span,{className:"msupsub",children:(0,r.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,r.jsxs)(e.span,{className:"vlist-r",children:[(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.1514em"},children:(0,r.jsxs)(e.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,r.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsx)(e.span,{className:"mord mtight",children:(0,r.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"})})})]})}),(0,r.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,r.jsx)(e.span,{className:"vlist-r",children:(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.15em"},children:(0,r.jsx)(e.span,{})})})]})})]}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(e.span,{className:"mbin",children:"+"}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsxs)(e.span,{className:"mord",children:[(0,r.jsx)(e.span,{className:"mord mathnormal",children:"b"}),(0,r.jsx)(e.span,{className:"msupsub",children:(0,r.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,r.jsxs)(e.span,{className:"vlist-r",children:[(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.1514em"},children:(0,r.jsxs)(e.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,r.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsx)(e.span,{className:"mord mtight",children:(0,r.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"})})})]})}),(0,r.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,r.jsx)(e.span,{className:"vlist-r",children:(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.15em"},children:(0,r.jsx)(e.span,{})})})]})})]}),(0,r.jsx)(e.span,{className:"mclose",children:")"}),(0,r.jsxs)(e.span,{className:"mord",children:[(0,r.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,r.jsx)(e.span,{className:"msupsub",children:(0,r.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,r.jsxs)(e.span,{className:"vlist-r",children:[(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.1514em"},children:(0,r.jsxs)(e.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,r.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsx)(e.span,{className:"mord mtight",children:(0,r.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"})})})]})}),(0,r.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,r.jsx)(e.span,{className:"vlist-r",children:(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.15em"},children:(0,r.jsx)(e.span,{})})})]})})]}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"0.6389em",verticalAlign:"-0.2083em"}}),(0,r.jsxs)(e.span,{className:"mord",children:[(0,r.jsx)(e.span,{className:"mord mathnormal",children:"c"}),(0,r.jsx)(e.span,{className:"msupsub",children:(0,r.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,r.jsxs)(e.span,{className:"vlist-r",children:[(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.1514em"},children:(0,r.jsxs)(e.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,r.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsx)(e.span,{className:"mord mtight",children:(0,r.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"})})})]})}),(0,r.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,r.jsx)(e.span,{className:"vlist-r",children:(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.15em"},children:(0,r.jsx)(e.span,{})})})]})})]}),(0,r.jsxs)(e.span,{className:"mord",children:[(0,r.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,r.jsx)(e.span,{className:"msupsub",children:(0,r.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,r.jsxs)(e.span,{className:"vlist-r",children:[(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.3011em"},children:(0,r.jsxs)(e.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,r.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsxs)(e.span,{className:"mord mtight",children:[(0,r.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"}),(0,r.jsx)(e.span,{className:"mbin mtight",children:"\u2212"}),(0,r.jsx)(e.span,{className:"mord mtight",children:"1"})]})})]})}),(0,r.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,r.jsx)(e.span,{className:"vlist-r",children:(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.2083em"},children:(0,r.jsx)(e.span,{})})})]})})]})]})]})]})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetRecurrenceCoeff2(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans(0:n - 1, 1:3)\n    !! ans(:,1) = a,\n    !! ans(:,2) = b\n    !! ans(:,3) = c\n  END FUNCTION GetRecurrenceCoeff2\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getalpha",children:"GetAlpha"}),"\n",(0,r.jsxs)(e.p,{children:["Returns the recurrence coefficient ",(0,r.jsxs)(e.span,{className:"katex",children:[(0,r.jsx)(e.span,{className:"katex-mathml",children:(0,r.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(e.semantics,{children:[(0,r.jsx)(e.mrow,{children:(0,r.jsx)(e.mi,{children:"\u03b1"})}),(0,r.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\alpha"})]})})}),(0,r.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.0037em"},children:"\u03b1"})]})})]})," of monic polynomials"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetAlpha(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans\n  END FUNCTION GetAlpha\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getbeta",children:"GetBeta"}),"\n",(0,r.jsx)(e.p,{children:"Returns the recurrence coefficient beta of monic polynomials"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetBeta(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans\n  END FUNCTION GetBeta\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getleadingcoeff",children:"GetLeadingCoeff"}),"\n",(0,r.jsx)(e.p,{children:"Returns the leading coeff of orthopol."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetLeadingCoeff(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans\n  END FUNCTION GetLeadingCoeff\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getleadingcoeffratio",children:"GetLeadingCoeffRatio"}),"\n",(0,r.jsx)(e.p,{children:"Returns the ration of leading coeff of orthopol (n+1)/n"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetLeadingCoeffRatio(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans\n  END FUNCTION GetLeadingCoeffRatio\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getnormsqr",children:"GetNormSqr"}),"\n",(0,r.jsx)(e.p,{children:"Returns the ration of leading coeff of orthopol (n+1)/n"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetNormSqr(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans\n  END FUNCTION GetNormSqr\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getnormsqr2",children:"GetNormSqr2"}),"\n",(0,r.jsx)(e.p,{children:"Returns the ratio of leading coeff of orthopol (n+1)/n"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetNormSqr2(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans(0:n)\n  END FUNCTION GetNormSqr2\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getnormsqrratio",children:"GetNormSqrRatio"}),"\n",(0,r.jsx)(e.p,{children:"Returns the ratio of square of norm of orthopol (n+1)/n"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetNormSqrRatio(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans\n  END FUNCTION GetNormSqrRatio\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getzeros",children:"GetZeros"}),"\n",(0,r.jsx)(e.p,{children:"Returns the zeros of orthopol"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE FUNCTION GetZeros(obj, n) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    REAL(DFP) :: ans(n)\n  END FUNCTION GetZeros\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"getquadrature",children:"GetQuadrature"}),"\n",(0,r.jsx)(e.p,{children:"Returns the zeros of orthopol"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE FUNCTION GetQuadrature(obj, n, quadType) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! number of points\n    INTEGER(I4B), INTENT(IN) :: quadType\n    !! Gauss, GaussRadauLeft, GaussRadauRight, GaussLobatto\n    REAL(DFP) :: ans(n, 2)\n    !! ans(:,1) = points\n    !! ans(:,2) = weights\n  END FUNCTION GetQuadrature\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"evalall",children:"EvalAll"}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the orthopol (0 to n) at single point."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION EvalAll(obj, n, x) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x\n    !! point of evaluation\n    REAL(DFP) :: ans(n + 1)\n  END FUNCTION EvalAll\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the orthopol (0 to n) at several points."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION EvalAll(obj, n, x) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! point of evaluation\n    REAL(DFP) :: ans(SIZE(x), n + 1)\n    !! Evaluate orthopol of order = 0 to n (total n+1) at point x\n  END FUNCTION EvalAll\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"eval",children:"Eval"}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the orthopol (order = n ) at single point."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION Eval(obj, n, x) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x\n    !! point of evaluation\n    REAL(DFP) :: ans\n  END FUNCTION Eval\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the orthopol (order=n) at several points."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION Eval(obj, n, x) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! point of evaluation\n    REAL(DFP) :: ans(SIZE(x))\n    !! Evaluate orthopol of order = n at several points\n  END FUNCTION Eval\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"evalsum",children:"EvalSum"}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the orthopol series at single point."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION EvalSum(obj, n, x, coeff) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x\n    !! point of evaluation\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! Coefficient of finite sum\n    REAL(DFP) :: ans\n  END FUNCTION EvalSum\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"evalsum-1",children:"EvalSum"}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the orthopol series at several points."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION EvalSum(obj, n, x, coeff) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! point of evaluation\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! Coefficient of finite sum\n    REAL(DFP) :: ans(SIZE(x))\n  END FUNCTION EvalSum\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"gradientevalall",children:"GradientEvalAll"}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the gradient of orthopol (0 to n) at single point."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GradientEvalAll(obj, n, x) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x\n    !! point of evaluation\n    REAL(DFP) :: ans(n + 1)\n  END FUNCTION GradientEvalAll\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the gradient of orthopol (0 to n) at several points."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GradientEvalAll(obj, n, x) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! point of evaluation\n    REAL(DFP) :: ans(SIZE(x), n + 1)\n    !! Evaluate orthopol of order = 0 to n (total n+1) at point x\n  END FUNCTION GradientEvalAll\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"gradienteval",children:"GradientEval"}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the gradient orthopol (order = n ) at single point."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GradientEval(obj, n, x) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x\n    !! point of evaluation\n    REAL(DFP) :: ans\n  END FUNCTION GradientEval\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the gradient orthopol (order=n) at several points."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"NTERFACE\n  MODULE PURE FUNCTION GradientEval(obj, n, x) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! point of evaluation\n    REAL(DFP) :: ans(SIZE(x))\n    !! Evaluate orthopol of order = n at several points\n  END FUNCTION GradientEval\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"gradientevalsum",children:"GradientEvalSum"}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the gradient of orthopol series at single point."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GradientEvalSum(obj, n, x, coeff) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x\n    !! point of evaluation\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! Coefficient of finite sum\n    REAL(DFP) :: ans\n  END FUNCTION GradientEvalSum\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the gradient of orthopol series at several points."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GradientEvalSum(obj, n, x, coeff) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! point of evaluation\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! Coefficient of finite sum\n    REAL(DFP) :: ans(SIZE(x))\n  END FUNCTION GradientEvalSum\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the kth order gradient of orthopol series at single point."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GradientEvalSum(obj, n, x, coeff, k) &\n    & RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x\n    !! point of evaluation\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! Coefficient of finite sum\n    INTEGER(I4B), INTENT(IN) :: k\n    !! order of derivative\n    REAL(DFP) :: ans\n  END FUNCTION GradientEvalSum\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.p,{children:"Evaluates the kth order gradient of orthopol series at several points."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GradientEvalSum(obj, n, x, coeff, k) &\n    & RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of orthopol\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! point of evaluation\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! Coefficient of finite sum\n    INTEGER(I4B), INTENT(IN) :: k\n    !! order of derivative\n    REAL(DFP) :: ans(SIZE(x))\n  END FUNCTION GradientEvalSum\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"transform",children:"Transform"}),"\n",(0,r.jsx)(e.p,{children:"Discrete Orthopol Transform"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION Transform(obj, n, coeff, x, w, quadType) &\n    & RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of jacobi polynomial\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! nodal value (at quad points)\n    REAL(DFP), INTENT(IN) :: x(0:n)\n    !! quadrature points\n    REAL(DFP), INTENT(IN) :: w(0:n)\n    !! weights\n    INTEGER(I4B), INTENT(IN) :: quadType\n    !! Quadrature type\n    !! Gauss, GaussLobatto, GaussRadauLeft\n    !! GaussRadauRight\n    REAL(DFP) :: ans(0:n)\n    !! modal values  or coefficients\n  END FUNCTION Transform\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.p,{children:"Discrete orthopol Transform of a function"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE FUNCTION Transform(obj, n, f, quadType) &\n    & RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    !! orthopol\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of jacobi polynomial\n    PROCEDURE(iface_1DFunction), POINTER, INTENT(IN) :: f\n    !! 1D space function\n    INTEGER(I4B), INTENT(IN) :: quadType\n    !! Quadrature type, Gauss, GaussLobatto, GaussRadau, GaussRadauLeft\n    !! GaussRadauRight\n    REAL(DFP) :: ans(0:n)\n    !! modal values  or coefficients\n  END FUNCTION Transform\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"invtransform",children:"InvTransform"}),"\n",(0,r.jsx)(e.p,{children:"Discrete Jacobi Inverse Transform"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION InvTransform(obj, n, coeff, x) &\n    & RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    !! orthopol\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of Jacobi polynomial\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! n+1  coefficient (modal values)\n    REAL(DFP), INTENT(IN) :: x\n    !! x point in physical space\n    REAL(DFP) :: ans\n    !! value in physical space\n  END FUNCTION InvTransform\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.p,{children:"Discrete Jacobi Inverse Transform"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION InvTransform(obj, n, coeff, x) &\n    & RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    !! orthopol\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of Jacobi polynomial\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! n+1  coefficient (modal values)\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! x point in physical space\n    REAL(DFP) :: ans(SIZE(x))\n    !! value in physical space\n  END FUNCTION InvTransform\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"gradientcoeff",children:"GradientCoeff"}),"\n",(0,r.jsx)(e.p,{children:"Returns coefficient for gradient of orthopol expansion"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GradientCoeff(obj, n, coeff) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    !! orthopol\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of Jacobi polynomial\n    REAL(DFP), INTENT(IN) :: coeff(0:n)\n    !! coefficients $\\tilde{u}_{n}$ obtained from JacobiTransform\n    REAL(DFP) :: ans(0:n)\n    !! coefficient of gradient\n  END FUNCTION GradientCoeff\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(e.h3,{id:"dmatrix",children:"DMatrix"}),"\n",(0,r.jsx)(e.p,{children:"Returns coefficient for gradient of Jacobi expansion"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION DMatrix(obj, n, x, quadType) RESULT(ans)\n    CLASS(AbstractOrthopolSpace1D_), INTENT(IN) :: obj\n    !! orthpol\n    INTEGER(I4B), INTENT(IN) :: n\n      !! order of Jacobi polynomial\n    REAL(DFP), INTENT(IN) :: x(0:n)\n      !! quadrature points\n    INTEGER(I4B), INTENT(IN) :: quadType\n      !! Gauss and GaussLobatto\n    REAL(DFP) :: ans(0:n, 0:n)\n      !! D matrix\n  END FUNCTION DMatrix\nEND INTERFACE\n"})})]})}function E(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(N,{...n})}):N(n)}},54213:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>o});var a=s(36672);const r={},l=a.createContext(r);function t(n){const e=a.useContext(l);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),a.createElement(l.Provider,{value:e},n.children)}}}]);