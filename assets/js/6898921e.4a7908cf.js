"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[99813],{91458:(n,e,i)=>{i.d(e,{Ay:()=>r,RM:()=>s});var o=i(23420),t=i(54213);const s=[];function a(n){const e={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,t.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.admonition,{type:"info",children:(0,o.jsx)(e.p,{children:"This program initiates an instance of LinearElasticModel by\nreading config from toml."})}),"\n",(0,o.jsx)(e.p,{children:"The config is given below. It is for isotropic elasticity type."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-toml",children:'[linearElasticModel1]\nname = "linearElasticModel"\n# name of the model\n\nelasticityType = "ISO"\n# elasticity type, default is "ISO".\n\npoissonRatio = 0.1\n# Poisson\'s Ratio, it is necessary when elasticityType is ISO\nyoungsModulus = 1.0\n# Young\'s Modulus, it is necessary when elasticityType is ISO\n'})}),"\n",(0,o.jsxs)(i,{children:[(0,o.jsx)("summary",{children:"See program"}),(0,o.jsx)("div",{children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nUSE easifemClasses\nUSE easifemMaterials\n\nTYPE(LinearElasticModel_) :: obj\nCHARACTER(*), PARAMETER :: filename = "./LinearElasticModel.toml"\nCHARACTER(*), PARAMETER :: tomlName = "linearElasticModel1"\n\nCALL FPL_Init\n\nCALL obj%ImportFromToml2(tomlName=tomlName, filename=filename,  &\n  & printToml=.TRUE.)\nCALL obj%Display("[1]"//CHAR_LF)\n\nCALL FPL_Finalize\n\nEND PROGRAM main\n'})})})]})]})}function r(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(a,{...n})}):a(n)}},26811:(n,e,i)=>{i.d(e,{Ay:()=>r,RM:()=>s});var o=i(23420),t=i(54213);const s=[];function a(n){const e={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,t.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.admonition,{type:"info",children:(0,o.jsx)(e.p,{children:"This program initiates an instance of LinearElasticModel by\nreading config from toml."})}),"\n",(0,o.jsx)(e.p,{children:"The config is given below. It is for isotropic elasticity type and plane-stress."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-toml",children:'[linearElasticModel2]\nname = "linearElasticModel"\n# name of the model\n\nisPlaneStress = true\n# set it to true for plane-stress formulation\n# the default is false\n\nelasticityType = "ISO"\n# elasticity type, default is "ISO".\n\npoissonRatio = 0.1\n# Poisson\'s Ratio, it is necessary when elasticityType is ISO\nyoungsModulus = 1.0\n# Young\'s Modulus, it is necessary when elasticityType is ISO\n'})}),"\n",(0,o.jsxs)(i,{children:[(0,o.jsx)("summary",{children:"See program"}),(0,o.jsx)("div",{children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nUSE easifemClasses\nUSE easifemMaterials\n\nTYPE(LinearElasticModel_) :: obj\nCHARACTER(*), PARAMETER :: filename = "./LinearElasticModel.toml"\nCHARACTER(*), PARAMETER :: tomlName = "linearElasticModel2"\n\nCALL FPL_Init\n\nCALL obj%ImportFromToml2(tomlName=tomlName, filename=filename,  &\n  & printToml=.TRUE.)\nCALL obj%Display("[2]"//CHAR_LF)\n\nCALL FPL_Finalize\n\nEND PROGRAM main\n'})})})]})]})}function r(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(a,{...n})}):a(n)}},35492:(n,e,i)=>{i.d(e,{Ay:()=>r,RM:()=>s});var o=i(23420),t=i(54213);const s=[];function a(n){const e={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,t.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.admonition,{type:"info",children:(0,o.jsx)(e.p,{children:"This program initiates an instance of LinearElasticModel by\nreading config from toml."})}),"\n",(0,o.jsx)(e.p,{children:"The config is given below. It is for isotropic elasticity type and plane-strain."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-toml",children:'[linearElasticModel3]\nname = "linearElasticModel"\n# name of the model\n\nisPlaneStrain = true\n# set it to true for plane-stress formulation\n# the default is false\n\nelasticityType = "ISO"\n# elasticity type, default is "ISO".\n\npoissonRatio = 0.1\n# Poisson\'s Ratio, it is necessary when elasticityType is ISO\nyoungsModulus = 1.0\n# Young\'s Modulus, it is necessary when elasticityType is ISO\n'})}),"\n",(0,o.jsxs)(i,{children:[(0,o.jsx)("summary",{children:"See program"}),(0,o.jsx)("div",{children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nUSE easifemClasses\nUSE easifemMaterials\n\nTYPE(LinearElasticModel_) :: obj\nCHARACTER(*), PARAMETER :: filename = "./LinearElasticModel.toml"\nCHARACTER(*), PARAMETER :: tomlName = "linearElasticModel3"\n\nCALL FPL_Init\n\nCALL obj%ImportFromToml2(tomlName=tomlName, filename=filename,  &\n  & printToml=.TRUE.)\nCALL obj%Display("[3]"//CHAR_LF)\n\nCALL FPL_Finalize\n\nEND PROGRAM main\n'})})})]})]})}function r(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(a,{...n})}):a(n)}},50044:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>E,contentTitle:()=>y,default:()=>g,frontMatter:()=>u,metadata:()=>o,toc:()=>x});const o=JSON.parse('{"id":"programming-fem/linearElasticity/import_toml","title":"Import from toml","description":"In this section you can learn how construct an instance of LinearElasticModel_ by reading data from the toml-file, and ``ImportFromToml command. You can learn more about the ImportFromToml here.","source":"@site/docs/guides/programming-fem/linearElasticity/import_toml.md","sourceDirName":"programming-fem/linearElasticity","slug":"/programming-fem/linearElasticity/import_toml","permalink":"/guides/programming-fem/linearElasticity/import_toml","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/guides/programming-fem/linearElasticity/import_toml.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Construct by using import","permalink":"/guides/programming-fem/linearElasticity/import_hdf5"},"next":{"title":"Overview","permalink":"/guides/learn-by-examples/"}}');var t=i(23420),s=i(54213),a=i(91458),r=i(26811),l=i(35492);function c(n){const e={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,s.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.admonition,{type:"info",children:(0,t.jsx)(e.p,{children:"This program initiates an instance of LinearElasticModel by\nreading config from toml. The config is given below.\nIt is for isotropic anisotropic elasticity type."})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-toml",children:'[linearElasticModel4]\nname = "linearElasticModel"\n# name of the model\n\nelasticityType = "ANISO"\n# elasticity type, default is "ISO".\n\nc = [\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n]\n# C elasticity tensor\n# It should be 6 by 6\n# For plane-stress and plane-strain case, it can be 3 by 3\n\ninvC = [\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n]\n# inverse of C elasticity tensor\n# It should be 6 by 6\n# For plane-stress and plane-strain case, it can be 3 by 3\n'})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"See program"}),(0,t.jsx)("div",{children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nUSE easifemClasses\nUSE easifemMaterials\n\nTYPE(LinearElasticModel_) :: obj\nCHARACTER(*), PARAMETER :: filename = "./LinearElasticModel.toml"\nCHARACTER(*), PARAMETER :: tomlName = "linearElasticModel4"\n\nCALL FPL_Init\n\nCALL obj%ImportFromToml2(tomlName=tomlName, filename=filename,  &\n  & printToml=.TRUE.)\nCALL obj%Display("[4]"//CHAR_LF)\n\nCALL FPL_Finalize\n\nEND PROGRAM main\n'})})})]})]})}function m(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}function d(n){const e={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,s.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.admonition,{type:"info",children:(0,t.jsx)(e.p,{children:"This program initiates an instance of LinearElasticModel by\nreading config from toml. The config is given below.\nIt is for isotropic anisotropic elasticity type and plane-stress case."})}),"\n",(0,t.jsx)(e.admonition,{type:"note",children:(0,t.jsx)(e.p,{children:"In the case of plane-stress case we only read 3-by-3 block."})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-toml",children:'[linearElasticModel5]\nname = "linearElasticModel"\n# name of the model\n\nelasticityType = "ANISO"\n# elasticity type, default is "ISO".\n\nisPlaneStress = true\n# Plane stress\n\nc = [\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n]\n# C elasticity tensor\n# It should be 6 by 6\n# For plane-stress and plane-strain case, we use only 3 by 3 part\n\ninvC = [\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n]\n# inverse of C elasticity tensor\n# It should be 6 by 6\n# For plane-stress and plane-strain case, we use only 3 by 3 part\n'})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"See program"}),(0,t.jsx)("div",{children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nUSE easifemClasses\nUSE easifemMaterials\n\nTYPE(LinearElasticModel_) :: obj\nCHARACTER(*), PARAMETER :: filename = "./LinearElasticModel.toml"\nCHARACTER(*), PARAMETER :: tomlName = "linearElasticModel5"\n\nCALL FPL_Init\n\nCALL obj%ImportFromToml2(tomlName=tomlName, filename=filename,  &\n  & printToml=.TRUE.)\nCALL obj%Display("[5]"//CHAR_LF)\n\nCALL FPL_Finalize\n\nEND PROGRAM main\n'})})})]})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}function f(n){const e={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,s.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.admonition,{type:"info",children:(0,t.jsx)(e.p,{children:"This program initiates an instance of LinearElasticModel by\nreading config from toml. The config is given below.\nIt is for isotropic anisotropic elasticity type and plane-strain case."})}),"\n",(0,t.jsx)(e.admonition,{type:"note",children:(0,t.jsx)(e.p,{children:"In the case of plane-stress and plane-strain case we only read 3-by-3 block."})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-toml",children:'[linearElasticModel6]\nname = "linearElasticModel"\n# name of the model\n\nelasticityType = "ANISO"\n# elasticity type, default is "ISO".\n\nisPlaneStrain = true\n# Plane strain\n\nc = [\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n]\n# C elasticity tensor\n# It should be 6 by 6\n# For plane-stress and plane-strain case, we use only 3 by 3 part\n\ninvC = [\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n]\n# inverse of C elasticity tensor\n# It should be 6 by 6\n# For plane-stress and plane-strain case, we use only 3 by 3 part\n'})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"See program"}),(0,t.jsx)("div",{children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nUSE easifemClasses\nUSE easifemMaterials\n\nTYPE(LinearElasticModel_) :: obj\nCHARACTER(*), PARAMETER :: filename = "./LinearElasticModel.toml"\nCHARACTER(*), PARAMETER :: tomlName = "linearElasticModel6"\n\nCALL FPL_Init\n\nCALL obj%ImportFromToml2(tomlName=tomlName, filename=filename,  &\n  & printToml=.TRUE.)\nCALL obj%Display("[6]"//CHAR_LF)\n\nCALL FPL_Finalize\n\nEND PROGRAM main\n'})})})]})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(f,{...n})}):f(n)}const u={sidebar_position:8},y="Import from toml",E={},x=[{value:"Details of toml-config",id:"details-of-toml-config",level:2},{value:"Example 1 (Isotropic 3D)",id:"example-1-isotropic-3d",level:2},...a.RM,{value:"Example 2 (Isotropic and plane-stress)",id:"example-2-isotropic-and-plane-stress",level:2},...r.RM,{value:"Example 3 (Isotropic and plane-strain)",id:"example-3-isotropic-and-plane-strain",level:2},...l.RM,{value:"Example 4 (Anisotropic and 3D)",id:"example-4-anisotropic-and-3d",level:2},{value:"Example 5 (Anisotropic and plane-stress)",id:"example-5-anisotropic-and-plane-stress",level:2},{value:"Example 6 (Anisotropic and plane-strain)",id:"example-6-anisotropic-and-plane-strain",level:2}];function j(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"import-from-toml",children:"Import from toml"})}),"\n",(0,t.jsxs)(e.p,{children:["In this section you can learn how construct an instance of ",(0,t.jsx)(e.code,{children:"LinearElasticModel_"})," by reading data from the toml-file, and ``ImportFromToml command. You can learn more about the ",(0,t.jsx)(e.a,{href:"/docs-api/LinearElasticModel/ImportFromToml",children:"ImportFromToml here"}),"."]}),"\n",(0,t.jsx)(e.h2,{id:"details-of-toml-config",children:"Details of toml-config"}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Click here to see the toml-config"}),(0,t.jsx)("div",{children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-toml",children:'[linearElasticModel]\nname = "linearElasticModel"\n# name of the model\n\nisPlaneStress = true\n# set it to true for plane-stress formulation\n# the default is false\n\nisPlaneStrain = true\n# set it to true for plane-strain formulation\n# the default is false\n\nelasticityType = "ISO"\n# elasticity type, default is "ISO".\n# following options are possible:\n#\n# - ISO: Isotropic elasticity\n# - ANISO: Anisotropic elasticity\n# - ORTHO: Orthotropic elasticity\n# - TRANS: Transverse isotropic elasticity\n\npoissonRatio = 0.1\n# Poisson\'s Ratio, it is necessary when elasticityType is ISO\n\nyoungsModulus = 1.0\n# Young\'s Modulus, it is necessary when elasticityType is ISO\n\nstiffnessPower = 1.0\n# It is only needed in case of moving mesh algorithms\n\nc = [\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n]\n# C elasticity tensor\n# It should be 6 by 6\n# For plane-stress and plane-strain case, it can be 3 by 3\n\ninvC = [\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n  [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],\n]\n'})})})]}),"\n",(0,t.jsx)(e.h2,{id:"example-1-isotropic-3d",children:"Example 1 (Isotropic 3D)"}),"\n","\n",(0,t.jsx)(a.Ay,{}),"\n",(0,t.jsx)(e.h2,{id:"example-2-isotropic-and-plane-stress",children:"Example 2 (Isotropic and plane-stress)"}),"\n","\n",(0,t.jsx)(r.Ay,{}),"\n",(0,t.jsx)(e.h2,{id:"example-3-isotropic-and-plane-strain",children:"Example 3 (Isotropic and plane-strain)"}),"\n","\n",(0,t.jsx)(l.Ay,{}),"\n",(0,t.jsx)(e.h2,{id:"example-4-anisotropic-and-3d",children:"Example 4 (Anisotropic and 3D)"}),"\n","\n",(0,t.jsx)(m,{}),"\n",(0,t.jsx)(e.h2,{id:"example-5-anisotropic-and-plane-stress",children:"Example 5 (Anisotropic and plane-stress)"}),"\n","\n",(0,t.jsx)(p,{}),"\n",(0,t.jsx)(e.h2,{id:"example-6-anisotropic-and-plane-strain",children:"Example 6 (Anisotropic and plane-strain)"}),"\n","\n",(0,t.jsx)(h,{})]})}function g(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(j,{...n})}):j(n)}},54213:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>r});var o=i(36672);const t={},s=o.createContext(t);function a(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);