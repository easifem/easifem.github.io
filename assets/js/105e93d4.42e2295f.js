"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[38610],{93988:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"AbstractKernel/KernelElemshapeData","title":"KernelElemshapeData","description":"This class contains the information of the shape functions used in the kernel.","source":"@site/docs/docs-api/AbstractKernel/KernelElemshapeData.md","sourceDirName":"AbstractKernel","slug":"/AbstractKernel/KernelElemshapeData","permalink":"/docs-api/AbstractKernel/KernelElemshapeData","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractKernel/KernelElemshapeData.md","tags":[],"version":"current","lastUpdatedAt":1735776220000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"KernelBC","permalink":"/docs-api/AbstractKernel/KernelBC"},"next":{"title":"KernelFields","permalink":"/docs-api/AbstractKernel/KernelFields"}}');var s=a(23420),l=a(54213);const r={},c="KernelElemshapeData",o={},i=[];function m(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"kernelelemshapedata",children:"KernelElemshapeData"})}),"\n",(0,s.jsx)(n.p,{children:"This class contains the information of the shape functions used in the kernel."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"TYPE KernelElemshapeData_\n  TYPE(ElemshapeData_) :: geoTimeElemSD\n  !! Element shape data on linear time element #STFEM\n\n  TYPE(ElemshapeData_) :: timeElemSD\n  !! Element shape data on time element #STFEM\n\n  TYPE(ElemshapeData_) :: geoSpaceElemSD\n  !! Element shape data on linear space (simplex) element\n  !! cell data only\n\n  TYPE(ElemshapeData_) :: spaceElemSD\n  !! Element shape data on space element\n  !! cell data only\n\n  TYPE(ElemshapeData_) :: geoSpaceElemSD_facet\n  !! Element shape data on linear space (simplex) element\n  !! facet element\n\n  TYPE(ElemshapeData_) :: spaceElemSD_facet\n  !! Element shape data on space element facet element\n\n  TYPE(STElemshapeData_), ALLOCATABLE :: stelemsd(:)\n  !! Element shape data on space-time element\nEND TYPE KernelElemshapeData_\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},54213:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var t=a(36672);const s={},l=t.createContext(s);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);