"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[16672],{17423:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"AbstractKernel/KernelBC","title":"KernelBC","description":"This class deals with the boundary conditions in the kernel.","source":"@site/docs/docs-api/AbstractKernel/KernelBC.md","sourceDirName":"AbstractKernel","slug":"/AbstractKernel/KernelBC","permalink":"/docs-api/AbstractKernel/KernelBC","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractKernel/KernelBC.md","tags":[],"version":"current","lastUpdatedAt":1735776220000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"KernelAddNeumannBC","permalink":"/docs-api/AbstractKernel/KernelAddNeumannBC"},"next":{"title":"KernelElemshapeData","permalink":"/docs-api/AbstractKernel/KernelElemshapeData"}}');var o=t(23420),r=t(54213);const s={},a="KernelBC",c={},l=[{value:"Structure",id:"structure",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"kernelbc",children:"KernelBC"})}),"\n",(0,o.jsx)(n.p,{children:"This class deals with the boundary conditions in the kernel."}),"\n",(0,o.jsx)(n.h2,{id:"structure",children:"Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:"TYPE KernelBC_\n  INTEGER(I4B) :: tdbc = 0\n  !! total Dirichlet boundary conditions\n\n  INTEGER(I4B) :: tnbc = 0\n  !! total Neumann boundary conditions\n\n  INTEGER(I4B) :: tnbcPointSource = 0\n  !! total Neumann boundary conditions\n\n  INTEGER(I4B) :: twdbc = 0\n  !! total weak Dirichlet boundary conditions\n\n  INTEGER(I4B) :: tnitscheLocalID = 0\n  !! total nitsche local id\n\n  LOGICAL(LGT) :: isNitsche = .FALSE.\n  !! If true, then it means weak dirichlet boundary condition is used.\n  !! This variable is set in Initiate method\n  !! This variable is set to true if the tWeakDirichletBC\n  !! is greater than zero, otherwise it is set to false\n\n  LOGICAL(LGT) :: isSymNitsche = .TRUE.\n  !! Sym or unsymmetric Nitsche formulation\n\n  REAL(DFP) :: nitscheAlpha = 100.0\n  !! coefficient for nitsche formulation\n\n  REAL(DFP) :: nitscheType = TypeKernelNitscheOpt%sym\n  !! -1.0 for symmetric formulation\n  !! 1.0 for skew symmetric formulation\n\n  TYPE(DirichletBCPointer_), ALLOCATABLE :: dbc(:)\n  !! Dirichlet boundary condition for displacement\n\n  TYPE(NeumannBCPointer_), ALLOCATABLE :: nbc(:)\n  !! Neumann boundary condition for displacement\n\n  TYPE(NeumannBCPointer_), ALLOCATABLE :: nbcPointSource(:)\n  !! Neumann boundary condition for displacement\n\n  TYPE(NitscheBCPointer_), ALLOCATABLE :: wdbc(:)\n  !! Weak dirichlet boundary condition for displacement\n\n  INTEGER(I4B), ALLOCATABLE :: nitscheLocalID(:)\n  !! nitscheLocalID is a mapping from global mesh-id (of dimension\n  !! nsd-1), to local id.\n  !! If nitscheLocalID(meshID) = 0, then it means\n  !! meshID of dimension nsd-1 is not a nitsche boundary.\n  !! This mapping is used to access entries in nitscheFacetToCell.\n\n  TYPE(DomainConnectivityPointer_), ALLOCATABLE :: nitscheFacetToCell(:)\n  !! Nitsche facet to cell data connectivity information\n  !! We form FacetToCellData for each Nitsche boundary\n  !! The size of nitscheFacetToCell is same as the\n  !! total number of boundaries (mesh-ids) in wdbcForDisplacement\n  !! This data is initiated in Set Method\n\nEND TYPE KernelBC_\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},54213:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(36672);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);