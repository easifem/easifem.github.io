"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[32832],{63955:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>d,default:()=>x,frontMatter:()=>p,metadata:()=>a,toc:()=>g});const a=JSON.parse('{"id":"TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle","title":"BarycentricHeirarchicalBasis","description":"Evaluate all modal basis (Heirarchical polynomials) on Triangle.","source":"@site/docs/docs-api/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle.md","sourceDirName":"TriangleInterpolationUtility","slug":"/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle","permalink":"/docs-api/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"BarycentricEdgeBasis","permalink":"/docs-api/TriangleInterpolationUtility/BarycentricEdgeBasis_Triangle"},"next":{"title":"BarycentricVertexBasis","permalink":"/docs-api/TriangleInterpolationUtility/BarycentricVertexBasis_Triangle"}}');var i=r(23420),t=r(54213);function l(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"program main\n  use easifembase\n  use easifemClasses\n  implicit none\n  real(dfp), allocatable :: xij(:,:), avec(:), lambda(:,:)\n  integer(i4b) :: ii, jj, cnt, n\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",metastring:'title="generate points"',children:'    n = 51\n    call reallocate(avec, n)\n    call reallocate(xij, 2, int((n+1)*(n+2)/2))\n    avec= linspace(0.0_DFP, 1.0_DFP, n)\n    cnt=0\n    do ii = 1, n\n      do jj = 1, n-ii+1\n        cnt=cnt+1\n        xij(1,cnt) = avec(ii)\n        xij(2,cnt) = avec(jj)\n      end do\n    end do\n\n  lambda = BarycentricCoordTriangle(xij, "UNIT")\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",metastring:'title="order=1; pe1=1; pe2=1; pe3=1"',children:'  BLOCK\n    real(dfp), allocatable :: ans(:,:)\n    integer(i4b) :: ii, order, pe1, pe2, pe3\n    type( VTKPlot_ ) :: aplot\n    character(len=*), parameter :: fname="./results/"\n    !!\n    order=1; pe1=1; pe2=1; pe3=1\n    !!\n    ans = BarycentricHeirarchicalBasis_Triangle(&\n      & order=order, pe1=pe1, pe2=pe2, pe3=pe3, &\n      & lambda=lambda, refTriangle="UNIT")\n    !!\n    do ii  = 1, size(ans,2)\n      call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\n        & filename=fname//"Pbary( order=" // tostring(order) // &\n          & ", pe1="//tostring(pe1) // &\n          & ", pe2="//tostring(pe2) // &\n          & ", pe3="//tostring(pe3) // &\n          & " )" // tostring(ii) // &\n          & ".vtp", &\n        & label="P")\n    end do\n    !!\n  END BLOCK\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",metastring:'title="order=4; pe1=4; pe2=4; pe3=4"',children:'  BLOCK\n    real(dfp), allocatable :: ans(:,:)\n    integer(i4b) :: ii, order, pe1, pe2, pe3\n    type( VTKPlot_ ) :: aplot\n    character(len=*), parameter :: fname="./results/"\n    !!\n    order=4; pe1=4; pe2=4; pe3=4\n    !!\n    ans = BarycentricHeirarchicalBasis_Triangle(&\n      & order=order, pe1=pe1, pe2=pe2, pe3=pe3, &\n      & lambda=lambda, refTriangle="UNIT")\n    !!\n    do ii  = 1, size(ans,2)\n      call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\n        & filename=fname//"Pbary( order=" // tostring(order) // &\n          & ", pe1="//tostring(pe1) // &\n          & ", pe2="//tostring(pe2) // &\n          & ", pe3="//tostring(pe3) // &\n          & " )" // tostring(ii) // &\n          & ".vtp", &\n        & label="P")\n    end do\n    !!\n  END BLOCK\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",metastring:'title="order=5; pe1=5; pe2=5; pe3=5"',children:'  BLOCK\n    real(dfp), allocatable :: ans(:,:)\n    integer(i4b) :: ii, order, pe1, pe2, pe3\n    type( VTKPlot_ ) :: aplot\n    character(len=*), parameter :: fname="./results/"\n    !!\n    order=5; pe1=5; pe2=5; pe3=5\n    !!\n    ans = BarycentricHeirarchicalBasis_Triangle(&\n      & order=order, pe1=pe1, pe2=pe2, pe3=pe3, &\n      & lambda=lambda, refTriangle="UNIT")\n    !!\n    do ii  = 1, size(ans,2)\n      call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\n        & filename=fname//"Pbary( order=" // tostring(order) // &\n          & ", pe1="//tostring(pe1) // &\n          & ", pe2="//tostring(pe2) // &\n          & ", pe3="//tostring(pe3) // &\n          & " )" // tostring(ii) // &\n          & ".vtp", &\n        & label="P")\n    end do\n    !!\n  END BLOCK\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",metastring:'title="order=5; pe1=1; pe2=5; pe3=3"',children:'  BLOCK\n    real(dfp), allocatable :: ans(:,:)\n    integer(i4b) :: ii, order, pe1, pe2, pe3\n    type( VTKPlot_ ) :: aplot\n    character(len=*), parameter :: fname="./results/"\n    !!\n    order=5; pe1=1; pe2=5; pe3=3\n    !!\n    ans = BarycentricHeirarchicalBasis_Triangle(&\n      & order=order, pe1=pe1, pe2=pe2, pe3=pe3, &\n      & lambda=lambda, refTriangle="UNIT")\n    !!\n    do ii  = 1, size(ans,2)\n      call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\n        & filename=fname//"Pbary( order=" // tostring(order) // &\n          & ", pe1="//tostring(pe1) // &\n          & ", pe2="//tostring(pe2) // &\n          & ", pe3="//tostring(pe3) // &\n          & " )" // tostring(ii) // &\n          & ".vtp", &\n        & label="P")\n    end do\n    !!\n  END BLOCK\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"end program main\n"})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}function o(e){const n={code:"code",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifembase\n  use easifemClasses\n  implicit none\n  real(dfp), allocatable :: xij(:,:), avec(:), lambda(:,:)\n  integer(i4b) :: ii, jj, cnt, n\n\n  n = 51\n  call reallocate(avec, n)\n  call reallocate(xij, 2, int((n+1)*(n+2)/2))\n  avec= linspace(0.0_DFP, 1.0_DFP, n)\n  cnt=0\n  do ii = 1, n\n    do jj = 1, n-ii+1\n      cnt=cnt+1\n      xij(1,cnt) = avec(ii)\n      xij(2,cnt) = avec(jj)\n    end do\n  end do\n\n  lambda = BarycentricCoordTriangle(xij, "UNIT")\n\n  BLOCK\n    real(dfp), allocatable :: ans(:,:)\n    integer(i4b) :: ii, order\n    type( VTKPlot_ ) :: aplot\n    character(len=*), parameter :: fname="./results/"\n    !!\n    order=5\n    !!\n    ans = BarycentricHeirarchicalBasis_Triangle(order=order, &\n      & lambda=lambda, refTriangle="UNIT")\n    !!\n    do ii  = 1, size(ans,2)\n      call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\n        & filename=fname//"Pbary( order=" // tostring(order) // &\n          & " )" // tostring(ii) // &\n          & ".vtp", &\n        & label="P")\n    end do\n    !!\n  END BLOCK\nend program main\n'})})}function s(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}const p={},d="BarycentricHeirarchicalBasis",m={},g=[{value:"Interface",id:"interface",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Interface 2",id:"interface-2",level:2},{value:"Example 2",id:"example-2",level:3}];function f(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components},{Details:r,TabItem:a,Tabs:l}=n;return r||T("Details",!0),a||T("TabItem",!0),l||T("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"barycentricheirarchicalbasis",children:"BarycentricHeirarchicalBasis"})}),"\n",(0,i.jsx)(n.p,{children:"Evaluate all modal basis (Heirarchical polynomials) on Triangle."}),"\n",(0,i.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'INTERFACE\n  MODULE PURE FUNCTION BarycentricHeirarchicalBasis_Triangle1(order, &\n    & pe1, pe2, pe3, lambda, refTriangle) RESULT(ans)\n    INTEGER(I4B), INTENT(IN) :: order\n    !! order in the cell of triangle, it should be greater than 2\n    INTEGER(I4B), INTENT(IN) :: pe1\n    !! order of interpolation on edge e1\n    INTEGER(I4B), INTENT(IN) :: pe2\n    !! order of interpolation on edge e2\n    INTEGER(I4B), INTENT(IN) :: pe3\n    !! order of interpolation on edge e3\n    REAL(DFP), INTENT(IN) :: lambda(:, :)\n    !! Barycenteric coordinates\n    !! number of rows = 3\n    !! number of cols = number of points\n    CHARACTER(*), INTENT(IN) :: refTriangle\n    !! reference triangle, "BIUNIT", "UNIT"\n    REAL(DFP) :: ans( &\n      & SIZE(xij, 2), &\n      & pe1 + pe2 + pe3 + INT((order - 1) * (order - 2) / 2))\n    !!\n  END FUNCTION BarycentricHeirarchicalBasis_Triangle1\nEND INTERFACE\n'})})}),(0,i.jsx)(a,{value:"close",label:"\u21a2 "})]}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example 1"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"See example"}),(0,i.jsx)("div",{children:(0,i.jsx)(c,{})})]}),"\n",(0,i.jsx)(n.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'INTERFACE\n  MODULE PURE FUNCTION BarycentricHeirarchicalBasis_Triangle(order, lambda, &\n    & refTriangle) RESULT(ans)\n    INTEGER(I4B), INTENT(IN) :: order\n    !! order of approximation on triangle\n    REAL(DFP), INTENT(IN) :: lambda(:, :)\n    !! Barycenteric coordinates\n    !! number of rows = 3\n    !! number of cols = number of points\n    CHARACTER(*), INTENT(IN) :: refTriangle\n    !! reference triangle, "BIUNIT", "UNIT"\n    REAL(DFP) :: ans( &\n      & SIZE(xij, 2), &\n      & INT((order + 1) * (order + 2) / 2))\n    !!\n  END FUNCTION BarycentricHeirarchicalBasis_Triangle\nEND INTERFACE\n'})})}),(0,i.jsx)(a,{value:"close",label:"\u21a2 "})]}),"\n",(0,i.jsx)(n.h3,{id:"example-2",children:"Example 2"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"See example"}),(0,i.jsx)("div",{children:(0,i.jsx)(s,{})})]})]})}function x(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}function T(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},54213:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var a=r(36672);const i={},t=a.createContext(i);function l(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);