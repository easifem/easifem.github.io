"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[10357],{48681:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"ReferenceElement/GetFaceElemType","title":"GetFaceElemType","description":"This method returns the element type of each face.","source":"@site/docs/docs-api/ReferenceElement/GetFaceElemType.md","sourceDirName":"ReferenceElement","slug":"/ReferenceElement/GetFaceElemType","permalink":"/docs-api/ReferenceElement/GetFaceElemType","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/ReferenceElement/GetFaceElemType.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetConnectivity","permalink":"/docs-api/ReferenceElement/GetConnectivity"},"next":{"title":"GetVTKElementType","permalink":"/docs-api/ReferenceElement/GetVTKElementType"}}');var c=i(23420),t=i(54213);const s={},d="GetFaceElemType",r={},o=[{value:"Interface",id:"interface",level:2},{value:"Line",id:"line",level:2},{value:"Triangle",id:"triangle",level:2},{value:"Triangle3",id:"triangle3",level:3},{value:"Triangle6",id:"triangle6",level:3},{value:"Triangle9, Triangle10",id:"triangle9-triangle10",level:3},{value:"Triangle15",id:"triangle15",level:3},{value:"Triangle21",id:"triangle21",level:3}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"getfaceelemtype",children:"GetFaceElemType"})}),"\n",(0,c.jsx)(n.p,{children:"This method returns the element type of each face."}),"\n",(0,c.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-fortran",children:"INTERFACE GetFaceElemType\n  MODULE PURE SUBROUTINE GetFaceElemType1(elemType, faceElemType, opt,  &\n    & tFaceNodes)\n    INTEGER(I4B), INTENT(IN) :: elemType\n    !! name of element\n    INTEGER(I4B), INTENT(INOUT) :: faceElemType(:)\n    !! Element names of faces\n    INTEGER(I4B), OPTIONAL, INTENT(INOUT) :: tFaceNodes(:)\n    !! Total number of nodes in each face\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: opt\n    !! If opt = 1, then edge connectivity for hierarchial approximation\n    !! If opt = 2, then edge connectivity for Lagrangian approximation\n    !! opt = 1 is default\n  END SUBROUTINE GetFaceElemType1\nEND INTERFACE GetFaceElemType\n"})}),"\n",(0,c.jsxs)(n.admonition,{type:"info",children:[(0,c.jsx)(n.mdxAdmonitionTitle,{children:(0,c.jsx)(n.code,{children:"elemType"})}),(0,c.jsx)(n.p,{children:"Integer code for element type."})]}),"\n",(0,c.jsxs)(n.admonition,{type:"info",children:[(0,c.jsx)(n.mdxAdmonitionTitle,{children:(0,c.jsx)(n.code,{children:"faceElemType"})}),(0,c.jsx)(n.p,{children:"A vector of face element types. It should be allocated by the user."})]}),"\n",(0,c.jsxs)(n.admonition,{type:"info",children:[(0,c.jsx)(n.mdxAdmonitionTitle,{children:(0,c.jsx)(n.code,{children:"tFaceNodes"})}),(0,c.jsx)(n.p,{children:"This is optional. If present, then we can get the total number of nodes in each face."})]}),"\n",(0,c.jsxs)(n.admonition,{type:"info",children:[(0,c.jsx)(n.mdxAdmonitionTitle,{children:(0,c.jsx)(n.code,{children:"opt"})}),(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"If opt = 1, then edge connectivity for hierarchial approximation"}),"\n",(0,c.jsx)(n.li,{children:"If opt = 2, then edge connectivity for Lagrangian approximation"}),"\n",(0,c.jsx)(n.li,{children:"opt = 1 is default"}),"\n"]})]}),"\n",(0,c.jsx)(n.h2,{id:"line",children:"Line"}),"\n",(0,c.jsxs)(n.p,{children:["For the line elements we call ",(0,c.jsx)(n.code,{children:"GetFaceElemType_Line"})," method. This method works as follows:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"faceElemType"})," is",(0,c.jsx)(n.code,{children:"Point"})]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"tFaceNodes"})," is ",(0,c.jsx)(n.code,{children:"1"})]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"opt"})," is ignored"]}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"triangle",children:"Triangle"}),"\n",(0,c.jsxs)(n.p,{children:["For the triangle elements we call ",(0,c.jsx)(n.code,{children:"GetFaceElemType_Triangle"})," method. This method works as follows:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"opts"})," is ignored."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"triangle3",children:"Triangle3"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"faceElemType"})," is ",(0,c.jsx)(n.code,{children:"Line2"})]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"tFaceNodes"})," is ",(0,c.jsx)(n.code,{children:"2"})]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"triangle6",children:"Triangle6"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"faceElemType"})," is ",(0,c.jsx)(n.code,{children:"Line3"})]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"tFaceNodes"})," is ",(0,c.jsx)(n.code,{children:"3"})]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"triangle9-triangle10",children:"Triangle9, Triangle10"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"faceElemType"})," is ",(0,c.jsx)(n.code,{children:"Line4"})]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"tFaceNodes"})," is ",(0,c.jsx)(n.code,{children:"4"})]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"triangle15",children:"Triangle15"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"faceElemType"})," is ",(0,c.jsx)(n.code,{children:"Line5"})]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"tFaceNodes"})," is ",(0,c.jsx)(n.code,{children:"5"})]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"triangle21",children:"Triangle21"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"faceElemType"})," is ",(0,c.jsx)(n.code,{children:"Line6"})]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"tFaceNodes"})," is ",(0,c.jsx)(n.code,{children:"6"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},54213:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var l=i(36672);const c={},t=l.createContext(c);function s(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);