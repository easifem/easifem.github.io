"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[1977,74292],{65118:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"FEDomainConnectivity/FEDomainConnectivity_","title":"Structure","description":"This class is designed for generating mapping between two domains or parts of two domains.","source":"@site/docs/docs-api/FEDomainConnectivity/FEDomainConnectivity_.md","sourceDirName":"FEDomainConnectivity","slug":"/FEDomainConnectivity/FEDomainConnectivity_","permalink":"/docs-api/FEDomainConnectivity/FEDomainConnectivity_","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEDomainConnectivity/FEDomainConnectivity_.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"FEDomainConnectivity","permalink":"/docs-api/FEDomainConnectivity/"},"next":{"title":"Deallocate","permalink":"/docs-api/FEDomainConnectivity/Deallocate"}}');var o=i(23420),l=i(54213);const s={sidebar_position:2},a="Structure",c={},r=[{value:"p-type",id:"p-type",level:2},{value:"h-type",id:"h-type",level:2},{value:"r-type",id:"r-type",level:2},{value:"More details",id:"more-details",level:2},{value:"FacetConnectivity",id:"facetconnectivity",level:2},{value:"ElementConnectivity",id:"elementconnectivity",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"structure",children:"Structure"})}),"\n",(0,o.jsx)(n.p,{children:"This class is designed for generating mapping between two domains or parts of two domains."}),"\n",(0,o.jsx)(n.p,{children:"The structure of DomainConnectivity is given below."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:"TYPE :: DomainConnectivity_\n  PRIVATE\n  LOGICAL(LGT), PUBLIC :: isInitiated = .FALSE.\n  LOGICAL(LGT), PUBLIC :: isFacetToCell = .FALSE.\n  LOGICAL(LGT), PUBLIC :: isNodeToNode = .FALSE.\n  LOGICAL(LGT), PUBLIC :: isCellToCell = .FALSE.\n  INTEGER(I4B), ALLOCATABLE :: nodeToNode(:)\n  INTEGER(I4B), ALLOCATABLE :: cellToCell(:)\n  INTEGER(I4B), ALLOCATABLE :: cellToCellExtraData(:, :)\n  TYPE(FacetConnectivity_), ALLOCATABLE :: facetToCell(:)\n  TYPE(ElementConnectivity_), ALLOCATABLE :: elemToElem(:)\nEND TYPE\n"})}),"\n",(0,o.jsx)(n.p,{children:"Two domains can have the following relation between them"}),"\n",(0,o.jsx)(n.h2,{id:"p-type",children:"p-type"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"pType"})," has the following properties:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Same geometry"}),"\n",(0,o.jsx)(n.li,{children:"Same number of elements"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CellToCell"})," is an identity"]}),"\n",(0,o.jsx)(n.li,{children:"Different number of nodes"}),"\n",(0,o.jsx)(n.li,{children:"Different order"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"h-type",children:"h-type"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"hType"})," has the following properties:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Same geometry"}),"\n",(0,o.jsx)(n.li,{children:"Different number of elements"}),"\n",(0,o.jsx)(n.li,{children:"Different number of nodes"}),"\n",(0,o.jsx)(n.li,{children:"order is same."}),"\n",(0,o.jsx)(n.li,{children:"Same element topology for a given mesh"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CellToCell"})," will be a collection of elements in Domain 2."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"r-type",children:"r-type"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"rType"})," has the following properties:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Same geometry"}),"\n",(0,o.jsx)(n.li,{children:"Same number of nodes"}),"\n",(0,o.jsx)(n.li,{children:"Same number of elements"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CellToCell"})," is identity matrix"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"NodeToNode"})," is an identity matrix"]}),"\n",(0,o.jsx)(n.li,{children:"Spatial position of nodes would be different"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"more-details",children:"More details"}),"\n",(0,o.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"isInitiated"}),", is true if an instance of ",(0,o.jsx)(n.code,{children:"DomainConnectivity"})," is initiated"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"isFacetToCell"})," is true if ",(0,o.jsx)(n.code,{children:"facetToCell"})," data is initiated"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"isNodeToNode"})," is true if ",(0,o.jsx)(n.code,{children:"nodeToNode"})," data is initiated"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"isCellToCell"})," is true if ",(0,o.jsx)(n.code,{children:"cellToCell"})," data is initiated"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"nodeToNode"}),", contains the node-to-node mapping from one mesh/domain to another mesh/domain."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["We can create mapping between parts of domain (mesh) or domains. See ",(0,o.jsx)(n.a,{href:"/docs-api/FEDomainConnectivity/InitiateNodeToNodeData",children:"InitiateNodeToNodeData"})]}),"\n",(0,o.jsx)(n.li,{children:"Size of NodeToNode is equal to the largest node number in domain-1 or mesh-1 (depending upon how the data is initiated)"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"NodeToNode(i)"})," implies global node number in domain-2/mesh-2, corresponding to global node number ",(0,o.jsx)(n.code,{children:"i"})," in domain-1/mesh-1."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"cellToCell"})," contains the cell-to-cell mapping from one mesh/domain to another mesh/domain."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["We can create mapping between parts of domain (mesh) or domains. See, ",(0,o.jsx)(n.a,{href:"/docs-api/FEDomainConnectivity/InitiateCellToCellData",children:"InitiateCellToCellData"})]}),"\n",(0,o.jsxs)(n.li,{children:["Size of ",(0,o.jsx)(n.code,{children:"cellToCell"})," is equal to the largest element number in domain-1 or mesh-1 (depending upon how the data is initiated)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cellToCell"}),"(i) denotes global element number in domain-2/ mesh-2, corresponding to global element number ",(0,o.jsx)(n.code,{children:"i"})," in domain-1/ mesh-1"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"cellToCellExtraData"}),": Currently,"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cellToCellExtraData"})," has two rows (a) the first row is dim, (b) the second row is entityNum."]}),"\n",(0,o.jsxs)(n.li,{children:["each column represents the element number, for example","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"iel1"})," in domain1, then ",(0,o.jsx)(n.code,{children:"cellToCell"}),"(iel1) gives iel2 in domain2"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cellToCellExtraData"}),"(1, iel1) gives dimension of mesh which contains iel2"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cellToCellExtraData"}),"(2, iel1) gives ",(0,o.jsx)(n.code,{children:"entityNum"})," of mesh which contains iel2"]}),"\n",(0,o.jsxs)(n.li,{children:["In this way, ",(0,o.jsx)(n.code,{children:"domain2%getMeshPointer(dim, entityNum)"})," can give us the pointer to the mesh which contains the iel2"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"facetToCell, facet to cell-connectivity data."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.input,{type:"checkbox",disabled:!0})," ","elemToElem, currently, we do not know how to implement it (TODO)."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"facetconnectivity",children:"FacetConnectivity"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:"TYPE :: FacetConnectivity_\n  INTEGER(I4B) :: facetID = 0\n    !! global element number of facet element in facet mesh\n  INTEGER(I4B) :: GlobalCellData(4, 2) = 0\n    !! 1,1 --\x3e Global element number of master cell\n    !! 2,1 --\x3e master cell's local facet number connected to facet-elem\n    !! 3,1 --\x3e master mesh dimension\n    !! 4,1 --\x3e master mesh entity number\n    !! 1,2 --\x3e Global element number of slave cell\n    !! 2,2 --\x3e slave cell's local facet number connected to facet-elem\n    !! 3,2 --\x3e slave mesh dimension\n    !! 4,2 --\x3e slave mesh entity number\nEND TYPE FacetConnectivity_\n"})}),"\n",(0,o.jsx)(n.h2,{id:"elementconnectivity",children:"ElementConnectivity"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:"TYPE :: ElementConnectivity_\n  INTEGER(I4B) :: masterGlobalElemNum = 0\n  INTEGER(I4B) :: masterLocalFacetID = 0\n  INTEGER(I4B) :: slaveGlobalElemNum = 0\n  INTEGER(I4B) :: slaveLocalFacetID = 0\nEND TYPE ElementConnectivity_\n"})})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},97261:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"FEDomainConnectivity/index","title":"FEDomainConnectivity","description":"This data type handles the connectivity between two domains.","source":"@site/docs/docs-api/FEDomainConnectivity/index.md","sourceDirName":"FEDomainConnectivity","slug":"/FEDomainConnectivity/","permalink":"/docs-api/FEDomainConnectivity/","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEDomainConnectivity/index.md","tags":[{"inline":true,"label":"domain","permalink":"/docs-api/tags/domain"},{"inline":true,"label":"mesh","permalink":"/docs-api/tags/mesh"},{"inline":true,"label":"domainConnectivity","permalink":"/docs-api/tags/domain-connectivity"},{"inline":true,"label":"fedomainConnectivity","permalink":"/docs-api/tags/fedomain-connectivity"},{"inline":true,"label":"easifemClasses","permalink":"/docs-api/tags/easifem-classes"}],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"date":"2023-02-13T00:00:00.000Z","update":"2023-02-13T00:00:00.000Z","status":"stable","docs":"done","extpkgs":"none","category":["Domain","Mesh","DomainConnectivity","FEDomainConnectivity"],"tags":["domain","mesh","domainConnectivity","fedomainConnectivity","easifemClasses"]},"sidebar":"tutorialSidebar","previous":{"title":"SetMeshMap","permalink":"/docs-api/FEDomain/SetMeshMap"},"next":{"title":"Structure","permalink":"/docs-api/FEDomainConnectivity/FEDomainConnectivity_"}}');var o=i(23420),l=i(54213),s=i(65118),a=i(29709);const c={sidebar_position:1,date:new Date("2023-02-13T00:00:00.000Z"),update:new Date("2023-02-13T00:00:00.000Z"),status:"stable",docs:"done",extpkgs:"none",category:["Domain","Mesh","DomainConnectivity","FEDomainConnectivity"],tags:["domain","mesh","domainConnectivity","fedomainConnectivity","easifemClasses"]},r="FEDomainConnectivity",d={},m=[...s.toc,{value:"All methods",id:"all-methods",level:2}];function h(e){const n={h1:"h1",h2:"h2",header:"header",p:"p",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"fedomainconnectivity",children:"FEDomainConnectivity"})}),"\n",(0,o.jsx)(n.p,{children:"This data type handles the connectivity between two domains."}),"\n","\n",(0,o.jsx)(s.default,{}),"\n",(0,o.jsx)(n.h2,{id:"all-methods",children:"All methods"}),"\n","\n",(0,o.jsx)(a.A,{})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},29709:(e,n,i)=>{i.d(n,{A:()=>C});i(36672);var t=i(28923),o=i(75684),l=i(20646),s=i(85860),a=i(6062),c=i(9824),r=i(31814);const d={cardContainer:"cardContainer_i1pc",cardTitle:"cardTitle_lIM3",cardDescription:"cardDescription_8flu"};var m=i(23420);function h(e){let{href:n,children:i}=e;return(0,m.jsx)(l.A,{href:n,className:(0,t.A)("card padding--lg",d.cardContainer),children:i})}function u(e){let{href:n,icon:i,title:o,description:l}=e;return(0,m.jsxs)(h,{href:n,children:[(0,m.jsxs)(r.A,{as:"h2",className:(0,t.A)("text--truncate",d.cardTitle),title:o,children:[i," ",o]}),l&&(0,m.jsx)("p",{className:(0,t.A)("text--truncate",d.cardDescription),title:l,children:l})]})}function p(e){let{item:n}=e;const i=(0,o.Nr)(n),t=function(){const{selectMessage:e}=(0,s.W)();return n=>e(n,(0,c.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return i?(0,m.jsx)(u,{href:i,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??t(n.items.length)}):null}function x(e){let{item:n}=e;const i=(0,a.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",t=(0,o.cC)(n.docId??void 0);return(0,m.jsx)(u,{href:n.href,icon:i,title:n.label,description:n.description??t?.description})}function f(e){let{item:n}=e;switch(n.type){case"link":return(0,m.jsx)(x,{item:n});case"category":return(0,m.jsx)(p,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function j(e){let{className:n}=e;const i=(0,o.$S)();return(0,m.jsx)(C,{items:i.items,className:n})}function C(e){const{items:n,className:i}=e;if(!n)return(0,m.jsx)(j,{...e});const l=(0,o.d1)(n);return(0,m.jsx)("section",{className:(0,t.A)("row",i),children:l.map(((e,n)=>(0,m.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,m.jsx)(f,{item:e})},n)))})}},85860:(e,n,i)=>{i.d(n,{W:()=>r});var t=i(36672),o=i(94698);const l=["zero","one","two","few","many","other"];function s(e){return l.filter((n=>e.includes(n)))}const a={locale:"en",pluralForms:s(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,o.A)();return(0,t.useMemo)((()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:s(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),a}}),[e])}function r(){const e=c();return{selectMessage:(n,i)=>function(e,n,i){const t=e.split("|");if(1===t.length)return t[0];t.length>i.pluralForms.length&&console.error(`For locale=${i.locale}, a maximum of ${i.pluralForms.length} plural forms are expected (${i.pluralForms.join(",")}), but the message contains ${t.length}: ${e}`);const o=i.select(n),l=i.pluralForms.indexOf(o);return t[Math.min(l,t.length-1)]}(i,n,e)}}},54213:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var t=i(36672);const o={},l=t.createContext(o);function s(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);