"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[2204],{54875:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"SteadyStokes221/GetPressureDirichletBCPointer","title":"GetPressureDirichletBCPointer","description":"This routine returns the pointer to Dirichlet boundary condition of pressure field in AbstractSteadyStokes kernel, that is obj%DBCForPressure(dbcNo)%ptr.","source":"@site/docs/docs-api/SteadyStokes221/GetPressureDirichletBCPointer.md","sourceDirName":"SteadyStokes221","slug":"/SteadyStokes221/GetPressureDirichletBCPointer","permalink":"/docs-api/SteadyStokes221/GetPressureDirichletBCPointer","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes221/GetPressureDirichletBCPointer.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Export","permalink":"/docs-api/SteadyStokes221/Export"},"next":{"title":"GetPressureNeumannBCPointer","permalink":"/docs-api/SteadyStokes221/GetPressureNeumannBCPointer"}}');var i=r(23420),s=r(54213);const o={},c="GetPressureDirichletBCPointer",a={},d=[{value:"Interface",id:"interface",level:2},{value:"Example",id:"example",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"getpressuredirichletbcpointer",children:"GetPressureDirichletBCPointer"})}),"\n",(0,i.jsxs)(t.p,{children:["This routine returns the pointer to Dirichlet boundary condition of pressure field in ",(0,i.jsx)(t.a,{href:"/docs-api/AbstractSteadyStokes/AbstractSteadyStokes_",children:"AbstractSteadyStokes_"})," kernel, that is ",(0,i.jsx)(t.code,{children:"obj%DBCForPressure(dbcNo)%ptr"}),"."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"After obtaining the Dirichlet boundary condition pointer, user can set the\nboundary condition"}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"dbcNo"})," should be lesser than total dirichlet boundary condition"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE FUNCTION GetPressureDirichletBCPointer(obj, dbcNo) RESULT(ans)\n    CLASS(AbstractSteadyStokes_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: dbcNo\n    !! Dirichlet boundary nunber\n    CLASS(DirichletBC_), POINTER :: ans\n  END FUNCTION GetPressureDirichletBCPointer\nEND INTERFACE\n"})}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},54213:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>c});var n=r(36672);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);