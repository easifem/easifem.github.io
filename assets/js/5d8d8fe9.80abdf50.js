"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[85084],{7652:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>E,default:()=>x,frontMatter:()=>p,metadata:()=>r,toc:()=>A});const r=JSON.parse('{"id":"AssertUtility/Assert","title":"Assert","description":"Assertion related methods.","source":"@site/docs/docs-api/AssertUtility/Assert.md","sourceDirName":"AssertUtility","slug":"/AssertUtility/Assert","permalink":"/docs-api/AssertUtility/Assert","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AssertUtility/Assert.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"AssertUtility","permalink":"/docs-api/AssertUtility/"},"next":{"title":"BLAS95","permalink":"/docs-api/BLAS95/"}}');var a=t(23420),s=t(54213),l=t(36492),i=t(92492);function o(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'program main\nuse easifemBase\nimplicit none\n\nreal(dfp) :: mat(4,4)\n\nCALL Assert( &\n  & mat=mat, &\n  & s=[4,4], &\n  & msg="shape of mat is not same as [4,4]", &\n  & line=__LINE__, &\n  & file=__FILE__, &\n  & routine="main()")\n\nCALL Assert( &\n  & mat=mat, &\n  & s=[5,5], &\n  & msg="shape of mat is not same as [5,5]", &\n  & line=__LINE__, &\n  & file=__FILE__, &\n  & routine="main()")\n\nend program main\n'})})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}function u(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'program main\nuse easifemBase\nimplicit none\n\nreal(dfp) :: mat(4,4,2)\n\nCALL Assert( &\n  & mat=mat, &\n  & s=[4,4,2], &\n  & msg="shape of mat is not same as [4,4,2]", &\n  & line=__LINE__, &\n  & file=__FILE__, &\n  & routine="main()")\n\nCALL Assert( &\n  & mat=mat, &\n  & s=[5,5,2], &\n  & msg="shape of mat is not same as [5,5,2]", &\n  & line=__LINE__, &\n  & file=__FILE__, &\n  & routine="main()")\n\nend program main\n'})})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}function m(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'program main\nuse easifemBase\nimplicit none\n\nreal(dfp) :: mat(4,4,2,2)\n\nCALL Assert( &\n  & mat=mat, &\n  & s=[4,4,2,2], &\n  & msg="shape of mat is not same as [4,4,2,2]", &\n  & line=__LINE__, &\n  & file=__FILE__, &\n  & routine="main()")\n\nCALL Assert( &\n  & mat=mat, &\n  & s=[5,5,2,2], &\n  & msg="shape of mat is not same as [5,5,2,2]", &\n  & line=__LINE__, &\n  & file=__FILE__, &\n  & routine="main()")\n\nend program main\n'})})}function f(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}function N(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'program main\nuse easifemBase\nimplicit none\n\nCALL Assert( &\n  & n1 = 1, n2 = 2, &\n  & msg="n1 and n2 are not same", &\n  & line=__LINE__, &\n  & file=__FILE__, &\n  & routine="main()")\n\nCALL Assert( &\n  & n1 = 1, n2 = 1, n3=1, &\n  & msg="n1, n2, n3 are not same", &\n  & line=__LINE__, &\n  & file=__FILE__, &\n  & routine="main()")\n\nCALL Assert( &\n  & n1 = 1, n2 = 1, n3=1, n4=1, &\n  & msg="n1, n2, n3, n4 are not same", &\n  & line=__LINE__, &\n  & file=__FILE__, &\n  & routine="main()")\n\nend program main\n'})})}function I(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(N,{...e})}):N(e)}const p={},E="Assert",h={},A=[{value:"Interface 1",id:"interface-1",level:2},{value:"Interface 2",id:"interface-2",level:2},{value:"Interface 3",id:"interface-3",level:2},{value:"Interface 4",id:"interface-4",level:2}];function T(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"assert",children:"Assert"})}),"\n",(0,a.jsx)(n.p,{children:"Assertion related methods."}),"\n","\n",(0,a.jsx)(n.h2,{id:"interface-1",children:"Interface 1"}),"\n",(0,a.jsxs)(l.A,{children:[(0,a.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:" INTERFACE\n  MODULE SUBROUTINE Assert(Mat, s, msg, file, line, routine)\n    REAL(DFP), INTENT(IN) :: Mat(:, :)\n    INTEGER(I4B), INTENT(IN) :: s(2)\n    INTEGER(I4B), INTENT(IN) :: line\n    CHARACTER(*), INTENT(IN) :: msg, file, routine\n  END SUBROUTINE\nEND INTERFACE\n"})}),(0,a.jsxs)(n.p,{children:["If shape of ",(0,a.jsx)(n.code,{children:"Mat"})," is not same as ",(0,a.jsx)(n.code,{children:"s"}),", then this routine prints error and stop program."]})]}),(0,a.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,a.jsx)(c,{})}),(0,a.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,a.jsx)(n.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,a.jsxs)(l.A,{children:[(0,a.jsx)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE Assert(Mat, s, msg, file, line, routine)\n    REAL(DFP), INTENT(IN) :: Mat(:, :, :)\n    INTEGER(I4B), INTENT(IN) :: s(3)\n    INTEGER(I4B), INTENT(IN) :: line\n    CHARACTER(*), INTENT(IN) :: msg, file, routine\n  END SUBROUTINE\nEND INTERFACE\n"})})}),(0,a.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,a.jsx)(d,{})}),(0,a.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,a.jsx)(n.h2,{id:"interface-3",children:"Interface 3"}),"\n",(0,a.jsxs)(l.A,{children:[(0,a.jsx)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE Assert(Mat, s, msg, file, line, routine)\n    REAL(DFP), INTENT(IN) :: Mat(:, :, :, :)\n    INTEGER(I4B), INTENT(IN) :: s(4)\n    INTEGER(I4B), INTENT(IN) :: line\n    CHARACTER(*), INTENT(IN) :: msg, file, routine\n  END SUBROUTINE\nEND INTERFACE\n"})})}),(0,a.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,a.jsx)(f,{})}),(0,a.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,a.jsx)(n.h2,{id:"interface-4",children:"Interface 4"}),"\n",(0,a.jsxs)(l.A,{children:[(0,a.jsx)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"MODULE SUBROUTINE Assert(n1, n2, msg, file, line, routine)\n  INTEGER(I4B), INTENT(IN) :: n1, n2\n  INTEGER(I4B), INTENT(IN) :: line\n  CHARACTER(*), INTENT(IN) :: msg, file, routine\nEND SUBROUTINE Assert\n"})})}),(0,a.jsx)(i.A,{value:"interface2",label:"\u0700 Interface",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"  MODULE SUBROUTINE Assert(n1, n2, n3, msg, file, line, routine)\n    INTEGER(I4B), INTENT(IN) :: n1, n2, n3\n    INTEGER(I4B), INTENT(IN) :: line\n    CHARACTER(*), INTENT(IN) :: msg, file, routine\n  END SUBROUTINE Assert\n"})})}),(0,a.jsx)(i.A,{value:"interface3",label:"\u0700 Interface",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"  MODULE SUBROUTINE Assert(n1, n2, n3, n4, msg, file, line, routine)\n    INTEGER(I4B), INTENT(IN) :: n1, n2, n3, n4\n    INTEGER(I4B), INTENT(IN) :: line\n    CHARACTER(*), INTENT(IN) :: msg, file, routine\n  END SUBROUTINE Assert\n"})})}),(0,a.jsx)(i.A,{value:"interface4",label:"\u0700 interface",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"  MODULE SUBROUTINE Assert(nn, msg, file, line, routine)\n    INTEGER(I4B), DIMENSION(:), INTENT(IN) :: nn\n    INTEGER(I4B), INTENT(IN) :: line\n    CHARACTER(*), INTENT(IN) :: msg, file, routine\n  END SUBROUTINE Assert\n"})})}),(0,a.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,a.jsx)(I,{})}),(0,a.jsx)(i.A,{value:"close",label:"\u21a2 "})]})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(T,{...e})}):T(e)}},92492:(e,n,t)=>{t.d(n,{A:()=>l});t(36672);var r=t(28923);const a={tabItem:"tabItem_VSPN"};var s=t(23420);function l(e){let{children:n,hidden:t,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,l),hidden:t,children:n})}},36492:(e,n,t)=>{t.d(n,{A:()=>g});var r=t(36672),a=t(28923),s=t(19929),l=t(85291),i=t(5581),o=t(80034),c=t(12715),u=t(62741);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function f(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function N(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function I(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=m(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,d]=N({queryString:t,groupId:a}),[I,p]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,u.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),E=(()=>{const e=c??I;return f({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{E&&o(E)}),[E]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),p(e)}),[d,p,s]),tabValues:s}}var p=t(32111);const E={tabList:"tabList_csSQ",tabItem:"tabItem_Bcmo"};var h=t(23420);function A(e){let{className:n,block:t,selectedValue:r,selectValue:l,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),a=i[t].value;a!==r&&(c(n),l(a))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,h.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,h.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{o.push(e)},onKeyDown:d,onClick:u,...s,className:(0,a.A)("tabs__item",E.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function T(e){let{lazy:n,children:t,selectedValue:s}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,h.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function x(e){const n=I(e);return(0,h.jsxs)("div",{className:(0,a.A)("tabs-container",E.tabList),children:[(0,h.jsx)(A,{...n,...e}),(0,h.jsx)(T,{...n,...e})]})}function g(e){const n=(0,p.A)();return(0,h.jsx)(x,{...e,children:d(e.children)},String(n))}},54213:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var r=t(36672);const a={},s=r.createContext(a);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);