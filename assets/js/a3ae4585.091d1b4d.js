"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[81829],{69075:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>T,contentTitle:()=>N,default:()=>b,frontMatter:()=>h,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"QuadraturePoint/Initiate","title":"Initiate","description":"This subroutine constructs the quadrature points.","source":"@site/docs/docs-api/QuadraturePoint/Initiate.md","sourceDirName":"QuadraturePoint","slug":"/QuadraturePoint/Initiate","permalink":"/docs-api/QuadraturePoint/Initiate","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/QuadraturePoint/Initiate.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetTotalQuadraturePoints","permalink":"/docs-api/QuadraturePoint/GetTotalQuadraturePoints"},"next":{"title":"MdEncode","permalink":"/docs-api/QuadraturePoint/MdEncode"}}');var t=a(23420),i=a(54213),s=a(36492),o=a(92492);function u(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nIMPLICIT NONE\n\nTYPE(QuadraturePoint_) :: obj\nTYPE(ReferenceLine_) :: refelem\nINTEGER(I4B) :: order\nrefelem = ReferenceLine(nsd=1_I4B)\norder = 4_I4B\nCALL initiate(obj=obj, &\n  & refelem=refelem, &\n  & order=order,  &\n  & quadratureType="GaussLegendre")\nCALL display(mdencode(obj), "")\nEND PROGRAM main\n'})})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}function d(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nIMPLICIT NONE\nTYPE(QuadraturePoint_) :: obj\nTYPE(ReferenceLine_) :: refelem\nINTEGER(I4B) :: order\n\nrefelem = ReferenceLine(nsd=1_I4B)\norder = 4_I4B\nCALL initiate(obj=obj, &\n  & refelem=refelem, &\n  & order=order,  &\n  & quadratureType=GaussLegendre)\nCALL display(mdencode(obj), "")\nEND PROGRAM main\n'})})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}const h={},N="Initiate",T={},p=[{value:"Interface 1",id:"interface-1",level:2},{value:"Interface 2",id:"interface-2",level:2},{value:"Interface 3",id:"interface-3",level:2},{value:"Interface 4",id:"interface-4",level:2},{value:"Interface 5",id:"interface-5",level:2},{value:"Interface 6",id:"interface-6",level:2},{value:"Interface 7",id:"interface-7",level:2},{value:"Interface 8",id:"interface-8",level:2},{value:"QuadraturePoint (Constructor function)",id:"quadraturepoint-constructor-function",level:2},{value:"QuadraturePoint_Pointer",id:"quadraturepoint_pointer",level:2}];function I(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"initiate",children:"Initiate"})}),"\n",(0,t.jsx)(n.p,{children:"This subroutine constructs the quadrature points."}),"\n",(0,t.jsx)(n.h2,{id:"interface-1",children:"Interface 1"}),"\n","\n",(0,t.jsxs)(s.A,{children:[(0,t.jsxs)(o.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'INTERFACE Initiate\n  MODULE SUBROUTINE quad_initiate3(obj, refElem, order, quadratureType,  &\n    & alpha, beta, lambda)\n    TYPE(QuadraturePoint_), INTENT(INOUT) :: obj\n    !! Total number of xidimension\n    CLASS(ReferenceElement_), INTENT(IN) :: refElem\n    !! Reference element\n    INTEGER(I4B), INTENT(IN) :: order\n    !! order of integrand\n    CHARACTER(*), INTENT(IN) :: quadratureType\n    !! Type of quadrature points\n    !! "GaussLegendre"\n    !! "GaussLegendreLobatto"\n    !! "GaussLegendreRadau", "GaussLegendreRadauLeft"\n    !! "GaussLegendreRadauRight"\n    !! "GaussChebyshev"\n    !! "GaussChebyshevLobatto"\n    !! "GaussChebyshevRadau", "GaussChebyshevRadauLeft"\n    !! "GaussChebyshevRadauRight"\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\n    !! Jacobi parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: beta\n    !! Jacobi parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\n    !! Ultraspherical parameter\n  END SUBROUTINE quad_initiate3\nEND INTERFACE Initiate\n'})}),(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.code,{children:"quadratureType"})})}),(0,t.jsx)(n.p,{children:"Type of quadrature points:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'"GaussLegendre"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussLegendreLobatto"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussLegendreRadau", "GaussLegendreRadauLeft"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussLegendreRadauRight"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussChebyshev"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussChebyshevLobatto"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussChebyshevRadau", "GaussChebyshevRadauLeft"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussChebyshevRadauRight"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussJacobi"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussJacobiLobatto"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussJacobiRadau", "GaussJacobiRadauLeft"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussJacobiRadauRight"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussUltraspherical"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussUltrasphericalLobatto"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussUltrasphericalRadau", "GaussUltraspericalRadauLeft"'}),"\n",(0,t.jsx)(n.li,{children:'"GaussUltrasphericalRadauRight"'}),"\n"]}),(0,t.jsxs)(n.p,{children:["In the case of ",(0,t.jsx)(n.code,{children:"Jacobi"})," ",(0,t.jsx)(n.code,{children:"alpha"})," and ",(0,t.jsx)(n.code,{children:"beta"})," should be given, and in the case of ",(0,t.jsx)(n.code,{children:"Ultraspherical"})," ",(0,t.jsx)(n.code,{children:"lambda"})," should be given."]})]}),(0,t.jsx)(o.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,t.jsx)(l,{})}),(0,t.jsx)(o.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,t.jsx)(n.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE Initiate\n  MODULE SUBROUTINE quad_initiate4(obj, refElem, nips, quadratureType, &\n    & alpha, beta, lambda)\n    TYPE(QuadraturePoint_), INTENT(INOUT) :: obj\n    !! Total number of xidimension\n    CLASS(ReferenceElement_), INTENT(IN) :: refElem\n    !! Reference element\n    INTEGER(I4B), INTENT(IN) :: nips(1)\n    !! order of integrand\n    CHARACTER(*), INTENT(IN) :: quadratureType\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\n    !! Jacobi parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: beta\n    !! Jacobi parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\n    !! Ultraspherical parameter\n  END SUBROUTINE quad_initiate4\nEND INTERFACE Initiate\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"This method allows us to initiate the quadrature points by specifying the number of integration points, and quadrature type."})}),"\n",(0,t.jsx)(n.h2,{id:"interface-3",children:"Interface 3"}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsxs)(o.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE Initiate\n  MODULE SUBROUTINE quad_initiate5( &\n    & obj, &\n    & refElem, &\n    & order, &\n    & quadratureType,  &\n    & alpha, beta, lambda)\n    TYPE(QuadraturePoint_), INTENT(INOUT) :: obj\n    !! Total number of xidimension\n    CLASS(ReferenceElement_), INTENT(IN) :: refElem\n    !! Reference-element\n    INTEGER(I4B), INTENT(IN) :: order\n    !! order of integrand\n    INTEGER(I4B), INTENT(IN) :: quadratureType\n    !! Type of quadrature points\n    !! GaussLegendre\n    !! GaussLegendreLobatto\n    !! GaussLegendreRadau\n    !! GaussLegendreRadauLeft\n    !! GaussLegendreRadauRight\n    !! GaussChebyshev\n    !! GaussChebyshevLobatto\n    !! GaussChebyshevRadau\n    !! GaussChebyshevRadauLeft\n    !! GaussChebyshevRadauRight\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\n    !! Jacobi parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: beta\n    !! Jacobi parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\n    !! Ultraspherical parameter\n  END SUBROUTINE quad_initiate5\nEND INTERFACE Initiate\n"})}),(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.code,{children:"quadratureType"})})}),(0,t.jsx)(n.p,{children:"Type of quadrature points:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GaussLegendre"}),"\n",(0,t.jsx)(n.li,{children:"GaussLegendreLobatto"}),"\n",(0,t.jsx)(n.li,{children:"GaussLegendreRadau, GaussLegendreRadauLeft"}),"\n",(0,t.jsx)(n.li,{children:"GaussLegendreRadauRight"}),"\n",(0,t.jsx)(n.li,{children:"GaussChebyshev"}),"\n",(0,t.jsx)(n.li,{children:"GaussChebyshevLobatto"}),"\n",(0,t.jsx)(n.li,{children:"GaussChebyshevRadau, GaussChebyshevRadauLeft"}),"\n",(0,t.jsx)(n.li,{children:"GaussChebyshevRadauRight"}),"\n",(0,t.jsx)(n.li,{children:"GaussJacobi"}),"\n",(0,t.jsx)(n.li,{children:"GaussJacobiLobatto"}),"\n",(0,t.jsx)(n.li,{children:"GaussJacobiRadau, GaussJacobiRadauLeft"}),"\n",(0,t.jsx)(n.li,{children:"GaussJacobiRadauRight"}),"\n",(0,t.jsx)(n.li,{children:"GaussUltraspherical"}),"\n",(0,t.jsx)(n.li,{children:"GaussUltrasphericalLobatto"}),"\n",(0,t.jsx)(n.li,{children:"GaussUltrasphericalRadau, GaussUltraspericalRadauLeft"}),"\n",(0,t.jsx)(n.li,{children:"GaussUltrasphericalRadauRight"}),"\n"]}),(0,t.jsxs)(n.p,{children:["In the case of ",(0,t.jsx)(n.code,{children:"Jacobi"})," ",(0,t.jsx)(n.code,{children:"alpha"})," and ",(0,t.jsx)(n.code,{children:"beta"})," should be given, and in the case of ",(0,t.jsx)(n.code,{children:"Ultraspherical"})," ",(0,t.jsx)(n.code,{children:"lambda"})," should be given."]})]}),(0,t.jsx)(o.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,t.jsx)(c,{})}),(0,t.jsx)(o.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,t.jsx)(n.h2,{id:"interface-4",children:"Interface 4"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE Initiate\n  MODULE SUBROUTINE quad_initiate6( &\n    & obj, &\n    & refElem, &\n    & nips, &\n    & quadratureType, &\n    & alpha, &\n    & beta, &\n    & lambda)\n    TYPE(QuadraturePoint_), INTENT(INOUT) :: obj\n    !! Total number of xidimension\n    CLASS(ReferenceElement_), INTENT(IN) :: refElem\n    !! Reference element\n    INTEGER(I4B), INTENT(IN) :: nips(1)\n    !! order of integrand\n    INTEGER(I4B), INTENT(IN) :: quadratureType\n    !! Type of quadrature points\n    !! GaussLegendre\n    !! GaussLegendreLobatto\n    !! GaussLegendreRadau\n    !! GaussLegendreRadauLeft\n    !! GaussLegendreRadauRight\n    !! GaussChebyshev\n    !! GaussChebyshevLobatto\n    !! GaussChebyshevRadau\n    !! GaussChebyshevRadauLeft\n    !! GaussChebyshevRadauRight\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\n    !! Jacobi parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: beta\n    !! Jacobi parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\n    !! Ultraspherical parameter\n  END SUBROUTINE quad_initiate6\nEND INTERFACE Initiate\n"})}),"\n",(0,t.jsx)(n.h2,{id:"interface-5",children:"Interface 5"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE Initiate\n  MODULE SUBROUTINE quad_initiate7( &\n    & obj, &\n    & refElem, &\n    & p, q, r, &\n    & quadratureType1, &\n    & quadratureType2, &\n    & quadratureType3, &\n    & alpha1, beta1, lambda1,  &\n    & alpha2, beta2, lambda2,  &\n    & alpha3, beta3, lambda3)\n    TYPE(QuadraturePoint_), INTENT(INOUT) :: obj\n    !! Total number of xidimension\n    CLASS(ReferenceElement_), INTENT(IN) :: refElem\n    !! Reference-element\n    INTEGER(I4B), INTENT(IN) :: p\n    !! order of integrand in x\n    INTEGER(I4B), INTENT(IN) :: q\n    !! order of integrand in y\n    INTEGER(I4B), INTENT(IN) :: r\n    !! order of integrand in z direction\n    INTEGER(I4B), INTENT(IN) :: quadratureType1\n    !! Type of quadrature points\n    !! GaussLegendre\n    !! GaussLegendreLobatto\n    !! GaussLegendreRadau\n    !! GaussLegendreRadauLeft\n    !! GaussLegendreRadauRight\n    !! GaussChebyshev\n    !! GaussChebyshevLobatto\n    !! GaussChebyshevRadau\n    !! GaussChebyshevRadauLeft\n    !! GaussChebyshevRadauRight\n    INTEGER(I4B), INTENT(IN) :: quadratureType2\n    !! Type of quadrature points\n    INTEGER(I4B), INTENT(IN) :: quadratureType3\n    !! Type of quadrature points\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha1, beta1, lambda1\n    !! Jacobi parameter and Ultraspherical parameters\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha2, beta2, lambda2\n    !! Jacobi parameter and Ultraspherical parameters\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha3, beta3, lambda3\n    !! Jacobi parameter and Ultraspherical parameters\n  END SUBROUTINE quad_initiate7\nEND INTERFACE Initiate\n"})}),"\n",(0,t.jsx)(n.h2,{id:"interface-6",children:"Interface 6"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE Initiate\n  MODULE SUBROUTINE quad_initiate8( &\n    & obj, &\n    & refElem, &\n    & nipsx, &\n    & nipsy, &\n    & nipsz, &\n    & quadratureType1, &\n    & quadratureType2, &\n    & quadratureType3, &\n    & alpha1, beta1, lambda1, &\n    & alpha2, beta2, lambda2, &\n    & alpha3, beta3, lambda3)\n    TYPE(QuadraturePoint_), INTENT(INOUT) :: obj\n    !! Total number of xidimension\n    CLASS(ReferenceElement_), INTENT(IN) :: refElem\n    !! Reference element\n    INTEGER(I4B), INTENT(IN) :: nipsx(1)\n    !! number of integration points in x direction\n    INTEGER(I4B), INTENT(IN) :: nipsy(1)\n    !! number of integration points in y direction\n    INTEGER(I4B), INTENT(IN) :: nipsz(1)\n    !! number of integration points in z direction\n    INTEGER(I4B), INTENT(IN) :: quadratureType1\n    !! Type of quadrature points\n    !! GaussLegendre\n    !! GaussLegendreLobatto\n    !! GaussLegendreRadau\n    !! GaussLegendreRadauLeft\n    !! GaussLegendreRadauRight\n    !! GaussChebyshev\n    !! GaussChebyshevLobatto\n    !! GaussChebyshevRadau\n    !! GaussChebyshevRadauLeft\n    !! GaussChebyshevRadauRight\n    INTEGER(I4B), INTENT(IN) :: quadratureType2\n    !! Type of quadrature points\n    INTEGER(I4B), INTENT(IN) :: quadratureType3\n    !! Type of quadrature points\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha1, beta1, lambda1\n    !! Jacobi parameter and Ultraspherical parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha2, beta2, lambda2\n    !! Jacobi parameter and Ultraspherical parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha3, beta3, lambda3\n    !! Jacobi parameter and Ultraspherical parameter\n  END SUBROUTINE quad_initiate8\nEND INTERFACE Initiate\n"})}),"\n",(0,t.jsx)(n.h2,{id:"interface-7",children:"Interface 7"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"MODULE PURE SUBROUTINE Initiate( obj, Points )\n  CLASS( QuadraturePoint_ ), INTENT( INOUT ) :: obj\n  REAL( DFP ), INTENT( IN ) :: Points( :, : )\n    !! Points contains the quadrature points and weights\n    !! Points( :, ipoint ) contains quadrature points and weights of ipoint\n    !! quadrature point. The last row contains the weight. The rest of the\n    !! rows contains the coordinates of quadrature.\nEND SUBROUTINE Initiate\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This subroutine converts the quadrature points into ",(0,t.jsx)(n.code,{children:"QuadraturePoint_"})," data type."]}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"This routine is for developers only, normal user should not worry about this interface."})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.code,{children:"Points"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Points"})," contains the quadrature points and weights"]}),"\n",(0,t.jsxs)(n.li,{children:["for example, ",(0,t.jsx)(n.code,{children:"Points( :, ipoint )"})," contains quadrature points and weights of ",(0,t.jsx)(n.code,{children:"ipoint"})," quadrature point."]}),"\n",(0,t.jsx)(n.li,{children:"The last row always contains the weight."}),"\n",(0,t.jsx)(n.li,{children:"The rest of the rows contains the coordinates of quadrature."}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"interface-8",children:"Interface 8"}),"\n",(0,t.jsx)("span",{class:"badge badge--warning",children:" developers only "}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"MODULE PURE SUBROUTINE Initiate( obj, tXi, tPoints )\n  CLASS( QuadraturePoint_ ), INTENT( INOUT ) :: obj\n  INTEGER( I4B ), INTENT( IN ) :: tXi\n  !! Total number of xidimension\n  !! For line tXi=1\n  !! For 2D element tXi=2\n  !! For 3D element tXi=3\n  INTEGER( I4B ), INTENT( IN ) :: tPoints\n  !! Total number quadrature points\nEND SUBROUTINE Initiate\n"})}),"\n",(0,t.jsx)(n.p,{children:"The following interface allocates the memory for storing the quadrature points."}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"This routine is for developers only, normal user should not worry about this interface."})}),"\n",(0,t.jsx)(n.h2,{id:"quadraturepoint-constructor-function",children:"QuadraturePoint (Constructor function)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"MODULE PURE FUNCTION QuadraturePoint( Points ) RESULT( obj )\n  TYPE( QuadraturePoint_ ) :: obj\n  REAL( DFP ), INTENT( IN ) :: Points( :, : )\nEND FUNCTION QuadraturePoint\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This function converts ",(0,t.jsx)(n.code,{children:"Points"})," to an instance of QuadraturePoint."]}),"\n",(0,t.jsx)(n.h2,{id:"quadraturepoint_pointer",children:"QuadraturePoint_Pointer"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"MODULE PURE FUNCTION QuadraturePoint_Pointer( Points ) RESULT( obj )\n  CLASS( QuadraturePoint_ ), POINTER :: obj\n  REAL( DFP ), INTENT( IN ) :: Points( :, : )\nEND FUNCTION QuadraturePoint_Pointer\n"})})]})}function b(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(I,{...e})}):I(e)}},92492:(e,n,a)=>{a.d(n,{A:()=>s});a(36672);var r=a(28923);const t={tabItem:"tabItem_VSPN"};var i=a(23420);function s(e){let{children:n,hidden:a,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,s),hidden:a,children:n})}},36492:(e,n,a)=>{a.d(n,{A:()=>x});var r=a(36672),t=a(28923),i=a(19929),s=a(85291),o=a(5581),u=a(80034),l=a(12715),d=a(62741);function c(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:a}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:a,attributes:r,default:t}}=e;return{value:n,label:a,attributes:r,default:t}}))}(a);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function N(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function T(e){let{queryString:n=!1,groupId:a}=e;const t=(0,s.W6)(),i=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,u.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function p(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,i=h(e),[s,u]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!N({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[l,c]=T({queryString:a,groupId:t}),[p,I]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,i]=(0,d.Dv)(a);return[t,(0,r.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:t}),b=(()=>{const e=l??p;return N({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{b&&u(b)}),[b]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!N({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);u(e),c(e),I(e)}),[c,I,i]),tabValues:i}}var I=a(32111);const b={tabList:"tabList_csSQ",tabItem:"tabItem_Bcmo"};var E=a(23420);function f(e){let{className:n,block:a,selectedValue:r,selectValue:s,tabValues:o}=e;const u=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),d=e=>{const n=e.currentTarget,a=u.indexOf(n),t=o[a].value;t!==r&&(l(n),s(t))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;n=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;n=u[a]??u[u.length-1];break}}n?.focus()};return(0,E.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":a},n),children:o.map((e=>{let{value:n,label:a,attributes:i}=e;return(0,E.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{u.push(e)},onKeyDown:c,onClick:d,...i,className:(0,t.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":r===n}),children:a??n},n)}))})}function m(e){let{lazy:n,children:a,selectedValue:i}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,E.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function R(e){const n=p(e);return(0,E.jsxs)("div",{className:(0,t.A)("tabs-container",b.tabList),children:[(0,E.jsx)(f,{...n,...e}),(0,E.jsx)(m,{...n,...e})]})}function x(e){const n=(0,I.A)();return(0,E.jsx)(R,{...e,children:c(e.children)},String(n))}},54213:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var r=a(36672);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);