"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[61933],{13809:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"CSRMatrix/GetILUDP","title":"GetILUDP","description":"This routine computes ILUDP preconditioner: incomplete LU factorization with standard droppoing strategy.","source":"@site/docs/docs-api/CSRMatrix/GetILUDP.md","sourceDirName":"CSRMatrix","slug":"/CSRMatrix/GetILUDP","permalink":"/docs-api/CSRMatrix/GetILUDP","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/CSRMatrix/GetILUDP.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetILUD","permalink":"/docs-api/CSRMatrix/GetILUD"},"next":{"title":"GetILUK","permalink":"/docs-api/CSRMatrix/GetILUK"}}');var a=t(23420),o=t(54213),i=t(36492),s=t(92492);const l={},c="GetILUDP",d={},u=[{value:"Interface",id:"interface",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"getiludp",children:"GetILUDP"})}),"\n",(0,a.jsx)(n.p,{children:"This routine computes ILUDP preconditioner: incomplete LU factorization with standard droppoing strategy."}),"\n","\n",(0,a.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(s.A,{value:"interface",label:"\ud83d\udcdd Interface 1",default:!0,children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE GetILUDP(obj, ALU, JLU, JU, alpha, droptol, &\n    & permtol, mbloc, IPERM)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: ALU(:)\n    INTEGER(I4B), ALLOCATABLE, INTENT(INOUT) :: JLU(:)\n    INTEGER(I4B), ALLOCATABLE, INTENT(INOUT) :: JU(:)\n    REAL(DFP), INTENT(IN) :: alpha\n    REAL(DFP), INTENT(IN) :: droptol\n    REAL(DFP), INTENT(IN) :: permtol\n    INTEGER(I4B), INTENT(IN) :: mbloc\n    INTEGER(I4B), ALLOCATABLE, INTENT(INOUT) :: IPERM(:)\n  END SUBROUTINE GetILUDP\nEND INTERFACE\n"})}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"droptol"})," is the tolerance used for dropping elements in L and U. elements are dropped if they are .lt. norm(row) x droptol row = row being eliminated"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"permtol"})," is the tolerance ratio used for determning whether to permute two columns. Two columns are permuted only when ",(0,a.jsx)(n.code,{children:"abs(a(i,j))*permtol .gt. abs(a (i,i))"})]}),"\n"]}),(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"permtol = 0 means never permute, and a good values 0.1 to 0.01]"})}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"mbloc"}),", if desired, permuting can be done only within the diagonal blocks of size mbloc. Useful for PDE problems with several degrees of freedom. If feature not wanted take mbloc=n."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"iperm"})," contains the permutation arrays, ",(0,a.jsx)(n.code,{children:"iperm(1:n)"})," old numbers of unknowns, ",(0,a.jsx)(n.code,{children:"iperm(n+1:2\\*n)"})," reverse permutation for new unknowns."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"abs(a(i,j)) < droptol"}),", that is, average magnitude of elements in row i of A"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"alpha"})," is diagonal compensation parameter, alph ",(0,a.jsx)(n.code,{children:"*"})," (sum of all dropped out elements in a given row) is added to the diagonal element of U of the factorization"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"alph = 0 means the scheme is ILU with threshold,"}),"\n",(0,a.jsx)(n.li,{children:"alph = 1 means the scheme is MILU with threshold."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"droptol"})," is Threshold parameter for dropping small terms in the factorization. During the elimination, a term a(i,j) is dropped whenever ",(0,a.jsx)(n.code,{children:"abs (a(i,j)) .lt. droptol"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"obj"})," matrix stored in Compressed Sparse Row format."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ALU,JLU"}),", matrix stored in Modified Sparse Row (MSR) Format containing the L and U factors together. The diagonal (stored in ALU(1",":n",") ) is inverted. Each ith row of the ALU,JLU matrix contains the ith row of L (excluding the diagonal entry=1) followed by the ith row of U."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"JU"})," integer array of length n containing the pointers to the beginning of each row of U in the matrix ",(0,a.jsx)(n.code,{children:"ALU,JLU"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Theresholding in L and U as set by ",(0,a.jsx)(n.code,{children:"droptol"}),". Any element whose MAGNITUDE is less than some tolerance (relative to the abs value of\ndiagonal element in U) is dropped."]}),"\n"]}),"\n"]})]}),(0,a.jsxs)(s.A,{value:"iface2",label:"Interface 2",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE GetILUDP(obj, Pmat, alpha, droptol, &\n    & permtol, mbloc, IPERM)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    TYPE(CSRMatrix_), INTENT(INOUT) :: Pmat\n    REAL(DFP), INTENT(IN) :: alpha\n    REAL(DFP), INTENT(IN) :: droptol\n    REAL(DFP), INTENT(IN) :: permtol\n    INTEGER(I4B), INTENT(IN) :: mbloc\n    INTEGER(I4B), ALLOCATABLE, INTENT(INOUT) :: IPERM(:)\n  END SUBROUTINE GetILUDP\nEND INTERFACE\n"})}),(0,a.jsxs)(n.p,{children:["This routine is similar to interface 1, but in this interface ILU factorization is returned as an instance of ",(0,a.jsx)(n.code,{children:"CSRMatrix_"}),"."]})]}),(0,a.jsx)(s.A,{value:"close",label:"\u25c9 Close"})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},92492:(e,n,t)=>{t.d(n,{A:()=>i});t(36672);var r=t(28923);const a={tabItem:"tabItem_VSPN"};var o=t(23420);function i(e){let{children:n,hidden:t,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,i),hidden:t,children:n})}},36492:(e,n,t)=>{t.d(n,{A:()=>j});var r=t(36672),a=t(28923),o=t(19929),i=t(85291),s=t(5581),l=t(80034),c=t(12715),d=t(62741);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=h(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[c,u]=m({queryString:t,groupId:a}),[f,I]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,d.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),x=(()=>{const e=c??f;return p({value:e,tabValues:o})?e:null})();(0,s.A)((()=>{x&&l(x)}),[x]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),I(e)}),[u,I,o]),tabValues:o}}var I=t(32111);const x={tabList:"tabList_csSQ",tabItem:"tabItem_Bcmo"};var b=t(23420);function T(e){let{className:n,block:t,selectedValue:r,selectValue:i,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),a=s[t].value;a!==r&&(c(n),i(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...o,className:(0,a.A)("tabs__item",x.tabItem,o?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function N(e){let{lazy:n,children:t,selectedValue:o}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function E(e){const n=f(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,b.jsx)(T,{...n,...e}),(0,b.jsx)(N,{...n,...e})]})}function j(e){const n=(0,I.A)();return(0,b.jsx)(E,{...e,children:u(e.children)},String(n))}},54213:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(36672);const a={},o=r.createContext(a);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);