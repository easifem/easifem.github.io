"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[15427],{44685:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>I,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>N,toc:()=>d});const N=JSON.parse('{"id":"AbstractMatrixField/GetColumn","title":"GetColumn","description":"Calling example:","source":"@site/docs/docs-api/AbstractMatrixField/GetColumn.md","sourceDirName":"AbstractMatrixField","slug":"/AbstractMatrixField/GetColumn","permalink":"/docs-api/AbstractMatrixField/GetColumn","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMatrixField/GetColumn.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Export","permalink":"/docs-api/AbstractMatrixField/Export"},"next":{"title":"GetDiagonal","permalink":"/docs-api/AbstractMatrixField/GetDiagonal"}}');var a=o(23420),t=o(54213);const l={},i="GetColumn",I={},d=[{value:"Interface",id:"interface",level:2}];function T(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"getcolumn",children:"GetColumn"})}),"\n",(0,a.jsx)(n.p,{children:"Calling example:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"GetColumn(obj, globalnode, idof, value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"GetColumn(obj, globalnode, ivar, idof, value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"GetColumn(obj, globalnode, ivar, spacecompo, timecompo, value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"GetColumn(obj, globalnode, ivar, spacecompo, timecompo(:), value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"GetColumn(obj, globalnode, ivar, spacecompo(:), timecompo, value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"GetColumn(obj, globalnode(:), ivar, spacecompo, timecompo(:), value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"GetColumn(obj, globalnode(:), ivar, spacecompo(:), timecompo, value(:), nodefieldval, scale, addcontribution"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn1(obj, globalNode, idof, VALUE, nodeFieldVal, &\n    & scale, addContribution)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP, LGT\n    CLASS(AbstractMatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: idof\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn1\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn2(obj, globalNode, ivar, idof, &\n      & VALUE, nodeFieldVal, scale, addContribution)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP, LGT\n    CLASS(AbstractMatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: idof\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn2\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn3(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP, LGT\n    CLASS(AbstractMatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo\n    INTEGER(I4B), INTENT(IN) :: timecompo\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn3\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn4(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP, LGT\n    CLASS(AbstractMatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo\n    INTEGER(I4B), INTENT(IN) :: timecompo(:)\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn4\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn5(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP, LGT\n    CLASS(AbstractMatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo(:)\n    INTEGER(I4B), INTENT(IN) :: timecompo\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn5\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn6(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP, LGT\n    CLASS(AbstractMatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo\n    INTEGER(I4B), INTENT(IN) :: timecompo(:)\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn6\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn7(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP, LGT\n    CLASS(AbstractMatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo(:)\n    INTEGER(I4B), INTENT(IN) :: timecompo\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn7\nEND INTERFACE\n"})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(T,{...e})}):T(e)}},54213:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>i});var N=o(36672);const a={},t=N.createContext(a);function l(e){const n=N.useContext(t);return N.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),N.createElement(t.Provider,{value:n},e.children)}}}]);