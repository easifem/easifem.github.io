"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[63746],{35128:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"AbstractMaterial/ImportFromToml","title":"ImportFromToml","description":"Initiate an instance by using a toml config.","source":"@site/docs/docs-api/AbstractMaterial/ImportFromToml.md","sourceDirName":"AbstractMaterial","slug":"/AbstractMaterial/ImportFromToml","permalink":"/docs-api/AbstractMaterial/ImportFromToml","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMaterial/ImportFromToml.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Import","permalink":"/docs-api/AbstractMaterial/Import"},"next":{"title":"Initiate","permalink":"/docs-api/AbstractMaterial/Initiate"}}');var a=t(23420),o=t(54213);const l={},i="ImportFromToml",s={},c=[{value:"Interface",id:"interface",level:2}];function m(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components},{Details:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"importfromtoml",children:"ImportFromToml"})}),"\n",(0,a.jsxs)(r.p,{children:["Initiate an instance by using a ",(0,a.jsx)(r.code,{children:"toml"})," config."]}),"\n",(0,a.jsx)("span",{class:"badge badge--secondary",children:" @IOMethods "}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click here to see toml-config"}),(0,a.jsxs)("div",{children:[(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:'[[material]]\nreturnType = "Scalar"\n# returnType = "Vector"\n# returnType = "Matrix"\nargType = "Space"\n# argType = "Constant"\n# argType = "Space"\n# argType = "Time"\n# argType = "SpaceTime"\nnumArgs = 3\nnumReturns = 1\nluaScript = "./hello.lua"\nluaFunctionName="hello"\nscalarValue = 1.0 \nvectorValue = [1.0, 2.0, 3.0]\nmatrixValue = [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]\n\n[[material]]\nreturnType = "Scalar"\n# returnType = "Vector"\n# returnType = "Matrix"\nargType = "Space"\n# argType = "Constant"\n# argType = "Space"\n# argType = "Time"\n# argType = "SpaceTime"\nnumArgs = 3\nnumReturns = 1\nluaScript = "./hello.lua"\nluaFunctionName="hello"\nscalarValue = 1.0 \nvectorValue = [1.0, 2.0, 3.0]\nmatrixValue = [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]\n'})}),(0,a.jsxs)(r.p,{children:["This ",(0,a.jsx)(r.code,{children:"toml"})," configuration is almost same as the ",(0,a.jsx)(r.a,{href:"/docs-api/UserFunction",children:"UserFunction"}),"."]})]})]}),"\n",(0,a.jsx)(r.h2,{id:"interface",children:"Interface"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:"INTERFACE AbstractMaterialImportFromToml\n  MODULE SUBROUTINE ImportFromToml3(obj, tomlName, afile, filename,  &\n    & printToml)\n    CLASS(AbstractMaterial_), INTENT(INOUT) :: obj\n    CHARACTER(*), INTENT(IN) :: tomlName\n    TYPE(TxtFile_), OPTIONAL, INTENT(INOUT) :: afile\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: filename\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: printToml\n  END SUBROUTINE ImportFromToml3\nEND INTERFACE AbstractMaterialImportFromToml\n"})}),"\n",(0,a.jsx)(r.admonition,{type:"info",children:(0,a.jsx)(r.p,{children:"The following interfaces are mainly for internal use only. Most of the users should use the above interface."})}),"\n",(0,a.jsx)("span",{class:"badge badge--warning",children:" Developer only "}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:"INTERFACE AbstractMaterialImportFromToml\n  MODULE SUBROUTINE ImportFromToml1(obj, table)\n    CLASS(AbstractMaterial_), INTENT(INOUT) :: obj\n    TYPE(toml_table), INTENT(INOUT) :: table\n  END SUBROUTINE ImportFromToml1\nEND INTERFACE AbstractMaterialImportFromToml\n"})}),"\n",(0,a.jsx)("span",{class:"badge badge--warning",children:" Developer only "}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:"INTERFACE AbstractMaterialImportFromToml\n  MODULE SUBROUTINE ImportFromToml2(obj, array)\n    CLASS(AbstractMaterial_), INTENT(INOUT) :: obj\n    TYPE(toml_array), POINTER, INTENT(INOUT) :: array\n  END SUBROUTINE ImportFromToml2\nEND INTERFACE AbstractMaterialImportFromToml\n"})})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},54213:(e,r,t)=>{t.d(r,{R:()=>l,x:()=>i});var n=t(36672);const a={},o=n.createContext(a);function l(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);