"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[82100],{48709:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"using-easifem/index","title":"Overview","description":"In this section presents the details of using EASIFEM in your project. There are several ways to use easifem in your development environment. Please select the one which is most suitable for you.","source":"@site/docs/guides/using-easifem/index.mdx","sourceDirName":"using-easifem","slug":"/using-easifem/","permalink":"/guides/using-easifem/","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/guides/using-easifem/index.mdx","tags":[],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":1,"frontMatter":{"title":"Overview","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"VTKFortran","permalink":"/guides/install/extpkgs/VTKFortran"},"next":{"title":"easifem CLI","permalink":"/guides/using-easifem/easifem-cli"}}');var t=i(23420),o=i(54213);const a={title:"Overview",sidebar_position:1},r=void 0,c={},d=[{value:"<code>easifem</code> CLI (recommended)",id:"easifem-cli-recommended",level:2},{value:"CMake",id:"cmake",level:2},{value:"Meson",id:"meson",level:2},{value:"Raw usage",id:"raw-usage",level:2}];function l(e){const s={a:"a",code:"code",h2:"h2",input:"input",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["In this section presents the details of using EASIFEM in your project. There are several ways to use ",(0,t.jsx)(s.code,{children:"easifem"})," in your development environment. Please select the one which is most suitable for you."]}),"\n",(0,t.jsxs)(s.h2,{id:"easifem-cli-recommended",children:[(0,t.jsx)(s.code,{children:"easifem"})," CLI (recommended)"]}),"\n",(0,t.jsxs)(s.p,{children:["The easiest way to use ",(0,t.jsx)(s.code,{children:"easifem"})," is by using ",(0,t.jsx)(s.code,{children:"easifem"})," command line interface. You can obtain the command line interface by using the details presented in ",(0,t.jsx)(s.a,{href:"/guides/install",children:"previous sections"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"cmake",children:"CMake"}),"\n",(0,t.jsxs)(s.p,{children:["As we have mentioned before ",(0,t.jsx)(s.code,{children:"easifem"})," uses CMake build system. Integrating your project with ",(0,t.jsx)(s.code,{children:"easifem"})," is very simple."]}),"\n",(0,t.jsx)(s.h2,{id:"meson",children:"Meson"}),"\n",(0,t.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","TODO coming soon."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"raw-usage",children:"Raw usage"})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},54213:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>r});var n=i(36672);const t={},o=n.createContext(t);function a(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);