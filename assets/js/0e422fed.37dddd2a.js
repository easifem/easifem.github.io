"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[78551],{37266:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"MatrixFieldLis/SetMatrixFieldParam","title":"SetMatrixFieldParam","description":"Set parameters necessary for constructing MatrixFieldLis","source":"@site/docs/docs-api/MatrixFieldLis/SetMatrixFieldParam.md","sourceDirName":"MatrixFieldLis","slug":"/MatrixFieldLis/SetMatrixFieldParam","permalink":"/docs-api/MatrixFieldLis/SetMatrixFieldParam","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/MatrixFieldLis/SetMatrixFieldParam.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SetColumn","permalink":"/docs-api/MatrixFieldLis/SetColumn"},"next":{"title":"SetMatrixFieldPrecondParam","permalink":"/docs-api/MatrixFieldLis/SetMatrixFieldPrecondParam"}}');var a=i(23420),r=i(54213);const s={},o="SetMatrixFieldParam",l={},d=[{value:"Interface",id:"interface",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"setmatrixfieldparam",children:"SetMatrixFieldParam"})}),"\n",(0,a.jsxs)(t.p,{children:["Set parameters necessary for constructing ",(0,a.jsx)(t.a,{href:"/docs-api/MatrixFieldLis/MatrixFieldLis_",children:"MatrixFieldLis_"})]}),"\n",(0,a.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:'INTERFACE\n  MODULE SUBROUTINE SetMatrixFieldParam( &\n    & param, &\n    & name, &\n    & matrixProp, &\n    & engine,  &\n    & spaceCompo, &\n    & timeCompo, &\n    & fieldType, &\n    & comm, &\n    & local_n, &\n    & global_n)\n    TYPE(ParameterList_), INTENT(INOUT) :: param\n    !! Options to create [[MatrixField_]] will be stored in this\n    CHARACTER(*), INTENT(IN) :: name\n    !! Name of the matrix field\n    CHARACTER(*), INTENT(IN) :: matrixProp\n    !! Matrix property, "SYM" or "UNSYM"\n    CHARACTER(*), INTENT(IN) :: engine\n    !! "NATIVE_SERIE"\n    !! "LIS_OMP"\n    !! "LIS_MPI"\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: spaceCompo\n    !! Number of space-components, see [[DOF_]]\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: timeCompo\n    !! Number of time-components, see [[DOF_]]\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: fieldType\n    !! fieldType can be following\n    !! FIELD_TYPE_NORMAL\n    !! FIELD_TYPE_CONSTANT\n    !! FIELD_TYPE_CONSTANT_SPACE\n    !! FIELD_TYPE_CONSTANT_TIME\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: comm\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: local_n\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: global_n\n  END SUBROUTINE SetMatrixFieldParam\nEND INTERFACE\n'})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},54213:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>o});var n=i(36672);const a={},r=n.createContext(a);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);