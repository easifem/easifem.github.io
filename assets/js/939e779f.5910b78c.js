"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[10334],{59193:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"SteadyStokes111/GetPressureNeumannBCPointer","title":"GetPressureNeumannBCPointer","description":"This routine returns the pointer to Neumann boundary condition of pressure field in AbstractSteadyStokes kernel, that is obj%NBCForPressure(nbcNo)%ptr.","source":"@site/docs/docs-api/SteadyStokes111/GetPressureNeumannBCPointer.md","sourceDirName":"SteadyStokes111","slug":"/SteadyStokes111/GetPressureNeumannBCPointer","permalink":"/docs-api/SteadyStokes111/GetPressureNeumannBCPointer","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes111/GetPressureNeumannBCPointer.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetPressureDirichletBCPointer","permalink":"/docs-api/SteadyStokes111/GetPressureDirichletBCPointer"},"next":{"title":"GetVelocityDirichletBCPointer","permalink":"/docs-api/SteadyStokes111/GetVelocityDirichletBCPointer"}}');var s=t(23420),o=t(54213);const i={},a="GetPressureNeumannBCPointer",c={},d=[{value:"Interface",id:"interface",level:2},{value:"Example",id:"example",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"getpressureneumannbcpointer",children:"GetPressureNeumannBCPointer"})}),"\n",(0,s.jsxs)(n.p,{children:["This routine returns the pointer to Neumann boundary condition of pressure field in ",(0,s.jsx)(n.a,{href:"/docs-api/AbstractSteadyStokes/AbstractSteadyStokes_",children:"AbstractSteadyStokes_"})," kernel, that is ",(0,s.jsx)(n.code,{children:"obj%NBCForPressure(nbcNo)%ptr"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"After obtaining the Neumann boundary condition pointer, user can set the boundary condition"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nbcNo"})," should be lesser than total Neumann boundary condition"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE FUNCTION getPressureNeumannBCPointer(obj, nbcNo) RESULT(ans)\n    CLASS(AbstractSteadyStokes_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: nbcNo\n    !! Neumann boundary nunber\n    CLASS(NeumannBC_), POINTER :: ans\n  END FUNCTION getPressureNeumannBCPointer\nEND INTERFACE\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},54213:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(36672);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);