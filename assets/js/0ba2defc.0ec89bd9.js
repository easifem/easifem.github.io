"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[7220],{52008:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"AbstractMaterialModel/GetFromToml","title":"GetFromToml","description":"Initiate an instance of AbstractMaterialModel from toml-file.","source":"@site/docs/docs-api/AbstractMaterialModel/GetFromToml.md","sourceDirName":"AbstractMaterialModel","slug":"/AbstractMaterialModel/GetFromToml","permalink":"/docs-api/AbstractMaterialModel/GetFromToml","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMaterialModel/GetFromToml.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Export","permalink":"/docs-api/AbstractMaterialModel/Export"},"next":{"title":"Import","permalink":"/docs-api/AbstractMaterialModel/Import"}}');var r=o(23420),a=o(54213);const l={},i="GetFromToml",s={},c=[{value:"Interface",id:"interface",level:2}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getfromtoml",children:"GetFromToml"})}),"\n",(0,r.jsxs)(t.p,{children:["Initiate an instance of ",(0,r.jsx)(t.code,{children:"AbstractMaterialModel"})," from toml-file."]}),"\n",(0,r.jsx)("span",{class:"badge badge--secondary",children:" @IOMethods "}),"\n",(0,r.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-fortran",children:"ABSTRACT INTERFACE\n  SUBROUTINE ImportFromToml2(obj, tomlName, afile, filename,  &\n    & printToml)\n    IMPORT :: AbstractMaterialModel_, TxtFile_, LGT\n    CLASS(AbstractMaterialModel_), INTENT(INOUT) :: obj\n    CHARACTER(*), INTENT(IN) :: tomlName\n    TYPE(TxtFile_), OPTIONAL, INTENT(INOUT) :: afile\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: filename\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: printToml\n  END SUBROUTINE ImportFromToml2\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"The following method is only for internal use."})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-fortran",children:"ABSTRACT INTERFACE\n  SUBROUTINE ImportFromToml1(obj, table)\n    IMPORT :: AbstractMaterialModel_, toml_table\n    CLASS(AbstractMaterialModel_), INTENT(INOUT) :: obj\n    TYPE(toml_table), INTENT(INOUT) :: table\n  END SUBROUTINE ImportFromToml1\nEND INTERFACE\n"})})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},54213:(e,t,o)=>{o.d(t,{R:()=>l,x:()=>i});var n=o(36672);const r={},a=n.createContext(r);function l(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);