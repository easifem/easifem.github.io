"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[94385],{6194:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"StaticDiffusion/StaticDiffusion_test_10","title":"StaticDiffusion_test_10","description":"This example shows the use of AssembleTanmat method.","source":"@site/docs/docs-api/StaticDiffusion/StaticDiffusion_test_10.md","sourceDirName":"StaticDiffusion","slug":"/StaticDiffusion/StaticDiffusion_test_10","permalink":"/docs-api/StaticDiffusion/StaticDiffusion_test_10","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/StaticDiffusion/StaticDiffusion_test_10.md","tags":[],"version":"current","lastUpdatedAt":1736823324000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"StaticDiffusion_test_1","permalink":"/docs-api/StaticDiffusion/StaticDiffusion_test_1"},"next":{"title":"StaticDiffusion_test_11","permalink":"/docs-api/StaticDiffusion/StaticDiffusion_test_11"}}');var t=a(23420),o=a(54213);const r={},s=void 0,l={},c=[];function d(e){const n={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This example shows the use of AssembleTanmat method."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n    USE easifemBase\n    USE easifemClasses\n    USE easifemMaterials\n    USE easifemKernels\n    USE StaticDiffusion_Class\n    IMPLICIT NONE\n    TYPE(StaticDiffusion_) :: obj\n    TYPE(ParameterList_) :: param\n    TYPE(Domain_) :: dom\n    CHARACTER( LEN = * ), PARAMETER :: domainFileName="./mesh.h5"\n    CHARACTER( LEN = * ), PARAMETER :: &\n        & outfileName="./StaticDiffusionExport.h5"\n    TYPE( HDF5File_ ) :: domainFile\n    TYPE( HDF5File_ ) :: outfile\n    TYPE( MeshSelection_ ) :: region\n    INTEGER(I4B), PARAMETER :: tMaterials = 2, tDirichletBC=2, &\n      & solverName = LIS_CG, preconditionOption=LEFT_PRECONDITION, &\n      & convergenceIn = convergenceInRes, &\n      & convergenceType=relativeConvergence, &\n      & maxIter = 100, &\n      & KrylovSubspaceSize=20\n    CLASS( DirichletBC_ ), POINTER :: dbc\n'})}),"\n",(0,t.jsx)(n.p,{children:'!!! note ""\nInitiate an instance of [[ParameterList_]]'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"    CALL FPL_INIT(); CALL param%Initiate()\n"})}),"\n",(0,t.jsx)(n.p,{children:'!!! note ""\nSet the parameter for [[StaticDiffusion_]]'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'    CALL SetStaticDiffusionParam( param=param, engine="NATIVE_SERIAL", &\n      & coordinateSystem=KERNEL_2D, tMaterials=tMaterials, &\n      & tDirichletBC=tDirichletBC, domainFile=domainFileName, &\n      & baseContinuity="H1", &\n      & baseInterpolation="LagrangeInterpolation", &\n      & quadratureType="GaussLegendre" )\n'})}),"\n",(0,t.jsx)(n.p,{children:'!!! note ""\nSet the parameter for [[LinSolver_]].'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"    CALL SetLinSolverParam( &\n      & param=param, &\n      & solverName=solverName,&\n      & preconditionOption=preconditionOption, &\n      & convergenceIn=convergenceIn, &\n      & convergenceType=convergenceType, &\n      & maxIter=maxIter, &\n      & relativeToRHS=.TRUE., &\n      & KrylovSubspaceSize=KrylovSubspaceSize, &\n      & rtol=1.0D-10, &\n      & atol=1.0D-10 )\n"})}),"\n",(0,t.jsx)(n.p,{children:'!!! note ""\nInitiates computation domain.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"    CALL domainFile%Initiate(filename=domainFileName, mode=\"READ\")\n    CALL domainFile%Open()\n    CALL dom%Initiate( domainFile, '' )\n    CALL domainFile%Deallocate()\n"})}),"\n",(0,t.jsx)(n.p,{children:'!!! note ""\nInitiate an instace of [[StaticDiffusion_]] kernel'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"    CALL obj%Initiate( param=param, dom=dom )\n"})}),"\n",(0,t.jsx)(n.p,{children:'!!! note "addMaterial 1"\nAdd another material and domain region in the [[StaticDiffusion_]] kernel.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'    CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n    CALL region%Add( dim=2, meshID=[1] )\n    CALL SetSolidMaterialParam( param=param, name="SolidMaterial", &\n      & massDensity=1.0_DFP, diffusivity=1.0_DFP )\n    CALL obj%AddMaterial( materialNo=1, materialName="SolidMaterial",  &\n      & param=param, region=region )\n    CALL region%Deallocate()\n'})}),"\n",(0,t.jsx)(n.p,{children:'!!! note "addMaterial 2"\nAdd another material and domain region in the [[StaticDiffusion_]] kernel.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'    CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n    CALL region%Add( dim=2, meshID=[2] )\n    CALL SetSolidMaterialParam( param=param, name="SolidMaterial", &\n      & massDensity=1.0_DFP, diffusivity=1.0_DFP )\n    CALL obj%AddMaterial( materialNo=2, materialName="SolidMaterial",  &\n      & param=param, region=region )\n    CALL region%Deallocate()\n'})}),"\n",(0,t.jsx)(n.p,{children:'!!! note "SetDirichletBC 1"\nNow we set the Dirichlet boundary condition. First we select the mesh\nboundary, then we prescribe the boundary condition.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'    CALL SetDirichletBCParam(param=param, name="ZeroDBC", idof=1, &\n      & nodalValueType=Constant, useFunction=.FALSE. )\n    CALL region%Initiate( isSelectionByMeshID=.TRUE.)\n    CALL region%Add( dim=1, meshID=[3] )\n    CALL obj%AddDirichletBC( dbcNo=1, boundary=region, param=param )\n    CALL region%Deallocate()\n    dbc => obj%GetDirichletBCPointer( dbcNo=1 )\n    CALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\n'})}),"\n",(0,t.jsx)(n.p,{children:'!!! note "SetDirichletBC 2"\nLet us repeat the procedure mentioned above to prescribe another boundary condition.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'    CALL SetDirichletBCParam(param=param, name="NonZeroDBC", idof=1, &\n      & nodalValueType=Constant, useFunction=.FALSE. )\n    CALL region%Initiate( isSelectionByMeshID=.TRUE.)\n    CALL region%Add( dim=1, meshID=[6] )\n    CALL obj%AddDirichletBC( dbcNo=2, boundary=region, param=param )\n    CALL region%Deallocate()\n    dbc => obj%GetDirichletBCPointer( dbcNo=2 )\n    CALL dbc%Set( ConstantNodalValue=1.0_DFP ); dbc=>NULL()\n'})}),"\n",(0,t.jsxs)(n.p,{children:['!!! note "Set"\nNow that we are done setting the kernels properties, we will call ',(0,t.jsx)(n.code,{children:"Set"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"    CALL obj%set()\n"})}),"\n",(0,t.jsx)(n.p,{children:'!!! note "AssembleTanmat"\nLet us assemble the tangent matrix.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"   CALL obj%AssembleTanMat()\n"})}),"\n",(0,t.jsx)(n.p,{children:'!!! note "Export"\nNow we export the kernel in [[HDF5File_]] file'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'    CALL outfile%Initiate(outfileName, "NEW")\n    CALL outfile%Open()\n    CALL obj%Export(outfile, "")\n    CALL outfile%Deallocate()\n'})}),"\n",(0,t.jsx)(n.p,{children:'!!! settings "Cleanup"'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"    CALL obj%Deallocate( )\n    CALL dom%Deallocate()\n    CALL param%Deallocate()\n    CALL FPL_FINALIZE()\nEND PROGRAM main\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},54213:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>s});var i=a(36672);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);