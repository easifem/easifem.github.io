"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[48878],{39735:i=>{i.exports=JSON.parse('{"tag":{"label":"polynomial","permalink":"/docs-api/tags/polynomial","allTagsPath":"/docs-api/tags","count":15,"items":[{"id":"Chebyshev1PolynomialUtility/Chebyshev1PolynomialUtility","title":"Chebyshev1","description":"Methods","permalink":"/docs-api/Chebyshev1PolynomialUtility/"},{"id":"HexahedronInterpolationUtility/HexahedronInterpolationUtility","title":"Hexahedron","description":"This module contains routine related to the interpolation over Hexahedron.","permalink":"/docs-api/HexahedronInterpolationUtility/"},{"id":"InterpolationUtility/InterpolationUtility","title":"InterpolationUtility","description":"This module contains helping routines for interpolation.","permalink":"/docs-api/InterpolationUtility/"},{"id":"JacobiPolynomialUtility/JacobiPolynomialUtility","title":"Jacobi","description":"Jacobi polynomial of order $n$ is denoted by $P_^{\\\\alpha,\\\\beta}\\\\left(x\\\\right)$. Here $\\\\alpha$ and $\\\\beta$ are parameters of Jacobi polynomial. Note that","permalink":"/docs-api/JacobiPolynomialUtility/"},{"id":"LegendrePolynomialUtility/LegendrePolynomialUtility","title":"Legendre","description":"Methods","permalink":"/docs-api/LegendrePolynomialUtility/"},{"id":"LineInterpolationUtility/LineInterpolationUtility","title":"Line","description":"Methods","permalink":"/docs-api/LineInterpolationUtility/"},{"id":"LobattoPolynomialUtility/LobattoPolynomialUtility","title":"Lobatto","description":"Methods","permalink":"/docs-api/LobattoPolynomialUtility/"},{"id":"OrthogonalPolynomialUtility/OrthogonalPolynomialUtility","title":"Orthogonal","description":"Methods","permalink":"/docs-api/OrthogonalPolynomialUtility/"},{"id":"PolynomialUtility/PolynomialUtility","title":"PolynomialUtility","description":"PolynomialUtility is collection of modules for constructing shape functions and polynomials.","permalink":"/docs-api/PolynomialUtility/"},{"id":"PrismInterpolationUtility/index","title":"Prism","description":"Methods","permalink":"/docs-api/PrismInterpolationUtility/"},{"id":"PyramidInterpolationUtility/index","title":"Pyramid","description":"Methods","permalink":"/docs-api/PyramidInterpolationUtility/"},{"id":"QuadraturePoint/index","title":"QuadraturePoint","description":"QuadraturePoint_ data type contains quadrature points and corresponding weight. This data type is helpful in calculating the element shape data and finite element matrix and vector.","permalink":"/docs-api/QuadraturePoint/"},{"id":"RecursiveNodeUtility/index","title":"RecursiveNode","description":"This module contains methods for constructing the recursive nodes.","permalink":"/docs-api/RecursiveNodeUtility/"},{"id":"UltrasphericalPolynomialUtility/UltrasphericalPolynomialUtility","title":"Ultraspherical","description":"Jacobi polynomial with $\\\\alpha=\\\\beta>-1$, are called the ultraspherical polynomials or Gegenbauer polynomial. We will denote ultraspherical polynomial by $P_^{\\\\lambda}(x)$ where, $\\\\alpha=\\\\lambda-\\\\frac{1}{2}$. Note that $\\\\lambda>-\\\\frac{1}{2}$.","permalink":"/docs-api/UltrasphericalPolynomialUtility/"},{"id":"UnscaledLobattoPolynomialUtility/UnscaledLobattoPolynomialUtility","title":"UnscaledLobatto","description":"Methods","permalink":"/docs-api/UnscaledLobattoPolynomialUtility/"}],"unlisted":false}}')}}]);