"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[96252],{64942:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>d,metadata:()=>a,toc:()=>g});const a=JSON.parse('{"id":"LagrangePolynomialUtility/LagrangeInDOF","title":"LagrangeInDOF","description":"Returns the number of internal dofs for lagrange polynomial.","source":"@site/docs/docs-api/LagrangePolynomialUtility/LagrangeInDOF.md","sourceDirName":"LagrangePolynomialUtility","slug":"/LagrangePolynomialUtility/LagrangeInDOF","permalink":"/docs-api/LagrangePolynomialUtility/LagrangeInDOF","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/LagrangePolynomialUtility/LagrangeInDOF.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LagrangeDegree","permalink":"/docs-api/LagrangePolynomialUtility/LagrangeDegree"},"next":{"title":"LagrangeVandermonde","permalink":"/docs-api/LagrangePolynomialUtility/LagrangeVandermonde"}}');var o=r(23420),i=r(54213);function t(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:"program main\n  use easifembase\n  implicit none\n  integer( i4b ) :: i1, i2, order, elemType\n  integer( i4b ), allocatable :: degree(:,:)\n  type(string) :: astr\n\n  order=3; elemType=Tetrahedron\n  i1 = LagrangeInDOF(order=order, elemType=elemType)\n  i2 = (order-1)*(order-2)*(order-3)/6\n  call IS( i1, i2 )\n  order=4; elemType=Tetrahedron\n  i1 = LagrangeInDOF(order=order, elemType=elemType)\n  i2 = (order-1)*(order-2)*(order-3)/6\n  call IS( i1, i2 )\n\n  order=2; elemType=Triangle\n  i1 = LagrangeInDOF(order=order, elemType=elemType)\n  i2 = 0\n  call IS( i1, i2 )\n  order=3; elemType=Triangle\n  i1 = LagrangeInDOF(order=order, elemType=elemType)\n  i2 = 1\n  call IS( i1, i2 )\n\n  order=1; elemType=Line\n  i1 = LagrangeInDOF(order=order, elemType=elemType)\n  i2 = 0\n  call IS( i1, i2 )\n  order=2; elemType=Line\n  i1 = LagrangeInDOF(order=order, elemType=elemType)\n  i2 = 1\n  call IS( i1, i2 )\n\nend program main \n"})})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(t,{...e})}):t(e)}const d={},s="LagrangeInDOF",c={},g=[{value:"Interface",id:"interface",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components},{TabItem:r,Tabs:a}=n;return r||u("TabItem",!0),a||u("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"lagrangeindof",children:"LagrangeInDOF"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the number of internal dofs for lagrange polynomial."}),"\n",(0,o.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,o.jsxs)(a,{children:[(0,o.jsx)(r,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION LagrangeInDOF(order, elemType) RESULT(ans)\n    INTEGER(I4B), INTENT(IN) :: order\n    !! order\n    INTEGER(I4B), INTENT(IN) :: elemType\n    INTEGER(I4B) :: ans\n    !! number of degree of freedom\n  END FUNCTION LagrangeInDOF\nEND INTERFACE\n"})})}),(0,o.jsx)(r,{value:"example",label:"\ufe0f\u0700 See example",children:(0,o.jsx)(l,{})}),(0,o.jsx)(r,{value:"close",label:"\u21a2 "})]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},54213:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var a=r(36672);const o={},i=a.createContext(o);function t(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);