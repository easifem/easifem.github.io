"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[8469],{57745:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"SteadyStokes221/GetVelocityDirichletBCPointer","title":"GetVelocityDirichletBCPointer","description":"This routine returns the pointer to Dirichlet boundary condition of Velocity field in AbstractSteadyStokes kernel, that is obj%DBCForVelocity(dbcNo)%ptr.","source":"@site/docs/docs-api/SteadyStokes221/GetVelocityDirichletBCPointer.md","sourceDirName":"SteadyStokes221","slug":"/SteadyStokes221/GetVelocityDirichletBCPointer","permalink":"/docs-api/SteadyStokes221/GetVelocityDirichletBCPointer","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes221/GetVelocityDirichletBCPointer.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetPressureNeumannBCPointer","permalink":"/docs-api/SteadyStokes221/GetPressureNeumannBCPointer"},"next":{"title":"GetVelocityNeumannBCPointer","permalink":"/docs-api/SteadyStokes221/GetVelocityNeumannBCPointer"}}');var o=i(23420),r=i(54213);const c={},s="GetVelocityDirichletBCPointer",a={},l=[{value:"Interface",id:"interface",level:2},{value:"Example",id:"example",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"getvelocitydirichletbcpointer",children:"GetVelocityDirichletBCPointer"})}),"\n",(0,o.jsxs)(t.p,{children:["This routine returns the pointer to Dirichlet boundary condition of Velocity field in ",(0,o.jsx)(t.a,{href:"/docs-api/AbstractSteadyStokes/AbstractSteadyStokes_",children:"AbstractSteadyStokes_"})," kernel, that is ",(0,o.jsx)(t.code,{children:"obj%DBCForVelocity(dbcNo)%ptr"}),"."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"After obtaining the Dirichlet boundary condition pointer, user can set the boundary condition"}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"dbcNo"})," should be lesser than total dirichlet boundary condition."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE FUNCTION getVelocityDirichletBCPointer(obj, dbcNo) RESULT(ans)\n    CLASS(AbstractSteadyStokes_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: dbcNo\n    !! Dirichlet boundary nunber\n    CLASS(DirichletBC_), POINTER :: ans\n  END FUNCTION getVelocityDirichletBCPointer\nEND INTERFACE\n"})}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},54213:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>s});var n=i(36672);const o={},r=n.createContext(o);function c(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);