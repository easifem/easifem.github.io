"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[25214,66870],{47272:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>o,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"AbstractMeshField/Initiate","title":"Initiate","description":"Initiate an instance of AbstractMeshField_.","source":"@site/docs/docs-api/AbstractMeshField/Initiate.md","sourceDirName":"AbstractMeshField","slug":"/AbstractMeshField/Initiate","permalink":"/docs-api/AbstractMeshField/Initiate","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMeshField/Initiate.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":3,"frontMatter":{"id":"Initiate","aliases":["Initiate"],"tags":[],"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"SetAbstractMeshFieldParam","permalink":"/docs-api/AbstractMeshField/SetAbstractMeshFieldParam"},"next":{"title":"Set","permalink":"/docs-api/AbstractMeshField/Set"}}');var s=a(23420),l=a(54213);const t={id:"Initiate",aliases:["Initiate"],tags:[],sidebar_position:3},r="Initiate",c={},d=[{value:"Interface 1 (Initiate by using param)",id:"interface-1-initiate-by-using-param",level:2},{value:"Interface 2 (Initiate by copying)",id:"interface-2-initiate-by-copying",level:2},{value:"Interface 3 (Initiate by AbstractMaterial)",id:"interface-3-initiate-by-abstractmaterial",level:2},{value:"Interface 4 (Initiate by UserFunction)",id:"interface-4-initiate-by-userfunction",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"initiate",children:"Initiate"})}),"\n",(0,s.jsxs)(n.p,{children:["Initiate an instance of ",(0,s.jsx)(n.code,{children:"AbstractMeshField_"}),"."]}),"\n",(0,s.jsx)("span",{class:"badge badge--secondary",children:" @ConstructorMethods "}),"\n",(0,s.jsx)(n.h2,{id:"interface-1-initiate-by-using-param",children:"Interface 1 (Initiate by using param)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"INTERFACE AbstractMeshFieldInitiate\n  MODULE SUBROUTINE Initiate1(obj, param, mesh)\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj\n    TYPE(ParameterList_), INTENT(IN) :: param\n    TYPE(Mesh_), TARGET, INTENT(IN) :: mesh\n  END SUBROUTINE Initiate1\nEND INTERFACE AbstractMeshFieldInitiate\n"})}),"\n",(0,s.jsx)(n.h2,{id:"interface-2-initiate-by-copying",children:"Interface 2 (Initiate by copying)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE Initiate2(obj, obj2, copyFull, copyStructure, &\n    & usePointer)\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj2\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: copyFull\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: copyStructure\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: usePointer\n  END SUBROUTINE Initiate2\nEND INTERFACE\n"})}),"\n",(0,s.jsx)(n.h2,{id:"interface-3-initiate-by-abstractmaterial",children:"Interface 3 (Initiate by AbstractMaterial)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE Initiate3(obj, mesh, material, name, engine)\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj\n    !! AbstractMeshField\n    TYPE(Mesh_), TARGET, INTENT(IN) :: mesh\n    !! mesh\n    CLASS(AbstractMaterial_), INTENT(INOUT) :: material\n    !! Abstract material\n    CHARACTER(*), INTENT(IN) :: name\n    !! name of the AbstractMeshField\n    CHARACTER(*), INTENT(IN) :: engine\n    !! engine of the AbstractMeshField\n  END SUBROUTINE Initiate3\nEND INTERFACE\n"})}),"\n",(0,s.jsx)(n.h2,{id:"interface-4-initiate-by-userfunction",children:"Interface 4 (Initiate by UserFunction)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE Initiate4(obj, mesh, func, name, engine, nnt)\n    CLASS(AbstractMeshField_), INTENT(INOUT) :: obj\n    !! AbstractMeshField\n    TYPE(Mesh_), TARGET, INTENT(IN) :: mesh\n    !! mesh\n    CLASS(UserFunction_), INTENT(INOUT) :: func\n    !! Abstract material\n    CHARACTER(*), INTENT(IN) :: name\n    !! name of the AbstractMeshField\n    CHARACTER(*), INTENT(IN) :: engine\n    !! engine of the AbstractMeshField\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: nnt\n    !! number of nodes in time\n  END SUBROUTINE Initiate4\nEND INTERFACE\n"})})]})}function o(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},12152:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>C,contentTitle:()=>f,default:()=>u,frontMatter:()=>x,metadata:()=>i,toc:()=>j});const i=JSON.parse('{"id":"ScalarMeshField/Initiate","title":"Initiate","description":"Initiate an instance of ScalarMeshField_.","source":"@site/docs/docs-api/ScalarMeshField/Initiate.md","sourceDirName":"ScalarMeshField","slug":"/ScalarMeshField/Initiate","permalink":"/docs-api/ScalarMeshField/Initiate","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/ScalarMeshField/Initiate.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"SetScalarMeshFieldParam","permalink":"/docs-api/ScalarMeshField/SetScalarMeshFieldParam"},"next":{"title":"Add","permalink":"/docs-api/ScalarMeshField/Add"}}');var s=a(23420),l=a(54213),t=a(47272);function r(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"PROGRAM main\nUSE HDF5File_Class\nUSE FEMesh_Class\nUSE AbstractField_Class\nUSE ScalarMeshField_Class\nUSE FPL\nUSE GlobalData\n\nIMPLICIT NONE\n\nTYPE(HDF5File_) :: meshfile\nTYPE(FEMesh_) :: amesh\nTYPE(ScalarMeshField_) :: obj\nTYPE(ParameterList_) :: param\nCHARACTER(*), PARAMETER :: filename=\"../../Mesh/examples/meshdata/small_mesh.h5\"\nINTEGER(I4B), PARAMETER :: nsd = 2\nINTEGER(I4B), PARAMETER :: varType = Constant\nINTEGER(I4B), PARAMETER :: fieldType = TypeField%normal\n\nCALL meshfile%Initiate(fileName=filename, MODE=\"READ\")\nCALL meshfile%OPEN()\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\n\nCALL amesh%DisplayMeshInfo(\"mesh info:\")\n\nCALL FPL_INIT(); CALL param%initiate()\n\nCALL SetScalarMeshFieldParam(param=param, name='aScalar', &\n                             varType=varType, fieldType=fieldType, &\n                             engine='NATIVE_SERIAL', defineOn=Nodal, nns=6)\n\nCALL obj%Initiate(param=param, mesh=amesh)\n\nCALL obj%Display('obj: ')\n\nCALL obj%DEALLOCATE()\nCALL amesh%DEALLOCATE()\nCALL meshfile%CLOSE()\nCALL meshfile%DEALLOCATE()\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\nEND PROGRAM main\n"})}),"\n",(0,s.jsx)(n.p,{children:"Mesh info:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:"total nodes: 12\ntotal elements: 14\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The above code will initiate an instance of ",(0,s.jsx)(n.code,{children:"ScalarMeshField_"}),", which will contain following data."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:"Object INITIATED: TRUE\nname: aScalar\nprefix: ScalarMeshField\nfieldType: NORMAL\nengine: NATIVE_SERIAL\ntSize: 14\ndefineOn: Nodal\nrank: Scalar\nvarType: Constant\nshape:\n---------------------------------\n                1\nval ALLOCATED: TRUE\nindxVal ALLOCATED: TRUE\nmesh ASSOCIATED: TRUE\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["We have saved data in a one dimensional array ",(0,s.jsx)(n.code,{children:"val"})," and ",(0,s.jsx)(n.code,{children:"indxVal"}),". The size of ",(0,s.jsx)(n.code,{children:"indxVal"})," is ",(0,s.jsx)(n.code,{children:"telements+1"}),", i.e., 15."]}),"\n",(0,s.jsxs)(n.li,{children:["The data for element ",(0,s.jsx)(n.code,{children:"iel"})," will be stored in ",(0,s.jsx)(n.code,{children:"val(a:b)"}),", where ",(0,s.jsx)(n.code,{children:"a=indxVal(iel)"})," and ",(0,s.jsx)(n.code,{children:"b=indxVal(iel+1)-1"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The number of data in each element will be 1, because, we have set ",(0,s.jsx)(n.code,{children:"varType=Constant"}),". It means that data remains constant inside an element."]}),"\n",(0,s.jsx)(n.li,{children:"There are 14 elements in the mesh."}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}function d(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fieldType"})," = constant"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"varType"})," = constant"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"PROGRAM main\nUSE HDF5File_Class\nUSE FEMesh_Class\nUSE AbstractField_Class\nUSE ScalarMeshField_Class\nUSE FPL\nUSE GlobalData\n\nIMPLICIT NONE\n\nTYPE(HDF5File_) :: meshfile\nTYPE(FEMesh_) :: amesh\nTYPE(ScalarMeshField_) :: obj\nTYPE(ParameterList_) :: param\nCHARACTER(*), PARAMETER :: filename=\"../../Mesh/examples/meshdata/small_mesh.h5\"\nINTEGER(I4B), PARAMETER :: nsd = 2\n\nCALL meshfile%Initiate(fileName=filename, MODE=\"READ\")\nCALL meshfile%OPEN()\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\n\nCALL amesh%DisplayMeshInfo(\"mesh info:\")\n\nCALL FPL_INIT(); CALL param%initiate()\n\nCALL SetScalarMeshFieldParam(param=param, name='aScalar', &\n                             varType=Constant, fieldType=TypeField%constant, &\n                             engine='NATIVE_SERIAL', defineOn=Nodal, nns=6)\n\nCALL obj%Initiate(param=param, mesh=amesh)\n\nCALL obj%Display('obj: ')\n\nCALL obj%DEALLOCATE()\nCALL amesh%DEALLOCATE()\nCALL meshfile%CLOSE()\nCALL meshfile%DEALLOCATE()\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\nEND PROGRAM main\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The above code will initiate an instance of ",(0,s.jsx)(n.code,{children:"ScalarMeshField_"}),", which will contain following data."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",children:"Object INITIATED: TRUE\nname: aScalar\nprefix: ScalarMeshField\nfieldType: CONSTANT\nengine: NATIVE_SERIAL\ntSize: 1\ndefineOn: Nodal\nrank: Scalar\nvarType: Constant\nval ALLOCATED: TRUE\nindxVal ALLOCATED: TRUE\nmesh ASSOCIATED: TRUE\nshape:\n---------------------------------\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["We have saved data in a one dimensional array ",(0,s.jsx)(n.code,{children:"val"})," and ",(0,s.jsx)(n.code,{children:"indxVal"}),". The size of ",(0,s.jsx)(n.code,{children:"indxVal"})," is ",(0,s.jsx)(n.code,{children:"telements+1"}),", i.e., 15."]}),"\n",(0,s.jsxs)(n.li,{children:["The data for element ",(0,s.jsx)(n.code,{children:"iel"})," will be stored in ",(0,s.jsx)(n.code,{children:"val(a:b)"}),", where ",(0,s.jsx)(n.code,{children:"a=indxVal(iel)"})," and ",(0,s.jsx)(n.code,{children:"b=indxVal(iel+1)-1"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The number of data in each element will be 1, because, we have set ",(0,s.jsx)(n.code,{children:"varType=Constant"}),". It means that data remains constant inside an element."]}),"\n",(0,s.jsxs)(n.li,{children:["The size of ",(0,s.jsx)(n.code,{children:"val"})," will be 1 because we have set ",(0,s.jsx)(n.code,{children:"fieldType=Constant"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function o(e){const n={code:"code",li:"li",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"PROGRAM main\nUSE HDF5File_Class\nUSE FEMesh_Class\nUSE AbstractField_Class\nUSE ScalarMeshField_Class\nUSE FPL\nUSE GlobalData\n\nIMPLICIT NONE\n\nTYPE(HDF5File_) :: meshfile\nTYPE(FEMesh_) :: amesh\nTYPE(ScalarMeshField_) :: obj\nTYPE(ParameterList_) :: param\nCHARACTER(*), PARAMETER :: filename=\"../../Mesh/examples/meshdata/small_mesh.h5\"\nINTEGER(I4B), PARAMETER :: nsd = 2\nINTEGER(I4B), PARAMETER :: varType = Space\nINTEGER(I4B), PARAMETER :: fieldType = TypeField%normal\n\nCALL meshfile%Initiate(fileName=filename, MODE=\"READ\")\nCALL meshfile%OPEN()\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\n\nCALL amesh%DisplayMeshInfo(\"mesh info:\")\n\nCALL FPL_INIT(); CALL param%initiate()\n\nCALL SetScalarMeshFieldParam(param=param, name='aScalar', &\n                             varType=varType, fieldType=fieldType, &\n                             engine='NATIVE_SERIAL', defineOn=Nodal, nns=6)\n\nCALL obj%Initiate(param=param, mesh=amesh)\n\nCALL obj%Display('obj: ')\n\nCALL obj%DEALLOCATE()\nCALL amesh%DEALLOCATE()\nCALL meshfile%CLOSE()\nCALL meshfile%DEALLOCATE()\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\nEND PROGRAM main\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'title="results"',children:"Object INITIATED: TRUE\nname: aScalar\nprefix: ScalarMeshField\nfieldType: NORMAL\nengine: NATIVE_SERIAL\ntSize: 14\ndefineOn: Nodal\nrank: Scalar\nvarType: Space\nval ALLOCATED: TRUE\nSize of val:84\nindxVal ALLOCATED: TRUE\nSize of indxVal:15\nmesh ASSOCIATED: TRUE\nshape:\n---------------------------------\n                6\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["We have saved data in a one dimensional array ",(0,s.jsx)(n.code,{children:"val"})," and ",(0,s.jsx)(n.code,{children:"indxVal"}),". The size of ",(0,s.jsx)(n.code,{children:"indxVal"})," is ",(0,s.jsx)(n.code,{children:"telements+1"}),", i.e., 15."]}),"\n",(0,s.jsxs)(n.li,{children:["The data for element ",(0,s.jsx)(n.code,{children:"iel"})," will be stored in ",(0,s.jsx)(n.code,{children:"val(a:b)"}),", where ",(0,s.jsx)(n.code,{children:"a=indxVal(iel)"})," and ",(0,s.jsx)(n.code,{children:"b=indxVal(iel+1)-1"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The number of data in each element will be 6. This is because, we have set ",(0,s.jsx)(n.code,{children:"varType=Constant"}),", and ",(0,s.jsx)(n.code,{children:"defineOn=Nodal"}),", and there specify ",(0,s.jsx)(n.code,{children:"nns=6"}),". It means that inside an element the data changes with space."]}),"\n",(0,s.jsxs)(n.li,{children:["There are 14 elements in the mesh, therefore, the total size of ",(0,s.jsx)(n.code,{children:"val"})," will be ",(0,s.jsx)(n.code,{children:"14*6=84"})]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}function E(e){const n={code:"code",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:"PROGRAM main\nUSE HDF5File_Class\nUSE FEMesh_Class\nUSE AbstractField_Class\nUSE ScalarMeshField_Class\nUSE FPL\nUSE GlobalData\n\nIMPLICIT NONE\n\nTYPE(HDF5File_) :: meshfile\nTYPE(FEMesh_) :: amesh\nTYPE(ScalarMeshField_) :: obj\nTYPE(ParameterList_) :: param\nCHARACTER(*), PARAMETER :: filename=\"../../Mesh/examples/meshdata/small_mesh.h5\"\nINTEGER(I4B), PARAMETER :: nsd = 2\nINTEGER(I4B), PARAMETER :: varType = Time\nINTEGER(I4B), PARAMETER :: fieldType = TypeField%normal\n\nCALL meshfile%Initiate(fileName=filename, MODE=\"READ\")\nCALL meshfile%OPEN()\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\n\nCALL amesh%DisplayMeshInfo(\"mesh info:\")\n\nCALL FPL_INIT(); CALL param%initiate()\n\nCALL SetScalarMeshFieldParam(param=param, name='aScalar', &\n                             varType=varType, fieldType=fieldType, &\n                             engine='NATIVE_SERIAL', defineOn=Nodal, nns=6)\n\nCALL obj%Initiate(param=param, mesh=amesh)\n\nCALL obj%Display('obj: ')\n\nCALL obj%DEALLOCATE()\nCALL amesh%DEALLOCATE()\nCALL meshfile%CLOSE()\nCALL meshfile%DEALLOCATE()\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\nEND PROGRAM main\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'title="results"',children:"Object INITIATED: TRUE\nname: aScalar\nprefix: ScalarMeshField\nfieldType: NORMAL\nengine: NATIVE_SERIAL\ntSize: 14\ndefineOn: Nodal\nrank: Scalar\nvarType: Time\nval ALLOCATED: TRUE\nSize of val:84\nindxVal ALLOCATED: TRUE\nSize of indxVal:15\nmesh ASSOCIATED: TRUE\nshape:\n---------------------------------\n                6\n"})})]})}function A(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(E,{...e})}):E(e)}function L(e){const n={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Initiate an instance of ",(0,s.jsx)(n.code,{children:"ScalarMeshField_"})," by using a ",(0,s.jsx)(n.code,{children:"UserFunction_"}),". The user function is constant in this example."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE HDF5File_Class\nUSE FEMesh_Class\nUSE AbstractField_Class\nUSE ScalarMeshField_Class\nUSE FPL\nUSE GlobalData\nUSE UserFunction_Class\n\nIMPLICIT NONE\n\nTYPE(HDF5File_) :: meshfile\nTYPE(FEMesh_) :: amesh\nTYPE(ScalarMeshField_) :: obj\nTYPE(ParameterList_) :: param\nTYPE(UserFunction_) :: func\n\nCHARACTER(*), PARAMETER :: filename="../../Mesh/examples/meshdata/small_mesh.h5"\nINTEGER(I4B), PARAMETER :: nsd = 2\nINTEGER( I4B ), PARAMETER :: returnType = Scalar\nINTEGER( I4B ), PARAMETER :: argType = Constant\n\nCALL meshfile%Initiate(fileName=filename, MODE="READ")\nCALL meshfile%OPEN()\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\n\nCALL FPL_INIT(); CALL param%initiate()\n\nCALL SetUserFunctionParam(param=param, name="func", returnType=returnType,  &\n   argType=argType)\n\nCALL func%Initiate(param)\nCALL func%Set(scalarValue=2.0_DFP)\nCALL obj%Initiate(mesh=amesh, func=func, name="func", engine="NATIVE_SERIAL")\n\nCALL obj%DEALLOCATE()\nCALL amesh%DEALLOCATE()\nCALL meshfile%CLOSE()\nCALL meshfile%DEALLOCATE()\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\nEND PROGRAM main\n'})})]})}function T(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(L,{...e})}):L(e)}function p(e){const n={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This example shows how to initiate an instance of ",(0,s.jsx)(n.code,{children:"ScalarMeshField_"})," by using a ",(0,s.jsx)(n.code,{children:"UserFunction"}),". The user function is space dependent in this example."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE HDF5File_Class\nUSE FEMesh_Class\nUSE AbstractField_Class\nUSE ScalarMeshField_Class\nUSE FPL\nUSE GlobalData\nUSE UserFunction_Class\n\nIMPLICIT NONE\n\nTYPE(HDF5File_) :: meshfile\nTYPE(FEMesh_) :: amesh\nTYPE(ScalarMeshField_) :: obj\nTYPE(ParameterList_) :: param\nTYPE(UserFunction_) :: func\n\nCHARACTER(*), PARAMETER :: filename="../../Mesh/examples/meshdata/small_mesh.h5"\nINTEGER(I4B), PARAMETER :: nsd = 2\nINTEGER(I4B), PARAMETER :: returnType = Scalar\nINTEGER(I4B), PARAMETER :: argType = Space\n\nCALL meshfile%Initiate(fileName=filename, MODE="READ")\nCALL meshfile%OPEN()\nCALL amesh%Initiate(hdf5=meshfile, dim=nsd)\n\nCALL FPL_INIT(); CALL param%initiate()\n\nCALL SetUserFunctionParam(param=param, name="func", returnType=returnType, &\n                          argType=argType)\n\nCALL func%Initiate(param)\nCALL func%Set(scalarValue=2.0_DFP)\nCALL obj%Initiate(mesh=amesh, func=func, name="func", engine="NATIVE_SERIAL")\n\nCALL obj%DEALLOCATE()\nCALL amesh%DEALLOCATE()\nCALL meshfile%CLOSE()\nCALL meshfile%DEALLOCATE()\nCALL param%DEALLOCATE(); CALL FPL_FINALIZE()\nEND PROGRAM main\n'})})]})}function I(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}const x={sidebar_position:4},f="Initiate",C={},j=[...t.toc,{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2},{value:"Example 4",id:"example-4",level:2},{value:"Example 6",id:"example-6",level:2},{value:"Example 7",id:"example-7",level:2}];function N(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"initiate",children:"Initiate"})}),"\n",(0,s.jsxs)(n.p,{children:["Initiate an instance of ",(0,s.jsx)(n.code,{children:"ScalarMeshField_"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Inherited from ",(0,s.jsx)(n.a,{href:"/docs-api/AbstractMeshField",children:"AbstractMeshField"})]}),"\n","\n",(0,s.jsx)(t.default,{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example 1 to Example 4 are related to the Initiate by using Parameters."}),"\n",(0,s.jsx)(n.li,{children:"Example 6 and Example 7 are related to the Initiate by using UserFunction."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-1",children:"Example 1"}),"\n","\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"Click here to see the example"}),(0,s.jsx)("div",{children:(0,s.jsx)(c,{})})]}),"\n",(0,s.jsx)(n.h2,{id:"example-2",children:"Example 2"}),"\n","\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"Click here to see the example"}),(0,s.jsx)("div",{children:(0,s.jsx)(h,{})})]}),"\n",(0,s.jsx)(n.h2,{id:"example-3",children:"Example 3"}),"\n","\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"Click here to see the example"}),(0,s.jsx)("div",{children:(0,s.jsx)(m,{})})]}),"\n",(0,s.jsx)(n.h2,{id:"example-4",children:"Example 4"}),"\n","\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"Click here to see the example"}),(0,s.jsx)("div",{children:(0,s.jsx)(A,{})})]}),"\n",(0,s.jsx)(n.h2,{id:"example-6",children:"Example 6"}),"\n","\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"Click here to see the example"}),(0,s.jsx)("div",{children:(0,s.jsx)(T,{})})]}),"\n",(0,s.jsx)(n.h2,{id:"example-7",children:"Example 7"}),"\n","\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"Click here to see the example"}),(0,s.jsx)("div",{children:(0,s.jsx)(I,{})})]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(N,{...e})}):N(e)}},54213:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>r});var i=a(36672);const s={},l=i.createContext(s);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);