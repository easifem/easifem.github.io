"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[74003],{72482:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"LinSolverLis/Import","title":"Import","description":"Import the linear solver from external file.","source":"@site/docs/docs-api/LinSolverLis/Import.md","sourceDirName":"LinSolverLis","slug":"/LinSolverLis/Import","permalink":"/docs-api/LinSolverLis/Import","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/LinSolverLis/Import.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetPreconditionOption","permalink":"/docs-api/LinSolverLis/GetPreconditionOption"},"next":{"title":"Initiate","permalink":"/docs-api/LinSolverLis/Initiate"}}');var r=n(23420),i=n(54213);const c={},s="Import",d={},o=[{value:"Interface",id:"interface",level:2},{value:"Template",id:"template",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"import",children:"Import"})}),"\n",(0,r.jsx)(t.p,{children:"Import the linear solver from external file."}),"\n",(0,r.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE Import(obj, hdf5, group)\n    CLASS(LinSolver_), INTENT(INOUT) :: obj\n    TYPE(HDF5File_), INTENT(INOUT) :: hdf5\n    CHARACTER(*), INTENT(IN) :: group\n  END SUBROUTINE Import\nEND INTERFACE\n"})}),"\n",(0,r.jsx)(t.h2,{id:"template",children:"Template"}),"\n",(0,r.jsx)(t.p,{children:"The template of the file is given below"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Variable"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Data type"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Value"}),(0,r.jsx)(t.th,{style:{textAlign:"right"},children:"Comment"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"engine"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"NATIVE_SERIAL"})}),(0,r.jsxs)(t.td,{style:{textAlign:"right"},children:["This variable helps us to create correct child of ",(0,r.jsx)(t.code,{children:"AbstractLinSolver"})," class. For other children we have following values reserved  : ",(0,r.jsx)(t.code,{children:"NATIVE_OMP"}),",",(0,r.jsx)(t.code,{children:"NATIVE_MPI"}),",",(0,r.jsx)(t.code,{children:"PETSC"}),",",(0,r.jsx)(t.code,{children:"LIS_SERIAL"}),",",(0,r.jsx)(t.code,{children:"LIS_OMP"}),",",(0,r.jsx)(t.code,{children:"LIS_MPI"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"solverName"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"right"},children:"Name of the solver"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"preconditionOption"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,r.jsx)(t.code,{children:"LEFT"}),", ",(0,r.jsx)(t.code,{children:"RIGHT"}),", ",(0,r.jsx)(t.code,{children:"LEFT_RIGHT"}),", ",(0,r.jsx)(t.code,{children:"NONE"})]}),(0,r.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"convergenceIn"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,r.jsx)(t.code,{children:"RESIDUAL"}),", ",(0,r.jsx)(t.code,{children:"SOLUTION"})]}),(0,r.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"convergenceType"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,r.jsx)(t.code,{children:"ABSOLUT"}),", ",(0,r.jsx)(t.code,{children:"RELATIVE"})]}),(0,r.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"relativeToRHS"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Char"}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,r.jsx)(t.code,{children:"T"}),", ",(0,r.jsx)(t.code,{children:"F"})]}),(0,r.jsx)(t.td,{style:{textAlign:"right"},children:"It is used when convergence Type is relative"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"maxIter"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"INT"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"right"},children:"Maximum number of iterations"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"KrylovSubspaceSize"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"INT"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"right"},children:"This is used when GMRES is used, you can set it to 15 to 20."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"relativeTolerance"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"REAL"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"right"},children:"Tolerance for checking the relative convergence"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"absoluteTolerance"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"REAL"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"right"},children:"Tolerance for checking the absolute convergence"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"Following code explains it"}),"\n",(0,r.jsxs)(t.p,{children:["Let us generate the ",(0,r.jsx)(t.code,{children:"hdf5File_"})," (hdf5 file) using ",(0,r.jsx)(t.code,{children:"export"})," command as shown below."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-fortran",children:'  type( LinSolver_ ) :: obj\n  type( ParameterList_ ) :: param\n  type( hdf5File_ ) :: hdf5\n  integer( i4b ) :: ierr, tnodes\n  call display( "TESTING INITIATE AND EXPORT" )\n  call FPL_INIT(); call param%initiate()\n  call setLinSolverParam( param=param, solverName=LIS_CG,&\n    & preconditionOption=LEFT_PRECONDITION, convergenceIn=convergenceInRes, &\n    & convergenceType=relativeConvergence, maxIter=100,relativeToRHS=.TRUE., &\n    & KrylovSubspaceSize=20,rtol=1.0D-10,atol=1.0D-10 )\n  call obj%initiate(param)\n  call hdf5%initiate( filename="./templateLinSolver.hdf5", MODE="NEW" )\n  call hdf5%open()\n  call obj%export( hdf5, "" )\n  call hdf5%close(); call hdf5%Deallocate()\n  call obj%Deallocate()\n  call param%Deallocate(); call FPL_FINALIZE()\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Now let us ",(0,r.jsx)(t.code,{children:"import"})," this information as shown below."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-fortran",children:'  type( LinSolver_ ) :: obj\n  type( hdf5File_ ) :: hdf5\n  integer( i4b ) :: ierr, tnodes\n  call display( "TESTING IMPORT" )\n  call hdf5%initiate( filename="./templateLinSolver.hdf5", MODE="READ" )\n  call hdf5%open()\n  call obj%import(hdf5,"")\n  call obj%display("")\n  call hdf5%close(); call hdf5%Deallocate()\n  call obj%Deallocate()\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},54213:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var l=n(36672);const r={},i=l.createContext(r);function c(e){const t=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),l.createElement(i.Provider,{value:t},e.children)}}}]);