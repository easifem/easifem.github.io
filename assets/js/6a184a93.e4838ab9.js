"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[49474],{11334:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"SolidMaterial/Deallocate","title":"Deallocate","description":"Deallocate the contents of SolidMaterial_.","source":"@site/docs/docs-api/SolidMaterial/Deallocate.md","sourceDirName":"SolidMaterial","slug":"/SolidMaterial/Deallocate","permalink":"/docs-api/SolidMaterial/Deallocate","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SolidMaterial/Deallocate.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CheckEssentialParam","permalink":"/docs-api/SolidMaterial/CheckEssentialParam"},"next":{"title":"Display","permalink":"/docs-api/SolidMaterial/Display"}}');var n=t(23420),l=t(54213);const c={},r="Deallocate",i={},s=[{value:"Interface",id:"interface",level:2}];function d(e){const a={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"deallocate",children:"Deallocate"})}),"\n",(0,n.jsxs)(a.p,{children:["Deallocate the contents of ",(0,n.jsx)(a.code,{children:"SolidMaterial_"}),"."]}),"\n",(0,n.jsx)("span",{class:"badge badge--secondary",children:" @ConstructorMethods "}),"\n",(0,n.jsx)(a.h2,{id:"interface",children:"Interface"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE Deallocate(obj)\n    CLASS(SolidMaterial_), INTENT(INOUT) :: obj\n  END SUBROUTINE Deallocate\nEND INTERFACE\n"})}),"\n",(0,n.jsxs)(a.admonition,{type:"note",children:[(0,n.jsxs)(a.p,{children:["To deallocate the vector of ",(0,n.jsx)(a.code,{children:"SolidMaterial_"})," you can call generic routine called ",(0,n.jsx)(a.code,{children:"Deallocate"})]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-fortran",children:"INTERFACE DEALLOCATE\n  MODULE SUBROUTINE Deallocate_Vector(obj)\n    TYPE(SolidMaterial_), ALLOCATABLE :: obj(:)\n  END SUBROUTINE Deallocate_Vector\nEND INTERFACE DEALLOCATE\n"})})]}),"\n",(0,n.jsxs)(a.admonition,{type:"note",children:[(0,n.jsxs)(a.p,{children:["To deallocate the vector of ",(0,n.jsx)(a.code,{children:"SolidMaterialPointer_"}),", you can call generic routine called ",(0,n.jsx)(a.code,{children:"Deallocate"}),"."]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-fortran",children:"INTERFACE DEALLOCATE\n  MODULE SUBROUTINE Deallocate_Ptr_Vector(obj)\n    TYPE(SolidMaterialPointer_), ALLOCATABLE :: obj(:)\n  END SUBROUTINE Deallocate_Ptr_Vector\nEND INTERFACE DEALLOCATE\n"})})]})]})}function h(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},54213:(e,a,t)=>{t.d(a,{R:()=>c,x:()=>r});var o=t(36672);const n={},l=o.createContext(n);function c(e){const a=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),o.createElement(l.Provider,{value:a},e.children)}}}]);