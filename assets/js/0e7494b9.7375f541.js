"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[2111],{19908:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"FEVariable/Addition","title":"Addition","description":"Addition operator + for FEVariable.","source":"@site/docs/docs-api/FEVariable/Addition.md","sourceDirName":"FEVariable","slug":"/FEVariable/Addition","permalink":"/docs-api/FEVariable/Addition","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEVariable/Addition.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"FEVariable","permalink":"/docs-api/FEVariable/"},"next":{"title":"Deallocate","permalink":"/docs-api/FEVariable/Deallocate"}}');var l=n(23420),i=n(54213);function t(e){const a={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(a.p,{children:"This example tests addition (+) operator for scalar nodal-variable."}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"PROGRAM main\n  USE easifemBase\n  IMPLICIT NONE\n  TYPE(FEVariable_) :: obj\n  TYPE(FEVariable_) :: ans\n"})}),"\n",(0,l.jsx)(a.p,{children:"constant+constant"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"obj = NodalVariable( 1.0_DFP, &\n    & typeFEVariableScalar,    &\n    & typeFEVariableConstant ) &\n    + NodalVariable( 2.0_DFP, &\n    & typeFEVariableScalar,    &\n    & typeFEVariableConstant )\nans = NodalVariable( 3.0_DFP, &\n    & typeFEVariableScalar,    &\n    & typeFEVariableConstant )\nCALL OK( obj .EQ. ans, 'constant+constant' )\n"})}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"obj = NodalVariable( &\n    & 1.0_DFP, &\n    & typeFEVariableScalar,    &\n    & typeFEVariableConstant ) &\n    + 2.0_DFP\nans = NodalVariable( &\n    & 3.0_DFP, &\n    & typeFEVariableScalar,    &\n    & typeFEVariableConstant )\nCALL OK( obj .EQ. ans, 'constant+constant' )\n"})}),"\n",(0,l.jsx)(a.p,{children:"space+constant"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"obj = NodalVariable( &\n    & arange(1.0_DFP, 3.0_DFP), &\n    & typeFEVariableScalar, &\n    & typeFEVariableSpace ) &\n    + NodalVariable( 10.0_DFP, &\n    & typeFEVariableScalar,    &\n    & typeFEVariableConstant )\nans = NodalVariable( &\n    & arange(1.0_DFP, 3.0_DFP)+10.0_DFP, &\n    & typeFEVariableScalar, &\n    & typeFEVariableSpace )\nCALL OK( obj .EQ. ans, 'space+constant' )\n"})}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"obj = NodalVariable( &\n    & arange(1.0_DFP, 3.0_DFP), &\n    & typeFEVariableScalar, &\n    & typeFEVariableSpace ) &\n    + 10.0_DFP\nans = NodalVariable( &\n    & arange(1.0_DFP, 3.0_DFP)+10.0_DFP, &\n    & typeFEVariableScalar, &\n    & typeFEVariableSpace )\nCALL OK( obj .EQ. ans, 'space+constant' )\n"})}),"\n",(0,l.jsx)(a.p,{children:"time+constant"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"obj = NodalVariable( &\n    & arange(0.0_DFP, 3.0_DFP), &\n    & typeFEVariableScalar, &\n    & typeFEVariableTime ) &\n    + NodalVariable( 10.0_DFP, &\n    & typeFEVariableScalar,    &\n    & typeFEVariableConstant )\nans = NodalVariable( &\n    & arange(0.0_DFP, 3.0_DFP) + 10.0_DFP, &\n    & typeFEVariableScalar, &\n    & typeFEVariableTime ) \nCALL OK( obj .EQ. ans, 'time+constant' )\n"})}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"obj = NodalVariable( arange(0.0_DFP, 3.0_DFP), &\n    & typeFEVariableScalar, &\n    & typeFEVariableTime ) &\n    + 10.0_DFP \nans = NodalVariable( &\n    & arange(0.0_DFP, 3.0_DFP) + 10.0_DFP, &\n    & typeFEVariableScalar, &\n    & typeFEVariableTime ) \nCALL OK( obj .EQ. ans, 'time+constant' )\n"})}),"\n",(0,l.jsx)(a.p,{children:"spacetime+constant"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"obj = NodalVariable( &\n    & reshape(arange(1.0_DFP, 6.0_DFP), [3,2]), &\n    & typeFEVariableScalar, &\n    & typeFEVariableSpaceTime ) &\n    + NodalVariable( 10.0_DFP, &\n    & typeFEVariableScalar,    &\n    & typeFEVariableConstant )\nans = NodalVariable( &\n    & reshape(arange(1.0_DFP, 6.0_DFP)+10.0_DFP, [3,2]), &\n    & typeFEVariableScalar, &\n    & typeFEVariableSpaceTime )\nCALL OK( obj .EQ. ans, 'spacetime+constant' )\n"})}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"obj = NodalVariable( reshape(arange(1.0_DFP, 6.0_DFP), [3,2]), &\n    & typeFEVariableScalar, &\n    & typeFEVariableSpaceTime ) &\n    + 10.0_DFP\nans = NodalVariable( &\n    & reshape(arange(1.0_DFP, 6.0_DFP)+10.0_DFP, [3,2]), &\n    & typeFEVariableScalar, &\n    & typeFEVariableSpaceTime )\nCALL OK( obj .EQ. ans, 'spacetime+constant' )\n"})}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-fortran",children:"END PROGRAM main\n"})})]})}function s(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,l.jsx)(a,{...e,children:(0,l.jsx)(t,{...e})}):t(e)}const d={},c="Addition",o={},h=[{value:"Examples 1",id:"examples-1",level:2},{value:"Example 2",id:"example-2",level:2}];function j(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=a;return n||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(a.header,{children:(0,l.jsx)(a.h1,{id:"addition",children:"Addition"})}),"\n",(0,l.jsxs)(a.p,{children:["Addition operator ",(0,l.jsx)(a.code,{children:"+"})," for ",(0,l.jsx)(a.code,{children:"FEVariable"}),"."]}),"\n",(0,l.jsxs)(a.ul,{children:["\n",(0,l.jsxs)(a.li,{children:["Add two instance of ",(0,l.jsx)(a.code,{children:"FEVariable"}),"."]}),"\n",(0,l.jsx)(a.li,{children:"A quadrature variable can be added to only a quadrature variable, unless one of the variable is constant."}),"\n",(0,l.jsx)(a.li,{children:"A nodal variable can be added to only a nodal variable, unless one of the variable is a constant."}),"\n",(0,l.jsxs)(a.li,{children:["The rank of ",(0,l.jsx)(a.code,{children:"obj1"})," and ",(0,l.jsx)(a.code,{children:"obj2"})," should be the same, if none of the ",(0,l.jsx)(a.code,{children:"obj1"})," and ",(0,l.jsx)(a.code,{children:"obj2"})," are scalars."]}),"\n",(0,l.jsxs)(a.li,{children:["A Scalar ",(0,l.jsx)(a.code,{children:"FEVariable"})," can be added to a Vector and Matrix ",(0,l.jsx)(a.code,{children:"FEVariable"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(a.table,{children:[(0,l.jsx)(a.thead,{children:(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.th,{children:"Defined on"}),(0,l.jsx)(a.th,{children:"obj1"}),(0,l.jsx)(a.th,{children:"obj2"}),(0,l.jsx)(a.th,{children:"result"})]})}),(0,l.jsxs)(a.tbody,{children:[(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{children:"NodalVariable"}),(0,l.jsx)(a.td,{children:"constant"}),(0,l.jsx)(a.td,{children:"constant"}),(0,l.jsx)(a.td,{children:"constant"})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{}),(0,l.jsx)(a.td,{children:"constant"}),(0,l.jsx)(a.td,{children:"space"}),(0,l.jsx)(a.td,{children:"space"})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{}),(0,l.jsx)(a.td,{children:"constant"}),(0,l.jsx)(a.td,{children:"time"}),(0,l.jsx)(a.td,{children:"time"})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{}),(0,l.jsx)(a.td,{children:"constant"}),(0,l.jsx)(a.td,{children:"spacetime"}),(0,l.jsx)(a.td,{children:"spacetime"})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{}),(0,l.jsx)(a.td,{children:"space"}),(0,l.jsx)(a.td,{children:"constant"}),(0,l.jsx)(a.td,{children:"space"})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{}),(0,l.jsx)(a.td,{children:"space"}),(0,l.jsx)(a.td,{children:"space"}),(0,l.jsx)(a.td,{children:"space"})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{}),(0,l.jsx)(a.td,{children:"time"}),(0,l.jsx)(a.td,{children:"constant"}),(0,l.jsx)(a.td,{children:"time"})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{}),(0,l.jsx)(a.td,{children:"time"}),(0,l.jsx)(a.td,{children:"time"}),(0,l.jsx)(a.td,{children:"time"})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{}),(0,l.jsx)(a.td,{children:"spacetime"}),(0,l.jsx)(a.td,{children:"constant"}),(0,l.jsx)(a.td,{children:"spacetime"})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{}),(0,l.jsx)(a.td,{children:"spacetime"}),(0,l.jsx)(a.td,{children:"spacetime"}),(0,l.jsx)(a.td,{children:"spacetime"})]})]})]}),"\n",(0,l.jsx)(a.p,{children:"You can learn more about this method from the following pages"}),"\n",(0,l.jsx)(a.h2,{id:"examples-1",children:"Examples 1"}),"\n",(0,l.jsx)(a.p,{children:"This example shows the use of addition operator for scalar nodal variable."}),"\n",(0,l.jsxs)(a.ul,{children:["\n",(0,l.jsx)(a.li,{children:"Constant + Constant"}),"\n",(0,l.jsx)(a.li,{children:"Space + Constant"}),"\n",(0,l.jsx)(a.li,{children:"Time + Constant"}),"\n",(0,l.jsx)(a.li,{children:"SpaceTime + Constant"}),"\n"]}),"\n",(0,l.jsxs)(n,{children:[(0,l.jsx)("summary",{children:"Click here to example"}),(0,l.jsx)("div",{children:(0,l.jsx)(s,{})})]}),"\n",(0,l.jsx)(a.h2,{id:"example-2",children:"Example 2"}),"\n",(0,l.jsxs)(a.ul,{children:["\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_11a]] Scalar, Nodal Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_11b]] Scalar, Nodal Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_11c]] Scalar, Quadrature Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_11d]] Scalar, Quadrature Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_12a]] Vector, Nodal Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_12b]] Vector, Nodal Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_12c]] Vector, Quadrature Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_12d]] Vector, Quadrature Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_13a]] Matrix, Nodal Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_13b]] Matrix, Nodal Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_13c]] Matrix, Quadrature Variable"}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"[[FEVariable_test_13d]] Matrix, Quadrature Variable"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-cpp"})})]})}function x(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,l.jsx)(a,{...e,children:(0,l.jsx)(j,{...e})}):j(e)}},54213:(e,a,n)=>{n.d(a,{R:()=>t,x:()=>s});var r=n(36672);const l={},i=r.createContext(l);function t(e){const a=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(i.Provider,{value:a},e.children)}}}]);