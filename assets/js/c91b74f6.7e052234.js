"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[3751],{69096:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"ReferenceElement/IsLine","title":"IsLine","description":"Returns true if element is a Line element","source":"@site/docs/docs-api/ReferenceElement/IsLine.md","sourceDirName":"ReferenceElement","slug":"/ReferenceElement/IsLine","permalink":"/docs-api/ReferenceElement/IsLine","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/ReferenceElement/IsLine.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"IsHexahedron","permalink":"/docs-api/ReferenceElement/IsHexahedron"},"next":{"title":"IsPoint","permalink":"/docs-api/ReferenceElement/IsPoint"}}');var r=t(23420),i=t(54213);const o={},c="IsLine",a={},l=[];function d(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"isline",children:"IsLine"})}),"\n",(0,r.jsx)(n.p,{children:"Returns true if element is a Line element"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  MODULE PURE FUNCTION isLine(ElemType) RESULT(Ans)\n    LOGICAL(LGT) :: Ans\n    INTEGER(I4B), INTENT(IN) :: ElemType\n  END FUNCTION isLine\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},54213:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(36672);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);