"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[69732],{11849:(e,a,l)=>{l.r(a),l.d(a,{assets:()=>I,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"AbstractMatrixField/SetColumn","title":"SetColumn","description":"Calling example","source":"@site/docs/docs-api/AbstractMatrixField/SetColumn.md","sourceDirName":"AbstractMatrixField","slug":"/AbstractMatrixField/SetColumn","permalink":"/docs-api/AbstractMatrixField/SetColumn","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMatrixField/SetColumn.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Set","permalink":"/docs-api/AbstractMatrixField/Set"},"next":{"title":"SetPrecondition","permalink":"/docs-api/AbstractMatrixField/SetPrecondition"}}');var N=l(23420),o=l(54213);const t={},c="SetColumn",I={},i=[{value:"Interface",id:"interface",level:2}];function r(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,N.jsxs)(N.Fragment,{children:[(0,N.jsx)(a.header,{children:(0,N.jsx)(a.h1,{id:"setcolumn",children:"SetColumn"})}),"\n",(0,N.jsx)(a.p,{children:"Calling example"}),"\n",(0,N.jsxs)(a.ul,{children:["\n",(0,N.jsx)(a.li,{children:(0,N.jsx)(a.code,{children:"SetColumn(obj, globalnode, idof, scalarval, vecval(:), nodefieldval)"})}),"\n",(0,N.jsx)(a.li,{children:(0,N.jsx)(a.code,{children:"SetColumn(obj, globalnode, ivar, idof, scalarval, vecval(:), nodefieldval)"})}),"\n",(0,N.jsx)(a.li,{children:(0,N.jsx)(a.code,{children:"SetColumn(obj, globalnode, ivar, spacecompo, timecompo, scalarval, vecval(:), nodefieldval)"})}),"\n",(0,N.jsx)(a.li,{children:(0,N.jsx)(a.code,{children:"SetColumn(obj, globalnode, ivar, spacecompo, timecompo(:), scalarval, vecval(:), nodefieldval)"})}),"\n",(0,N.jsx)(a.li,{children:(0,N.jsx)(a.code,{children:"SetColumn(obj, globalnode, ivar, spacecompo(:), timecompo, scalarval, vecval(:), nodefieldval)"})}),"\n",(0,N.jsx)(a.li,{children:(0,N.jsx)(a.code,{children:"SetColumn(obj, globalnode(:), ivar, spacecompo, timecompo(:), scalarval, vecval(:), nodefieldval)"})}),"\n",(0,N.jsx)(a.li,{children:(0,N.jsx)(a.code,{children:"SetColumn(obj, globalnode(:), ivar, spacecompo(:), timecompo, scalarval, vecval(:), nodefieldval)"})}),"\n"]}),"\n",(0,N.jsx)(a.h2,{id:"interface",children:"Interface"}),"\n",(0,N.jsx)(a.pre,{children:(0,N.jsx)(a.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE setColumn1(obj, globalNode, idof, scalarVal, vecVal, &\n    & nodeFieldVal)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP\n    CLASS(AbstractMatrixField_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: idof\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scalarVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: vecVal(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(IN) :: nodeFieldVal\n  END SUBROUTINE setColumn1\nEND INTERFACE\n"})}),"\n",(0,N.jsx)(a.pre,{children:(0,N.jsx)(a.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE setColumn2(obj, globalNode, ivar, idof, &\n    & scalarVal, vecVal, nodeFieldVal)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP\n    CLASS(AbstractMatrixField_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: idof\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scalarVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: vecVal(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(IN) :: nodeFieldVal\n  END SUBROUTINE setColumn2\nEND INTERFACE\n\n"})}),"\n",(0,N.jsx)(a.pre,{children:(0,N.jsx)(a.code,{className:"language-fortran",children:"\nINTERFACE\n  SUBROUTINE setColumn3(obj, globalNode, ivar, spacecompo, &\n    & timecompo, scalarVal, vecVal, nodeFieldVal)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP\n    CLASS(AbstractMatrixField_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo\n    INTEGER(I4B), INTENT(IN) :: timecompo\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scalarVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: vecVal(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(IN) :: nodeFieldVal\n  END SUBROUTINE setColumn3\nEND INTERFACE\n\n"})}),"\n",(0,N.jsx)(a.pre,{children:(0,N.jsx)(a.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE setColumn4(obj, globalNode, ivar, spacecompo, &\n    & timecompo, scalarVal, vecVal, nodeFieldVal)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP\n    CLASS(AbstractMatrixField_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo\n    INTEGER(I4B), INTENT(IN) :: timecompo(:)\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scalarVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: vecVal(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(IN) :: nodeFieldVal\n  END SUBROUTINE setColumn4\nEND INTERFACE\n\n"})}),"\n",(0,N.jsx)(a.pre,{children:(0,N.jsx)(a.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE setColumn5(obj, globalNode, ivar, spacecompo, &\n    & timecompo, scalarVal, vecVal, nodeFieldVal)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP\n    CLASS(AbstractMatrixField_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo(:)\n    INTEGER(I4B), INTENT(IN) :: timecompo\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scalarVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: vecVal(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(IN) :: nodeFieldVal\n  END SUBROUTINE setColumn5\nEND INTERFACE\n\n"})}),"\n",(0,N.jsx)(a.pre,{children:(0,N.jsx)(a.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE setColumn6(obj, globalNode, ivar, spacecompo, &\n    & timecompo, scalarVal, vecVal, nodeFieldVal)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP\n    CLASS(AbstractMatrixField_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo\n    INTEGER(I4B), INTENT(IN) :: timecompo(:)\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scalarVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: vecVal(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(IN) :: nodeFieldVal\n  END SUBROUTINE setColumn6\nEND INTERFACE\n\n"})}),"\n",(0,N.jsx)(a.pre,{children:(0,N.jsx)(a.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE setColumn7(obj, globalNode, ivar, spacecompo, &\n    & timecompo, scalarVal, vecVal, nodeFieldVal)\n    IMPORT :: AbstractMatrixField_, AbstractNodeField_, I4B, DFP\n    CLASS(AbstractMatrixField_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo(:)\n    INTEGER(I4B), INTENT(IN) :: timecompo\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scalarVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: vecVal(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(IN) :: nodeFieldVal\n  END SUBROUTINE setColumn7\nEND INTERFACE\n"})})]})}function d(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,N.jsx)(a,{...e,children:(0,N.jsx)(r,{...e})}):r(e)}},54213:(e,a,l)=>{l.d(a,{R:()=>t,x:()=>c});var n=l(36672);const N={},o=n.createContext(N);function t(e){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(N):e.components||N:t(e.components),n.createElement(o.Provider,{value:a},e.children)}}}]);