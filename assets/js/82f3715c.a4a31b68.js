"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[87392],{3303:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"install/extpkgs/Triangle","title":"Triangle","description":"How to compile Triangle","source":"@site/docs/guides/install/extpkgs/Triangle.md","sourceDirName":"install/extpkgs","slug":"/install/extpkgs/Triangle","permalink":"/guides/install/extpkgs/Triangle","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/guides/install/extpkgs/Triangle.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Toml-f","permalink":"/guides/install/extpkgs/Tomlf"},"next":{"title":"VTKFortran","permalink":"/guides/install/extpkgs/VTKFortran"}}');var t=i(23420),r=i(54213);const o={},a="Triangle",s={},c=[{value:"How to compile Triangle",id:"how-to-compile-triangle",level:2},{value:"Linux",id:"linux",level:3},{value:"MacOSX",id:"macosx",level:3},{value:"How to call Triangle from another program",id:"how-to-call-triangle-from-another-program",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"triangle",children:"Triangle"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="results"',children:"(triangle.h)                                                             \nInclude file for programs that call Triangle.                            \nAccompanies Triangle Version 1.6                                         \nJuly 28, 2005                                                            \nCopyright 1996, 2005                                                     \nJonathan Richard Shewchuk                                                \n2360 Woolsey #H                                                          \nBerkeley, California  94705-1927                                         \njrs@cs.berkeley.edu\n"})}),"\n",(0,t.jsx)(n.h2,{id:"how-to-compile-triangle",children:"How to compile Triangle"}),"\n",(0,t.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,t.jsx)(n.p,{children:"Following make file is used for compiling Triangle on Linux."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-make",children:"SRC = ./\nBIN = ./\nCC = cc\nFC = gfortran\nCSWITCHES = -O3 -DLINUX\nTRILIBDEFS = -DTRILIBRARY \nRM = /bin/rm\n\nall: $(BIN)tricall\n\ntrilibrary: $(BIN)triangle.o\n\n$(BIN)triangle.o: $(SRC)triangle.c $(SRC)triangle.h\n$(CC) $(CSWITCHES) $(TRILIBDEFS) -c -o $(BIN)triangle.o $(SRC)triangle.c\n\ndistclean:\n$(RM)  $(BIN)triangle.o  $(BIN)report.o $(BIN)tricall\n"})}),"\n",(0,t.jsx)(n.h3,{id:"macosx",children:"MacOSX"}),"\n",(0,t.jsx)(n.h2,{id:"how-to-call-triangle-from-another-program",children:"How to call Triangle from another program"}),"\n",(0,t.jsx)(n.p,{children:"If you haven't read Triangle's instructions (run \"triangle -h\" to read them), you won't understand what follows."}),"\n",(0,t.jsxs)(n.p,{children:["Triangle must be compiled into an object file (triangle.o) with the ",(0,t.jsx)(n.code,{children:"TRILIBRARY"})," symbol defined (generally by using the ",(0,t.jsx)(n.code,{children:"-DTRILIBRARY"})," compiler switch). The ",(0,t.jsx)(n.code,{children:"makefile"}),' included with Triangle will do this for you if you run "make trilibrary". The resulting object file can be called via the procedure triangulate().']}),"\n",(0,t.jsx)(n.p,{children:"If the size of the object file is important to you, you may wish to generate a reduced version of triangle.o."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"REDUCED"})," symbol gets rid of all features that are primarily of research interest. Specifically, the ",(0,t.jsx)(n.code,{children:"-DREDUCED"})," switch eliminates Triangle's ",(0,t.jsx)(n.code,{children:"-i"}),", ",(0,t.jsx)(n.code,{children:"-F"}),", ",(0,t.jsx)(n.code,{children:"-s"}),", and ",(0,t.jsx)(n.code,{children:"-C"})," switches."]})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"CDT_ONLY"})," symbol gets rid of all meshing algorithms above and beyond constrained Delaunay triangulation. Specifically, the ",(0,t.jsx)(n.code,{children:"-DCDT_ONLY"})," switch eliminates Triangle's ",(0,t.jsx)(n.code,{children:"-r"}),", ",(0,t.jsx)(n.code,{children:"-q"}),", ",(0,t.jsx)(n.code,{children:"-a"}),", ",(0,t.jsx)(n.code,{children:"-u"}),", ",(0,t.jsx)(n.code,{children:"-D"}),", ",(0,t.jsx)(n.code,{children:"-Y"}),", ",(0,t.jsx)(n.code,{children:"-S"}),", and ",(0,t.jsx)(n.code,{children:"-s"})," switches."]})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["These definitions (",(0,t.jsx)(n.code,{children:"TRILIBRARY"}),", ",(0,t.jsx)(n.code,{children:"REDUCED"}),", ",(0,t.jsx)(n.code,{children:"CDT_ONLY"}),") must be made in the makefile or in triangle.c itself. Putting these definitions in this file (triangle.h) will not create the desired effect."]})}),"\n",(0,t.jsx)(n.p,{children:"The calling convention for triangulate() follows."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},54213:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var l=i(36672);const t={},r=l.createContext(t);function o(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);