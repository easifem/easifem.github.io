"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[5069,98787],{15962:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>N,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"AbstractMesh/SetSparsity","title":"SetSparsity","description":"This method sets the sparsity in the CSRMatrix.","source":"@site/docs/docs-api/AbstractMesh/SetSparsity.md","sourceDirName":"AbstractMesh","slug":"/AbstractMesh/SetSparsity","permalink":"/docs-api/AbstractMesh/SetSparsity","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMesh/SetSparsity.md","tags":[],"version":"current","lastUpdatedAt":1746669288000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"IsNodePresent","permalink":"/docs-api/AbstractMesh/IsNodePresent"},"next":{"title":"Size","permalink":"/docs-api/AbstractMesh/Size"}}');var o=n(23420),r=n(54213);const a={},i="SetSparsity",c={},l=[{value:"Interface 1",id:"interface-1",level:2},{value:"Interface 2",id:"interface-2",level:2},{value:"Inteface 3",id:"inteface-3",level:2},{value:"Interface 4",id:"interface-4",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"setsparsity",children:"SetSparsity"})}),"\n",(0,o.jsxs)(t.p,{children:["This method sets the sparsity in the ",(0,o.jsx)(t.code,{children:"CSRMatrix"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"interface-1",children:"Interface 1"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE obj_SetSparsity1(obj, mat, localNodeNumber, lbound, &\n    & ubound)\n    CLASS(AbstractMesh_), INTENT(INOUT) :: obj\n    !! [[Mesh_]] class\n    TYPE(CSRMatrix_), INTENT(INOUT) :: mat\n    !! [[CSRMatrix_]] object\n    INTEGER(I4B), INTENT(IN) :: lbound\n    INTEGER(I4B), INTENT(IN) :: ubound\n    INTEGER(I4B), INTENT(IN) :: localNodeNumber(lbound:ubound)\n    !! Global to local node number map\n  END SUBROUTINE obj_SetSparsity1\nEND INTERFACE\n"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"localNodeNumber"})," is used to convert the global node numbers of mesh to local node number in ",(0,o.jsx)(t.code,{children:"mat"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"lbound"})," and ",(0,o.jsx)(t.code,{children:"ubound"})," are bounds of ",(0,o.jsx)(t.code,{children:"localNodeNumber"})]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"The algorithm is as follows:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Start loop of node numbers in mesh"}),"\n",(0,o.jsx)(t.li,{children:"Get the global node number of mesh"}),"\n",(0,o.jsx)(t.li,{children:"Get the global node numbers around this node"}),"\n",(0,o.jsxs)(t.li,{children:["Use ",(0,o.jsx)(t.code,{children:"localNodeNumber"})," to get the local node number of global node number (from step 3)"]}),"\n",(0,o.jsxs)(t.li,{children:["Call ",(0,o.jsx)(t.code,{children:"SetSparsity"})," on ",(0,o.jsx)(t.code,{children:"mat"})," from ",(0,o.jsx)(t.code,{children:"base"})," lib."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE obj_SetSparsity2(obj, mat)\n    CLASS(AbstractMesh_), INTENT(INOUT) :: obj\n    !! Mesh_ class\n    TYPE(CSRMatrix_), INTENT(INOUT) :: mat\n    !! CSRMatrix object\n  END SUBROUTINE obj_SetSparsity2\nEND INTERFACE\n"})}),"\n",(0,o.jsx)(t.h2,{id:"inteface-3",children:"Inteface 3"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE obj_SetSparsity3(obj, colMesh, nodeToNode, mat, &\n    & ivar, jvar)\n    CLASS(AbstractMesh_), INTENT(INOUT) :: obj\n    !! Abstract mesh class\n    CLASS(AbstractMesh_), INTENT(INOUT) :: colMesh\n    !! Abstract mesh class\n    INTEGER(I4B), INTENT(IN) :: nodeToNode(:)\n    !! Node to node connectivity between obj and colMesh\n    TYPE(CSRMatrix_), INTENT(INOUT) :: mat\n    !! [[CSRMatrix_]] object\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: jvar\n  END SUBROUTINE obj_SetSparsity3\nEND INTERFACE\n"})}),"\n",(0,o.jsx)(t.h2,{id:"interface-4",children:"Interface 4"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE obj_SetSparsity4(obj, colMesh, nodeToNode, mat, &\n    rowGlobalToLocalNodeNum, rowLBOUND, rowUBOUND,  &\n    colGlobalToLocalNodeNum, colLBOUND, colUBOUND, ivar, jvar)\n    CLASS(AbstractMesh_), INTENT(INOUT) :: obj\n    !! [[Mesh_]] class\n    CLASS(AbstractMesh_), INTENT(INOUT) :: colMesh\n    !! [[Mesh_]] class\n    INTEGER(I4B), INTENT(IN) :: nodeToNode(:)\n    !! node to node connectivity between obj and colMesh\n    TYPE(CSRMatrix_), INTENT(INOUT) :: mat\n    !! [[CSRMatrix_]] object\n    INTEGER(I4B), INTENT(IN) :: rowLBOUND\n    INTEGER(I4B), INTENT(IN) :: rowUBOUND\n    INTEGER(I4B), INTENT(IN) :: rowGlobalToLocalNodeNum( &\n      & rowLBOUND:rowUBOUND)\n    !! Global to local node number map\n    INTEGER(I4B), INTENT(IN) :: colLBOUND\n    INTEGER(I4B), INTENT(IN) :: colUBOUND\n    INTEGER(I4B), INTENT(IN) :: colGlobalToLocalNodeNum( &\n      & colLBOUND:colUBOUND)\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: jvar\n  END SUBROUTINE obj_SetSparsity4\nEND INTERFACE\n"})})]})}function N(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},19461:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Mesh/SetSparsity","title":"SetSparsity","description":"-","source":"@site/docs/docs-api/Mesh/SetSparsity.md","sourceDirName":"Mesh","slug":"/Mesh/SetSparsity","permalink":"/docs-api/Mesh/SetSparsity","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/Mesh/SetSparsity.md","tags":[],"version":"current","lastUpdatedAt":1747026181000,"frontMatter":{"title":"SetSparsity"},"sidebar":"tutorialSidebar","previous":{"title":"IsNodePresent","permalink":"/docs-api/Mesh/IsNodePresent"},"next":{"title":"Size","permalink":"/docs-api/Mesh/Size"}}');var o=n(23420),r=n(54213),a=n(15962);const i={title:"SetSparsity"},c=void 0,l={},d=[{value:"title: SetSparsity",id:"title-setsparsity",level:2},...a.toc];function N(e){const t={a:"a",admonition:"admonition",h2:"h2",hr:"hr",p:"p",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h2,{id:"title-setsparsity",children:"title: SetSparsity"}),"\n",(0,o.jsx)(t.admonition,{title:"Inheritence",type:"tip",children:(0,o.jsxs)(t.p,{children:["This method is inherited from the ",(0,o.jsx)(t.a,{href:"/docs-api/AbstractMesh/AbstractMesh_",children:"AbstractMesh"})," class."]})}),"\n","\n",(0,o.jsx)(a.default,{})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(N,{...e})}):N(e)}},54213:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(36672);const o={},r=s.createContext(o);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);