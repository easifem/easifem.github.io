"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[40535],{99337:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>D,contentTitle:()=>L,default:()=>N,frontMatter:()=>E,metadata:()=>t,toc:()=>T});const t=JSON.parse('{"id":"DOF/Initiate","title":"Initiate","description":"Initiate an instance of DOF.","source":"@site/docs/docs-api/DOF/Initiate.md","sourceDirName":"DOF","slug":"/DOF/Initiate","permalink":"/docs-api/DOF/Initiate","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/DOF/Initiate.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"GetNodeLoc","permalink":"/docs-api/DOF/GetNodeLoc"},"next":{"title":"Add","permalink":"/docs-api/DOF/Add"}}');var a=o(23420),s=o(54213);function i(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This example show how to create an instance of DOF and use it to create a vector of reals."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nIMPLICIT NONE\nTYPE( DOF_ ) :: obj\nREAL( DFP ), ALLOCATABLE :: val( : )\n\nCALL Initiate( obj, tNodes=[10], names=["U"], spaceCompo=[3],  &\n timeCompo=[1], storageFMT = FMT_DOF )\n\n! Initiate a real vector using `DOF_` object.\n\nCALL Initiate( Val=val, obj=obj )\n\nCALL Display( obj, "CALL Initiate( Val=val, obj=obj ) : " )\n\nCALL Deallocate( obj )\nEND PROGRAM main\n'})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}function r(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["This example show how to initiate an instance of ",(0,a.jsx)(n.code,{children:"DOF"}),". Then we use it to create an instance of ",(0,a.jsx)(n.code,{children:"RealVector"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE BaseType, ONLY: DOF_\nUSE GlobalData\nUSE DOF_Method\n\nIMPLICIT NONE\nTYPE(DOF_) :: obj\nTYPE(RealVector_) :: val\n\n! Create an instance of[[DOF_]]\n\nCALL Initiate(obj, tNodes=[10], names=["U"], spaceCompo=[3], &\n              timeCompo=[1], storageFMT=FMT_DOF)\n\n! Initiate a vector of REAL using an instance of[[DOF_]]\n\nCALL Initiate(Val=val, obj=obj)\n\nCALL Display(Val, "CALL Initiate( Val=val, obj=obj ) : ")\n\nCALL DEALLOCATE (obj)\nEND PROGRAM main\n'})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}function d(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE GlobalData\nUSE BaseType, ONLY: DOF_, RealVector_\nUSE DOF_Method\nUSE RealVector_Method, ONLY: Display, RealVector_Initiate => Initiate\n\nIMPLICIT NONE\n\nTYPE(DOF_) :: obj\nTYPE(RealVector_), ALLOCATABLE :: val(:)\n\nCALL Initiate(obj, tNodes=[10], names=["U"], spaceCompo=[3], &\n              timeCompo=[1], storageFMT=FMT_DOF)\n\nCALL RealVector_Initiate(dofobj=obj, obj=val)\n\nCALL Display(val, "CALL Initiate( val=val, obj=obj ) : ")\n\nCALL DEALLOCATE (obj)\nEND PROGRAM main\n'})})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}function h(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["This example shows the usage of assignment operator to construct an instance of ",(0,a.jsx)(n.code,{children:"DOF"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE GlobalData\nUSE BaseType, ONLY: DOF_\nUSE DOF_Method\n\nIMPLICIT NONE\n\nTYPE(DOF_) :: obj, anotherObj\n\nCALL Initiate(obj, tNodes=[10], names=["U"], spaceCompo=[3], &\n              timeCompo=[1], storageFMT=FMT_DOF)\n\nanotherObj = obj\n\nCALL Display(anotherObj, "anotherObj=obj : ")\n\nCALL DEALLOCATE (obj)\nCALL DEALLOCATE (anotherObj)\n\nEND PROGRAM main\n'})})]})}function j(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}function m(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE GlobalData\nUSE BaseType, ONLY: DOF_\nUSE DOF_Method\n\nIMPLICIT NONE\n\nTYPE(DOF_) :: obj\n\nobj = DOF(tNodes=[10], names=["U"], spaceCompo=[3], &\n          timeCompo=[1], storageFMT=FMT_DOF)\n\nCALL Display(obj, "DOF() : ")\n\nCALL DEALLOCATE (obj)\nEND PROGRAM main\n'})})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}function x(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE GlobalData\nUSE BaseType, ONLY: DOF_\nUSE DOF_Method\n\nIMPLICIT NONE\n\nTYPE(DOF_), POINTER :: obj\n\nobj => DOF_POINTER(tNodes=[10], names=["U"], spaceCompo=[3], &\n                   timeCompo=[1], storageFMT=FMT_DOF)\n\nCALL Display(obj, "DOF() : ")\n\nCALL DEALLOCATE (obj)\nEND PROGRAM main\n'})})}function f(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(x,{...e})}):x(e)}function b(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This example show how to initiate an instance of DOF_\nand use it to create a vector of reals."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\nUSE GlobalData\nUSE BaseType, ONLY: DOF_\nUSE DOF_Method\n\nIMPLICIT NONE\n\nTYPE(DOF_) :: obj\nREAL(DFP), ALLOCATABLE :: val(:)\n\nCALL Initiate(obj, tNodes=[10], names=["U"], spaceCompo=[3], &\n              timeCompo=[1], storageFMT=FMT_DOF)\n\nCALL Initiate(Val=val, obj=obj)\n\nval(1:10) = 1; val(11:20) = 2; val(21:) = 3\n\nCALL Display(Val, obj, "CALL Initiate( Val=val, obj=obj ) : ")\n\nCALL DEALLOCATE (obj)\n\nEND PROGRAM main\n'})})]})}function O(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}const E={sidebar_position:6},L="Initiate",D={},T=[{value:"Interface",id:"interface",level:2},{value:"Interfaces for constructing vectors using DOF",id:"interfaces-for-constructing-vectors-using-dof",level:2},{value:"Constructing navtive vectors",id:"constructing-navtive-vectors",level:2},{value:"Constructing RealVector",id:"constructing-realvector",level:2},{value:"Constructing vector of RealVector",id:"constructing-vector-of-realvector",level:2},{value:"Assignment(=)",id:"assignment",level:2},{value:"DOF Function",id:"dof-function",level:2},{value:"DOF_Pointer",id:"dof_pointer",level:2}];function F(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{TabItem:o,Tabs:t}=n;return o||v("TabItem",!0),t||v("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"initiate",children:"Initiate"})}),"\n",(0,a.jsxs)(n.p,{children:["Initiate an instance of ",(0,a.jsx)(n.a,{href:"/docs-api/DOF/DOF_",children:"DOF"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,a.jsxs)(n.p,{children:["We can construct ",(0,a.jsx)(n.code,{children:"DOF_"})," object by calling the ",(0,a.jsx)(n.code,{children:"Initiate()"})," subroutine."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",metastring:'title="Initiate"',children:"INTERFACE\nMODULE PURE SUBROUTINE Initiate( obj, tNodes, Names, spacecompo, &\n  & timecompo, StorageFMT )\n  CLASS( DOF_ ), INTENT( INOUT ) :: obj\n    !! degree of freedom object\n  INTEGER( I4B ), INTENT( IN ) :: tNodes( : )\n    !! number of nodes for each physical variable\n  CHARACTER( LEN = 1 ), INTENT( IN ) :: Names( : )\n    !! Names of each physical variable\n  INTEGER( I4B ), INTENT( IN ) :: spacecompo( : )\n    !! Space component of each physical variable\n  INTEGER( I4B ), INTENT( IN ) :: timecompo( : )\n    !! Time component of each physical variable\n  INTEGER( I4B ), INTENT( IN ) :: StorageFMT\n    !! Storage format `FMT_DOF`, `FMT_Nodes`\nEND SUBROUTINE Initiate\nEND INTERFACE\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"tNodes"})," denotes the total number of nodes in each physical variables"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Names"})," is the name of each physical variables"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"SpaceCompo"})," is the number of spatial components in each physical variable, if a physical variable is scalar then one can use also use -1 instead of 1 for the total number of space components"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"TimeCompo"})," is the number of time components in each physical variables"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"StorageFMT"})," is the storage format, it can be ",(0,a.jsx)(n.code,{children:"FMT_DOF"})," or ",(0,a.jsx)(n.code,{children:"FMT_Nodes"})]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The size of ",(0,a.jsx)(n.code,{children:"tNodes"}),", ",(0,a.jsx)(n.code,{children:"Names"}),", ",(0,a.jsx)(n.code,{children:"SpaceCompo"}),", ",(0,a.jsx)(n.code,{children:"TimeCompo"})," vectors should be equal to the total number of physical variables."]})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(o,{value:"example",label:"\u0700 See example",children:(0,a.jsx)(c,{})}),(0,a.jsx)(o,{value:"close",label:"\u21a2 ",default:!0})]}),"\n",(0,a.jsx)(n.h2,{id:"interfaces-for-constructing-vectors-using-dof",children:"Interfaces for constructing vectors using DOF"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Initiate()"})," method has been extended for constructing"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Rank-1 fortran arrays"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs-api/RealVector/RealVector_",children:"RealVector_"})}),"\n",(0,a.jsxs)(n.li,{children:["Vector of ",(0,a.jsx)(n.a,{href:"/docs-api/RealVector/RealVector_",children:"RealVector_"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"This topic is covered below."}),"\n",(0,a.jsx)(n.h2,{id:"constructing-navtive-vectors",children:"Constructing navtive vectors"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(o,{value:"interface",label:"\u0700 See Interface",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",metastring:'title="Interface"',children:"INTERFACE\nMODULE PURE SUBROUTINE Initiate( val, obj )\n  REAL( DFP ), ALLOCATABLE, INTENT( INOUT ) :: val( : )\n    !! This vector will be initiated by using obj\n  CLASS( DOF_ ), INTENT( IN ) :: obj\n    !! DOF object\nEND SUBROUTINE Initiate\nEND INTERFACE\n"})})}),(0,a.jsx)(o,{value:"example",label:"\u0700 See example",children:(0,a.jsx)(l,{})}),(0,a.jsx)(o,{value:"close",label:"\u21a2 ",default:!0})]}),"\n",(0,a.jsx)(n.h2,{id:"constructing-realvector",children:"Constructing RealVector"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(o,{value:"interface",label:"\u0700 Interface",default:!0}),(0,a.jsx)(o,{value:"example",label:"\ufe0f\u0700 See example",children:(0,a.jsx)(p,{})}),(0,a.jsx)(o,{value:"close",label:"\u21a2 "})]}),"\n",(0,a.jsx)(n.h2,{id:"constructing-vector-of-realvector",children:"Constructing vector of RealVector"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(o,{value:"interface",label:"\u0700 Interface",default:!0}),(0,a.jsx)(o,{value:"example",label:"\ufe0f\u0700 See example",children:(0,a.jsx)(j,{})}),(0,a.jsx)(o,{value:"close",label:"\u21a2 "})]}),"\n",(0,a.jsx)(n.h2,{id:"assignment",children:"Assignment(=)"}),"\n",(0,a.jsxs)(n.p,{children:["We can use an assignment operator to copy the contents of one ",(0,a.jsx)(n.code,{children:"DOF_"})," object into another ",(0,a.jsx)(n.code,{children:"DOF_"})," object."]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(o,{value:"example",label:"\u0700 See example",children:(0,a.jsx)(u,{})}),(0,a.jsx)(o,{value:"close",label:"\u21a2 ",default:!0})]}),"\n",(0,a.jsx)(n.h2,{id:"dof-function",children:"DOF Function"}),"\n",(0,a.jsxs)(n.p,{children:["We can also use ",(0,a.jsx)(n.code,{children:"DOF()"})," function for the constructing the DOF object."]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(o,{value:"example",label:"\u0700 See example",children:(0,a.jsx)(f,{})}),(0,a.jsx)(o,{value:"close",label:"\u21a2 ",default:!0})]}),"\n",(0,a.jsx)(n.h2,{id:"dof_pointer",children:"DOF_Pointer"}),"\n",(0,a.jsxs)(n.p,{children:["We can also use ",(0,a.jsx)(n.code,{children:"DOF_Pointer()"})," function for get a pointer to a newly created an instance of ",(0,a.jsx)(n.code,{children:"DOF_"}),"."]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(o,{value:"example",label:"\u0700 See example",children:(0,a.jsx)(O,{})}),(0,a.jsx)(o,{value:"close",label:"\u21a2 ",default:!0})]})]})}function N(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(F,{...e})}):F(e)}function v(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},54213:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var t=o(36672);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);