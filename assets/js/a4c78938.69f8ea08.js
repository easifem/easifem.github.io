"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[60634],{92980:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>P});const o=JSON.parse('{"id":"PLPlot/PLPlot_test_1","title":"PLPlot_test_1","description":"This example shows how to plot a graph by using plplot.","source":"@site/docs/docs-api/PLPlot/PLPlot_test_1.md","sourceDirName":"PLPlot","slug":"/PLPlot/PLPlot_test_1","permalink":"/docs-api/PLPlot/PLPlot_test_1","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/PLPlot/PLPlot_test_1.md","tags":[],"version":"current","lastUpdatedAt":1736823324000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"PLPlot LinePlot","permalink":"/docs-api/PLPlot/PLPlot_LinePlot"},"next":{"title":"PLPlot_test_2","permalink":"/docs-api/PLPlot/PLPlot_test_2"}}');var s=n(23420),a=n(54213);const r={},i=void 0,l={},P=[];function p(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"This example shows how to plot a graph by using plplot."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-fortran",children:'PROGRAM main\n  USE easifemBase\n  IMPLICIT NONE\n  INTEGER, PARAMETER :: NSIZE = 101\n  REAL( DFP ), DIMENSION(NSIZE) :: x, y\n  REAL( DFP ) :: xmin = 0.0, xmax = 1.0, ymin = 0.0, ymax = 100.0\n  INTEGER :: ierr\n\n!! Prepare data to be plotted.\n\n  x = arange(0, NSIZE-1) / REAL(NSIZE-1, DFP)\n  y = ymax * x**2\n\n!! Parse and process command line arguments\n\n  ierr = PLPARSEOPTS( PL_PARSE_FULL )\n  IF(ierr .NE. 0) THEN\n    CALL Display( "plparseopts error" )\n    STOP\n  END IF\n\n!! Initiate the PLPLOT enviroment\n\n  CALL PLINIT\n\n!! Create a labelled box to hold the plot. We have specified the box dimension\n\n  CALL PLENV( xmin, xmax, ymin, ymax, 0, 0 )\n  CALL PLLAB( "x", "y=100 x#u2#d", "Simple PLplot demo of a 2D line plot" )\n\n!! Plot the data that was prepared above.\n\n  CALL PLLINE( x, y )\n\n!! Close PLplot library\n\n  CALL PLEND\nEND PROGRAM main\n'})})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},54213:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var o=n(36672);const s={},a=o.createContext(s);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);