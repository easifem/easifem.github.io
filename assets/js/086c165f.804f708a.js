"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[82938],{28556:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"MappingUtility/JacobianHexahedron","title":"JacobianHexahedron","description":"Returns the Jacobian of mapping between two Hexahedrons.","source":"@site/docs/docs-api/MappingUtility/JacobianHexahedron.md","sourceDirName":"MappingUtility","slug":"/MappingUtility/JacobianHexahedron","permalink":"/docs-api/MappingUtility/JacobianHexahedron","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/MappingUtility/JacobianHexahedron.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"FromUnitTriangleToTriangle","permalink":"/docs-api/MappingUtility/FromUnitTriangle2Triangle"},"next":{"title":"JacobianLine","permalink":"/docs-api/MappingUtility/JacobianLine"}}');var t=i(23420),r=i(54213);const a={},d="JacobianHexahedron",s={},c=[{value:"Interface",id:"interface",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"jacobianhexahedron",children:"JacobianHexahedron"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the Jacobian of mapping between two Hexahedrons."}),"\n",(0,t.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION JacobianHexahedron(from, to, xij) RESULT(ans)\n    CHARACTER(*), INTENT(IN) :: from\n    !! BIUNIT\n    !! UNIT\n    !! HEXAHEDRON\n    CHARACTER(*), INTENT(IN) :: to\n    !! BIUNIT\n    !! UNIT\n    !! HEXAHEDRON\n    REAL(DFP), OPTIONAL, INTENT(IN) :: xij(:, :)\n    !! nodal coordinates of general HEXAHEDRON\n    !! number of rows=nsd\n    !! number of cols=4\n    !! xij is needed when `from` or `to` is HEXAHEDRON\n    !! both `from` and to `cannot` be HEXAHEDRON\n    REAL(DFP) :: ans\n  END FUNCTION JacobianHexahedron\nEND INTERFACE\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.code,{children:"from"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"BIUNIT"})," biunit Hexahedron"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"UNIT"})," unit Hexahedron"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"HEXAHEDRON"}),", a general Hexahedron"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.code,{children:"to"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"BIUNIT"})," biunit Hexahedron"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"UNIT"})," unit Hexahedron"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"HEXAHEDRON"}),", a general Hexahedron"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["If any of ",(0,t.jsx)(n.code,{children:"from"})," or ",(0,t.jsx)(n.code,{children:"to"})," is set to ",(0,t.jsx)(n.code,{children:"HEXAHEDRON"}),", then ",(0,t.jsx)(n.code,{children:"xij"})," must be provided, which represents the nodal points of a linear HEXAHEDRON. The number of rows in xij is ",(0,t.jsx)(n.code,{children:"3"})," and the number of columns are 8."]})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Both ",(0,t.jsx)(n.code,{children:"from"})," and ",(0,t.jsx)(n.code,{children:"to"})," cannot be set to ",(0,t.jsx)(n.code,{children:"HEXAHEDRON"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},54213:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var o=i(36672);const t={},r=o.createContext(t);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);