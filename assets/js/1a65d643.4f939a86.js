"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[87523],{76779:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>m,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Domain/Domain_","title":"Structure","description":"The structure of Domain CLASS is given below.","source":"@site/docs/docs-api/Domain/Domain_.md","sourceDirName":"Domain","slug":"/Domain/Domain_","permalink":"/docs-api/Domain/Domain_","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/Domain/Domain_.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Display","permalink":"/docs-api/Domain/Display"},"next":{"title":"Domain constructor","permalink":"/docs-api/Domain/Domain_Constructor"}}');var t=n(23420),a=n(54213);const l={},r="Structure",m={},c=[];function o(e){const s={a:"a",annotation:"annotation",code:"code",h1:"h1",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",mtext:"mtext",p:"p",pre:"pre",semantics:"semantics",span:"span",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"structure",children:"Structure"})}),"\n",(0,t.jsx)(s.p,{children:"The structure of Domain CLASS is given below."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-fortran",children:"TYPE :: Domain_\n  PRIVATE\n  LOGICAL(LGT), PUBLIC :: isInitiated = .FALSE.\n    !! flag\n  TYPE(String) :: engine\n    !! Engine used for generating the meshes\n  INTEGER(I4B) :: majorVersion = 0\n    !! Major version\n  INTEGER(I4B) :: minorVersion = 0\n    !! Minor version\n  REAL(DFP) :: version = 0.0_DFP\n    !! Version  MajorVersion.MinorVersion\n  INTEGER(I4B) :: nsd = 0_I4B\n    !! number of spatial dimension\n  INTEGER(I4B), PUBLIC :: maxNptrs = 0\n    !! Largest node number in the domain\n  INTEGER(I4B), PUBLIC :: minNptrs = 0\n    !! Smallest node number in the domain\n  INTEGER(I4B) :: tNodes = 0\n    !! Total number of nodes in the mesh\n  LOGICAL(I4B) :: isNodeNumberSparse = .FALSE.\n    !! True if node numbers are not continuous\n  INTEGER(I4B), PUBLIC :: maxElemNum = 0\n    !! Largest element number in the domain\n  INTEGER(I4B), PUBLIC :: minElemNum = 0\n    !! Smallest element number in the domain\n  LOGICAL(LGT) :: isElemNumberSparse = .FALSE.\n    !! True if element numbers are sparse\n  INTEGER(I4B) :: tEntitiesForNodes = 0\n    !! Total number of entities required for reading nodes\n  INTEGER(I4B) :: tEntitiesForElements = 0\n    !! Total number of entities required for reading elements\n  INTEGER(I4B) :: tElements(0:3) = [0, 0, 0, 0]\n    !! Total number of elements inside the domain\n    !! tElements( 0 ) = total number of point elements\n    !! tElements( 1 ) = total number of line elements\n    !! tElements( 2 ) =  total number of surface elements\n    !! tElements( 3 ) = total number of volume/cell elements\n  INTEGER(I4B) :: tEntities(0:3) = [0, 0, 0, 0]\n    !! Total number of entities inside the domain\n    !! tEntities( 0 ) = total number of point mesh entities, mesh of Points\n    !! tEntities( 1 ) = total number of line mesh entities, mesh of Edge\n    !! tEntities( 2 ) = total number of surface mesh entities, mesh Boundary\n    !! tEntities( 3 ) = total number of volume mesh entities, Omega\n  REAL(DFP), ALLOCATABLE, PUBLIC :: nodeCoord(:, :)\n    !! Nodal coordinates in XiJ format\n    !! Number of rows are 3, and number of columns is total nodes\n  INTEGER(I4B), ALLOCATABLE, PUBLIC :: local_nptrs(:)\n    !! local_nptrs are required to access the nodeCoord\n  INTEGER(I4B), ALLOCATABLE, PUBLIC :: global_nptrs(:)\n    !! global nptrs\n  TYPE(MeshPointerVector_), ALLOCATABLE :: meshList(:)\n    !! meshList( 0 ) list of meshes of point entities\n    !! meshList( 1 ) list of meshes of line entities\n    !! meshList( 2 ) list of meshes of surface entities\n    !! meshList( 3 ) list of meshes of volume entities\n  TYPE(MeshFacetData_), ALLOCATABLE, PUBLIC :: meshFacetData(:)\n  TYPE(CSRSparsity_) :: meshMap\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"isInitiated"})," It is true if the domain is initiated."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"engine"})," It is the name of the engine used to create the mesh"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"majorVersion"})," It is the major version of the mesh engine"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"minorVersion"})," It is the minor version of the mesh engine"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"version"})," this is the version of the mesh engine"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"nsd"})," this is the spatial dimension of the domain"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"maxNptrs"}),", the largest node number in the domain"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"minNptrs"}),", the smallest node number in the domain"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"isElemNumberSparse"})," True if the element numbers are sparse"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"tEntitiesForNodes"})," Total number of entities for the nodes"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"tEntitiesForElements"})," total number of entities for the mesh."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"tElements"})," It is an integer vector of length 4. Lower bound is 0 and upper bound is 1."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tElements(0)"})," denotes the total number of point elements"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tElements(1)"})," denotes the total number of curve elements"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tElements(2)"})," denotes the total number of surface elements"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tElements(3)"})," denotes the total number of volume elements."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"tEntities"})," It is an integer vector of length 4. It denotes the total number of entities of a given co dimension."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tEntities(0)"})," total number of entities (mesh) of point elements"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tEntities(1)"})," total number of entities (mesh) of curve elements"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tEntities(2)"})," total number of entities (mesh) of surface elements"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tEntities(3)"})," total number of entities (mesh) of volume elements."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"nodeCoord"})," nodal coordinates. rows of nodeCoord represent the spatial dimension. columns of nodeCoord represents the spatial node number."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"local_nptrs"})," It is the index mapping which converts global node number to local node number."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"global_nptrs"}),", local to global node number mapping."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"meshList"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"meshList(0)"})," list of meshes of point entities"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"meshList( 1 )"})," list of meshes of line entities"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"meshList( 2 )"})," list of meshes of surface entities"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"meshList( 3 )"})," list of meshes of volume entities"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"meshFacetData"})," mesh facet data is given below."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-fortran",children:"TYPE MeshFacetData_\n  INTEGER(I4B) :: masterMesh = 0\n  INTEGER(I4B) :: slaveMesh = 0\n  INTEGER(I4B), ALLOCATABLE :: masterCellNumber(:)\n  INTEGER(I4B), ALLOCATABLE :: slaveCellNumber(:)\n  INTEGER(I4B), ALLOCATABLE :: masterLocalFacetID(:)\n  INTEGER(I4B), ALLOCATABLE :: slaveLocalFacetID(:)\n  ! CLASS( Halo_ ), POINTER :: halo => NULL()\nEND TYPE MeshFacetData_\n"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"meshMap"})," contains the connectivity of meshes of dimension ",(0,t.jsx)(s.code,{children:"nsd"})," (that is, meshes of cell ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{mathvariant:"normal",children:"\u03a9"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\Omega"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,t.jsx)(s.span,{className:"mord",children:"\u03a9"})]})})]}),")."]}),"\n",(0,t.jsxs)(s.p,{children:["Let us say there are ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{children:"n"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," meshes of cell elements. That is,"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"In 1D, cell means line elements"}),"\n",(0,t.jsx)(s.li,{children:"In 2D, cell means surface elements"}),"\n",(0,t.jsx)(s.li,{children:"In 3D, cell means volume elements"}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Then, we constructs a sparse matrix, ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{children:"M"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"M"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"M"})]})})]}),", of dimension ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mo,{children:"\xd7"}),(0,t.jsx)(s.mi,{children:"n"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"n \\times n"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(s.span,{className:"mbin",children:"\xd7"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})]})]}),". If ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mi,{children:"M"}),(0,t.jsx)(s.mo,{stretchy:"false",children:"("}),(0,t.jsx)(s.mi,{children:"I"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mi,{children:"J"}),(0,t.jsx)(s.mo,{stretchy:"false",children:")"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mi,{children:"I"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mi,{children:"J"}),(0,t.jsx)(s.mo,{children:"="}),(0,t.jsx)(s.mn,{children:"1"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mn,{children:"2"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mo,{children:"\u22ef"}),(0,t.jsx)(s.mtext,{children:"\u2009"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mi,{children:"n"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"M(I,J), I,J=1,2,\\cdots,n"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"M"}),(0,t.jsx)(s.span,{className:"mopen",children:"("}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07847em"},children:"I"}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.09618em"},children:"J"}),(0,t.jsx)(s.span,{className:"mclose",children:")"}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07847em"},children:"I"}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.09618em"},children:"J"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"="}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.8389em",verticalAlign:"-0.1944em"}}),(0,t.jsx)(s.span,{className:"mord",children:"1"}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mord",children:"2"}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"minner",children:"\u22ef"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})]})]})," is 1 then mesh-I and mesh-J are connected with each other. Otherwise, they are not connected with each other. This information is stored in an instance of ",(0,t.jsx)(s.a,{href:"/docs-api/CSRSparsity/CSRSparsity_",children:"CSRSparsity"})," in ",(0,t.jsx)(s.code,{children:"meshMap"})]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},54213:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>r});var i=n(36672);const t={},a=i.createContext(t);function l(e){const s=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(a.Provider,{value:s},e.children)}}}]);