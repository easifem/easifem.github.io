"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[96235],{66564:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>j,contentTitle:()=>f,default:()=>L,frontMatter:()=>T,metadata:()=>l,toc:()=>v});const l=JSON.parse('{"id":"STScalarField/Get","title":"Get","description":"Get entries of field.","source":"@site/docs/docs-api/STScalarField/Get.md","sourceDirName":"STScalarField","slug":"/STScalarField/Get","permalink":"/docs-api/STScalarField/Get","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/STScalarField/Get.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Export","permalink":"/docs-api/STScalarField/Export"},"next":{"title":"GetPointer","permalink":"/docs-api/STScalarField/GetPointer"}}');var t=a(23420),r=a(54213),i=a(36492),s=a(92492);function o(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In this example we test ",(0,t.jsx)(n.a,{href:"/docs-api/STScalarField/Get",children:"Get"})," method."]}),"\n",(0,t.jsx)(n.p,{children:"In this example we get all temporal values of a given space node."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifemBase\n  use easifemClasses\n  implicit none\n\n  type( domain_ ) :: dom\n  type( STScalarFieldLis_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n  type( ParameterList_ ) :: param\n  integer( i4b ) :: ierr\n  INTEGER( I4B ), Parameter :: timeCompo=2\n  CHARACTER( LEN = * ), Parameter :: engine="LIS_OMP"\n  INTEGER( I4B ) ::tNodes\n  REAL( DFP ), ALLOCATABLE :: val2(:)\n  REAL( DFP ), ALLOCATABLE :: val1(:,:)\n\n  call meshfile%initiate( filename="./mesh.h5", mode="READ" )\n  call meshfile%open()\n  call dom%initiate( meshfile, "" )\n  call meshfile%Deallocate()\n\n  CALL FPL_INIT()\n  CALL param%initiate()\n  CALL SetSTScalarFieldParam( &\n    & param=param, &\n    & name="U", &\n    & fieldType=FIELD_TYPE_NORMAL, &\n    & engine=engine, &\n    & timeCompo=timeCompo)\n\n  call obj%initiate( param, dom )\n\n  tNodes = dom%getTotalNodes()\n  call reallocate(val1, timeCompo, tNodes)\n  call random_number(val1)\n\n  call obj%set(value=val1)\n  call obj%get(value=val2, globalNode=1)\n\n  call Display(val1(:,1:5), "val1 = " )\n  call Display(val2, "val2 node 1 = "  )\n  call obj%get(value=val2, globalNode=5)\n  call Display(val2, "val2 node 5 = "  )\n\n  call obj%Deallocate()\n  call dom%Deallocate()\n  call param%Deallocate()\n  call FPL_FINALIZE()\nend program main\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"                     val1 =                     \n------------------------------------------------\n0.985725  0.712300  0.838596  0.656728  0.490376\n0.674099  0.196048  0.327113  0.386112  0.450990\nval2 node 1 = \n--------------\n   0.985725   \n   0.674099   \nval2 node 5 = \n--------------\n   0.490376   \n   0.450990   \n"})})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}function d(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In this example we test ",(0,t.jsx)(n.a,{href:"/docs-api/STScalarField/Get",children:"Get"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifemBase\n  use easifemClasses\n  implicit none\n\n  type( domain_ ) :: dom\n  type( STScalarFieldLis_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n  type( ParameterList_ ) :: param\n  integer( i4b ) :: ierr\n  INTEGER( I4B ), Parameter :: timeCompo=2\n  CHARACTER( LEN = * ), Parameter :: engine="LIS_OMP"\n  INTEGER( I4B ) ::tNodes\n  REAL( DFP ), ALLOCATABLE :: val2(:, :)\n  REAL( DFP ), ALLOCATABLE :: val1(:,:)\n\n  call meshfile%initiate( filename="./mesh.h5", mode="READ" )\n  call meshfile%open()\n  call dom%initiate( meshfile, "" )\n  call meshfile%Deallocate()\n\n  CALL FPL_INIT()\n  CALL param%initiate()\n  CALL SetSTScalarFieldParam( &\n    & param=param, &\n    & name="U", &\n    & fieldType=FIELD_TYPE_NORMAL, &\n    & engine=engine, &\n    & timeCompo=timeCompo)\n\n  call obj%initiate( param, dom )\n\n  tNodes = dom%getTotalNodes()\n  call reallocate(val1, timeCompo, tNodes)\n  call random_number(val1)\n  call Display(val1(:, 1:5), "val1 = " )\n\n  call obj%set(value=val1)\n  call obj%get(value=val2)\n  call Display(val2(:, 1:5), "val2 = "  )\n\n  call obj%Deallocate()\n  call dom%Deallocate()\n  call param%Deallocate()\n  call FPL_FINALIZE()\nend program main\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"                     val1 =                     \n------------------------------------------------\n0.422617  0.429280  0.529915  0.503016  0.776664\n0.408958  0.078687  0.172171  0.790472  0.069847\n\n                     val2 =                     \n------------------------------------------------\n0.422617  0.429280  0.529915  0.503016  0.776664\n0.408958  0.078687  0.172171  0.790472  0.069847\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function u(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In this example we test ",(0,t.jsx)(n.a,{href:"/docs-api/STScalarField/Get",children:"Get"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifemBase\n  use easifemClasses\n  implicit none\n\n  type( domain_ ) :: dom\n  type( STScalarFieldLis_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n  type( ParameterList_ ) :: param\n  integer( i4b ) :: ierr\n  INTEGER( I4B ), Parameter :: timeCompo=2\n  CHARACTER( LEN = * ), Parameter :: engine="LIS_OMP"\n  INTEGER( I4B ) ::tNodes\n  REAL( DFP ), ALLOCATABLE :: val2(:, :)\n  REAL( DFP ), ALLOCATABLE :: val1(:,:)\n\n  call meshfile%initiate( filename="./mesh.h5", mode="READ" )\n  call meshfile%open()\n  call dom%initiate( meshfile, "" )\n  call meshfile%Deallocate()\n\n  CALL FPL_INIT()\n  CALL param%initiate()\n  CALL SetSTScalarFieldParam( &\n    & param=param, &\n    & name="U", &\n    & fieldType=FIELD_TYPE_NORMAL, &\n    & engine=engine, &\n    & timeCompo=timeCompo)\n\n  call obj%initiate( param, dom )\n\n  tNodes = dom%getTotalNodes()\n  call reallocate(val1, timeCompo, tNodes)\n  call random_number(val1)\n  call Display(val1(:, 1:5), "val1 = " )\n\n  call obj%set(value=val1)\n  call obj%get(value=val2, globalNode=arange(1,5) )\n  call Display(val2(:, 1:5), "val2 = "  )\n\n  call obj%Deallocate()\n  call dom%Deallocate()\n  call param%Deallocate()\n  call FPL_FINALIZE()\nend program main\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"                     val1 =                     \n------------------------------------------------\n0.450271  0.195486  0.123940  0.445466  0.178457\n0.779424  0.951806  0.209786  0.867207  0.345955\n                     val2 =                     \n------------------------------------------------\n0.450271  0.195486  0.123940  0.445466  0.178457\n0.779424  0.951806  0.209786  0.867207  0.345955\n\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}function N(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In this example we test ",(0,t.jsx)(n.a,{href:"/docs-api/STScalarField/Get",children:"Get"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifemBase\n  use easifemClasses\n  implicit none\n\n  type( domain_ ) :: dom\n  type( STScalarFieldLis_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n  type( ParameterList_ ) :: param\n  integer( i4b ) :: ierr\n  INTEGER( I4B ), Parameter :: timeCompo=2\n  CHARACTER( LEN = * ), Parameter :: engine="LIS_OMP"\n  INTEGER( I4B ) ::tNodes\n  REAL( DFP ), ALLOCATABLE :: val2(:)\n  REAL( DFP ), ALLOCATABLE :: val1(:,:)\n\n  call meshfile%initiate( filename="./mesh.h5", mode="READ" )\n  call meshfile%open()\n  call dom%initiate( meshfile, "" )\n  call meshfile%Deallocate()\n\n  CALL FPL_INIT()\n  CALL param%initiate()\n  CALL SetSTScalarFieldParam( &\n    & param=param, &\n    & name="U", &\n    & fieldType=FIELD_TYPE_NORMAL, &\n    & engine=engine, &\n    & timeCompo=timeCompo)\n\n  call obj%initiate( param, dom )\n\n  tNodes = dom%getTotalNodes()\n  call reallocate(val1, timeCompo, tNodes)\n  call random_number(val1)\n  call Display(val1(:, 1:5), "val1 = " )\n\n  call obj%set(value=val1)\n  call obj%get(value=val2, globalNode=arange(1,5), timeCompo=1 )\n  call Display(val2(1:5), "val2 = "  )\n  call obj%get(value=val2, globalNode=arange(1,5), timeCompo=2 )\n  call Display(val2(1:5), "val2 = "  )\n\n  call obj%Deallocate()\n  call dom%Deallocate()\n  call param%Deallocate()\n  call FPL_FINALIZE()\nend program main\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"                     val1 =                     \n------------------------------------------------\n0.767915  0.962912  0.574328  0.331982  0.284842\n0.891933  0.684328  0.359778  0.220547  0.346818\n val2 = \n--------\n0.767915\n0.962912\n0.574328\n0.331982\n0.284842\n val2 = \n--------\n0.891933\n0.684328\n0.359778\n0.220547\n0.346818\n"})})]})}function E(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(N,{...e})}):N(e)}function h(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In this example we test ",(0,t.jsx)(n.a,{href:"/docs-api/STScalarField/Get",children:"Get"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifemBase\n  use easifemClasses\n  implicit none\n\n  type( domain_ ) :: dom\n  type( STScalarFieldLis_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n  type( ParameterList_ ) :: param\n  integer( i4b ) :: ierr\n  INTEGER( I4B ), Parameter :: timeCompo=2\n  CHARACTER( LEN = * ), Parameter :: engine="LIS_OMP"\n  INTEGER( I4B ) ::tNodes\n  REAL( DFP ) :: val2\n  REAL( DFP ), ALLOCATABLE :: val1(:,:)\n\n  call meshfile%initiate( filename="./mesh.h5", mode="READ" )\n  call meshfile%open()\n  call dom%initiate( meshfile, "" )\n  call meshfile%Deallocate()\n\n  CALL FPL_INIT()\n  CALL param%initiate()\n  CALL SetSTScalarFieldParam( &\n    & param=param, &\n    & name="U", &\n    & fieldType=FIELD_TYPE_NORMAL, &\n    & engine=engine, &\n    & timeCompo=timeCompo)\n\n  call obj%initiate( param, dom )\n\n  tNodes = dom%getTotalNodes()\n  call reallocate(val1, timeCompo, tNodes)\n  call random_number(val1)\n  call Display(val1(:, 1:5), "val1 = " )\n\n  call obj%set(value=val1)\n  call obj%get(value=val2, globalNode=1, timeCompo=1 )\n  call Display(val2, "val2 = "  )\n  call obj%get(value=val2, globalNode=2, timeCompo=1 )\n  call Display(val2, "val2 = "  )\n  call obj%get(value=val2, globalNode=1, timeCompo=2 )\n  call Display(val2, "val2 = "  )\n  call obj%get(value=val2, globalNode=2, timeCompo=2 )\n  call Display(val2, "val2 = "  )\n\n  call obj%Deallocate()\n  call dom%Deallocate()\n  call param%Deallocate()\n  call FPL_FINALIZE()\nend program main\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"                     val1 =                     \n------------------------------------------------\n0.603828  0.756928  0.863545  0.512535  0.914640\n0.214214  0.073219  0.731039  0.124185  0.871294\nval2 = 0.603828\nval2 = 0.756928\nval2 = 0.214214\nval2 = 7.32189E-2\n"})})]})}function I(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}const T={},f="Get",j={},v=[{value:"Interface 1",id:"interface-1",level:2},{value:"Interface 2",id:"interface-2",level:2},{value:"Interface 3",id:"interface-3",level:2},{value:"Interface 4",id:"interface-4",level:2},{value:"Interface 5",id:"interface-5",level:2},{value:"Interface 6",id:"interface-6",level:2},{value:"Interface 7",id:"interface-7",level:2},{value:"Interface 8",id:"interface-8",level:2},{value:"Interface 9",id:"interface-9",level:2}];function A(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"get",children:"Get"})}),"\n",(0,t.jsx)(n.p,{children:"Get entries of field."}),"\n",(0,t.jsx)(n.p,{children:"Calling example:"}),"\n","\n",(0,t.jsx)(n.h2,{id:"interface-1",children:"Interface 1"}),"\n",(0,t.jsxs)(i.A,{children:[(0,t.jsxs)(s.A,{value:"interface",label:"\u0700 See Interface",default:!0,children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:" INTERFACE\n  MODULE SUBROUTINE get1(obj, VALUE, globalNode, timeCompo)\n    CLASS(STScalarField_), INTENT(IN) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: VALUE(:)\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: globalNode\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: timeCompo\n  END SUBROUTINE get1\nEND INTERFACE\n"})}),(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Both ",(0,t.jsx)(n.code,{children:"globalNode"})," and ",(0,t.jsx)(n.code,{children:"timeCompo"})," cannot be present."]})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"globalNode"})," is present then temporal value are returned"]}),"\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"timeCompo"})," is present then spatial values are returned"]}),"\n"]})]}),(0,t.jsx)(s.A,{value:"example1",label:"\u0700 Example 1",children:(0,t.jsx)(c,{})}),(0,t.jsx)(s.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,t.jsx)(n.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,t.jsxs)(i.A,{children:[(0,t.jsxs)(s.A,{value:"interface",label:"\u0700 See Interface",default:!0,children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE get2(obj, VALUE)\n    CLASS(STScalarField_), INTENT(IN) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: VALUE(:, :)\n  END SUBROUTINE get2\nEND INTERFACE\n"})}),(0,t.jsx)(n.p,{children:"Get all the values."}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Number of rows in value is equal to the ",(0,t.jsx)(n.code,{children:"obj%timecompo"})]}),"\n",(0,t.jsxs)(n.li,{children:["Number of col in value is equal to the ",(0,t.jsx)(n.code,{children:"obj%domain%tNodes"})]}),"\n"]})]}),(0,t.jsx)(s.A,{value:"example1",label:"Example 1",default:!0,children:(0,t.jsx)(m,{})}),(0,t.jsx)(s.A,{value:"close",label:"\u21a2 ",default:!0})]}),"\n",(0,t.jsx)(n.h2,{id:"interface-3",children:"Interface 3"}),"\n",(0,t.jsxs)(i.A,{children:[(0,t.jsxs)(s.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE stsField_get3(obj, VALUE, globalNode)\n    CLASS(STScalarField_), INTENT(IN) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: VALUE(:, :)\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\n  END SUBROUTINE stsField_get3\nEND INTERFACE\n"})}),(0,t.jsx)(n.p,{children:"Get multiple values."}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Total number of rows in value is ",(0,t.jsx)(n.code,{children:"obj%timeCompo"})]}),"\n",(0,t.jsxs)(n.li,{children:["Total number of columns in value are ",(0,t.jsx)(n.code,{children:"obj%domain%tnodes"})]}),"\n"]})]}),(0,t.jsx)(s.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,t.jsx)(p,{})}),(0,t.jsx)(s.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,t.jsx)(n.h2,{id:"interface-4",children:"Interface 4"}),"\n",(0,t.jsxs)(i.A,{children:[(0,t.jsxs)(s.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE stsField_get4(obj, VALUE, globalNode, timeCompo)\n    CLASS(STScalarField_), INTENT(IN) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: VALUE(:)\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\n    INTEGER(I4B), INTENT(IN) :: timeCompo\n  END SUBROUTINE stsField_get4\nEND INTERFACE\n"})}),(0,t.jsx)(n.p,{children:"Get multiple values of timeCompo."}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"size of value is equal to the size of globalNode"}),"\n"]})]}),(0,t.jsx)(s.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,t.jsx)(E,{})}),(0,t.jsx)(s.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,t.jsx)(n.h2,{id:"interface-5",children:"Interface 5"}),"\n",(0,t.jsxs)(i.A,{children:[(0,t.jsxs)(s.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:" INTERFACE\n  MODULE SUBROUTINE stsField_get5(obj, VALUE, globalNode, timeCompo)\n    CLASS(STScalarField_), INTENT(IN) :: obj\n    REAL(DFP), INTENT(INOUT) :: VALUE\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: timeCompo\n  END SUBROUTINE stsField_get5\nEND INTERFACE\n"})}),(0,t.jsx)(n.p,{children:"Get the single value of timeCompo."})]}),(0,t.jsx)(s.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,t.jsx)(I,{})}),(0,t.jsx)(s.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,t.jsx)(n.h2,{id:"interface-6",children:"Interface 6"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:" INTERFACE\n  MODULE SUBROUTINE stsField_get6(obj, VALUE, istart, iend, stride)\n    CLASS(STScalarField_), INTENT(IN) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: VALUE(:, :)\n    INTEGER(I4B), INTENT(IN) :: istart\n    INTEGER(I4B), INTENT(IN) :: iend\n    INTEGER(I4B), INTENT(IN) :: stride\n  END SUBROUTINE stsField_get6\nEND INTERFACE\n"})}),"\n",(0,t.jsx)(n.p,{children:"Get multiple values using triplets."}),"\n",(0,t.jsx)(n.h2,{id:"interface-7",children:"Interface 7"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE stsField_get7(obj, VALUE, istart, iend, stride, timeCompo)\n    CLASS(STScalarField_), INTENT(IN) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: VALUE(:)\n    INTEGER(I4B), INTENT(IN) :: istart\n    INTEGER(I4B), INTENT(IN) :: iend\n    INTEGER(I4B), INTENT(IN) :: stride\n    INTEGER(I4B), INTENT(IN) :: timeCompo\n  END SUBROUTINE stsField_get7\nEND INTERFACE\n"})}),"\n",(0,t.jsx)(n.p,{children:"Get multiple values using triplets"}),"\n",(0,t.jsx)(n.h2,{id:"interface-8",children:"Interface 8"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE stsField_get8(obj, VALUE, globalNode)\n    CLASS(STScalarField_), INTENT(IN) :: obj\n    TYPE(FEVariable_), INTENT(INOUT) :: VALUE\n  !! Nodal, Vector, SpaceTime\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\n  END SUBROUTINE stsField_get8\nEND INTERFACE\n"})}),"\n",(0,t.jsx)(n.p,{children:"Get multiple values in FEVariable."}),"\n",(0,t.jsx)(n.h2,{id:"interface-9",children:"Interface 9"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE stsField_get9(obj, VALUE, timeCompo)\n    CLASS(STScalarField_), INTENT(IN) :: obj\n    CLASS(ScalarField_), INTENT(INOUT) :: VALUE\n    INTEGER(I4B), INTENT(IN) :: timeCompo\n  END SUBROUTINE stsField_get9\nEND INTERFACE\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Get ",(0,t.jsx)(n.code,{children:"STScalarField_"})," in an instance of ",(0,t.jsx)(n.code,{children:"ScalarField_"}),"."]})]})}function L(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(A,{...e})}):A(e)}},92492:(e,n,a)=>{a.d(n,{A:()=>i});a(36672);var l=a(28923);const t={tabItem:"tabItem_VSPN"};var r=a(23420);function i(e){let{children:n,hidden:a,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,l.A)(t.tabItem,i),hidden:a,children:n})}},36492:(e,n,a)=>{a.d(n,{A:()=>A});var l=a(36672),t=a(28923),r=a(19929),i=a(85291),s=a(5581),o=a(80034),c=a(12715),d=a(62741);function m(e){return l.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:a}=e;return(0,l.useMemo)((()=>{const e=n??function(e){return m(e).map((e=>{let{props:{value:n,label:a,attributes:l,default:t}}=e;return{value:n,label:a,attributes:l,default:t}}))}(a);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function p(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function N(e){let{queryString:n=!1,groupId:a}=e;const t=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,o.aZ)(r),(0,l.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})}),[r,t])]}function E(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,r=u(e),[i,o]=(0,l.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const l=a.find((e=>e.default))??a[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:n,tabValues:r}))),[c,m]=N({queryString:a,groupId:t}),[E,h]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,r]=(0,d.Dv)(a);return[t,(0,l.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:t}),I=(()=>{const e=c??E;return p({value:e,tabValues:r})?e:null})();(0,s.A)((()=>{I&&o(I)}),[I]);return{selectedValue:i,selectValue:(0,l.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),m(e),h(e)}),[m,h,r]),tabValues:r}}var h=a(32111);const I={tabList:"tabList_csSQ",tabItem:"tabItem_Bcmo"};var T=a(23420);function f(e){let{className:n,block:a,selectedValue:l,selectValue:i,tabValues:s}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,a=o.indexOf(n),t=s[a].value;t!==l&&(c(n),i(t))},m=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1];break}}n?.focus()};return(0,T.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":a},n),children:s.map((e=>{let{value:n,label:a,attributes:r}=e;return(0,T.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:e=>{o.push(e)},onKeyDown:m,onClick:d,...r,className:(0,t.A)("tabs__item",I.tabItem,r?.className,{"tabs__item--active":l===n}),children:a??n},n)}))})}function j(e){let{lazy:n,children:a,selectedValue:r}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,l.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,T.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=E(e);return(0,T.jsxs)("div",{className:(0,t.A)("tabs-container",I.tabList),children:[(0,T.jsx)(f,{...n,...e}),(0,T.jsx)(j,{...n,...e})]})}function A(e){const n=(0,h.A)();return(0,T.jsx)(v,{...e,children:m(e.children)},String(n))}},54213:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>s});var l=a(36672);const t={},r=l.createContext(t);function i(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);