"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[8678],{98876:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>N,contentTitle:()=>c,default:()=>I,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"CSRMatrix/Set","title":"Set","description":"SET() method helps us in setting the values of CSRMatrix_.","source":"@site/docs/docs-api/CSRMatrix/Set.md","sourceDirName":"CSRMatrix","slug":"/CSRMatrix/Set","permalink":"/docs-api/CSRMatrix/Set","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/CSRMatrix/Set.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SPY","permalink":"/docs-api/CSRMatrix/SPY"},"next":{"title":"SetBlockColumn","permalink":"/docs-api/CSRMatrix/SetBlockColumn"}}');var l=r(23420),t=r(54213),o=r(36492),i=r(92492);const s={},c="Set",N={},d=[{value:"Interface 1",id:"interface-1",level:2},{value:"Interface 2",id:"interface-2",level:2},{value:"Interface 3",id:"interface-3",level:2},{value:"Interface 4",id:"interface-4",level:2},{value:"Interface 5",id:"interface-5",level:2},{value:"Interface 6",id:"interface-6",level:2},{value:"Interface 7",id:"interface-7",level:2},{value:"Interface 8",id:"interface-8",level:2},{value:"Interface 9",id:"interface-9",level:2},{value:"Interface 10",id:"interface-10",level:2},{value:"Interface 11",id:"interface-11",level:2},{value:"Interface 12",id:"interface-12",level:2},{value:"Interface 13",id:"interface-13",level:2},{value:"Interfac 14",id:"interfac-14",level:2},{value:"Interface 15",id:"interface-15",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"set",children:"Set"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"SET()"})," method helps us in setting the values of ",(0,l.jsx)(n.code,{children:"CSRMatrix_"}),"."]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["You can only use ",(0,l.jsx)(n.code,{children:"SET()"})," method after setting sparsity pattern in sparse matrix."]})}),"\n","\n",(0,l.jsx)(n.h2,{id:"interface-1",children:"Interface 1"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, nodenum, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\n    REAL(DFP), INTENT(IN) :: value(:, :)\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["This subroutine sets the value in ",(0,l.jsx)(n.code,{children:"CSRMatrix_"})]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Shape( value ) = [SIZE(nodenum)*tdof, SIZE(nodenum)*tdof]"})}),"\n",(0,l.jsxs)(n.li,{children:["Usually ",(0,l.jsx)(n.code,{children:"value"})," denotes the element matrix"]}),"\n",(0,l.jsxs)(n.li,{children:["Symbolic we are performing following task ",(0,l.jsx)(n.code,{children:"obj(nodenum, nodenum)=value"})]}),"\n"]})]}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, nodenum, value, storageFMT)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\n    REAL(DFP), INTENT(IN) :: value(:, :)\n    INTEGER(I4B), INTENT(IN) :: storageFMT\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),(0,l.jsxs)(n.p,{children:["Symbolically we are performing following: ",(0,l.jsx)(n.code,{children:"obj(Nptrs,Nptrs)=value(:,:)"})]}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Usually ",(0,l.jsx)(n.code,{children:"value(:,:)"})," represents the element finite element matrix"]}),"\n",(0,l.jsxs)(n.li,{children:["The shape of ",(0,l.jsx)(n.code,{children:"value"})," should be the ",(0,l.jsx)(n.code,{children:"tdof*size(nodenum), tdof*size(nodenum)"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tdof"})," is the total degree of freedom in ",(0,l.jsx)(n.code,{children:"obj%csr%dof"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"StorageFMT"})," denotes the storage format of ",(0,l.jsx)(n.code,{children:"value"}),". It can be ",(0,l.jsx)(n.code,{children:"Nodes_FMT"})," or ",(0,l.jsx)(n.code,{children:"DOF_FMT"})]}),"\n",(0,l.jsxs)(n.li,{children:["Usually, element matrix is stored with ",(0,l.jsx)(n.code,{children:"DOF_FMT"})]}),"\n"]})]}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-3",children:"Interface 3"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    REAL(DFP), INTENT(IN) :: value\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"This routine sets all values of sparse matrix to given scalar value."}),"\n",(0,l.jsxs)(n.li,{children:["This routine is used to define an ASSIGNMENT operator. Therefore, we can call this routine by ",(0,l.jsx)(n.code,{children:"obj=value"}),"."]}),"\n"]})]}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-4",children:"Interface 4"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, irow, icolumn, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: irow\n    INTEGER(I4B), INTENT(IN) :: icolumn\n    REAL(DFP), INTENT(IN) :: value\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"This subroutine sets a single entry of sparse matrix."}),"\n",(0,l.jsx)(n.li,{children:"If this routine is called then it is assumed that the user is aware of the storage pattern of degree of freedom."}),"\n",(0,l.jsx)(n.li,{children:"However, if total number of degrees of freedom is one then there is no need to worry."}),"\n"]}),(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsx)(n.p,{children:"This routine should be avoided by general user."})})]}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-5",children:"Interface 5"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, iDOF, &\n    & jDOF, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum\n    !! row node number\n    INTEGER(I4B), INTENT(IN) :: jNodeNum\n    !! column node number\n    INTEGER(I4B), INTENT(IN) :: iDOF\n    !! row degree of freedom\n    INTEGER(I4B), INTENT(IN) :: jDOF\n    !! col degree of freedom\n    REAL(DFP), INTENT(IN) :: value\n    !! scalar value to be set\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"This routine sets the specific row and column entry to a given value."}),"\n",(0,l.jsxs)(n.li,{children:["The irow and icolumn index in ",(0,l.jsx)(n.code,{children:"CSRMatrix_"})," are calculated by using (iNodeNum, iDOF) and (jNodeNum, jDOF), respectively."]}),"\n",(0,l.jsxs)(n.li,{children:["To do the above task, the routine employs ",(0,l.jsx)(n.a,{href:"/docs-api/DOF/GetNodeLoc",children:"GetNodeLoc"})," method"]}),"\n",(0,l.jsxs)(n.li,{children:["After computing the irow and icolumn (internally) this routine calls, ",(0,l.jsx)(n.code,{children:"csrMat_set3"}),"."]}),"\n",(0,l.jsx)(n.li,{children:"General user should prefer this routine over interface 4."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"rowdof"}),", ",(0,l.jsx)(n.code,{children:"coldof"})," are continuously numbered, so if there are two or more physical variables, then ",(0,l.jsx)(n.code,{children:"rowdof"})," and ",(0,l.jsx)(n.code,{children:"coldof"})," of the second or later physical variables will not start from 1."]}),"\n"]})]}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-6",children:"Interface 6"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["This subroutine sets selected values of the sparse matrix to the scalar value ",(0,l.jsx)(n.code,{children:"value"})]}),"\n",(0,l.jsxs)(n.li,{children:["This routine corresponds to ",(0,l.jsx)(n.code,{children:"obj(nodenum) = value"})]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, nodenum, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\n    REAL(DFP), INTENT(IN) :: value\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),"\n",(0,l.jsx)(n.h2,{id:"interface-7",children:"Interface 7"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, &\n    & ivar, jvar, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: jvar\n    REAL(DFP), INTENT(IN) :: value(:, :)\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"This subroutine sets the values in block sparse matrix."}),"\n",(0,l.jsxs)(n.li,{children:["The storage pattern of both sparse matrix and value (the element matrix) should be in ",(0,l.jsx)(n.code,{children:"FMT_DOF"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Symbolically we performed: ",(0,l.jsx)(n.code,{children:"obj(Nptrs,Nptrs)=value(:,:)"}),"."]}),"\n"]})]}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-8",children:"Interface 8"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, ivar,  &\n    & jvar, iDOF, jDOF, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum\n    !! row node number\n    INTEGER(I4B), INTENT(IN) :: jNodeNum\n    !! column node number\n    INTEGER(I4B), INTENT(IN) :: ivar\n    !!\n    INTEGER(I4B), INTENT(IN) :: jvar\n    !!\n    INTEGER(I4B), INTENT(IN) :: iDOF\n    !! row degree of freedom\n    INTEGER(I4B), INTENT(IN) :: jDOF\n    !! col degree of freedom\n    REAL(DFP), INTENT(IN) :: value\n    !! scalar value to be set\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"This routine sets the specific row and column entry to a given value."}),"\n",(0,l.jsxs)(n.li,{children:["The irow and icolumn index in ",(0,l.jsx)(n.code,{children:"CSRMatrix_"})," are calculated by using (iNodeNum, iDOF) and (jNodeNum, jDOF), respectively."]}),"\n",(0,l.jsxs)(n.li,{children:["To do the above task, the routine employs ",(0,l.jsx)(n.a,{href:"../DOF/GetNodeLoc",children:"GetNodeLoc"})," method"]}),"\n",(0,l.jsxs)(n.li,{children:["After computing the irow and icolumn (internally) this routine calls, ",(0,l.jsx)(n.code,{children:"csrMat_set3"}),"."]}),"\n"]}),(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsx)(n.p,{children:"General user should prefer this routine over Interface 4"})}),(0,l.jsx)(n.p,{children:"rowdof, coldof are continuously numbered, so if there are two or more physical variables, then rowdof and coldof of the second or later physical variables will not start from 1."})]}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-9",children:"Interface 9"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsx)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, ivar,  &\n    & jvar, iDOF, jDOF, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\n    !! row node number\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\n    !! column node number\n    INTEGER(I4B), INTENT(IN) :: ivar\n    !!\n    INTEGER(I4B), INTENT(IN) :: jvar\n    !!\n    INTEGER(I4B), INTENT(IN) :: iDOF\n    !! row degree of freedom\n    INTEGER(I4B), INTENT(IN) :: jDOF\n    !! col degree of freedom\n    REAL(DFP), INTENT(IN) :: value(:, :)\n    !! scalar value to be set\n  END SUBROUTINE Set\nEND INTERFACE\n"})})}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-10",children:"Interface 10"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, ivar,  &\n    & jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum\n    !! row node number\n    INTEGER(I4B), INTENT(IN) :: jNodeNum\n    !! column node number\n    INTEGER(I4B), INTENT(IN) :: ivar\n    !!\n    INTEGER(I4B), INTENT(IN) :: jvar\n    !!\n    INTEGER(I4B), INTENT(IN) :: ispacecompo\n    INTEGER(I4B), INTENT(IN) :: itimecompo\n    INTEGER(I4B), INTENT(IN) :: jspacecompo\n    INTEGER(I4B), INTENT(IN) :: jtimecompo\n    !! col degree of freedom\n    REAL(DFP), INTENT(IN) :: value\n    !! scalar value to be set\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"This routine sets the specific row and column entry to a given value."}),"\n",(0,l.jsxs)(n.li,{children:["The irow and icolumn index in ",(0,l.jsx)(n.a,{href:"/docs-api/CSRMatrix/CSRMatrix_",children:"CSRMatrix"})," are calculated by using (iNodeNum, iDOF) and (jNodeNum, jDOF), respectively."]}),"\n",(0,l.jsxs)(n.li,{children:["To do the above task, the routine employs ",(0,l.jsx)(n.a,{href:"../DOF/GetNodeLoc",children:"GetNodeLoc"})," method"]}),"\n",(0,l.jsxs)(n.li,{children:["After computing the irow and icolumn (internally) this routine calls, ",(0,l.jsx)(n.code,{children:"csrMat_set3"}),"."]}),"\n",(0,l.jsx)(n.li,{children:"General user should prefer this routine over."}),"\n"]}),(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsx)(n.p,{children:"rowdof, coldof are continuously numbered, so if there are two or more physical variables, then rowdof and coldof of the second or later physical variables will not start from 1."})})]}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-11",children:"Interface 11"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, &\n    & ivar, jvar, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: jvar\n    REAL(DFP), INTENT(IN) :: value\n  END SUBROUTINE Set\nEND INTERFACE\n"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"This subroutine sets the values in block sparse matrix."}),"\n",(0,l.jsxs)(n.li,{children:["The storage pattern of both sparse matrix and value (the element matrix) should be in ",(0,l.jsx)(n.code,{children:"FMT_DOF"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Symbolically, we perform ",(0,l.jsx)(n.code,{children:"obj(Nptrs,Nptrs)=value(:,:)"})]}),"\n"]})]}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-12",children:"Interface 12"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsx)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, ivar,  &\n    & jvar, iDOF, jDOF, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\n    !! row node number\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\n    !! column node number\n    INTEGER(I4B), INTENT(IN) :: ivar\n    !!\n    INTEGER(I4B), INTENT(IN) :: jvar\n    !!\n    INTEGER(I4B), INTENT(IN) :: iDOF\n    !! row degree of freedom\n    INTEGER(I4B), INTENT(IN) :: jDOF\n    !! col degree of freedom\n    REAL(DFP), INTENT(IN) :: value\n    !! scalar value to be set\n  END SUBROUTINE Set\nEND INTERFACE\n"})})}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-13",children:"Interface 13"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsx)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, ivar,  &\n    & jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\n    !! row node number\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\n    !! column node number\n    INTEGER(I4B), INTENT(IN) :: ivar\n    !!\n    INTEGER(I4B), INTENT(IN) :: jvar\n    !!\n    INTEGER(I4B), INTENT(IN) :: ispacecompo\n    INTEGER(I4B), INTENT(IN) :: itimecompo\n    INTEGER(I4B), INTENT(IN) :: jspacecompo\n    INTEGER(I4B), INTENT(IN) :: jtimecompo\n    REAL(DFP), INTENT(IN) :: value\n    !! scalar value to be set\n  END SUBROUTINE Set\nEND INTERFACE\n"})})}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interfac-14",children:"Interfac 14"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsx)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, ivar,  &\n    & jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\n    !! row node number\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\n    !! column node number\n    INTEGER(I4B), INTENT(IN) :: ivar\n    !!\n    INTEGER(I4B), INTENT(IN) :: jvar\n    !!\n    INTEGER(I4B), INTENT(IN) :: ispacecompo\n    INTEGER(I4B), INTENT(IN) :: itimecompo(:)\n    INTEGER(I4B), INTENT(IN) :: jspacecompo\n    INTEGER(I4B), INTENT(IN) :: jtimecompo(:)\n    REAL(DFP), INTENT(IN) :: value\n    !! scalar value to be set\n  END SUBROUTINE Set\nEND INTERFACE\n"})})}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]}),"\n",(0,l.jsx)(n.h2,{id:"interface-15",children:"Interface 15"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsx)(i.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE Set(obj, iNodeNum, jNodeNum, ivar,  &\n    & jvar, ispacecompo, itimecompo, jspacecompo, jtimecompo, value)\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: iNodeNum(:)\n    !! row node number\n    INTEGER(I4B), INTENT(IN) :: jNodeNum(:)\n    !! column node number\n    INTEGER(I4B), INTENT(IN) :: ivar\n    !!\n    INTEGER(I4B), INTENT(IN) :: jvar\n    !!\n    INTEGER(I4B), INTENT(IN) :: ispacecompo(:)\n    INTEGER(I4B), INTENT(IN) :: itimecompo\n    INTEGER(I4B), INTENT(IN) :: jspacecompo(:)\n    INTEGER(I4B), INTENT(IN) :: jtimecompo\n    REAL(DFP), INTENT(IN) :: value\n    !! scalar value to be set\n  END SUBROUTINE Set\nEND INTERFACE\n"})})}),(0,l.jsx)(i.A,{value:"example",label:"\ufe0f\u0700 See example"}),(0,l.jsx)(i.A,{value:"close",label:"\u21a2 "})]})]})}function I(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},92492:(e,n,r)=>{r.d(n,{A:()=>o});r(36672);var a=r(28923);const l={tabItem:"tabItem_VSPN"};var t=r(23420);function o(e){let{children:n,hidden:r,className:o}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,a.A)(l.tabItem,o),hidden:r,children:n})}},36492:(e,n,r)=>{r.d(n,{A:()=>p});var a=r(36672),l=r(28923),t=r(19929),o=r(85291),i=r(5581),s=r(80034),c=r(12715),N=r(62741);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:r,attributes:a,default:l}}=e;return{value:n,label:r,attributes:a,default:l}}))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function I(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function E(e){let{queryString:n=!1,groupId:r}=e;const l=(0,o.W6)(),t=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,s.aZ)(t),(0,a.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(l.location.search);n.set(t,e),l.replace({...l.location,search:n.toString()})}),[t,l])]}function T(e){const{defaultValue:n,queryString:r=!1,groupId:l}=e,t=u(e),[o,s]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!I({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:t}))),[c,d]=E({queryString:r,groupId:l}),[T,h]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[l,t]=(0,N.Dv)(r);return[l,(0,a.useCallback)((e=>{r&&t.set(e)}),[r,t])]}({groupId:l}),m=(()=>{const e=c??T;return I({value:e,tabValues:t})?e:null})();(0,i.A)((()=>{m&&s(m)}),[m]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!I({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),h(e)}),[d,h,t]),tabValues:t}}var h=r(32111);const m={tabList:"tabList_csSQ",tabItem:"tabItem_Bcmo"};var j=r(23420);function x(e){let{className:n,block:r,selectedValue:a,selectValue:o,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.a_)(),N=e=>{const n=e.currentTarget,r=s.indexOf(n),l=i[r].value;l!==a&&(c(n),o(l))},d=e=>{let n=null;switch(e.key){case"Enter":N(e);break;case"ArrowRight":{const r=s.indexOf(e.currentTarget)+1;n=s[r]??s[0];break}case"ArrowLeft":{const r=s.indexOf(e.currentTarget)-1;n=s[r]??s[s.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},n),children:i.map((e=>{let{value:n,label:r,attributes:t}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{s.push(e)},onKeyDown:d,onClick:N,...t,className:(0,l.A)("tabs__item",m.tabItem,t?.className,{"tabs__item--active":a===n}),children:r??n},n)}))})}function f(e){let{lazy:n,children:r,selectedValue:t}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function v(e){const n=T(e);return(0,j.jsxs)("div",{className:(0,l.A)("tabs-container",m.tabList),children:[(0,j.jsx)(x,{...n,...e}),(0,j.jsx)(f,{...n,...e})]})}function p(e){const n=(0,h.A)();return(0,j.jsx)(v,{...e,children:d(e.children)},String(n))}},54213:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var a=r(36672);const l={},t=a.createContext(l);function o(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);