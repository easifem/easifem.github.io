"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[50373],{20864:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"TriangleInterface/node","title":"node file","description":"- Blank lines and comments prefixed by `#\' may be placed anywhere.","source":"@site/docs/docs-api/TriangleInterface/node.md","sourceDirName":"TriangleInterface","slug":"/TriangleInterface/node","permalink":"/docs-api/TriangleInterface/node","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/TriangleInterface/node.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"neigh file","permalink":"/docs-api/TriangleInterface/neigh"},"next":{"title":"poly (PSLG)","permalink":"/docs-api/TriangleInterface/poly"}}');var r=t(23420),s=t(54213);const a={},o="node file",c={},l=[];function d(e){const n={code:"code",h1:"h1",header:"header",li:"li",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"node-file",children:"node file"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"First line: <# of vertices> <dimension (must be 2)> <# of attributes> <# of boundary markers (0 or 1)>\nRemaining lines: <vertex #> <x> <y> [attributes] [boundary marker]\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Blank lines and comments prefixed by `#' may be placed anywhere."}),"\n",(0,r.jsx)(n.li,{children:"Vertices must be numbered consecutively, starting from one or zero."}),"\n",(0,r.jsx)(n.li,{children:"The attributes, which are typically floating-point values of physical quantities (such as mass or conductivity) associated with the nodes of a finite element mesh, are copied unchanged to the output mesh."}),"\n",(0,r.jsx)(n.li,{children:"If -q, -a, -u, or -s is selected, each new Steiner point added to the mesh will have quantities assigned to it by linear interpolation."}),"\n",(0,r.jsx)(n.li,{children:"If the fourth entry of the first line is `1', the last column of the remainder of the file is assumed to contain boundary markers."}),"\n",(0,r.jsx)(n.li,{children:"Boundary markers are used to identify boundary vertices and vertices resting on PSLG segments."}),"\n",(0,r.jsxs)(n.li,{children:["The .node files produced by Triangle contain boundary markers in the last column unless they are suppressed by the ",(0,r.jsx)(n.code,{children:"B"})," switch."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},54213:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(36672);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);