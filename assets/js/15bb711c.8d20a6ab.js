"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[18081],{32780:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"SteadyStokes221/GetVelocityNeumannBCPointer","title":"GetVelocityNeumannBCPointer","description":"This routine returns the pointer to Neumann boundary condition of Velocity field in AbstractSteadyStokes kernel, that is obj%NBCForVelocity(nbcNo)%ptr.","source":"@site/docs/docs-api/SteadyStokes221/GetVelocityNeumannBCPointer.md","sourceDirName":"SteadyStokes221","slug":"/SteadyStokes221/GetVelocityNeumannBCPointer","permalink":"/docs-api/SteadyStokes221/GetVelocityNeumannBCPointer","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes221/GetVelocityNeumannBCPointer.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetVelocityDirichletBCPointer","permalink":"/docs-api/SteadyStokes221/GetVelocityDirichletBCPointer"},"next":{"title":"Import","permalink":"/docs-api/SteadyStokes221/Import"}}');var i=n(23420),r=n(54213);const a={},s="GetVelocityNeumannBCPointer",c={},d=[{value:"Interface",id:"interface",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"getvelocityneumannbcpointer",children:"GetVelocityNeumannBCPointer"})}),"\n",(0,i.jsxs)(t.p,{children:["This routine returns the pointer to Neumann boundary condition of Velocity field in ",(0,i.jsx)(t.a,{href:"/docs-api/AbstractSteadyStokes/AbstractSteadyStokes_",children:"AbstractSteadyStokes_"})," kernel, that is ",(0,i.jsx)(t.code,{children:"obj%NBCForVelocity(nbcNo)%ptr"}),"."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"After obtaining the Neumann boundary condition pointer, user can set the boundary condition"}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"nbcNo"})," should be lesser than total Neumann boundary condition."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE FUNCTION getVelocityNeumannBCPointer(obj, nbcNo) RESULT(ans)\n    CLASS(AbstractSteadyStokes_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: nbcNo\n    !! Neumann boundary nunber\n    CLASS(NeumannBC_), POINTER :: ans\n  END FUNCTION getVelocityNeumannBCPointer\nEND INTERFACE\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},54213:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var o=n(36672);const i={},r=o.createContext(i);function a(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);