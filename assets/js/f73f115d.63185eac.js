"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[70176],{72641:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>N,contentTitle:()=>T,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"ElemshapeData/GetSUGN3Param_Takizawa2018","title":"GetSUGN3Param_Takizawa2018","description":"","source":"@site/docs/docs-api/ElemshapeData/GetSUGN3Param_Takizawa2018.md","sourceDirName":"ElemshapeData","slug":"/ElemshapeData/GetSUGN3Param_Takizawa2018","permalink":"/docs-api/ElemshapeData/GetSUGN3Param_Takizawa2018","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/ElemshapeData/GetSUGN3Param_Takizawa2018.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetSUGN3Param","permalink":"/docs-api/ElemshapeData/GetSUGN3Param"},"next":{"title":"GetSUPGParam","permalink":"/docs-api/ElemshapeData/GetSUPGParam"}}');var r=n(23420),i=n(54213);const s={},T="GetSUGN3Param_Takizawa2018",N={},o=[];function l(a){const e={code:"code",h1:"h1",header:"header",pre:"pre",...(0,i.R)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"getsugn3param_takizawa2018",children:"GetSUGN3Param_Takizawa2018"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"MODULE PURE SUBROUTINE GetSUGN3Param_Takizawa2018_1(obj, &\n  & tau, val, nu, h, hmax, hmin, opt)\n  CLASS(ElemshapeData_), INTENT(IN) :: obj\n    !! obj can be an instance of [[STElemshapeData_]]\n  TYPE(FEVariable_), INTENT(INOUT) :: tau\n    !! tau-sugn3 is a scalar and defined on quadrature points\n  TYPE(FEVariable_), INTENT(IN) :: val\n    !! val can be a vector or a scalar\n  TYPE(FEVariable_), INTENT(IN) :: nu\n    !! kinematic viscosity or diffusivity\n    !! scalar and defined on quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: h\n    !! scalar variable, defined on space-time quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: hmax\n    !! scalar variable, defined on space-time quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: hmin\n    !! scalar variable, defined on space-time quadrature points\n  INTEGER(I4B), OPTIONAL, INTENT(IN) :: opt\n    !! currently, opt is not used, but it may be used in future\nEND SUBROUTINE GetSUGN3Param_Takizawa2018_1\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"MODULE PURE SUBROUTINE GetSUGN3Param_Takizawa2018_2(obj, tau, val, &\n  & nu, h, hmax, hmin, opt)\n  CLASS(STElemshapeData_), INTENT(IN) :: obj( : )\n    !! obj can be an instance of [[STElemshapeData_]]\n  TYPE(FEVariable_), INTENT(INOUT) :: tau\n    !! tau-sugn3 is a scalar and defined on quadrature points\n  TYPE(FEVariable_), INTENT(IN) :: val\n    !! val can be a vector or a scalar\n  TYPE(FEVariable_), INTENT(IN) :: nu\n    !! kinematic viscosity or diffusivity\n    !! scalar and defined on quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: h\n    !! scalar variable, defined on space-time quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: hmax\n    !! scalar variable, defined on space-time quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: hmin\n    !! scalar variable, defined on space-time quadrature points\n  INTEGER(I4B), OPTIONAL, INTENT(IN) :: opt\n    !! currently, opt is not used, but it may be used in future\nEND SUBROUTINE GetSUGN3Param_Takizawa2018_2\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"MODULE PURE SUBROUTINE GetSUGN3Param_Takizawa2018_3(obj, tau, val, &\n  & nu, h, hmax, hmin, opt)\n  CLASS(ElemshapeData_), INTENT(IN) :: obj\n    !! obj can be an instance of [[STElemshapeData_]]\n  TYPE(FEVariable_), INTENT(INOUT) :: tau\n    !! tau-sugn3 is a scalar and defined on quadrature points\n  TYPE(FEVariable_), INTENT(IN) :: val\n    !! val can be a vector or a scalar\n  REAL( DFP ), INTENT(IN) :: nu\n    !! kinematic viscosity or diffusivity\n    !! scalar and defined on quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: h\n    !! scalar variable, defined on space-time quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: hmax\n    !! scalar variable, defined on space-time quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: hmin\n    !! scalar variable, defined on space-time quadrature points\n  INTEGER(I4B), OPTIONAL, INTENT(IN) :: opt\n    !! currently, opt is not used, but it may be used in future\nEND SUBROUTINE GetSUGN3Param_Takizawa2018_3\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"MODULE PURE SUBROUTINE GetSUGN3Param_Takizawa2018_4(obj, tau, val, &\n  & nu, h, hmax, hmin, opt)\n  CLASS(STElemshapeData_), INTENT(IN) :: obj( : )\n    !! obj can be an instance of [[STElemshapeData_]]\n  TYPE(FEVariable_), INTENT(INOUT) :: tau\n    !! tau-sugn3 is a scalar and defined on quadrature points\n  TYPE(FEVariable_), INTENT(IN) :: val\n    !! val can be a vector or a scalar\n  REAL( DFP ), INTENT(IN) :: nu\n    !! kinematic viscosity or diffusivity\n    !! scalar and defined on quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: h\n    !! scalar variable, defined on space-time quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: hmax\n    !! scalar variable, defined on space-time quadrature points\n  TYPE(FEVariable_), OPTIONAL, INTENT(INOUT) :: hmin\n    !! scalar variable, defined on space-time quadrature points\n  INTEGER(I4B), OPTIONAL, INTENT(IN) :: opt\n    !! currently, opt is not used, but it may be used in future\nEND SUBROUTINE GetSUGN3Param_Takizawa2018_4\n"})})]})}function d(a={}){const{wrapper:e}={...(0,i.R)(),...a.components};return e?(0,r.jsx)(e,{...a,children:(0,r.jsx)(l,{...a})}):l(a)}},54213:(a,e,n)=>{n.d(e,{R:()=>s,x:()=>T});var t=n(36672);const r={},i=t.createContext(r);function s(a){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function T(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(r):a.components||r:s(a.components),t.createElement(i.Provider,{value:e},a.children)}}}]);