"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[65403],{3541:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"LinearStaticCDR/LinearStaticCDR_test_5","title":"LinearStaticCDR_test_5","description":"This example demonstrates how to use addMaterial to add new material to [[LinearStaticCDR_]] kernel.","source":"@site/docs/docs-api/LinearStaticCDR/LinearStaticCDR_test_5.md","sourceDirName":"LinearStaticCDR","slug":"/LinearStaticCDR/LinearStaticCDR_test_5","permalink":"/docs-api/LinearStaticCDR/LinearStaticCDR_test_5","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/LinearStaticCDR/LinearStaticCDR_test_5.md","tags":[],"version":"current","lastUpdatedAt":1736823324000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LinearStaticCDR_test_4","permalink":"/docs-api/LinearStaticCDR/LinearStaticCDR_test_4"},"next":{"title":"LinearStaticCDR_test_6","permalink":"/docs-api/LinearStaticCDR/LinearStaticCDR_test_6"}}');var i=t(23420),r=t(54213);const o={},s=void 0,c={},l=[];function d(e){const n={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This example demonstrates how to use ",(0,i.jsx)(n.code,{children:"addMaterial"})," to add new material to [[LinearStaticCDR_]] kernel."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n    USE easifemBase\n    USE easifemClasses\n    USE easifemKernels\n    USE LinearStaticCDR_Class\n    IMPLICIT NONE\n    TYPE(LinearStaticCDR_) :: obj\n    TYPE(ParameterList_) :: param\n    TYPE(Domain_) :: dom\n    CHARACTER( LEN = * ), PARAMETER :: domainFileName="./mesh.h5"\n    TYPE( HDF5File_ ) :: domainFile\n    TYPE( MeshSelection_ ) :: region\n    INTEGER(I4B), PARAMETER :: tMaterials = 2, tDirichletBC=4, &\n      & solverName = LIS_GMRES, preconditionOption=LEFT_PRECONDITION, &\n      & convergenceIn = convergenceInRes, &\n      & convergenceType=relativeConvergence, &\n      & maxIter = 100, &\n      & KrylovSubspaceSize=20\n\n!!  Initiate an instance of [[ParameterList_]].\n\n    CALL FPL_INIT(); CALL param%initiate()\n\n!!  Set parameters for [[LinearStaticCDR_]] kernel.\n\n    CALL SetLinearStaticCDRParam( param=param, &\n      & engine="NATIVE_SERIAL", &\n      & isConservative=.FALSE., &\n      & coordinateSystem=KERNEL_2D, tMaterials=tMaterials, &\n      & tDirichletBC=tDirichletBC, domainFile=domainFileName, &\n      & baseContinuity="H1", &\n      & baseInterpolation="LagrangeInterpolation", &\n      & quadratureType="GaussLegendre" )\n\n!! Here, `baseContinuity`, `baseInterpolation`, and `quadratureType` are optional.\n\n!!  Setting parameters for [[LinSolver_]]\n\n    CALL SetLinSolverParam( &\n      & param=param, &\n      & solverName=solverName,&\n      & preconditionOption=preconditionOption, &\n      & convergenceIn=convergenceIn, &\n      & convergenceType=convergenceType, &\n      & maxIter=maxIter, &\n      & relativeToRHS=.TRUE., &\n      & KrylovSubspaceSize=KrylovSubspaceSize, &\n      & rtol=1.0D-10, &\n      & atol=1.0D-10 )\n\n!!  Initiate the computation domain.\n\n    CALL domainFile%Initiate(filename=domainFileName, mode="READ")\n    CALL domainFile%Open()\n    CALL dom%Initiate( domainFile, \'\' )\n    CALL domainFile%Deallocate()\n\n!!  Set parameters for [[LinearStaticCDR_]] kernel.\n\n    CALL obj%Initiate( param=param, dom=dom )\n\n!! "Material 1" Now we use `AddMaterial` method to add a material and region to the kernel.\n\n    CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n    CALL region%Add( dim=2, meshID=[1] )\n    CALL obj%AddMaterial( materialNo=1, region=region )\n    CALL region%Deallocate()\n\n!! "Material 2" Now we use `AddMaterial` method to add a material and region to the kernel.\n\n    CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n    CALL region%Add( dim=2, meshID=[2] )\n    CALL obj%AddMaterial( materialNo=2, region=region )\n    CALL region%Deallocate()\n\n!!  Display the content of [[LinearStaticCDR_]]\n\n    CALL obj%Display( "LinearStaticCDR :: ")\n\n    CALL obj%Deallocate( )\n    CALL dom%Deallocate()\n    CALL param%Deallocate()\n    CALL FPL_FINALIZE()\nEND PROGRAM main\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},54213:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(36672);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);