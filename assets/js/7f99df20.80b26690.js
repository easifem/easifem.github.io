"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[35670],{40814:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>x,contentTitle:()=>g,default:()=>j,frontMatter:()=>p,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"LagrangePolynomialUtility/LagrangeVandermonde","title":"LagrangeVandermonde","description":"This routine returns the Vandermonde matrix.","source":"@site/docs/docs-api/LagrangePolynomialUtility/LagrangeVandermonde.md","sourceDirName":"LagrangePolynomialUtility","slug":"/LagrangePolynomialUtility/LagrangeVandermonde","permalink":"/docs-api/LagrangePolynomialUtility/LagrangeVandermonde","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/LagrangePolynomialUtility/LagrangeVandermonde.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LagrangeInDOF","permalink":"/docs-api/LagrangePolynomialUtility/LagrangeInDOF"},"next":{"title":"Lapack95","permalink":"/docs-api/Lapack95/"}}');var o=r(23420),i=r(54213);function l(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifembase\n  implicit none\n  integer( i4b ) :: i1, i2, order, elemType\n  real(dfp), allocatable :: ans( :, : ),  xij(:,:)\n\n  order=1; elemType=Line\n  xij = EquidistancePoint(order=order, elemType=elemType)\n  ans = LagrangeVandermonde(xij=xij,  order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\n  order=2; elemType=Line\n  xij = EquidistancePoint(order=order, elemType=elemType)\n  ans = LagrangeVandermonde(xij=xij,  order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\n  order=3; elemType=Line\n  xij = EquidistancePoint(order=order, elemType=elemType)\n  ans = LagrangeVandermonde(xij=xij,  order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\nend program main\n'})}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"See results"}),(0,o.jsx)("div",{children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"  ans (order=1)=  \n------------------\n 1.00000  -1.00000\n 1.00000   1.00000\n \n       ans (order=2)=       \n----------------------------\n 1.00000  -1.00000   1.00000\n 1.00000   1.00000   1.00000\n 1.00000   0.00000   0.00000\n \n \n            ans (order=3)=            \n--------------------------------------\n 1.00000  -1.00000   1.00000  -1.00000\n 1.00000   1.00000   1.00000   1.00000\n 1.00000  -0.33333   0.11111  -0.03704\n 1.00000   0.33333   0.11111   0.03704\n"})})})]})]})}function s(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}function t(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifembase\n  implicit none\n  integer( i4b ) :: i1, i2, order, elemType\n  real(dfp), allocatable :: ans( :, : ),  xij(:,:)\n\n  order=1; elemType=Triangle\n  xij = EquidistancePoint(order=order, elemType=elemType)\n  ans = LagrangeVandermonde(xij=xij,  order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\n  order=2; \n  xij = EquidistancePoint(order=order, elemType=elemType)\n  ans = LagrangeVandermonde(xij=xij,  order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\n  order=3; \n  xij = EquidistancePoint(order=order, elemType=elemType)\n  ans = LagrangeVandermonde(xij=xij,  order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\nend program main\n'})}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"See results"}),(0,o.jsx)("div",{children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"      ans (order=1)=     \n-------------------------\n1.00000  0.00000  0.00000\n1.00000  1.00000  0.00000\n1.00000  0.00000  1.00000\n \n \n                   ans (order=2)=                   \n----------------------------------------------------\n1.00000  0.00000  0.00000  0.00000  0.00000  0.00000\n1.00000  1.00000  1.00000  0.00000  0.00000  0.00000\n1.00000  0.00000  0.00000  1.00000  0.00000  1.00000\n1.00000  0.50000  0.25000  0.00000  0.00000  0.00000\n1.00000  0.50000  0.25000  0.50000  0.25000  0.25000\n1.00000  0.00000  0.00000  0.50000  0.00000  0.25000\n \n \nans (order=3)=\n\n1.00000  0.00000  0.00000  0.00000,  ...,  0.00000  0.00000  0.00000  0.00000\n1.00000  1.00000  1.00000  1.00000,     ,  0.00000  0.00000  0.00000  0.00000\n1.00000  0.00000  0.00000  0.00000,     ,  0.00000  1.00000  0.00000  1.00000\n1.00000  0.33333  0.11111  0.03704,     ,  0.00000  0.00000  0.00000  0.00000\n.\n.\n.\n1.00000  0.33333  0.11111  0.03704,  ...,  0.07407  0.44444  0.14815  0.29630\n1.00000  0.00000  0.00000  0.00000,     ,  0.00000  0.44444  0.00000  0.29630\n1.00000  0.00000  0.00000  0.00000,     ,  0.00000  0.11111  0.00000  0.03704\n1.00000  0.33333  0.11111  0.03704,     ,  0.03704  0.11111  0.03704  0.03704\n"})})})]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(t,{...e})}):t(e)}function c(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifembase\n  implicit none\n  integer( i4b ) :: i1, i2, order, elemType\n  real(dfp), allocatable :: ans( :, : ),  xij(:,:)\n\n  order=1; elemType=Quadrangle \n  xij = EquidistancePoint(order=order, elemType=elemType)\n  ans = LagrangeVandermonde(xij=xij,  order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\n  order=2; \n  xij = EquidistancePoint(order=order, elemType=elemType)\n  ans = LagrangeVandermonde(xij=xij,  order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\n  order=3; \n  xij = EquidistancePoint(order=order, elemType=elemType)\n  ans = LagrangeVandermonde(xij=xij,  order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\nend program main\n'})}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"See results"}),(0,o.jsx)("div",{children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"            ans (order=1)=            \n--------------------------------------\n 1.00000  -1.00000  -1.00000   1.00000\n 1.00000   1.00000  -1.00000  -1.00000\n 1.00000   1.00000   1.00000   1.00000\n 1.00000  -1.00000   1.00000  -1.00000\n \n \nans (order=2)=\n 1.00000  -1.00000   1.00000  -1.00000,  ...,  -1.00000   1.00000  -1.00000   1.00000\n 1.00000   1.00000   1.00000  -1.00000,     ,  -1.00000   1.00000   1.00000   1.00000\n 1.00000   1.00000   1.00000   1.00000,     ,   1.00000   1.00000   1.00000   1.00000\n 1.00000  -1.00000   1.00000   1.00000,     ,   1.00000   1.00000  -1.00000   1.00000\n.\n.\n.\n 1.00000   1.00000   1.00000   0.00000,  ...,  0.00000  0.00000  0.00000  0.00000\n 1.00000   0.00000   0.00000   1.00000,     ,  0.00000  1.00000  0.00000  0.00000\n 1.00000  -1.00000   1.00000   0.00000,     ,  0.00000  0.00000  -.00000  0.00000\n 1.00000   0.00000   0.00000   0.00000,     ,  0.00000  0.00000  0.00000  0.00000\n \n \nans (order=3)=\n 1.00000  -1.00000   1.00000  -1.00000,  ...,  -1.00000   1.00000  -1.00000   1.00000\n 1.00000   1.00000   1.00000   1.00000,     ,  -1.00000  -1.00000  -1.00000  -1.00000\n 1.00000   1.00000   1.00000   1.00000,     ,   1.00000   1.00000   1.00000   1.00000\n 1.00000  -1.00000   1.00000  -1.00000,     ,   1.00000  -1.00000   1.00000  -1.00000\n.\n.\n.\n 1.00000  -0.33333   0.11111  -0.03704,  ...,  -3.70370E-2   1.23457E-2  -4.11523E-3   1.37174E-3\n 1.00000   0.33333   0.11111   0.03704,     ,  -3.70370E-2  -1.23457E-2  -4.11523E-3  -1.37174E-3\n 1.00000   0.33333   0.11111   0.03704,     ,   3.70370E-2   1.23457E-2   4.11523E-3   1.37174E-3\n 1.00000  -0.33333   0.11111  -0.03704,     ,   3.70370E-2  -1.23457E-2   4.11523E-3  -1.37174E-3\n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}const p={},g="LagrangeVandermonde",x={},u=[{value:"Interface",id:"interface",level:2}];function y(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components},{TabItem:r,Tabs:a}=n;return r||T("TabItem",!0),a||T("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"lagrangevandermonde",children:"LagrangeVandermonde"})}),"\n",(0,o.jsx)(n.p,{children:"This routine returns the Vandermonde matrix."}),"\n",(0,o.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,o.jsxs)(a,{children:[(0,o.jsx)(r,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION LagrangeVandermonde(x, order, elemType) &\n    & RESULT(ans)\n    REAL(DFP), INTENT(IN) :: x(:, :)\n  !!  points in $x_{iJ}$ format\n    INTEGER(I4B), INTENT(IN) :: order\n  !! order\n    INTEGER(I4B), INTENT(IN) :: elemType\n  !! element type\n    REAL(DFP), ALLOCATABLE :: ans(:, :)\n  !! vandermonde matrix nrows = number of points\n  !! ncols = number of dof\n  END FUNCTION LagrangeVandermonde\nEND INTERFACE\n"})})}),(0,o.jsx)(r,{value:"example",label:"\ufe0f\u0700 See example",children:(0,o.jsx)(s,{})}),(0,o.jsx)(r,{value:"example2",label:"\ufe0f\u0700 Example 2",children:(0,o.jsx)(d,{})}),(0,o.jsx)(r,{value:"example3",label:"\ufe0f\u0700 Example 3",children:(0,o.jsx)(m,{})}),(0,o.jsx)(r,{value:"close",label:"\u21a2 "})]})]})}function j(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(y,{...e})}):y(e)}function T(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},54213:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>s});var a=r(36672);const o={},i=a.createContext(o);function l(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);