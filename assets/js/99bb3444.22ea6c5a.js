"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[15216],{49429:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"SteadyStokes221/AddVelocityNeumannBC","title":"AddVelocityNeumannBC","description":"This routine sets the Neumann boundary condition for Velocity field in AbstractSteadyStokes kernel.","source":"@site/docs/docs-api/SteadyStokes221/AddVelocityNeumannBC.md","sourceDirName":"SteadyStokes221","slug":"/SteadyStokes221/AddVelocityNeumannBC","permalink":"/docs-api/SteadyStokes221/AddVelocityNeumannBC","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes221/AddVelocityNeumannBC.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"AddVelocityDirichletBC","permalink":"/docs-api/SteadyStokes221/AddVelocityDirichletBC"},"next":{"title":"ApplyDirichletBC","permalink":"/docs-api/SteadyStokes221/ApplyDirichletBC"}}');var a=t(23420),i=t(54213);const d={},r="AddVelocityNeumannBC",s={},c=[{value:"Interface",id:"interface",level:2},{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"addvelocityneumannbc",children:"AddVelocityNeumannBC"})}),"\n",(0,a.jsxs)(n.p,{children:["This routine sets the Neumann boundary condition for Velocity field in ",(0,a.jsx)(n.a,{href:"/docs-api/AbstractSteadyStokes/AbstractSteadyStokes_",children:"AbstractSteadyStokes_"})," kernel."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["It makes ",(0,a.jsx)(n.code,{children:"obj%NBCForVelocity(nbcNo)"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"nbcNo"})," should be lesser than total Neumann boundary condition for velocity field."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE addVelocityNeumannBC(obj, nbcNo, param, boundary)\n    CLASS(AbstractSteadyStokes_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: nbcNo\n    !! Neumann boundary nunber\n    TYPE(ParameterList_), INTENT(IN) :: param\n    !! parameter for constructing [NeumannBC_](NeumannBC_).\n    TYPE(MeshSelection_), INTENT(IN) :: boundary\n    !! Boundary region\n  END SUBROUTINE addVelocityNeumannBC\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},54213:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var o=t(36672);const a={},i=o.createContext(a);function d(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);