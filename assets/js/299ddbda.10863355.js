"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[13552,24207],{87438:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"SolidMaterial/index","title":"SolidMaterial","description":"Methods","source":"@site/docs/docs-api/SolidMaterial/index.md","sourceDirName":"SolidMaterial","slug":"/SolidMaterial/","permalink":"/docs-api/SolidMaterial/","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SolidMaterial/index.md","tags":[{"inline":true,"label":"materials","permalink":"/docs-api/tags/materials"},{"inline":true,"label":"materialModels","permalink":"/docs-api/tags/material-models"},{"inline":true,"label":"models","permalink":"/docs-api/tags/models"},{"inline":true,"label":"solidMechanics","permalink":"/docs-api/tags/solid-mechanics"},{"inline":true,"label":"easifemClasses","permalink":"/docs-api/tags/easifem-classes"}],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"date":"2023-08-05T00:00:00.000Z","update":"2023-08-05T00:00:00.000Z","status":"stable","docs":"done","extpkgs":"none","category":["SolidMechanics","Models","MaterialModels"],"tags":["materials","materialModels","models","solidMechanics","easifemClasses"]},"sidebar":"tutorialSidebar","previous":{"title":"Structure","permalink":"/docs-api/Seepage/Seepage_"},"next":{"title":"SetSolidMaterialParam","permalink":"/docs-api/SolidMaterial/SetSolidMaterialParam"}}');var n=i(23420),r=i(54213),s=i(60780),l=i(29709);const o={sidebar_position:1,date:new Date("2023-08-05T00:00:00.000Z"),update:new Date("2023-08-05T00:00:00.000Z"),status:"stable",docs:"done",extpkgs:"none",category:["SolidMechanics","Models","MaterialModels"],tags:["materials","materialModels","models","solidMechanics","easifemClasses"]},d="SolidMaterial",c={},m=[...s.toc,{value:"Methods",id:"methods",level:2}];function p(e){const a={h1:"h1",h2:"h2",header:"header",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"solidmaterial",children:"SolidMaterial"})}),"\n","\n",(0,n.jsx)(s.default,{}),"\n",(0,n.jsx)(a.h2,{id:"methods",children:"Methods"}),"\n","\n",(0,n.jsx)(l.A,{})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},60780:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"programming-fem/solidMaterial/index","title":"Solid material","description":"SolidMaterial is a subclass of AbstractMaterial class. Its purpose is to handle solid materials, like steel, brass, copper, among others.","source":"@site/docs/guides/programming-fem/solidMaterial/index.mdx","sourceDirName":"programming-fem/solidMaterial","slug":"/programming-fem/solidMaterial/","permalink":"/guides/programming-fem/solidMaterial/","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/guides/programming-fem/solidMaterial/index.mdx","tags":[{"inline":true,"label":"materials","permalink":"/guides/tags/materials"},{"inline":true,"label":"materialModels","permalink":"/guides/tags/material-models"},{"inline":true,"label":"models","permalink":"/guides/tags/models"},{"inline":true,"label":"solidMechanics","permalink":"/guides/tags/solid-mechanics"},{"inline":true,"label":"easifemClasses","permalink":"/guides/tags/easifem-classes"}],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"date":"2023-08-05T00:00:00.000Z","update":"2023-08-05T00:00:00.000Z","status":"stable","docs":"done","extpkgs":"none","category":["SolidMechanics","Models","MaterialModels"],"tags":["materials","materialModels","models","solidMechanics","easifemClasses"]},"sidebar":"tutorialSidebar","previous":{"title":"Import from toml-file (spatial user function)","permalink":"/guides/programming-fem/dirichletBC/dbc_toml_userfunc_space"},"next":{"title":"Import from HDF5 file","permalink":"/guides/programming-fem/solidMaterial/import_hdf_1"}}');var n=i(23420),r=i(54213);const s={sidebar_position:1,date:new Date("2023-08-05T00:00:00.000Z"),update:new Date("2023-08-05T00:00:00.000Z"),status:"stable",docs:"done",extpkgs:"none",category:["SolidMechanics","Models","MaterialModels"],tags:["materials","materialModels","models","solidMechanics","easifemClasses"]},l="Solid material",o={},d=[{value:"How to initiate?",id:"how-to-initiate",level:2},{value:"Step 1: Set parameter",id:"step-1-set-parameter",level:3},{value:"Step 2: Initiate",id:"step-2-initiate",level:3},{value:"Step 3: Add material",id:"step-3-add-material",level:3},{value:"Step 4: Get material pointer",id:"step-4-get-material-pointer",level:3},{value:"Further reading",id:"further-reading",level:2}];function c(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,r.R)(),...e.components},{Card:i,CardSection:t,Details:s}=a;return i||p("Card",!0),t||p("CardSection",!0),s||p("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"solid-material",children:"Solid material"})}),"\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.a,{href:"/docs-api/SolidMaterial/SolidMaterial_",children:"SolidMaterial_"})," is a subclass of ",(0,n.jsx)(a.a,{href:"/docs-api/AbstractMaterial",children:"AbstractMaterial"})," class. Its purpose is to handle solid materials, like steel, brass, copper, among others."]}),"\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"SolidMaterial_"})," also encapsulates the abstract model for defining the material constitutive behavior. The structure of ",(0,n.jsx)(a.code,{children:"SolidMaterial_"})," is given below."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-fortran",children:"TYPE, EXTENDS(AbstractMaterial_) :: SolidMaterial_\n  CLASS(AbstractSolidMechanicsModel_), POINTER :: stressStrainModel => NULL()\n    !! Pointer to stress strain material behavior of solids\nEND TYPE\n"})}),"\n",(0,n.jsx)(a.h2,{id:"how-to-initiate",children:"How to initiate?"}),"\n",(0,n.jsxs)(a.p,{children:["There are three ways to initiate an instance of ",(0,n.jsx)(a.code,{children:"SolidMaterial_"}),". In this section we will cover constructing the instance by using ",(0,n.jsx)(a.a,{href:"/docs-api/SolidMaterial/Initiate",children:"Initiate"}),"."]}),"\n",(0,n.jsxs)(a.admonition,{type:"info",children:[(0,n.jsx)(a.mdxAdmonitionTitle,{}),(0,n.jsxs)(a.p,{children:["We will consider the following example to learn about the ",(0,n.jsx)(a.code,{children:"SolidMaterial_"}),"."]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Click here to see example"}),(0,n.jsx)("div",{children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-fortran",children:'PROGRAM main\nUSE easifemBase\nUSE easifemClasses\nUSE easifemMaterials\n\nCHARACTER(*), PARAMETER :: myName = "main"\nCHARACTER(*), PARAMETER :: modName = "main"\nTYPE(SolidMaterial_) :: obj\nTYPE(ParameterList_) :: param\nCLASS(UserFunction_), POINTER :: func => NULL()\nINTEGER(I4B) :: ierr\n\nCALL FPL_Init(); CALL param%Initiate()\n\n! Set parameter\nCALL SetSolidMaterialParam(param=param, name="SolidMaterial")\n\n! Initiate an instance of `SolidMaterial_`\nCALL obj%Initiate(param)\n\n! Adding a material property\nCALL obj%AddMaterial("massDensity")\n\nfunc => obj%GetMaterialPointer("massDensity")\n\nIF (.NOT. ASSOCIATED(func)) THEN\n  CALL e%RaiseError(modName//\'::\'//myName//\' - \'// &\n    & \'[error 1]\')\nEND IF\n\nCALL SetUserFunctionParam(param=param, name="massDensity",  &\n  & returnType=Scalar, argType=Constant)\nCALL func%Initiate(param)\nCALL func%Set(scalarValue=1.0_DFP)\n\nCALL obj%Display(msg="SolidMaterial")\n\nCALL FPL_FINALIZE; CALL param%DEALLOCATE()\nEND PROGRAM main\n'})})})]}),"\n",(0,n.jsxs)(a.p,{children:["To initiate an instance of ",(0,n.jsx)(a.code,{children:"SolidMaterial_"})," follow the steps give below."]}),"\n",(0,n.jsx)(a.h3,{id:"step-1-set-parameter",children:"Step 1: Set parameter"}),"\n",(0,n.jsxs)(a.p,{children:["First, we call ",(0,n.jsx)(a.a,{href:"/docs-api/SolidMaterial/SetSolidMaterialParam",children:"SetSolidMaterialParam"})," method."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-fortran",children:'CALL SetSolidMaterialParam(param=param, name="SolidMaterial")\n'})}),"\n",(0,n.jsx)(a.h3,{id:"step-2-initiate",children:"Step 2: Initiate"}),"\n",(0,n.jsxs)(a.p,{children:["Then, we will call ",(0,n.jsx)(a.a,{href:"/docs-api/SolidMaterial/Initiate",children:"Initiate"})," method."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-fortran",children:"CALL obj%Initiate(param)\n"})}),"\n",(0,n.jsx)(a.h3,{id:"step-3-add-material",children:"Step 3: Add material"}),"\n",(0,n.jsxs)(a.p,{children:["After we have initiated an instance of ",(0,n.jsx)(a.code,{children:"AbstractMaterial_"}),", we will ADD material to it by calling ",(0,n.jsx)(a.a,{href:"/docs-api/AbstractMaterial/AddMaterial",children:"AddMaterial"}),"."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-fortran",children:'CALL obj%AddMaterial("massDensity")\n'})}),"\n",(0,n.jsx)(a.admonition,{type:"note",children:(0,n.jsxs)(a.p,{children:["This routine just register a material name and allocate space for defining materal as a ",(0,n.jsx)(a.code,{children:"UserFunction"}),"."]})}),"\n",(0,n.jsx)(a.h3,{id:"step-4-get-material-pointer",children:"Step 4: Get material pointer"}),"\n",(0,n.jsxs)(a.p,{children:["After registering a material, we can get the pointer of ",(0,n.jsx)(a.a,{href:"/docs-api/UserFunction",children:"UserFunction"})," by calling the method ",(0,n.jsx)(a.a,{href:"/docs-api/AbstractMaterial/GetMaterialPointer",children:"GetMaterialPointer"}),".\nWe should initiate this pointer as described in the documentation of ",(0,n.jsx)(a.a,{href:"/docs-api/UserFunction",children:"UserFunction"}),"."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-fortran",children:"! Adding a material property\nCALL obj%AddMaterial(\"massDensity\")\n\nfunc => obj%GetMaterialPointer(\"massDensity\")\n\nIF (.NOT. ASSOCIATED(func)) THEN\n  CALL e%RaiseError(modName//'::'//myName//' - '// &\n    & '[error 1]')\nEND IF\n\nCALL SetUserFunctionParam(param=param, name=\"massDensity\",  &\n  & returnType=Scalar, argType=Constant)\nCALL func%Initiate(param)\nCALL func%Set(scalarValue=1.0_DFP)\n"})}),"\n",(0,n.jsx)(a.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,n.jsxs)(a.p,{children:["There is more to ",(0,n.jsx)(a.code,{children:"SolidMaterial_"}),", and you can learn about them from following pages."]}),"\n",(0,n.jsxs)(t,{id:"quadraturePoints",children:[(0,n.jsx)(i,{title:"Construct by HDF5 file",to:"/guides/programming-fem/solidMaterial/import_hdf_1",description:"This example shows how to initiate SolidMaterial by using reading data from HDF5 file."}),(0,n.jsx)(i,{title:"Construct by toml file",to:"/guides/programming-fem/solidMaterial/import_toml_1",description:"This example shows how to initiate SolidMaterial by using toml-file."}),(0,n.jsx)(i,{title:"Toml file constant value",to:"/guides/programming-fem/dirichletBC/dbc_toml_const",description:"This example shows how to initiate DBC by reading a toml-file. Constant boundary condition, $u=\\alpha$"}),(0,n.jsx)(i,{title:"Toml file constant function",to:"/guides/programming-fem/dirichletBC/dbc_toml_userfunc_const",description:"This example shows how to initiate DBC by reading a toml-file. Constant boundary condition, $u=\\alpha$"}),(0,n.jsx)(i,{title:"Toml file space function",to:"/guides/programming-fem/dirichletBC/dbc_toml_userfunc_const",description:"This example shows how to initiate DBC by reading a toml-file. Space boundary condition, $u=g(x,y,z)$"})]})]})}function m(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}function p(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},29709:(e,a,i)=>{i.d(a,{A:()=>M});i(36672);var t=i(28923),n=i(75684),r=i(20646),s=i(85860),l=i(6062),o=i(9824),d=i(31814);const c={cardContainer:"cardContainer_i1pc",cardTitle:"cardTitle_lIM3",cardDescription:"cardDescription_8flu"};var m=i(23420);function p(e){let{href:a,children:i}=e;return(0,m.jsx)(r.A,{href:a,className:(0,t.A)("card padding--lg",c.cardContainer),children:i})}function u(e){let{href:a,icon:i,title:n,description:r}=e;return(0,m.jsxs)(p,{href:a,children:[(0,m.jsxs)(d.A,{as:"h2",className:(0,t.A)("text--truncate",c.cardTitle),title:n,children:[i," ",n]}),r&&(0,m.jsx)("p",{className:(0,t.A)("text--truncate",c.cardDescription),title:r,children:r})]})}function h(e){let{item:a}=e;const i=(0,n.Nr)(a),t=function(){const{selectMessage:e}=(0,s.W)();return a=>e(a,(0,o.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:a}))}();return i?(0,m.jsx)(u,{href:i,icon:"\ud83d\uddc3\ufe0f",title:a.label,description:a.description??t(a.items.length)}):null}function f(e){let{item:a}=e;const i=(0,l.A)(a.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",t=(0,n.cC)(a.docId??void 0);return(0,m.jsx)(u,{href:a.href,icon:i,title:a.label,description:a.description??t?.description})}function g(e){let{item:a}=e;switch(a.type){case"link":return(0,m.jsx)(f,{item:a});case"category":return(0,m.jsx)(h,{item:a});default:throw new Error(`unknown item type ${JSON.stringify(a)}`)}}function x(e){let{className:a}=e;const i=(0,n.$S)();return(0,m.jsx)(M,{items:i.items,className:a})}function M(e){const{items:a,className:i}=e;if(!a)return(0,m.jsx)(x,{...e});const r=(0,n.d1)(a);return(0,m.jsx)("section",{className:(0,t.A)("row",i),children:r.map(((e,a)=>(0,m.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,m.jsx)(g,{item:e})},a)))})}},85860:(e,a,i)=>{i.d(a,{W:()=>d});var t=i(36672),n=i(94698);const r=["zero","one","two","few","many","other"];function s(e){return r.filter((a=>e.includes(a)))}const l={locale:"en",pluralForms:s(["one","other"]),select:e=>1===e?"one":"other"};function o(){const{i18n:{currentLocale:e}}=(0,n.A)();return(0,t.useMemo)((()=>{try{return function(e){const a=new Intl.PluralRules(e);return{locale:e,pluralForms:s(a.resolvedOptions().pluralCategories),select:e=>a.select(e)}}(e)}catch(a){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${a.message}\n`),l}}),[e])}function d(){const e=o();return{selectMessage:(a,i)=>function(e,a,i){const t=e.split("|");if(1===t.length)return t[0];t.length>i.pluralForms.length&&console.error(`For locale=${i.locale}, a maximum of ${i.pluralForms.length} plural forms are expected (${i.pluralForms.join(",")}), but the message contains ${t.length}: ${e}`);const n=i.select(a),r=i.pluralForms.indexOf(n);return t[Math.min(r,t.length-1)]}(i,a,e)}}},54213:(e,a,i)=>{i.d(a,{R:()=>s,x:()=>l});var t=i(36672);const n={},r=t.createContext(n);function s(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);