"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[67516],{46137:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>y,contentTitle:()=>x,default:()=>f,frontMatter:()=>u,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"LagrangePolynomialUtility/LagrangeDegree","title":"LagrangeDegree","description":"This routine returns the degrees of monomials for lagrange polynomial.","source":"@site/docs/docs-api/LagrangePolynomialUtility/LagrangeDegree.md","sourceDirName":"LagrangePolynomialUtility","slug":"/LagrangePolynomialUtility/LagrangeDegree","permalink":"/docs-api/LagrangePolynomialUtility/LagrangeDegree","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/LagrangePolynomialUtility/LagrangeDegree.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LagrangeDOF","permalink":"/docs-api/LagrangePolynomialUtility/LagrangeDOF"},"next":{"title":"LagrangeInDOF","permalink":"/docs-api/LagrangePolynomialUtility/LagrangeInDOF"}}');var l=r(23420),o=r(54213);function s(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifembase\n  implicit none\n  integer( i4b ) :: i1, i2, order, elemType\n  integer( i4b ), allocatable :: ans( :, : )\n\n  order=1; elemType=Line\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n  order=2\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n  order=3\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\nend program main\n'})}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"See results"}),(0,l.jsx)("div",{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"ans (order=1)=\n--------------\n      0       \n      1       \n \n \nans (order=2)=\n--------------\n      0       \n      1       \n      2       \n \n \nans (order=3)=\n--------------\n      0       \n      1       \n      2       \n      3       \n"})})})]})]})}function t(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(s,{...e})}):s(e)}function i(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifembase\n  implicit none\n  integer( i4b ) :: i1, i2, order, elemType\n  integer( i4b ), allocatable :: ans( :, : )\n\n  order=1; elemType=Quadrangle\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n  order=2\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n  order=3\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\nend program main\n'})}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"See results"}),(0,l.jsx)("div",{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"ans (order=1)=\n--------------\n     0  0     \n     1  0     \n     0  1     \n     1  1     \n \n \nans (order=2)=\n--------------\n     0  0     \n     1  0     \n     2  0     \n     0  1     \n     1  1     \n     2  1     \n     0  2     \n     1  2     \n     2  2     \n \n \nans (order=3)=\n--------------\n     0  0     \n     1  0     \n     2  0     \n     3  0     \n     0  1     \n     1  1     \n     2  1     \n     3  1     \n     0  2     \n     1  2     \n     2  2     \n     3  2     \n     0  3     \n     1  3     \n     2  3     \n     3  3     \n"})})})]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(i,{...e})}):i(e)}function c(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifembase\n  implicit none\n  integer( i4b ) :: i1, i2, order, elemType\n  integer( i4b ), allocatable :: ans( :, : )\n\n  order=1; elemType=Triangle\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n  order=2\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n  order=3\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\nend program main\n'})}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"See results"}),(0,l.jsx)("div",{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"ans (order=1)=\n--------------\n     0  0     \n     1  0     \n     0  1     \n \n \nans (order=2)=\n--------------\n     0  0     \n     1  0     \n     2  0     \n     0  1     \n     1  1     \n     0  2     \n \n \nans (order=3)=\n--------------\n     0  0     \n     1  0     \n     2  0     \n     3  0     \n     0  1     \n     1  1     \n     2  1     \n     0  2     \n     1  2     \n     0  3     \n"})})})]})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}function p(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifembase\n  implicit none\n  integer( i4b ) :: i1, i2, order, elemType\n  integer( i4b ), allocatable :: ans( :, : )\n\n  order=1; elemType=Tetrahedron\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n  order=2\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n  order=3\n  ans = LagrangeDegree( order=order, elemType=elemType )\n  call display( ans, "ans (order="//tostring(order)//")=" )\n  call blanklines(nol=2)\n\nend program main\n'})}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"See results"}),(0,l.jsx)("div",{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:"ans (order=1)=\n--------------\n   0  0  0    \n   1  0  0    \n   0  1  0    \n   0  0  1    \n \n \nans (order=2)=\n--------------\n   0  0  0    \n   1  0  0    \n   2  0  0    \n   0  1  0    \n   1  1  0    \n   0  2  0    \n   0  0  1    \n   1  0  1    \n   0  1  1    \n   0  0  2    \n \n \nans (order=3)=\n--------------\n   0  0  0    \n   1  0  0    \n   2  0  0    \n   3  0  0    \n   0  1  0    \n   1  1  0    \n   2  1  0    \n   0  2  0    \n   1  2  0    \n   0  3  0    \n   0  0  1    \n   1  0  1    \n   2  0  1    \n   0  1  1    \n   1  1  1    \n   0  2  1    \n   0  0  2    \n   1  0  2    \n   0  1  2    \n   0  0  3    \n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}const u={},x="LagrangeDegree",y={},h=[{value:"Interface",id:"interface",level:2}];function j(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components},{TabItem:r,Tabs:a}=n;return r||T("TabItem",!0),a||T("Tabs",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"lagrangedegree",children:"LagrangeDegree"})}),"\n",(0,l.jsx)(n.p,{children:"This routine returns the degrees of monomials for lagrange polynomial."}),"\n",(0,l.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,l.jsxs)(a,{children:[(0,l.jsx)(r,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION LagrangeDegree(order, elemType) RESULT(ans)\n    INTEGER(I4B), INTENT(IN) :: order\n    INTEGER(I4B), INTENT(IN) :: elemType\n    INTEGER(I4B), ALLOCATABLE :: ans(:, :)\n  END FUNCTION LagrangeDegree\nEND INTERFACE\n"})})}),(0,l.jsx)(r,{value:"example",label:"\ufe0f\u0700 Example 1",children:(0,l.jsx)(t,{})}),(0,l.jsx)(r,{value:"example2",label:"Example 2",children:(0,l.jsx)(d,{})}),(0,l.jsx)(r,{value:"example3",label:"Example 3",children:(0,l.jsx)(g,{})}),(0,l.jsx)(r,{value:"example4",label:"Example 4",children:(0,l.jsx)(m,{})}),(0,l.jsx)(r,{value:"close",label:"\u21a2 "})]})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(j,{...e})}):j(e)}function T(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},54213:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>t});var a=r(36672);const l={},o=a.createContext(l);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);