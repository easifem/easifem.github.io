"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[27461],{11315:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>o,frontMatter:()=>t,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"ReferencePyramid/ReferencePyramid_","title":"ReferencePyramid","description":"Introduction","source":"@site/docs/docs-api/ReferencePyramid/ReferencePyramid_.md","sourceDirName":"ReferencePyramid","slug":"/ReferencePyramid/ReferencePyramid_","permalink":"/docs-api/ReferencePyramid/ReferencePyramid_","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/ReferencePyramid/ReferencePyramid_.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{"title":"ReferencePyramid"},"sidebar":"tutorialSidebar","previous":{"title":"ReferencePyramid","permalink":"/docs-api/ReferencePyramid/"},"next":{"title":"ReferencePyramid example 1","permalink":"/docs-api/ReferencePyramid/ReferencePyramid_test_1"}}');var a=n(23420),d=n(54213);const t={title:"ReferencePyramid"},c="ReferencePyramid",l={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Methods",id:"methods",level:2},{value:"Initiate",id:"initiate",level:3},{value:"ReferencePyramid (Constructor)",id:"referencepyramid-constructor",level:3},{value:"ReferencePyramid_Pointer",id:"referencepyramid_pointer",level:3},{value:"LagrangeElement_Pyramid",id:"lagrangeelement_pyramid",level:3},{value:"Measure_Simplex_Pyramid",id:"measure_simplex_pyramid",level:3},{value:"Pyramid_Quality",id:"pyramid_quality",level:3}];function s(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"referencepyramid",children:"ReferencePyramid"})}),"\n",(0,a.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsx)(r.p,{children:"A reference element for pyramid, and a child of [[ReferenceElement_]]."}),"\n",(0,a.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(r.h3,{id:"initiate",children:"Initiate"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:"MODULE PURE SUBROUTINE initiate_ref_Pyramid( obj, NSD, XiJ )\n  CLASS( ReferencePyramid_ ), INTENT( INOUT ) :: obj\n  INTEGER( I4B ), INTENT( IN ) :: NSD\n  REAL( DFP ), INTENT( IN ), OPTIONAL :: XiJ( :, : )\nEND SUBROUTINE initiate_ref_Pyramid\n"})}),"\n",(0,a.jsx)(r.h3,{id:"referencepyramid-constructor",children:"ReferencePyramid (Constructor)"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:"MODULE PURE FUNCTION reference_Pyramid( NSD, XiJ ) RESULT( obj )\n  INTEGER( I4B ), INTENT( IN ) :: NSD\n  REAL( DFP ), INTENT( IN ), OPTIONAL :: XiJ(:,:)\n  TYPE( ReferencePyramid_ ) :: obj\nEND FUNCTION reference_Pyramid\n"})}),"\n",(0,a.jsx)(r.h3,{id:"referencepyramid_pointer",children:"ReferencePyramid_Pointer"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:"MODULE PURE FUNCTION reference_Pyramid_Pointer( NSD, XiJ ) RESULT( obj )\n  INTEGER( I4B ), INTENT( IN ) :: NSD\n  REAL( DFP ), INTENT( IN ), OPTIONAL :: XiJ(:,:)\n  CLASS( ReferencePyramid_ ), POINTER :: obj\nEND FUNCTION reference_Pyramid_Pointer\n"})}),"\n",(0,a.jsx)(r.h3,{id:"lagrangeelement_pyramid",children:"LagrangeElement_Pyramid"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:"MODULE PURE SUBROUTINE LagrangeElement_Pyramid( RefElem, Order, obj )\n  CLASS( ReferenceElement_), INTENT( IN ) :: RefElem\n  INTEGER( I4B ), INTENT( IN ) :: Order\n  CLASS ( ReferenceElement_ ), INTENT( INOUT ) :: obj\nEND SUBROUTINE LagrangeElement_Pyramid\n"})}),"\n",(0,a.jsx)(r.h3,{id:"measure_simplex_pyramid",children:"Measure_Simplex_Pyramid"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:"MODULE PURE FUNCTION Measure_Simplex_Pyramid( RefElem, XiJ ) RESULT( Ans )\n  CLASS( ReferencePyramid_ ), INTENT( IN ) :: RefElem\n  REAL( DFP ), INTENT( IN ) :: XiJ( :, : )\n  REAL( DFP ) :: Ans\nEND FUNCTION Measure_Simplex_Pyramid\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(r.h3,{id:"pyramid_quality",children:"Pyramid_Quality"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-fortran",children:"MODULE FUNCTION Pyramid_Quality( refelem, xij, measure ) RESULT( Ans )\n  CLASS( ReferencePyramid_ ), INTENT( IN ) :: refelem\n  REAL( DFP ) , INTENT( IN ) :: xij(:,:)\n  INTEGER( I4B ), INTENT( IN ) :: measure\n  REAL( DFP ) :: Ans\nEND FUNCTION Pyramid_Quality\n"})})]})}function o(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},54213:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>c});var i=n(36672);const a={},d=i.createContext(a);function t(e){const r=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(d.Provider,{value:r},e.children)}}}]);