"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[10747],{9919:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>f,frontMatter:()=>s,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"AbstractKernel/KernelFields","title":"KernelFields","description":"This class contains the fields for the kernel. It contains the following fields:","source":"@site/docs/docs-api/AbstractKernel/KernelFields.md","sourceDirName":"AbstractKernel","slug":"/AbstractKernel/KernelFields","permalink":"/docs-api/AbstractKernel/KernelFields","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractKernel/KernelFields.md","tags":[],"version":"current","lastUpdatedAt":1735776220000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"KernelElemshapeData","permalink":"/docs-api/AbstractKernel/KernelElemshapeData"},"next":{"title":"KernelGetCoordinateSystemID","permalink":"/docs-api/AbstractKernel/KernelGetCoordinateSystemID"}}');var i=t(23420),r=t(54213);const s={},a="KernelFields",o={},d=[{value:"Structure",id:"structure",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"kernelfields",children:"KernelFields"})}),"\n",(0,i.jsx)(n.p,{children:"This class contains the fields for the kernel. It contains the following fields:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"MatrixFieldPointer"}),"\n",(0,i.jsx)(n.li,{children:"VectorFieldPointer"}),"\n",(0,i.jsx)(n.li,{children:"ScalarFieldPointer"}),"\n",(0,i.jsx)(n.li,{children:"STVectorFieldPointer"}),"\n",(0,i.jsx)(n.li,{children:"STScalarFieldPointer"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["It is defined in the ",(0,i.jsx)(n.code,{children:"KernelComponents"})," module."]}),"\n",(0,i.jsx)(n.p,{children:"The structure of this class is as follows:"}),"\n",(0,i.jsx)(n.h2,{id:"structure",children:"Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"TYPE :: KernelFields_\n  INTEGER(I4B) :: tMatrixFields = 0\n  !! total matrix fields\n\n  INTEGER(I4B) :: tVectorFields = 0\n  !! total vector fields\n\n  INTEGER(I4B) :: tScalarFields = 0\n  !! total scalar fields\n\n  INTEGER(I4B) :: tSTMatrixFields = 0\n  !! total space-time matrix fields\n\n  INTEGER(I4B) :: tSTVectorFields = 0\n  !! total space-time vector fields\n\n  INTEGER(I4B) :: tSTScalarFields = 0\n  !! total space-time scalar fields\n\n  TYPE(MatrixFieldPointer_), ALLOCATABLE :: matrixFields(:)\n  !! list of matrix fields\n\n  TYPE(VectorFieldPointer_), ALLOCATABLE :: vectorFields(:)\n  !! list of vector fields\n\n  TYPE(ScalarFieldPointer_), ALLOCATABLE :: scalarFields(:)\n  !! list of scalar fields\n\n  TYPE(STVectorFieldPointer_), ALLOCATABLE :: stVectorFields(:)\n  !! list of space-time vector fields\n\n  TYPE(STScalarFieldPointer_), ALLOCATABLE :: stScalarFields(:)\n  !! list of space-time scalar fields\n\n  CLASS(MatrixField_), POINTER :: stiffnessMat => NULL()\n  !! Global Stiffness matrix\n\n  CLASS(MatrixField_), POINTER :: diffusionMat => NULL()\n  !! Global diffusion matrix\n\n  CLASS(MatrixField_), POINTER :: massMat => NULL()\n  !! Global mass matrix\n\n  CLASS(MatrixField_), POINTER :: dampingMat => NULL()\n  !! Global damping matrix\n\n  CLASS(VectorField_), POINTER :: displacement => NULL()\n  !! Vector field for nodal displacement\n\n  CLASS(VectorField_), POINTER :: velocity => NULL()\n  !! Vector field for nodal displacement\n\n  CLASS(VectorField_), POINTER :: acceleration => NULL()\n  !! Vector field for nodal acceleration\n\n  CLASS(VectorField_), POINTER :: nodeCoord => NULL()\n  !! Vector field for nodal coordinates\n\n  CLASS(ScalarField_), POINTER :: pressure => NULL()\n  !! scalar field for nodal pressure\n\n  CLASS(ScalarField_), POINTER :: p_velocity => NULL()\n  !! scalar field for nodal pressure\n\n  CLASS(ScalarField_), POINTER :: p_acceleration => NULL()\n  !! scalar field for nodal pressure\nEND TYPE KernelFields_\n"})})]})}function f(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},54213:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var l=t(36672);const i={},r=l.createContext(i);function s(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);