"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[16017],{24919:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>N,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"AbstractLinSolver/GetAbstractLinSolverParam","title":"GetAbstractLinSolverParam","description":"Get the essential parameters required to construct an instance of abstract linear solver.","source":"@site/docs/docs-api/AbstractLinSolver/GetAbstractLinSolverParam.md","sourceDirName":"AbstractLinSolver","slug":"/AbstractLinSolver/GetAbstractLinSolverParam","permalink":"/docs-api/AbstractLinSolver/GetAbstractLinSolverParam","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractLinSolver/GetAbstractLinSolverParam.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Export","permalink":"/docs-api/AbstractLinSolver/Export"},"next":{"title":"GetParam","permalink":"/docs-api/AbstractLinSolver/GetParam"}}');var a=r(23420),o=r(54213);const s={},i="GetAbstractLinSolverParam",c={},l=[{value:"Interface",id:"interface",level:2}];function T(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"getabstractlinsolverparam",children:"GetAbstractLinSolverParam"})}),"\n",(0,a.jsx)(t.p,{children:"Get the essential parameters required to construct an instance of abstract linear solver."}),"\n",(0,a.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE getAbstractLinSolverParam(param, prefix, &\n    & engine, solverName, preconditionOption, &\n    & maxIter, atol, rtol, convergenceIn, convergenceType, &\n    & relativeToRHS, KrylovSubspaceSize)\n    TYPE(ParameterList_), INTENT(IN) :: param\n    CHARACTER(*), INTENT(IN) :: prefix\n    CHARACTER(*), OPTIONAL, INTENT(OUT) :: engine\n    INTEGER(I4B), OPTIONAL, INTENT(OUT) :: solverName\n    INTEGER(I4B), OPTIONAL, INTENT(OUT) :: preconditionOption\n    INTEGER(I4B), OPTIONAL, INTENT(OUT) :: maxIter\n    REAL(DFP), OPTIONAL, INTENT(OUT) :: atol\n    REAL(DFP), OPTIONAL, INTENT(OUT) :: rtol\n    INTEGER(I4B), OPTIONAL, INTENT(OUT) :: convergenceIn\n    INTEGER(I4B), OPTIONAL, INTENT(OUT) :: convergenceType\n    LOGICAL(LGT), OPTIONAL, INTENT(OUT) :: relativeToRHS\n    INTEGER(I4B), OPTIONAL, INTENT(OUT) :: KrylovSubspaceSize\n  END SUBROUTINE getAbstractLinSolverParam\nEND INTERFACE\n"})})]})}function N(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(T,{...e})}):T(e)}},54213:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>i});var n=r(36672);const a={},o=n.createContext(a);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);