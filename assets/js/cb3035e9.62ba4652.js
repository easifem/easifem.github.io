"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[68679],{91903:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>m,contentTitle:()=>u,default:()=>b,frontMatter:()=>d,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"SteadyStokes221/AssembleTanMat","title":"AssembleTanmat","description":"This procedure pointer assembles the global tangent matrix.","source":"@site/docs/docs-api/SteadyStokes221/AssembleTanMat.md","sourceDirName":"SteadyStokes221","slug":"/SteadyStokes221/AssembleTanMat","permalink":"/docs-api/SteadyStokes221/AssembleTanMat","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes221/AssembleTanMat.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"AssembleRHS","permalink":"/docs-api/SteadyStokes221/AssembleRHS"},"next":{"title":"AssembleTanmat_InternalFacet","permalink":"/docs-api/SteadyStokes221/AssembleTanMat_InternalFacet"}}');var r=a(23420),i=a(54213),s=a(36492),o=a(92492);function l(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["This example tests and demonstrates the usage of ",(0,r.jsx)(n.code,{children:"AssembleTanMat()"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  USE easifemMaterials\n  USE easifemKernels\n  USE SteadyStokes221_Class\n  IMPLICIT NONE\n"})}),"\n",(0,r.jsx)(n.p,{children:"Declare variables"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:'  TYPE( SteadyStokes221_ ) :: obj\n  TYPE( ParameterList_ ) :: param\n  TYPE( DomainPointer_ ) :: domains(2)\n  CLASS( Domain_ ), POINTER :: dom => NULL()\n  CHARACTER( LEN = * ), PARAMETER :: domainFileNamePressure="./mesh_tri3.h5"\n  CHARACTER( LEN = * ), PARAMETER :: domainFileNameVelocity="./mesh_tri6.h5"\n  TYPE(String) :: filename(2)\n  TYPE( MeshSelection_ ) :: region\n  CLASS( DirichletBC_ ), POINTER :: dbc => NULL()\n'})}),"\n",(0,r.jsx)(n.p,{children:"Set parameters"}),"\n",(0,r.jsxs)(n.p,{children:["Initiate an instance of ",(0,r.jsx)(n.a,{href:"/docs-api/ParameterList/ParameterList_",children:"ParameterList_"}),", param, this will be used to initiate several objects."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",metastring:'title="Initiate param"',children:"  CALL FPL_INIT(); CALL param%Initiate()\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",metastring:'{5} title="set SteadyStokes221 parameters"',children:'  CALL SetSteadyStokes221Param( &\n    & param=param, &\n    & isConservativeForm=.TRUE., &\n    & gravity = [0.0_DFP, -9.8_DFP, 0.0_DFP], &\n    & domainFileForPressure = domainFileNamePressure, &\n    & domainFileForVelocity = domainFileNameVelocity, &\n    & engine="NATIVE_SERIAL", &\n    & CoordinateSystem=KERNEL_CARTESIAN, &\n    & maxIter = 100, &\n    & rtoleranceForPressure = REAL( 1.0E-6, DFP ), &\n    & rtoleranceForVelocity = REAL( 1.0E-6, DFP ), &\n    & atoleranceForPressure = REAL( 1.0E-6, DFP ), &\n    & atoleranceForVelocity = REAL( 1.0E-6, DFP ), &\n    & toleranceForSteadyState = REAL( 1.0E-6, DFP ), &\n    & tFluidMaterials=1, &\n    & tDirichletBCForPressure=1, &\n    & tDirichletBCForVelocity=3, &\n    & baseInterpolationForSpace="LagrangeInterpolation", &\n    & baseContinuityForSpace="H1", &\n    & quadratureTypeForSpace="GaussLegendre", &\n    & postProcessOpt=1)\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",metastring:'title="Set param for linSolver"',children:"  CALL SetLinSolverParam( &\n    & param=param, &\n    & solverName=LIS_GMRES,&\n    & preconditionOption=NO_PRECONDITION, &\n    & convergenceIn=convergenceInRes, &\n    & convergenceType=relativeConvergence, &\n    & maxIter=100, &\n    & relativeToRHS=.TRUE., &\n    & KrylovSubspaceSize=20, &\n    & rtol=REAL( 1.0E-10, DFP ), &\n    & atol=REAL( 1.0D-10, DFP ) )\n"})}),"\n",(0,r.jsx)(n.p,{children:"Initiate domain"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",metastring:'{1} title="Initiate domain"',children:"  filename = [String(domainFileNameVelocity), &\n    & String(domainFileNamePressure)]\n  CALL e%setQuietMode(.TRUE.)\n  CALL Initiate(domains=domains, filename=filename)\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"In line 1, make sure that Velocity domain comes first.",type:"caution"}),"\n",(0,r.jsx)(n.p,{children:"Initiate kernel"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",metastring:'{1} title="Initiate kernel"',children:"  CALL e%setQuietMode(.FALSE.)\n  CALL obj%Initiate(param=param, domains=domains )\n"})}),"\n",(0,r.jsx)(n.p,{children:"Here, line 1 is to allow verbosity."}),"\n",(0,r.jsxs)(n.p,{children:["Add fluid material to kernel. To do so, we first create an instance of ",(0,r.jsx)(n.a,{href:"/docs-api/MeshSelection/MeshSelection_",children:"MeshSelection_"}),". Then we add this instance to the kernel."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",metastring:'title="adding fluid material"',children:'  CALL e%setQuietMode(.TRUE.)\n  CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n  CALL region%Add( dim=obj%nsd, meshID=[1] )\n  CALL SetFluidMaterialParam( &\n    & param=param, &\n    & name="fluidMaterial", &\n    & massDensity=1000.0_DFP, &\n    & dynamicViscosity = 0.001_DFP, &\n    & stressStrainModel="NewtonianFluidModel" )\n  CALL SetNewtonianFluidModelParam( &\n    & param = param, &\n    & dynamicViscosity = 0.001_DFP )\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:'  CALL e%setQuietMode(.FALSE.)\n  CALL obj%AddFluidMaterial( &\n    & materialNo=1, &\n    & materialName="fluidMaterial", &\n    & param=param, &\n    & region=region)\n  CALL region%Deallocate()\n'})}),"\n",(0,r.jsx)(n.p,{children:"Add Dirichlet boundary condition"}),"\n",(0,r.jsxs)(n.p,{children:["V1=0, Now we show how to add dirichlet boundary condition. To this end first we create an instance of ",(0,r.jsx)(n.a,{href:"/docs-api/MeshSelection/MeshSelection_",children:"MeshSelection_"})," to select the region of the mesh. Then we define the dirichlet bonundary condition, and pass these two information to kernel."]}),"\n",(0,r.jsx)(n.p,{children:"Set parameters for dirichlet boundary condition:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="ZeroV1", &\n    & idof=1, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE. )\n'})}),"\n",(0,r.jsx)(n.p,{children:"Select the mesh region:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"#define BOTTOM 1\n#define RIGHT 2\n#define TOP 3\n#define LEFT 4\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n  CALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM, RIGHT, LEFT] )\n  CALL region%Set()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add dirichlet boundary condition and the region to kernel:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%AddVelocityDirichletBC( &\n    & dbcNo=1, &\n    & param=param, &\n    & boundary=region )\n  dbc => obj%GetVelocityDirichletBCPointer( dbcNo=1 )\n  CALL dbc%Set( ConstantNodalValue=0.0_DFP )\n  dbc=>NULL()\n"})}),"\n",(0,r.jsx)(n.p,{children:"V1=U, Set parameters for dirichlet boundary condition:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="UpstreamV1", &\n    & idof=1, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE. )\n'})}),"\n",(0,r.jsx)(n.p,{children:"Select the mesh region:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  CALL region%Deallocate()\n  CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n  CALL region%Add( dim=obj%nsd-1, meshID=[TOP] )\n  CALL region%Set()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add dirichlet boundary condition and the region to kernel:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%AddVelocityDirichletBC( &\n    & dbcNo=2, &\n    & param=param, &\n    & boundary=region )\n  dbc => obj%GetVelocityDirichletBCPointer( dbcNo=2 )\n  CALL dbc%Set( ConstantNodalValue=0.1_DFP )\n  dbc=>NULL()\n  CALL region%Deallocate()\n"})}),"\n",(0,r.jsx)(n.p,{children:"V2=0, Set parameters for dirichlet boundary condition:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="ZeroV2", &\n    & idof=2, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE. )\n'})}),"\n",(0,r.jsx)(n.p,{children:"Select the mesh region:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  CALL region%Deallocate()\n  CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n  CALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM, RIGHT, TOP, LEFT] )\n  CALL region%Set()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add dirichlet boundary condition and the region to kernel:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%AddVelocityDirichletBC( &\n    & dbcNo=3, &\n    & param=param, &\n    & boundary=region )\n  dbc => obj%GetVelocityDirichletBCPointer( dbcNo=3 )\n  CALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\n  CALL region%Deallocate()\n"})}),"\n",(0,r.jsx)(n.p,{children:"P=0, Set parameters for dirichlet boundary condition:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",metastring:'title="setting boundary condition P=0"',children:'CALL SetDirichletBCParam( &\n  & param=param, &\n  & name="ZeroP", &\n  & idof=1, &\n  & nodalValueType=Constant, &\n  & useFunction=.FALSE. )\n'})}),"\n",(0,r.jsx)(n.p,{children:"Select the mesh region:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"CALL region%Deallocate()\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\nCALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM] )\nCALL region%Set()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add dirichlet boundary condition and the region to kernel:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%AddPressureDirichletBC( dbcNo=1, param=param, &\n    & boundary=region )\n  dbc => obj%GetPressureDirichletBCPointer( dbcNo=1 )\n  CALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\n  CALL region%Deallocate()\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now that we are done with the setup, we should call ",(0,r.jsx)(n.code,{children:"Set"})," method. In this method, the kernel checks the data, configuration, and intiates appropriate variables."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%Set()\n"})}),"\n",(0,r.jsx)(n.p,{children:"AssembleTanMat"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",metastring:'title="assembling tangent matrix"',children:"  CALL obj%AssembleTanmat()\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",metastring:'title="checking sparsity pattern"',children:'  CALL obj%Kmat%SPY(filename="./Kmat", ext=".png")\n  CALL obj%Gmat%SPY(filename="./Gmat", ext=".png")\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%Deallocate()\n  CALL param%Deallocate()\n  CALL FPL_FINALIZE()\nEND PROGRAM main\n"})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}const d={},u="AssembleTanmat",m={},h=[{value:"Interface",id:"interface",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"assembletanmat",children:"AssembleTanmat"})}),"\n",(0,r.jsx)(n.p,{children:"This procedure pointer assembles the global tangent matrix."}),"\n",(0,r.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n","\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE AssembleTanmat(obj)\n    CLASS(AbstractSteadyStokes_), INTENT(INOUT) :: obj\n  END SUBROUTINE AssembleTanmat\nEND INTERFACE\n"})})}),(0,r.jsx)(o.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,r.jsx)(c,{})}),(0,r.jsx)(o.A,{value:"close",label:"\u21a2 "})]})]})}function b(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},92492:(e,n,a)=>{a.d(n,{A:()=>s});a(36672);var t=a(28923);const r={tabItem:"tabItem_VSPN"};var i=a(23420);function s(e){let{children:n,hidden:a,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,s),hidden:a,children:n})}},36492:(e,n,a)=>{a.d(n,{A:()=>S});var t=a(36672),r=a(28923),i=a(19929),s=a(85291),o=a(5581),l=a(80034),c=a(12715),d=a(62741);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:r}}=e;return{value:n,label:a,attributes:t,default:r}}))}(a);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function h(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:a}=e;const r=(0,s.W6)(),i=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,l.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function b(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,i=m(e),[s,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[c,u]=p({queryString:a,groupId:r}),[b,g]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,i]=(0,d.Dv)(a);return[r,(0,t.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:r}),L=(()=>{const e=c??b;return h({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{L&&l(L)}),[L]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),g(e)}),[u,g,i]),tabValues:i}}var g=a(32111);const L={tabList:"tabList_csSQ",tabItem:"tabItem_Bcmo"};var f=a(23420);function A(e){let{className:n,block:a,selectedValue:t,selectValue:s,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,a=l.indexOf(n),r=o[a].value;r!==t&&(c(n),s(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;n=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;n=l[a]??l[l.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},n),children:o.map((e=>{let{value:n,label:a,attributes:i}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...i,className:(0,r.A)("tabs__item",L.tabItem,i?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function j(e){let{lazy:n,children:a,selectedValue:i}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function x(e){const n=b(e);return(0,f.jsxs)("div",{className:(0,r.A)("tabs-container",L.tabList),children:[(0,f.jsx)(A,{...n,...e}),(0,f.jsx)(j,{...n,...e})]})}function S(e){const n=(0,g.A)();return(0,f.jsx)(x,{...e,children:u(e.children)},String(n))}},54213:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var t=a(36672);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);