"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[88055],{9139:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"VTKPlot/VTKPlot_test_6","title":"VTKPlot example 6","description":"This example shows how to use plot function from [[VTKPlot_]] class. We plot a 3D cartesian grid. The cartesian grid is given by the mesh grid.","source":"@site/docs/docs-api/VTKPlot/VTKPlot_test_6.md","sourceDirName":"VTKPlot","slug":"/VTKPlot/VTKPlot_test_6","permalink":"/docs-api/VTKPlot/VTKPlot_test_6","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/VTKPlot/VTKPlot_test_6.md","tags":[{"inline":true,"label":"VTKPlot/Plot","permalink":"/docs-api/tags/vtk-plot-plot"}],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{"title":"VTKPlot example 6","author":"Vikas Sharma, Ph.D.","date":"5 July 2022","update":"5 July 2022","tags":["VTKPlot/Plot"]},"sidebar":"tutorialSidebar","previous":{"title":"VTKPlot example 5","permalink":"/docs-api/VTKPlot/VTKPlot_test_5"},"next":{"title":"VTKPlot example 7","permalink":"/docs-api/VTKPlot/VTKPlot_test_7"}}');var a=n(23420),o=n(54213);const l={title:"VTKPlot example 6",author:"Vikas Sharma, Ph.D.",date:"5 July 2022",update:"5 July 2022",tags:["VTKPlot/Plot"]},i="VTKPlot example 6",r={},c=[{value:"Use association",id:"use-association",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"vtkplot-example-6",children:"VTKPlot example 6"})}),"\n",(0,a.jsx)(t.p,{children:"This example shows how to use plot function from [[VTKPlot_]] class. We plot a 3D cartesian grid. The cartesian grid is given by the mesh grid."}),"\n",(0,a.jsx)(t.h2,{id:"use-association",children:"Use association"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"[[VTKPlot_]]"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:"PROGRAM MAIN\n  USE easifemBase\n  USE easifemClasses\n  IMPLICIT NONE\n  TYPE( VTKPlot_ ) :: obj\n  REAL( DFP ), ALLOCATABLE :: x( :, :, : ), y( :, :, : ), z( :, :, : )\n"})}),"\n",(0,a.jsx)(t.p,{children:'!!! note ""\nPlotting a two dimensional structured grid.'}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:"  CALL MeshGrid( x=x, y = y, z = z, &\n    & xgv=linspace( 0.0_DFP, 1.0_DFP, 100), &\n    & ygv=linspace( 0.0_DFP, 1.0_DFP, 100), &\n    & zgv=[1.0_DFP] &\n    & )\n"})}),"\n",(0,a.jsx)(t.p,{children:'!!! note ""\nNow we replace z by f(x,y). In this way we get a 3D surface representing\nf(x,y).'}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:"  z = x*(x-1) + y*(y-1)\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:'  CALL obj%initiate( )\n  CALL obj%plot( x, y, z, "./test_6.vts")\n  CALL obj%deallocate()\n'})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:"end program\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},54213:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var s=n(36672);const a={},o=s.createContext(a);function l(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);