"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[29836],{68614:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"UserFunction/Get","title":"Get","description":"Get is generic function which returns the value from UserFunction.","source":"@site/docs/docs-api/UserFunction/Get.md","sourceDirName":"UserFunction","slug":"/UserFunction/Get","permalink":"/docs-api/UserFunction/Get","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/UserFunction/Get.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Deallocate","permalink":"/docs-api/UserFunction/Deallocate"},"next":{"title":"GetArgType","permalink":"/docs-api/UserFunction/GetArgType"}}');var a=t(23420),c=t(54213);const s={},i="Get",o={},l=[{value:"Interface (Get scalar value)",id:"interface-get-scalar-value",level:2},{value:"Interface (Get vector value)",id:"interface-get-vector-value",level:2},{value:"Interface (Get matrix value)",id:"interface-get-matrix-value",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"get",children:"Get"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Get"})," is generic function which returns the value from ",(0,a.jsx)(n.code,{children:"UserFunction"}),"."]}),"\n",(0,a.jsx)("span",{class:"badge badge--secondary",children:" @GetMethods "}),"\n",(0,a.jsx)(n.h2,{id:"interface-get-scalar-value",children:"Interface (Get scalar value)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE RECURSIVE SUBROUTINE GetScalarValue(obj, val, args)\n    CLASS(UserFunction_), INTENT(INOUT) :: obj\n    REAL(DFP), INTENT(INOUT) :: val\n    REAL(DFP), OPTIONAL, INTENT(IN) :: args(:)\n  END SUBROUTINE GetScalarValue\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.h2,{id:"interface-get-vector-value",children:"Interface (Get vector value)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE RECURSIVE SUBROUTINE GetVectorValue(obj, val, args)\n    CLASS(UserFunction_), INTENT(INOUT) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: val(:)\n    REAL(DFP), OPTIONAL, INTENT(IN) :: args(:)\n  END SUBROUTINE GetVectorValue\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.h2,{id:"interface-get-matrix-value",children:"Interface (Get matrix value)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE RECURSIVE SUBROUTINE GetMatrixValue(obj, val, args)\n    CLASS(UserFunction_), INTENT(INOUT) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: val(:, :)\n    REAL(DFP), OPTIONAL, INTENT(IN) :: args(:)\n  END SUBROUTINE GetMatrixValue\nEND INTERFACE\n"})})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},54213:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(36672);const a={},c=r.createContext(a);function s(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);