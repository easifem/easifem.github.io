"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[33012,45567],{85137:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>T});const i=JSON.parse('{"id":"AbstractMesh/InitiateElemSD","title":"InitiateElemSD","description":"","source":"@site/docs/docs-api/AbstractMesh/InitiateElemSD.md","sourceDirName":"AbstractMesh","slug":"/AbstractMesh/InitiateElemSD","permalink":"/docs-api/AbstractMesh/InitiateElemSD","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMesh/InitiateElemSD.md","tags":[],"version":"current","lastUpdatedAt":1746669288000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"InitiateBoundaryData","permalink":"/docs-api/AbstractMesh/InitiateBoundaryData"},"next":{"title":"InitiateElementToElements","permalink":"/docs-api/AbstractMesh/InitiateElementToElements"}}');var a=t(23420),r=t(54213);const o={},s="InitiateElemSD",c={},T=[];function p(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"initiateelemsd",children:"InitiateElemSD"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"  MODULE SUBROUTINE InitiateElemSD(obj, &\n    & orderSpace,  &\n    & linSpaceElem, &\n    & spaceElem, &\n    & quadTypeForSpace, &\n    & continuityTypeForSpace, &\n    & interpolTypeForSpace )\n    CLASS(Mesh_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: orderSpace\n      !! integrand order in space\n    CLASS(ReferenceElement_), TARGET, INTENT(IN) :: linSpaceElem\n      !! linear (simplex) space element\n    CLASS(ReferenceElement_), TARGET, INTENT(IN) :: spaceElem\n      !! space element\n    CHARACTER(LEN=*), INTENT(IN) :: quadTypeForSpace\n      !! quadrature for space\n    CHARACTER(LEN=*), INTENT(IN) :: continuityTypeForSpace\n      !! continuity for base in space\n    CHARACTER(LEN=*), INTENT(IN) :: interpolTypeForSpace\n      !! interpolation type for base in space\n  END SUBROUTINE InitiateElemSD\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"  MODULE SUBROUTINE mesh_initiateElemSD2(obj, &\n    & orderSpace,  &\n    & linSpaceElem, &\n    & spaceElem, &\n    & quadTypeForSpace, &\n    & continuityTypeForSpace, &\n    & interpolTypeForSpace, &\n    & orderTime, &\n    & linTimeElem, &\n    & timeElem, &\n    & quadTypeForTime, &\n    & continuityTypeForTime, &\n    & interpolTypeForTime, &\n    & tvec)\n    CLASS(Mesh_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: orderSpace\n      !! integrand order in space\n    CLASS(ReferenceElement_), TARGET, INTENT(IN) :: linSpaceElem\n      !! linear space element\n    CLASS(ReferenceElement_), TARGET, INTENT(IN) :: spaceElem\n      !! space element\n    CHARACTER(LEN=*), INTENT(IN) :: quadTypeForSpace\n      !! quadrature type for space\n    CHARACTER(LEN=*), INTENT(IN) :: continuityTypeForSpace\n      !! continuity type of base in space\n    CHARACTER(LEN=*), INTENT(IN) :: interpolTypeForSpace\n      !! interpol type of base in space\n    INTEGER(I4B), INTENT(IN) :: orderTime\n      !! integrand order in time\n    TYPE(ReferenceLine_), INTENT(IN) :: linTimeElem\n      !! linear time element\n    TYPE(ReferenceLine_), INTENT(IN) :: timeElem\n      !! time element\n    CHARACTER(LEN=*), INTENT(IN) :: quadTypeForTime\n      !! quadrature type of base in time\n    CHARACTER(LEN=*), INTENT(IN) :: continuityTypeForTime\n      !! continuity type of base in time\n    CHARACTER(LEN=*), INTENT(IN) :: interpolTypeForTime\n      !! interpol type of base in time\n    REAL(DFP), INTENT(IN) :: tvec(:)\n  END SUBROUTINE mesh_initiateElemSD2\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"  MODULE SUBROUTINE mesh_initiateElemSD3(obj, &\n    & orderSpace,  &\n    & linSpaceElem, &\n    & spaceElem, &\n    & quadTypeForSpace, &\n    & continuityTypeForSpace, &\n    & interpolTypeForSpace, &\n    & orderTime, &\n    & linTimeElem, &\n    & timeElem, &\n    & quadTypeForTime, &\n    & continuityTypeForTime, &\n    & interpolTypeForTime )\n    CLASS(Mesh_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: orderSpace\n      !! integrand order in space\n    CLASS(ReferenceElement_), TARGET, INTENT(IN) :: linSpaceElem\n      !! linear space element\n    CLASS(ReferenceElement_), TARGET, INTENT(IN) :: spaceElem\n      !! space element\n    CHARACTER(LEN=*), INTENT(IN) :: quadTypeForSpace\n      !! quadrature type of base in space\n    CHARACTER(LEN=*), INTENT(IN) :: continuityTypeForSpace\n      !! continuity type of base in space\n    CHARACTER(LEN=*), INTENT(IN) :: interpolTypeForSpace\n      !! interpolation type of base in space\n    INTEGER(I4B), INTENT(IN) :: orderTime\n      !! integrand order in time\n    TYPE(ReferenceLine_), INTENT(IN) :: linTimeElem\n      !! linear time element\n    TYPE(ReferenceLine_), INTENT(IN) :: timeElem\n      !! time element\n    CHARACTER(LEN=*), INTENT(IN) :: quadTypeForTime\n      !! quadrature type of base in time\n    CHARACTER(LEN=*), INTENT(IN) :: continuityTypeForTime\n      !! continuity type of base in time\n    CHARACTER(LEN=*), INTENT(IN) :: interpolTypeForTime\n      !! interpolation type of base in time\n  END SUBROUTINE mesh_initiateElemSD3\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},16412:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>T,contentTitle:()=>c,default:()=>E,frontMatter:()=>s,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"FEMesh/InitiateElemSD","title":"InitiateElemSD","description":"This method is inherited from the AbstractMesh class.","source":"@site/docs/docs-api/FEMesh/InitiateElemSD.md","sourceDirName":"FEMesh","slug":"/FEMesh/InitiateElemSD","permalink":"/docs-api/FEMesh/InitiateElemSD","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEMesh/InitiateElemSD.md","tags":[],"version":"current","lastUpdatedAt":1746849372000,"frontMatter":{"title":"InitiateElemSD"},"sidebar":"tutorialSidebar","previous":{"title":"InitiateBoundaryData","permalink":"/docs-api/FEMesh/InitiateBoundaryData"},"next":{"title":"InitiateElementToElements","permalink":"/docs-api/FEMesh/InitiateElementToElements"}}');var a=t(23420),r=t(54213),o=t(85137);const s={title:"InitiateElemSD"},c=void 0,T={},p=[...o.toc];function l(e){const n={a:"a",admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.admonition,{title:"Inheritence",type:"tip",children:(0,a.jsxs)(n.p,{children:["This method is inherited from the ",(0,a.jsx)(n.a,{href:"/docs-api/AbstractMesh/AbstractMesh_",children:"AbstractMesh"})," class."]})}),"\n","\n",(0,a.jsx)(o.default,{})]})}function E(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},54213:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(36672);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);