"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[93603],{45561:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>h,contentTitle:()=>u,default:()=>f,frontMatter:()=>d,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"SteadyStokes221/Set","title":"Set","description":"Set the kernel.","source":"@site/docs/docs-api/SteadyStokes221/Set.md","sourceDirName":"SteadyStokes221","slug":"/SteadyStokes221/Set","permalink":"/docs-api/SteadyStokes221/Set","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes221/Set.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Run","permalink":"/docs-api/SteadyStokes221/Run"},"next":{"title":"SteadyStokes221Param","permalink":"/docs-api/SteadyStokes221/SetSteadyStokes221Param"}}');var t=a(23420),i=a(54213),o=a(36492),s=a(92492);function l(e){const n={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["This example tests and demonstrates the usage of ",(0,t.jsx)(n.code,{children:"Set()"})," method of ",(0,t.jsx)(n.a,{href:"/docs-api/SteadyStokes221/SteadyStokes221_",children:"SteadyStokes221"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["After we are done setting the properties of a kernel, we should call ",(0,t.jsx)(n.code,{children:"Set()"})," method."]}),"\n",(0,t.jsx)(n.li,{children:"The set method does a lot of work, for example depending upon the options provided by the user it allocates the field instances for matrices, vectors, material properties etc."}),"\n",(0,t.jsx)(n.li,{children:"The main computation starts only after calling the Set function."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  USE easifemMaterials\n  USE easifemKernels\n  USE SteadyStokes221_Class\n  IMPLICIT NONE\n"})}),"\n",(0,t.jsx)(n.p,{children:"Declare variables"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'  TYPE( SteadyStokes221_ ) :: obj\n  TYPE( ParameterList_ ) :: param\n  TYPE( DomainPointer_ ) :: domains(2)\n  CLASS( Domain_ ), POINTER :: dom => NULL()\n  CHARACTER( LEN = * ), PARAMETER :: domainFileNamePressure="./mesh_tri3.h5"\n  CHARACTER( LEN = * ), PARAMETER :: domainFileNameVelocity="./mesh_tri6.h5"\n  TYPE(String) :: filename(2)\n  TYPE( MeshSelection_ ) :: region\n  CLASS( DirichletBC_ ), POINTER :: dbc => NULL()\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Initiate an instance of ",(0,t.jsx)(n.a,{href:"/docs-api/ParameterList/ParameterList_",children:"ParameterList_"}),", param, this will be used to initiate several objects."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL FPL_INIT(); CALL param%Initiate()\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'  CALL SetSteadyStokes221Param( &\n    & param=param, &\n    & isConservativeForm=.TRUE., &\n    & gravity = [0.0_DFP, -9.8_DFP, 0.0_DFP], &\n    & domainFileForPressure = domainFileNamePressure, &\n    & domainFileForVelocity = domainFileNameVelocity, &\n    & engine="NATIVE_SERIAL", &\n    & CoordinateSystem=KERNEL_CARTESIAN, &\n    & maxIter = 100, &\n    & rtoleranceForPressure = REAL( 1.0E-6, DFP ), &\n    & rtoleranceForVelocity = REAL( 1.0E-6, DFP ), &\n    & atoleranceForPressure = REAL( 1.0E-6, DFP ), &\n    & atoleranceForVelocity = REAL( 1.0E-6, DFP ), &\n    & toleranceForSteadyState = REAL( 1.0E-6, DFP ), &\n    & tFluidMaterials=1, &\n    & tDirichletBCForPressure=1, &\n    & tDirichletBCForVelocity=3, &\n    & baseInterpolationForSpace="LagrangeInterpolation", &\n    & baseContinuityForSpace="H1", &\n    & quadratureTypeForSpace="GaussLegendre", &\n    & postProcessOpt=1)\n'})}),"\n",(0,t.jsx)(n.p,{children:"Set parameters for linear solver."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL SetLinSolverParam( &\n    & param=param, &\n    & solverName=LIS_GMRES,&\n    & preconditionOption=NO_PRECONDITION, &\n    & convergenceIn=convergenceInRes, &\n    & convergenceType=relativeConvergence, &\n    & maxIter=100, &\n    & relativeToRHS=.TRUE., &\n    & KrylovSubspaceSize=20, &\n    & rtol=REAL( 1.0E-10, DFP ), &\n    & atol=REAL( 1.0D-10, DFP ) )\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initiate the domain."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  filename = [String(domainFileNamePressure), &\n    & String(domainFileNameVelocity)]\n  CALL e%setQuietMode(.TRUE.)\n  CALL Initiate(domains=domains, filename=filename)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initiate kernel"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL e%setQuietMode(.FALSE.)\n  CALL obj%Initiate(param=param, domains=domains )\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Add fluid material to kernel. To do so, we first create an instance of ",(0,t.jsx)(n.a,{href:"/docs-api/MeshSelection/MeshSelection_",children:"MeshSelection_"}),".\nThen we add this instance to the kernel."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'  CALL e%setQuietMode(.TRUE.)\n  CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n  CALL region%Add( dim=obj%nsd, meshID=[1] )\n  CALL SetFluidMaterialParam( &\n    & param=param, &\n    & name="fluidMaterial", &\n    & massDensity=1000.0_DFP, &\n    & dynamicViscosity = 0.001_DFP, &\n    & stressStrainModel="NewtonianFluidModel" )\n  CALL SetNewtonianFluidModelParam( &\n    & param = param, &\n    & dynamicViscosity = 0.001_DFP )\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'  CALL e%setQuietMode(.FALSE.)\n  CALL obj%AddFluidMaterial( &\n    & materialNo=1, &\n    & materialName="fluidMaterial", &\n    & param=param, &\n    & region=region)\n  CALL region%Deallocate()\n'})}),"\n",(0,t.jsx)(n.p,{children:"AddDirichletBC, V1=0, Now we show how to add dirichlet boundary condition. To this end first we create an instance of [[MeshSelection_]] to select the region of the mesh. Then we define the dirichlet bonundary condition, and pass these two information to kernel."}),"\n",(0,t.jsx)(n.p,{children:"Set parameters for dirichlet boundary condition:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="ZeroV1", &\n    & idof=1, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE. )\n'})}),"\n",(0,t.jsx)(n.p,{children:"Select the mesh region:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"#define BOTTOM 1\n#define RIGHT 2\n#define TOP 3\n#define LEFT 4\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n  CALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM, RIGHT, LEFT] )\n  CALL region%Set()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add dirichlet boundary condition and the region to kernel:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%AddVelocityDirichletBC( &\n    & dbcNo=1, &\n    & param=param, &\n    & boundary=region )\n  dbc => obj%GetVelocityDirichletBCPointer( dbcNo=1 )\n  CALL dbc%Set( ConstantNodalValue=0.0_DFP )\n  dbc=>NULL()\n"})}),"\n",(0,t.jsx)(n.p,{children:"AddDirichletBC, V1=U, Set parameters for dirichlet boundary condition:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="UpstreamV1", &\n    & idof=1, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE. )\n'})}),"\n",(0,t.jsx)(n.p,{children:"Select the mesh region:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL region%Deallocate()\n  CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n  CALL region%Add( dim=obj%nsd-1, meshID=[TOP] )\n  CALL region%Set()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add dirichlet boundary condition and the region to kernel:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%AddVelocityDirichletBC( &\n    & dbcNo=2, &\n    & param=param, &\n    & boundary=region )\n  dbc => obj%GetVelocityDirichletBCPointer( dbcNo=2 )\n  CALL dbc%Set( ConstantNodalValue=0.1_DFP )\n  dbc=>NULL()\n  CALL region%Deallocate()\n"})}),"\n",(0,t.jsx)(n.p,{children:"AddDirichletBC, V2=0, Set parameters for dirichlet boundary condition:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="ZeroV2", &\n    & idof=2, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE. )\n'})}),"\n",(0,t.jsx)(n.p,{children:"Select the mesh region:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL region%Deallocate()\n  CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n  CALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM, RIGHT, TOP, LEFT] )\n  CALL region%Set()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add dirichlet boundary condition and the region to kernel:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%AddVelocityDirichletBC( &\n    & dbcNo=3, &\n    & param=param, &\n    & boundary=region )\n  dbc => obj%GetVelocityDirichletBCPointer( dbcNo=3 )\n  CALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\n  CALL region%Deallocate()\n"})}),"\n",(0,t.jsx)(n.p,{children:"AddDirichletBC, P=0, Set parameters for dirichlet boundary condition:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'CALL SetDirichletBCParam( &\n  & param=param, &\n  & name="ZeroP", &\n  & idof=1, &\n  & nodalValueType=Constant, &\n  & useFunction=.FALSE. )\n'})}),"\n",(0,t.jsx)(n.p,{children:"Select the mesh region:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"CALL region%Deallocate()\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\nCALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM] )\nCALL region%Set()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add dirichlet boundary condition and the region to kernel:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%AddPressureDirichletBC( dbcNo=1, param=param, &\n    & boundary=region )\n  dbc => obj%GetPressureDirichletBCPointer( dbcNo=1 )\n  CALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\n  CALL region%Deallocate()\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Now that we are done with the setup, we should call ",(0,t.jsx)(n.code,{children:"Set"})," method. In this method, the kernel checks the data, configuration, and intiates appropriate variables."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%Set()\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Let see the content of the kernel on the terminal screen by using ",(0,t.jsx)(n.code,{children:"Display"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:'  CALL obj%Display("")\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"CALL obj%Deallocate()\nCALL param%Deallocate(); CALL FPL_FINALIZE()\nEND PROGRAM main\n"})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}const d={},u="Set",h={},m=[{value:"Interface",id:"interface",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"set",children:"Set"})}),"\n",(0,t.jsx)(n.p,{children:"Set the kernel."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Once we are done setting up the finite element model for the kernel, we should call this subroutine."}),"\n",(0,t.jsx)(n.li,{children:"Only after calling this routine we should proceed to the main computation"}),"\n",(0,t.jsx)(n.li,{children:"After initiating the kernel, we have all the information to construct the state of the kernel"}),"\n",(0,t.jsx)(n.li,{children:"This routine checks all the options."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n","\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(s.A,{value:"interface",label:"\u0700 Interface",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE Set(obj)\n    CLASS(SteadyStokes221_), INTENT(INOUT) :: obj\n  END SUBROUTINE Set\nEND INTERFACE\n"})})}),(0,t.jsx)(s.A,{value:"example",label:"\ufe0f\u0700 See example",children:(0,t.jsx)(c,{})}),(0,t.jsx)(s.A,{value:"close",label:"\u21a2 "})]})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},92492:(e,n,a)=>{a.d(n,{A:()=>o});a(36672);var r=a(28923);const t={tabItem:"tabItem_VSPN"};var i=a(23420);function o(e){let{children:n,hidden:a,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,o),hidden:a,children:n})}},36492:(e,n,a)=>{a.d(n,{A:()=>A});var r=a(36672),t=a(28923),i=a(19929),o=a(85291),s=a(5581),l=a(80034),c=a(12715),d=a(62741);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:a}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:a,attributes:r,default:t}}=e;return{value:n,label:a,attributes:r,default:t}}))}(a);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function m(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:a}=e;const t=(0,o.W6)(),i=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,l.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,i=h(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[c,u]=p({queryString:a,groupId:t}),[f,L]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,i]=(0,d.Dv)(a);return[t,(0,r.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:t}),g=(()=>{const e=c??f;return m({value:e,tabValues:i})?e:null})();(0,s.A)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),L(e)}),[u,L,i]),tabValues:i}}var L=a(32111);const g={tabList:"tabList_csSQ",tabItem:"tabItem_Bcmo"};var S=a(23420);function j(e){let{className:n,block:a,selectedValue:r,selectValue:o,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,a=l.indexOf(n),t=s[a].value;t!==r&&(c(n),o(t))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;n=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;n=l[a]??l[l.length-1];break}}n?.focus()};return(0,S.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":a},n),children:s.map((e=>{let{value:n,label:a,attributes:i}=e;return(0,S.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...i,className:(0,t.A)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":r===n}),children:a??n},n)}))})}function b(e){let{lazy:n,children:a,selectedValue:i}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,S.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function x(e){const n=f(e);return(0,S.jsxs)("div",{className:(0,t.A)("tabs-container",g.tabList),children:[(0,S.jsx)(j,{...n,...e}),(0,S.jsx)(b,{...n,...e})]})}function A(e){const n=(0,L.A)();return(0,S.jsx)(x,{...e,children:u(e.children)},String(n))}},54213:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var r=a(36672);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);