"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[75141],{98370:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"AbstractMesh/Initiate","title":"Initiate","description":"Initiate an instance of Mesh.","source":"@site/docs/docs-api/AbstractMesh/Initiate.md","sourceDirName":"AbstractMesh","slug":"/AbstractMesh/Initiate","permalink":"/docs-api/AbstractMesh/Initiate","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractMesh/Initiate.md","tags":[],"version":"current","lastUpdatedAt":1746669288000,"sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"BoundaryFacetData","permalink":"/docs-api/AbstractMesh/BoundaryFacetData_"},"next":{"title":"Display","permalink":"/docs-api/AbstractMesh/Display"}}');var a=i(23420),t=i(54213);const r={sidebar_position:7},l="Initiate",c={},o=[];function h(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"initiate",children:"Initiate"})}),"\n",(0,a.jsx)(n.p,{children:"Initiate an instance of Mesh."}),"\n",(0,a.jsx)(n.h1,{id:"interface",children:"Interface"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE obj_Initiate(obj, hdf5, group)\n    CLASS(Mesh_), INTENT(INOUT) :: obj\n    !! mesh object\n    TYPE(HDF5File_), INTENT(INOUT) :: hdf5\n    !! Mesh file in hdf5 file format\n    CHARACTER(*), INTENT(IN) :: group\n    !! location in HDF5 file\n  END SUBROUTINE obj_Initiate\nEND INTERFACE\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},84787:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>j,default:()=>g,frontMatter:()=>x,metadata:()=>s,toc:()=>E});const s=JSON.parse('{"id":"FEMesh/Initiate","title":"Initiate","description":"This method is inherited from the AbstractMesh class.","source":"@site/docs/docs-api/FEMesh/Initiate.md","sourceDirName":"FEMesh","slug":"/FEMesh/Initiate","permalink":"/docs-api/FEMesh/Initiate","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEMesh/Initiate.md","tags":[],"version":"current","lastUpdatedAt":1746849372000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Initiate"},"sidebar":"tutorialSidebar","previous":{"title":"Structure","permalink":"/docs-api/FEMesh/FEMesh_"},"next":{"title":"Display","permalink":"/docs-api/FEMesh/Display"}}');var a=i(23420),t=i(54213),r=i(98370),l=i(68913);const c='PROGRAM main\nUSE MSHFile_Class, ONLY: MSHFile_\nUSE HDF5File_Class\nUSE GlobalData\n\nIMPLICIT NONE\n\nTYPE(MSHFile_) :: mshFile\nTYPE(HDF5File_) :: hdf5file\nCHARACTER(*), PARAMETER :: filename = "./meshdata/small_tri3_mesh"\n\nCALL mshFile%Initiate(filename=filename//".msh", STATUS="OLD", ACTION="READ")\n\nCALL mshFile%OPEN()\n\nCALL mshFile%READ()\n\nCALL hdf5file%Initiate(filename//".h5", MODE="NEW")\n\nCALL hdf5file%OPEN()\n\nCALL mshFile%Export(hdf5=hdf5file, group="")\n\nCALL mshFile%DEALLOCATE()\nCALL hdf5file%DEALLOCATE()\n\nEND PROGRAM main\n';function o(e){const n={p:"p",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This example shows how to convert a mesh from Gmsh format to HDF5 format which is necessary to initiate the FEMesh object."}),"\n","\n",(0,a.jsx)(l.A,{language:"fortran",children:c})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}function d(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["This example shows how to initiate an instance of ",(0,a.jsx)(n.code,{children:"Mesh_"})," by reading data\nfrom mesh file, which is in ",(0,a.jsx)(n.code,{children:"HDF5File_"})," format."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  IMPLICIT NONE\n  TYPE( FEMesh_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n  CHARACTER( LEN = *), PARAMETER :: filename= &\n    & "../../Mesh/examples/meshdata/small_mesh_two_region.h5"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Initiate and open the mesh file which is in ",(0,a.jsx)(n.code,{children:"HDF5File_"})," format."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'CALL meshfile%Initiate( FileName=filename, MODE="READ" )\n'})}),"\n",(0,a.jsx)(n.p,{children:"Open the mesh file"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"CALL meshfile%Open()\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Initiate an instance of ",(0,a.jsx)(n.code,{children:"Mesh_"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"CALL obj%Initiate(hdf5=meshfile, dim=2, entities=[1,2] )\n"})}),"\n",(0,a.jsx)(n.p,{children:"Display the content of mesh."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-comment",children:'CALL obj%Display("")\n'})}),"\n",(0,a.jsx)(n.p,{children:"cleaning up."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%Deallocate()\n  CALL meshfile%Deallocate()\nEND PROGRAM main\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}function p(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["This example shows how to initiate an instance of ",(0,a.jsx)(n.code,{children:"Mesh_"})," by reading data\nfrom mesh file, which is in ",(0,a.jsx)(n.code,{children:"HDF5File_"})," format."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  IMPLICIT NONE\n  TYPE( FEMesh_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n  CHARACTER( LEN = *), PARAMETER :: filename= &\n    & "../../Mesh/examples/meshdata/small_mesh_3d_two_region.h5"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Initiate and open the mesh file which is in ",(0,a.jsx)(n.code,{children:"HDF5File_"})," format."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'CALL meshfile%Initiate( FileName=filename, MODE="READ" )\n'})}),"\n",(0,a.jsx)(n.p,{children:"Open the mesh file"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"CALL meshfile%Open()\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Initiate an instance of ",(0,a.jsx)(n.code,{children:"Mesh_"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"CALL obj%Initiate(hdf5=meshfile, dim=3 )\n"})}),"\n",(0,a.jsx)(n.p,{children:"Display the content of mesh."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'CALL obj%Display("")\n'})}),"\n",(0,a.jsx)(n.p,{children:"cleaning up."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%Deallocate()\n  CALL meshfile%Deallocate()\nEND PROGRAM main\n"})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}const x={sidebar_position:3,title:"Initiate"},j=void 0,u={},E=[...r.toc,{value:"Examples",id:"examples",level:2},{value:"Converting mesh from Gmsh to easifem format",id:"converting-mesh-from-gmsh-to-easifem-format",level:3},{value:"Reading surface mesh in 2D",id:"reading-surface-mesh-in-2d",level:3},{value:"Reading curve mesh in 2D",id:"reading-curve-mesh-in-2d",level:3}];function A(e){const n={a:"a",admonition:"admonition",h2:"h2",h3:"h3",p:"p",...(0,t.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.admonition,{title:"Inheritence",type:"tip",children:(0,a.jsxs)(n.p,{children:["This method is inherited from the ",(0,a.jsx)(n.a,{href:"/docs-api/AbstractMesh/AbstractMesh_",children:"AbstractMesh"})," class."]})}),"\n","\n",(0,a.jsx)(r.default,{}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.h3,{id:"converting-mesh-from-gmsh-to-easifem-format",children:"Converting mesh from Gmsh to easifem format"}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)("summary",{children:"Click here to see example"}),(0,a.jsx)("div",{children:(0,a.jsx)(h,{})})]}),"\n",(0,a.jsx)(n.h3,{id:"reading-surface-mesh-in-2d",children:"Reading surface mesh in 2D"}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)("summary",{children:"Examples"}),(0,a.jsx)("div",{children:(0,a.jsx)(m,{})})]}),"\n",(0,a.jsx)(n.h3,{id:"reading-curve-mesh-in-2d",children:"Reading curve mesh in 2D"}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)("summary",{children:"Examples"}),(0,a.jsx)("div",{children:(0,a.jsx)(f,{})})]})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(A,{...e})}):A(e)}}}]);