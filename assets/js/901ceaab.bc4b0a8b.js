"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[57239],{3235:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>N,frontMatter:()=>s,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"MatrixField/GetColumn","title":"GetColumn","description":"Calling example:","source":"@site/docs/docs-api/MatrixField/GetColumn.md","sourceDirName":"MatrixField","slug":"/MatrixField/GetColumn","permalink":"/docs-api/MatrixField/GetColumn","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/MatrixField/GetColumn.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Export","permalink":"/docs-api/MatrixField/Export"},"next":{"title":"GetDiagonal","permalink":"/docs-api/MatrixField/GetDiagonal"}}');var r=l(23420),o=l(54213),a=l(36492),t=l(92492);const s={},c="GetColumn",d={},u=[{value:"Interface 1",id:"interface-1",level:2},{value:"Interface 2",id:"interface-2",level:2},{value:"Interface 3",id:"interface-3",level:2},{value:"Interface 4",id:"interface-4",level:2},{value:"Interface 5",id:"interface-5",level:2},{value:"Interface 6",id:"interface-6",level:2},{value:"Interface 7",id:"interface-7",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getcolumn",children:"GetColumn"})}),"\n",(0,r.jsx)(n.p,{children:"Calling example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"GetColumn(obj, globalnode, idof, value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"GetColumn(obj, globalnode, ivar, idof, value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"GetColumn(obj, globalnode, ivar, spacecompo, timecompo, value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"GetColumn(obj, globalnode, ivar, spacecompo, timecompo(:), value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"GetColumn(obj, globalnode, ivar, spacecompo(:), timecompo, value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"GetColumn(obj, globalnode(:), ivar, spacecompo, timecompo(:), value(:), nodefieldval, scale, addcontribution"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"GetColumn(obj, globalnode(:), ivar, spacecompo(:), timecompo, value(:), nodefieldval, scale, addcontribution"})}),"\n"]}),"\n","\n",(0,r.jsx)(n.h2,{id:"interface-1",children:"Interface 1"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(t.A,{value:"interface",label:"\u0700 See Interface",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn1(obj, globalNode, idof, VALUE, nodeFieldVal, &\n    & scale, addContribution)\n    CLASS(MatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: idof\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn1\nEND INTERFACE\n"})}),(0,r.jsxs)(n.p,{children:["This routine returns the column of a sparse matrix. The column index is\ncalculated using the ",(0,r.jsx)(n.code,{children:"globalNode"})," and ",(0,r.jsx)(n.code,{children:"idof"}),"."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"globalNode"})," is the global node number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"idof"})," is the degree of freedom number"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"value"})," is present then the vector is returned inside the rank 1 vector"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"nodeFieldVal"})," is present then the column is returned inside the node\nfield"]})]}),(0,r.jsx)(t.A,{value:"close",label:"\u21a2",default:!0})]}),"\n",(0,r.jsx)(n.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(t.A,{value:"interface",label:"\u0700 See Interface",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn2(obj, globalNode, ivar, idof, &\n      & VALUE, nodeFieldVal, scale, addContribution)\n    CLASS(MatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: idof\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn2\nEND INTERFACE\n"})}),(0,r.jsxs)(n.p,{children:["This routine returns the column of a sparse matrix. The column index is\ncalculated using the ",(0,r.jsx)(n.code,{children:"globalNode"}),", ",(0,r.jsx)(n.code,{children:"ivar"}),", ",(0,r.jsx)(n.code,{children:"idof"}),"."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"globalNode"})," is the global node number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ivar"})," is the physical variable number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"idof"})," is the degree of freedom number of the physical variable"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"value"})," is present then the vector is returned inside the rank 1 vector"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"nodeFieldVal"})," is present then the column is returned inside the node\nfield"]})]}),(0,r.jsx)(t.A,{value:"close",label:"\u21a2",default:!0})]}),"\n",(0,r.jsx)(n.h2,{id:"interface-3",children:"Interface 3"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(t.A,{value:"interface",label:"\u0700 See Interface",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn3(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    CLASS(MatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo\n    INTEGER(I4B), INTENT(IN) :: timecompo\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn3\nEND INTERFACE\n"})}),(0,r.jsxs)(n.p,{children:["This routine returns the column of a sparse matrix. The column index is\ncalculated using the ",(0,r.jsx)(n.code,{children:"globalNode"}),", ",(0,r.jsx)(n.code,{children:"ivar"}),", ",(0,r.jsx)(n.code,{children:"spacecompo"}),", ",(0,r.jsx)(n.code,{children:"timecompo"}),"."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"globalNode"})," is the global node number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ivar"})," is the physical variable number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"spacecompo"})," is the spatial component of the physical variable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timecompo"})," is the temporal component of the physical variable"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"value"})," is present then the vector is returned inside the rank 1 vector"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"nodeFieldVal"})," is present then the column is returned inside the node\nfield"]})]}),(0,r.jsx)(t.A,{value:"close",label:"\u21a2",default:!0})]}),"\n",(0,r.jsx)(n.h2,{id:"interface-4",children:"Interface 4"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(t.A,{value:"interface",label:"\u0700 See Interface",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn4(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    CLASS(MatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo\n    INTEGER(I4B), INTENT(IN) :: timecompo(:)\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn4\nEND INTERFACE\n"})}),(0,r.jsxs)(n.p,{children:["This routine returns the column of a sparse matrix. The column index is\ncalculated using the ",(0,r.jsx)(n.code,{children:"globalNode"}),", ",(0,r.jsx)(n.code,{children:"ivar"}),", ",(0,r.jsx)(n.code,{children:"spacecompo"}),", ",(0,r.jsx)(n.code,{children:"timecompo"}),"."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"globalNode"})," is the global node number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ivar"})," is the physical variable number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"spacecompo"})," is the spatial component of the physical variable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timecompo"})," is the temporal component of the physical variable"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"value"})," is present then the vector is returned inside the rank 1 vector"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"nodeFieldVal"})," is present then the column is returned inside the node\nfield"]})]}),(0,r.jsx)(t.A,{value:"close",label:"\u21a2",default:!0})]}),"\n",(0,r.jsx)(n.h2,{id:"interface-5",children:"Interface 5"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(t.A,{value:"interface",label:"\u0700 See Interface",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn5(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    CLASS(MatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo(:)\n    INTEGER(I4B), INTENT(IN) :: timecompo\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn5\nEND INTERFACE\n"})}),(0,r.jsxs)(n.p,{children:["This routine returns the column of a sparse matrix. The column index is\ncalculated using the ",(0,r.jsx)(n.code,{children:"globalNode"}),", ",(0,r.jsx)(n.code,{children:"ivar"}),", ",(0,r.jsx)(n.code,{children:"spacecompo"}),", ",(0,r.jsx)(n.code,{children:"timecompo"}),"."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"globalNode"})," is the global node number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ivar"})," is the physical variable number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"spacecompo"})," is the spatial component of the physical variable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timecompo"})," is the temporal component of the physical variable"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"value"})," is present then the vector is returned inside the rank 1 vector"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"nodeFieldVal"})," is present then the column is returned inside the node\nfield"]})]}),(0,r.jsx)(t.A,{value:"close",label:"\u21a2",default:!0})]}),"\n",(0,r.jsx)(n.h2,{id:"interface-6",children:"Interface 6"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(t.A,{value:"interface",label:"\u0700 See Interface",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn6(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    CLASS(MatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo\n    INTEGER(I4B), INTENT(IN) :: timecompo(:)\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn6\nEND INTERFACE\n"})}),(0,r.jsxs)(n.p,{children:["This routine returns the column of a sparse matrix. The column index is\ncalculated using the ",(0,r.jsx)(n.code,{children:"globalNode"}),", ",(0,r.jsx)(n.code,{children:"ivar"}),", ",(0,r.jsx)(n.code,{children:"spacecompo"}),", ",(0,r.jsx)(n.code,{children:"timecompo"}),"."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"globalNode"})," is the global node number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ivar"})," is the physical variable number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"spacecompo"})," is the spatial component of the physical variable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timecompo"})," is the temporal component of the physical variable"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"value"})," is present then the vector is returned inside the rank 1 vector"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"nodeFieldVal"})," is present then the column is returned inside the node\nfield"]})]}),(0,r.jsx)(t.A,{value:"close",label:"\u21a2",default:!0})]}),"\n",(0,r.jsx)(n.h2,{id:"interface-7",children:"Interface 7"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(t.A,{value:"interface",label:"\u0700 See Interface",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  SUBROUTINE getColumn7(obj, globalNode, ivar, spacecompo, &\n    & timecompo, VALUE, nodeFieldVal, scale, addContribution)\n    CLASS(MatrixField_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\n    INTEGER(I4B), INTENT(IN) :: ivar\n    INTEGER(I4B), INTENT(IN) :: spacecompo(:)\n    INTEGER(I4B), INTENT(IN) :: timecompo\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\n  END SUBROUTINE getColumn7\nEND INTERFACE\n"})}),(0,r.jsxs)(n.p,{children:["This routine returns the column of a sparse matrix. The column index is\ncalculated using the ",(0,r.jsx)(n.code,{children:"globalNode"}),", ",(0,r.jsx)(n.code,{children:"ivar"}),", ",(0,r.jsx)(n.code,{children:"spacecompo"}),", ",(0,r.jsx)(n.code,{children:"timecompo"}),"."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"globalNode"})," is the global node number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ivar"})," is the physical variable number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"spacecompo"})," is the spatial component of the physical variable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timecompo"})," is the temporal component of the physical variable"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"value"})," is present then the vector is returned inside the rank 1 vector"]}),(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"nodeFieldVal"})," is present then the column is returned inside the node\nfield"]})]}),(0,r.jsx)(t.A,{value:"close",label:"\u21a2",default:!0})]})]})}function N(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},92492:(e,n,l)=>{l.d(n,{A:()=>a});l(36672);var i=l(28923);const r={tabItem:"tabItem_VSPN"};var o=l(23420);function a(e){let{children:n,hidden:l,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,a),hidden:l,children:n})}},36492:(e,n,l)=>{l.d(n,{A:()=>f});var i=l(36672),r=l(28923),o=l(19929),a=l(85291),t=l(5581),s=l(80034),c=l(12715),d=l(62741);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:l}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:l,attributes:i,default:r}}=e;return{value:n,label:l,attributes:i,default:r}}))}(l);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,l])}function N(e){let{value:n,tabValues:l}=e;return l.some((e=>e.value===n))}function I(e){let{queryString:n=!1,groupId:l}=e;const r=(0,a.W6)(),o=function(e){let{queryString:n=!1,groupId:l}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return l??null}({queryString:n,groupId:l});return[(0,s.aZ)(o),(0,i.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function T(e){const{defaultValue:n,queryString:l=!1,groupId:r}=e,o=h(e),[a,s]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!N({value:n,tabValues:l}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${l.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=l.find((e=>e.default))??l[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:o}))),[c,u]=I({queryString:l,groupId:r}),[T,p]=function(e){let{groupId:n}=e;const l=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,d.Dv)(l);return[r,(0,i.useCallback)((e=>{l&&o.set(e)}),[l,o])]}({groupId:r}),m=(()=>{const e=c??T;return N({value:e,tabValues:o})?e:null})();(0,t.A)((()=>{m&&s(m)}),[m]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!N({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),p(e)}),[u,p,o]),tabValues:o}}var p=l(32111);const m={tabList:"tabList_csSQ",tabItem:"tabItem_Bcmo"};var x=l(23420);function j(e){let{className:n,block:l,selectedValue:i,selectValue:a,tabValues:t}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const n=e.currentTarget,l=s.indexOf(n),r=t[l].value;r!==i&&(c(n),a(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const l=s.indexOf(e.currentTarget)+1;n=s[l]??s[0];break}case"ArrowLeft":{const l=s.indexOf(e.currentTarget)-1;n=s[l]??s[s.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":l},n),children:t.map((e=>{let{value:n,label:l,attributes:o}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>{s.push(e)},onKeyDown:u,onClick:d,...o,className:(0,r.A)("tabs__item",m.tabItem,o?.className,{"tabs__item--active":i===n}),children:l??n},n)}))})}function E(e){let{lazy:n,children:l,selectedValue:o}=e;const a=(Array.isArray(l)?l:[l]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===o));return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function b(e){const n=T(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",m.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(E,{...n,...e})]})}function f(e){const n=(0,p.A)();return(0,x.jsx)(b,{...e,children:u(e.children)},String(n))}},54213:(e,n,l)=>{l.d(n,{R:()=>a,x:()=>t});var i=l(36672);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);