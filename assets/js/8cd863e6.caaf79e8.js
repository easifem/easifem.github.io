"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[96596],{1493:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"Lapack95/Lapack95_test_2","title":"Lapack95 example 2","description":"This example shows the use of SYTRF method.","source":"@site/docs/docs-api/Lapack95/Lapack95_test_2.md","sourceDirName":"Lapack95","slug":"/Lapack95/Lapack95_test_2","permalink":"/docs-api/Lapack95/Lapack95_test_2","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/Lapack95/Lapack95_test_2.md","tags":[{"inline":true,"label":"Examples","permalink":"/docs-api/tags/examples"},{"inline":true,"label":"Lapack95","permalink":"/docs-api/tags/lapack-95"},{"inline":true,"label":"matrix","permalink":"/docs-api/tags/matrix"}],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{"title":"Lapack95 example 2","date":"2022-12-18T00:00:00.000Z","update":"2022-12-18T00:00:00.000Z","status":"none","docs":"none","extpkgs":"none","category":["Examples","Lapack95","Matrix"],"tags":["Examples","Lapack95","matrix"]},"sidebar":"tutorialSidebar","previous":{"title":"Lapack95 example 16","permalink":"/docs-api/Lapack95/Lapack95_test_16"},"next":{"title":"Lapack95 example 3","permalink":"/docs-api/Lapack95/Lapack95_test_3"}}');var s=t(23420),i=t(54213);const l={title:"Lapack95 example 2",date:new Date("2022-12-18T00:00:00.000Z"),update:new Date("2022-12-18T00:00:00.000Z"),status:"none",docs:"none",extpkgs:"none",category:["Examples","Lapack95","Matrix"],tags:["Examples","Lapack95","matrix"]},r=void 0,c={},p=[];function o(a){const e={code:"code",p:"p",pre:"pre",...(0,i.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:["This example shows the use of ",(0,s.jsx)(e.code,{children:"SYTRF"})," method."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-fortran",children:"program main\nuse easifemBase\nimplicit none\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-fortran",metastring:'title="declare variables"',children:"real(dfp), allocatable :: mat(:, :), mat0(:,:)\ninteger(i4b), allocatable :: ipiv(:)\ninteger(i4b) :: info\ncharacter(len=1) :: uplo\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-fortran",metastring:'title="make matrix"',children:"allocate(mat(3,3), mat0(3,3), ipiv(3))\nmat0(1, :) = [2, -1, 3]\nmat0(2, :) = [0, 2, 0]\nmat0(3, :) = [0, 0, 1]\n"})}),"\n",(0,s.jsx)(e.p,{children:"Test without extra arguments."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-fortran",metastring:'title="test-1"',children:'uplo = "U"\nmat = mat0\nCALL SYTRF(A=mat, UPLO=uplo)\nCALL Display(mat, "mat = ")\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-txt",metastring:'title="results"',children:"            mat =\n----------------------------\n-5.00000   1.00000   1.50000\n 0.00000   1.50000  -0.50000\n 0.00000   0.00000   2.00000\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-fortran",metastring:'title="test-2"',children:'mat = mat0\nCALL SYTRF(A=mat, UPLO=uplo, IPIV=ipiv, info=info)\nCALL Display( mat, "mat = " )\nCALL Display( ipiv, "ipiv = " )\nCALL Display( info, "info = " )\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-txt",metastring:'title="results"',children:"mat =\n----------------------------\n-5.00000   1.00000   1.50000\n 0.00000   1.50000  -0.50000\n 0.00000   0.00000   2.00000\nipiv =\n-------\n   1\n   2\n   1\ninfo = 0\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-fortran",metastring:'title="test-3"',children:'call reallocate(mat0, 4,4)\ncall reallocate(ipiv, 4)\n\nmat0 = RESHAPE( &\n    & [9.56982809,  3.30527253,  7.30953613,  8.18680201, 3.30527253,   &\n    & 8.38597454, 10.68872278, 10.01187194, 7.30953613, &\n    & 10.68872278, 17.30316194, 14.31931041, 8.18680201, &\n    & 10.01187194, 14.31931041, 14.12868642], &\n    & [4,4] )\n\nmat0 = TRANSPOSE(mat0)\n\nmat = mat0\nCALL SYTRF(A=mat, UPLO=uplo, IPIV=ipiv, info=info)\nCALL Display( mat0, "mat0 = " )\nCALL Display( mat, "mat = " )\nCALL Display( ipiv, "ipiv = " )\nCALL Display( info, "info = " )\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-fortran",metastring:'title="cleanup"',children:"end program main\n"})})]})}function m(a={}){const{wrapper:e}={...(0,i.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(o,{...a})}):o(a)}},54213:(a,e,t)=>{t.d(e,{R:()=>l,x:()=>r});var n=t(36672);const s={},i=n.createContext(s);function l(a){const e=n.useContext(i);return n.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function r(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(s):a.components||s:l(a.components),n.createElement(i.Provider,{value:e},a.children)}}}]);