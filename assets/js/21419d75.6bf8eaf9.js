"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[77974],{11068:(n,e,i)=>{i.d(e,{Ay:()=>l,RM:()=>a});var o=i(23420),t=i(54213),r=i(68913);const m='! Import from toml\n! we define userfunction in the config file.\n!\n! Initiate an instance of `DirichletBC_` by importing config from a Toml file.\n!\n! In the toml file we define details of [UserFunction](/docs-api/UserFunction).\n!\n! ```toml\n! [bc2]\n! name = "DirichletBC"\n! idof = 1\n! nodalValueType = "Constant"\n! isUserFunction = true\n!\n! [bc2.function]\n! name = "func"\n! returnType = "Scalar"\n! argType = "Constant"\n! value = 10.0\n!\n! # boundary\n! [bc2.boundary]\n! isSelectionByMeshID = true\n!\n! [bc2.boundary.meshID]\n! surface = [1, 2]\n! ```\n\nPROGRAM main\nUSE easifemBase\nUSE easifemClasses\nIMPLICIT NONE\n\nTYPE(DirichletBC_) :: obj\nTYPE(Domain_) :: dom\nTYPE(HDF5File_) :: domainfile\nCHARACTER(*), PARAMETER :: domainfilename = "./mesh3D.h5"\nCHARACTER(*), PARAMETER :: tomlFileName = "./DirichletBC.toml"\nINTEGER(I4B) :: bottom = 1, top = 2, left = 3, right = 4,  &\n  & front = 5, behind = 6\nINTEGER(I4B), ALLOCATABLE :: nodeNum(:)\nREAL(DFP), ALLOCATABLE :: nodalValue(:, :)\n\nCALL FPL_Init()\nCALL domainfile%Initiate(filename=domainfilename, mode="READ")\nCALL domainfile%OPEN()\nCALL dom%Initiate(domainfile, group="")\nCALL obj%ImportFromToml(filename=tomlFileName, dom=dom, tomlName="bc2")\n\nCALL obj%Get(nodeNum=nodeNum, nodalValue=nodalValue)\n\nCALL Display(nodeNum, "nodeNum", advance="NO")\nCALL Display(nodalValue, "nodalValue", advance="YES")\nCALL display(SIZE(nodeNum), "size = ")\n\nCALL domainfile%DEALLOCATE()\nCALL dom%DEALLOCATE()\nCALL FPL_Finalize()\nEND PROGRAM main\n',a=[];function s(n){return(0,o.jsx)(r.A,{language:"fortran",children:m})}function l(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(s,{...n})}):s()}},61525:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"programming-fem/dirichletBC/dbc_toml_userfunc_const","title":"Import from toml-file (user function)","description":"","source":"@site/docs/guides/programming-fem/dirichletBC/dbc_toml_userfunc_const.md","sourceDirName":"programming-fem/dirichletBC","slug":"/programming-fem/dirichletBC/dbc_toml_userfunc_const","permalink":"/guides/programming-fem/dirichletBC/dbc_toml_userfunc_const","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/guides/programming-fem/dirichletBC/dbc_toml_userfunc_const.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Import from toml-file","permalink":"/guides/programming-fem/dirichletBC/dbc_toml_const"},"next":{"title":"Import from toml-file (spatial user function)","permalink":"/guides/programming-fem/dirichletBC/dbc_toml_userfunc_space"}}');var t=i(23420),r=i(54213),m=i(11068);const a={sidebar_position:5},s="Import from toml-file (user function)",l={},c=[...m.RM];function d(n){const e={h1:"h1",header:"header",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"import-from-toml-file-user-function",children:"Import from toml-file (user function)"})}),"\n","\n",(0,t.jsx)(m.Ay,{})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}}}]);