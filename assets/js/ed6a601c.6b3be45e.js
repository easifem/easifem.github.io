"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[35704,70333],{79385:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"AbstractBC/GetMeshID","title":"GetMeshID","description":"Get mesh-ids of boundary condition.","source":"@site/docs/docs-api/AbstractBC/GetMeshID.md","sourceDirName":"AbstractBC","slug":"/AbstractBC/GetMeshID","permalink":"/docs-api/AbstractBC/GetMeshID","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractBC/GetMeshID.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetDOFNo","permalink":"/docs-api/AbstractBC/GetDOFNo"},"next":{"title":"GetParam","permalink":"/docs-api/AbstractBC/GetParam"}}');var i=s(23420),r=s(54213);const a={},c="GetMeshID",o={},d=[{value:"Interface",id:"interface",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"getmeshid",children:"GetMeshID"})}),"\n",(0,i.jsx)(t.p,{children:"Get mesh-ids of boundary condition."}),"\n",(0,i.jsx)("span",{class:"badge badge--secondary",children:" @GetMethods "}),"\n",(0,i.jsxs)(t.p,{children:["This method calls ",(0,i.jsx)(t.a,{href:"/docs-api/MeshSelection/GetMeshID",children:"GetMeshID"})," method on ",(0,i.jsx)(t.code,{children:"boundary"}),", which is an instance of ",(0,i.jsx)(t.a,{href:"/docs-api/MeshSelection/MeshSelection_",children:"MeshSelection_"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION GetMeshID(obj, dim) RESULT(Ans)\n    CLASS(AbstractBC_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: dim\n    INTEGER(I4B), ALLOCATABLE :: ans(:)\n  END FUNCTION GetMeshID\nEND INTERFACE\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},39326:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"DirichletBC/GetMeshID","title":"GetMeshID","description":"","source":"@site/docs/docs-api/DirichletBC/GetMeshID.md","sourceDirName":"DirichletBC","slug":"/DirichletBC/GetMeshID","permalink":"/docs-api/DirichletBC/GetMeshID","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/DirichletBC/GetMeshID.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GetDirichletBCPointer","permalink":"/docs-api/DirichletBC/GetDirichletBCPointer"},"next":{"title":"Import","permalink":"/docs-api/DirichletBC/Import"}}');var i=s(23420),r=s(54213),a=s(79385);const c={},o="GetMeshID",d={},h=[...a.toc];function l(e){const t={h1:"h1",header:"header",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"getmeshid",children:"GetMeshID"})}),"\n","\n",(0,i.jsx)(a.default,{})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},54213:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>c});var n=s(36672);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);