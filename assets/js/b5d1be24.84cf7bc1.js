"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[63584],{9345:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>E,contentTitle:()=>c,default:()=>R,frontMatter:()=>l,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"MovingMesh/Initiate","title":"Initiate","description":"This routine initiates the kernel.","source":"@site/docs/docs-api/MovingMesh/Initiate.md","sourceDirName":"MovingMesh","slug":"/MovingMesh/Initiate","permalink":"/docs-api/MovingMesh/Initiate","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/MovingMesh/Initiate.md","tags":[],"version":"current","lastUpdatedAt":1724304782000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CheckEssentialParam","permalink":"/docs-api/MovingMesh/CheckEssentialParam"},"next":{"title":"SetMovingMeshParam","permalink":"/docs-api/MovingMesh/SetMovingMeshParam"}}');var i=a(23420),r=a(54213);function s(e){const n={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This example shows how to initiate the kernel."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  USE easifemMaterials\n  USE easifemKernels\n  USE MovingMesh_Class\n  IMPLICIT NONE\n  TYPE( MovingMesh_ ) :: obj\n  TYPE( HDF5File_ ) :: domainFile\n  TYPE( Domain_ ) :: dom\n  TYPE( ParameterList_ ) :: param\n  CHARACTER( * ), PARAMETER :: engine="NATIVE_SERIAL"\n  INTEGER( I4B ), PARAMETER :: CoordinateSystem = KERNEL_CARTESIAN\n  INTEGER( I4B ), PARAMETER :: nsd = 2\n  INTEGER( I4B ), PARAMETER :: nnt = 1\n  REAL( DFP ), PARAMETER :: dt = 0.0_DFP\n  REAL( DFP ), PARAMETER :: startTime = 0.0_DFP\n  REAL( DFP ), PARAMETER :: endTime = 0.0_DFP\n  REAL( DFP ), PARAMETER :: currentTime = 0.0_DFP\n  INTEGER( I4B ), PARAMETER :: currentTimeStep = 1\n  INTEGER( I4B ), PARAMETER :: totalTimeStep = 1\n  REAL( DFP ), PARAMETER :: gravity(3)=[0.0, -9.8, 0.0]\n  CHARACTER( * ), PARAMETER :: domainFileName="./mesh.h5"\n  INTEGER( I4B ), PARAMETER :: maxIter = 100\n  INTEGER( I4B ), PARAMETER :: tMaterials= 1\n  INTEGER( I4B ), PARAMETER :: tDirichletBC = 2\n  INTEGER( I4B ), PARAMETER :: tNeumannBC = 0\n  CHARACTER(*), PARAMETER :: baseInterpolationForSpace="LagrangeInterpolation"\n  CHARACTER(*), PARAMETER :: baseContinuityForSpace="H1"\n  CHARACTER(*), PARAMETER :: quadratureTypeForSpace="GaussLegendre"\n  INTEGER( I4B ), PARAMETER :: postProcessOpt = 1\n  INTEGER(I4B), PARAMETER :: ls_solverName = LIS_GMRES\n  INTEGER(I4B), PARAMETER :: ls_preconditionOption= NO_PRECONDITION\n  INTEGER(I4B), PARAMETER :: ls_convergenceIn = convergenceInRes\n  INTEGER(I4B), PARAMETER :: ls_convergenceType = relativeConvergence\n  INTEGER( I4B ), PARAMETER :: ls_maxIter = 100\n  LOGICAL( LGT ), PARAMETER :: ls_relativeToRHS = .TRUE.\n  INTEGER( I4B ), PARAMETER :: ls_KrylovSubspaceSize=20\n  REAL( DFP ) , PARAMETER :: ls_rtol=1.0E-10\n  REAL( DFP ) , PARAMETER :: ls_atol=1.0E-10\n'})}),"\n",(0,i.jsx)(n.p,{children:"Set parameters for kernel."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"  CALL FPL_INIT(); CALL param%Initiate()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set parameters for the kernel."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"  CALL SetMovingMeshParam( &\n    & param=param, &\n    & engine=engine, &\n    & coordinateSystem=coordinateSystem, &\n    & nsd=nsd, &\n    & nnt=nnt, &\n    & dt=dt, &\n    & startTime=startTime, &\n    & endTime=endTime, &\n    & currentTime=currentTime, &\n    & currentTimeStep=currentTimeStep, &\n    & totalTimeStep=totalTimeStep, &\n    & gravity=gravity, &\n    & domainFile=domainFileName, &\n    !!& materialInterfaces=materialInterfaces, &\n    & maxIter=maxIter, &\n    & tMaterials=tMaterials, &\n    & tDirichletBC=tDirichletBC, &\n    & tNeumannBC=tNeumannBC, &\n    & baseInterpolationForSpace=baseInterpolationForSpace, &\n    & baseContinuityForSpace=baseContinuityForSpace, &\n    & quadratureTypeForSpace=quadratureTypeForSpace, &\n    & postProcessOpt=postProcessOpt)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Setting parameters for linear solver."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"  CALL SetLinSolverParam( &\n    & param=param, &\n    & solverName=ls_solverName,&\n    & preconditionOption=ls_preconditionOption, &\n    & convergenceIn=ls_convergenceIn, &\n    & convergenceType=ls_convergenceType, &\n    & maxIter=ls_maxIter, &\n    & relativeToRHS=ls_relativeToRHS, &\n    & KrylovSubspaceSize=ls_KrylovSubspaceSize, &\n    & rtol=ls_rtol, &\n    & atol=ls_atol )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initiate domain by reading data from a domain file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'  CALL domainFile%Initiate( filename=domainFileName, MODE="READ" )\n  CALL domainFile%Open()\n  CALL dom%Initiate( domainFile, "" )\n'})}),"\n",(0,i.jsx)(n.p,{children:"Initiate the kernel."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'  CALL obj%Initiate(param=param, dom=dom )\n  CALL obj%Display("")\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%Deallocate()\n  CALL dom%Deallocate()\n  CALL domainFile%Deallocate()\n  CALL param%Deallocate(); CALL FPL_FINALIZE()\nEND PROGRAM main\n"})})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}const l={},c="Initiate",E={},m=[{value:"Interface",id:"interface",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"initiate",children:"Initiate"})}),"\n",(0,i.jsx)(n.p,{children:"This routine initiates the kernel."}),"\n",(0,i.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE SSF_Initiate(obj, param, dom, domains)\n    CLASS(MovingMesh_), INTENT(INOUT) :: obj\n    TYPE(ParameterList_), INTENT(IN) :: param\n    CLASS(Domain_), OPTIONAL, TARGET, INTENT(INOUT) :: dom\n    TYPE(DomainPointer_), OPTIONAL, TARGET, INTENT(INOUT) :: domains(:)\n  END SUBROUTINE SSF_Initiate\nEND INTERFACE\n"})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n","\n",(0,i.jsx)(o,{})]})}function R(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},54213:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var t=a(36672);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);