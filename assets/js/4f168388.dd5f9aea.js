"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[55287],{65261:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>L,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"LinearStaticCDR/LinearStaticCDR_test_8","title":"LinearStaticCDR_test_8","description":"This example shows how to use set method in LinearStaticCDR_ kernel.","source":"@site/docs/docs-api/LinearStaticCDR/LinearStaticCDR_test_8.md","sourceDirName":"LinearStaticCDR","slug":"/LinearStaticCDR/LinearStaticCDR_test_8","permalink":"/docs-api/LinearStaticCDR/LinearStaticCDR_test_8","draft":false,"unlisted":false,"editUrl":"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/LinearStaticCDR/LinearStaticCDR_test_8.md","tags":[],"version":"current","lastUpdatedAt":1736823324000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LinearStaticCDR_test_7","permalink":"/docs-api/LinearStaticCDR/LinearStaticCDR_test_7"},"next":{"title":"LinearStaticCDR_test_9","permalink":"/docs-api/LinearStaticCDR/LinearStaticCDR_test_9"}}');var i=a(23420),r=a(54213);const o={},s=void 0,c={},l=[];function d(e){const n={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This example shows how to use set method in ",(0,i.jsx)(n.code,{children:"LinearStaticCDR_"})," kernel."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n    USE easifemBase\n    USE easifemClasses\n    USE easifemMaterials\n    USE easifemKernels\n    USE LinearStaticCDR_Class\n    IMPLICIT NONE\n    TYPE(LinearStaticCDR_) :: obj\n    TYPE(ParameterList_) :: param\n    TYPE(Domain_) :: dom\n    CHARACTER( LEN = * ), PARAMETER :: domainFileName="./mesh.h5"\n    TYPE( HDF5File_ ) :: domainFile\n    TYPE( MeshSelection_ ) :: region\n    INTEGER(I4B), PARAMETER :: tMaterials = 2, tDirichletBC=2, &\n      & solverName = LIS_GMRES, preconditionOption=LEFT_PRECONDITION, &\n      & convergenceIn = convergenceInRes, &\n      & convergenceType=relativeConvergence, &\n      & maxIter = 100, &\n      & KrylovSubspaceSize=20\n    CLASS( DirichletBC_ ), POINTER :: dbc\n\n!!  Initiate an instance of [[ParameterList_]]\n\n    CALL FPL_INIT(); CALL param%Initiate()\n\n!!  Set the parameter for [[LinearStaticCDR_]]\n\n    CALL SetLinearStaticCDRParam( param=param, &\n        & engine="NATIVE_SERIAL", &\n        & isConservative=.FALSE., &\n        & coordinateSystem=KERNEL_2D, &\n        & tMaterials=tMaterials, &\n        & tDirichletBC=tDirichletBC, &\n        & domainFile=domainFileName, &\n        & baseContinuity="H1", &\n        & baseInterpolation="LagrangeInterpolation", &\n        & quadratureType="GaussLegendre" )\n\n!!  Set the parameter for [[LinSolver_]].\n\n    CALL SetLinSolverParam( &\n      & param=param, &\n      & solverName=solverName,&\n      & preconditionOption=preconditionOption, &\n      & convergenceIn=convergenceIn, &\n      & convergenceType=convergenceType, &\n      & maxIter=maxIter, &\n      & relativeToRHS=.TRUE., &\n      & KrylovSubspaceSize=KrylovSubspaceSize, &\n      & rtol=1.0D-10, &\n      & atol=1.0D-10 )\n\n!! Initiates computation domain.\n\n    CALL domainFile%Initiate(filename=domainFileName, mode="READ")\n    CALL domainFile%Open()\n    CALL dom%Initiate( domainFile, \'\' )\n    CALL domainFile%Deallocate()\n\n!!  Initiate an instace of [[LinearStaticCDR_]] kernel\n\n    CALL obj%Initiate( param=param, dom=dom )\n\n!! "addMaterial 1" Add another material and domain region in the [[LinearStaticCDR_]] kernel.\n\n    CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n    CALL region%Add( dim=2, meshID=[1] )\n    CALL SetSolidMaterialParam( param=param, name="SolidMaterial", &\n      & massDensity=1.0_DFP, diffusivity=1.0_DFP )\n    CALL obj%AddMaterial( materialNo=1, materialName="SolidMaterial",  &\n      & param=param, region=region )\n    CALL region%Deallocate()\n\n!! "addMaterial 2" Add another material and domain region in the [[LinearStaticCDR_]] kernel.\n\n    CALL region%Initiate( isSelectionByMeshID=.TRUE. )\n    CALL region%Add( dim=2, meshID=[2] )\n    CALL SetSolidMaterialParam( param=param, name="SolidMaterial", &\n      & massDensity=1.0_DFP, diffusivity=1.0_DFP )\n    CALL obj%AddMaterial( materialNo=2, materialName="SolidMaterial",  &\n      & param=param, region=region )\n    CALL region%Deallocate()\n\n!! "SetDirichletBC 1"\n!! Now we set the Dirichlet boundary condition. First we select the mesh\n!! boundary, then we prescribe the boundary condition.\n\n    CALL SetDirichletBCParam(param=param, name="ZeroDBC", idof=1, &\n      & nodalValueType=Constant, useFunction=.FALSE. )\n    CALL region%Initiate( isSelectionByMeshID=.TRUE.)\n    CALL region%Add( dim=1, meshID=[3] )\n    CALL obj%AddDirichletBC( dbcNo=1, boundary=region, param=param )\n    CALL region%Deallocate()\n    dbc => obj%GetDirichletBCPointer( dbcNo=1 )\n    CALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\n\n!! Let us repeat the procedure mentioned above to prescribe another boundary condition.\n\n    CALL SetDirichletBCParam(param=param, name="NonZeroDBC", idof=1, &\n      & nodalValueType=Constant, useFunction=.FALSE. )\n    CALL region%Initiate( isSelectionByMeshID=.TRUE.)\n    CALL region%Add( dim=1, meshID=[6] )\n    CALL obj%AddDirichletBC( dbcNo=2, boundary=region, param=param )\n    CALL region%Deallocate()\n    dbc => obj%GetDirichletBCPointer( dbcNo=2 )\n    CALL dbc%Set( ConstantNodalValue=1.0_DFP ); dbc=>NULL()\n\n!! Now that we are done setting the kernels properties, we will call `Set` method.\n\n    CALL obj%set()\n\n!! Display the content of kernel.\n\n    CALL obj%Display( "LinearStaticCDR :: ")\n\n    CALL obj%Deallocate( )\n    CALL dom%Deallocate()\n    CALL param%Deallocate()\n    CALL FPL_FINALIZE()\nEND PROGRAM main\n'})})]})}function L(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},54213:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var t=a(36672);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);