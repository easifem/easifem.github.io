"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-sort-utility-arg-sortd-8-a-abd"],{

/***/ "./docs/docs-api/SortUtility/ArgSort.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ ArgSort_contentTitle),\n  \"default\": () => (/* binding */ ArgSort_MDXContent),\n  frontMatter: () => (/* binding */ ArgSort_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_sort_utility_arg_sort_md_d8a_namespaceObject),\n  toc: () => (/* binding */ ArgSort_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-sort-utility-arg-sort-md-d8a.json\nconst site_docs_docs_api_sort_utility_arg_sort_md_d8a_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"SortUtility/ArgSort\",\"title\":\"ArgSort\",\"description\":\"ArgSort function performs an indirect heap sort on an array.\",\"source\":\"@site/docs/docs-api/SortUtility/ArgSort.md\",\"sourceDirName\":\"SortUtility\",\"slug\":\"/SortUtility/ArgSort\",\"permalink\":\"/docs-api/SortUtility/ArgSort\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SortUtility/ArgSort.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"ArgQuickSort\",\"permalink\":\"/docs-api/SortUtility/ArgQuickSort\"},\"next\":{\"title\":\"HeapSort\",\"permalink\":\"/docs-api/SortUtility/HeapSort\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/SortUtility/_ArgSort_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.p, {\n      children: \"In this example we test ArgSort.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"{8}\",\n        children: \"PROGRAM main\\nUSE easifemBase\\n  REAL(REAL64) :: avec(10)\\n  INTEGER( I4B ) :: arg(10)\\n  CALL RANDOM_NUMBER(avec)\\n  avec = avec * 10\\n  CALL Display( avec, msg=\\\"unsorted array\\\", advance=\\\"NO\\\", full=.true. )\\n  arg = ArgSort(avec, \\\"QuickSort\\\" )\\n  CALL Display( arg, msg=\\\"arg\\\", advance=\\\"NO\\\", full=.true. )\\n  CALL Display( avec(arg), msg=\\\"QuickSort array\\\", full=.true. )\\n  CALL blanklines()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See results\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            metastring: \"title=\\\"results\\\"\",\n            children: \"unsorted array,  arg,  QuickSort array\\n--------------,  ---,  ---------------\\n   7.30120    ,   8 ,      0.87296    \\n   8.24763    ,   9 ,      1.15776    \\n   4.60741    ,   6 ,      3.04890    \\n   9.83271    ,   7 ,      3.84105    \\n   6.10712    ,   3 ,      4.60741    \\n   3.04890    ,   5 ,      6.10712    \\n   3.84105    ,  10 ,      6.86604    \\n   0.87296    ,   1 ,      7.30120    \\n   1.15776    ,   2 ,      8.24763    \\n   6.86604    ,   4 ,      9.83271\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL RANDOM_NUMBER(avec)\\navec = avec * 10\\nCALL Display( avec, msg=\\\"unsorted array\\\", advance=\\\"NO\\\", full=.true. )\\narg = ArgSort(avec, \\\"HeapSort\\\" )\\nCALL Display( arg, msg=\\\"arg\\\", advance=\\\"NO\\\", full=.true. )\\nCALL Display( avec(arg), msg=\\\"HeapSort array\\\", full=.true. )\\nCALL blanklines()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See results\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            metastring: \"title=\\\"results\\\"\",\n            children: \"unsorted array,  arg,  HeapSort array\\n--------------,  ---,  --------------\\n   8.48137    ,   6 ,     0.37175    \\n   1.67719    ,   8 ,     1.36706    \\n   6.57749    ,   2 ,     1.67719    \\n   3.51411    ,  10 ,     1.75177    \\n   2.07800    ,   5 ,     2.07800    \\n   0.37175    ,   4 ,     3.51411    \\n   7.49388    ,   3 ,     6.57749    \\n   1.36706    ,   9 ,     6.62953    \\n   6.62953    ,   7 ,     7.49388    \\n   1.75177    ,   1 ,     8.48137\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL RANDOM_NUMBER(avec)\\navec = avec * 10\\nCALL Display( avec, msg=\\\"unsorted array\\\", advance=\\\"NO\\\", full=.true. )\\narg = ArgSort(avec, \\\"IntroSort\\\" )\\nCALL Display( arg, msg=\\\"arg\\\", advance=\\\"NO\\\", full=.true. )\\nCALL Display( avec(arg), msg=\\\"IntroSort array\\\", full=.true. )\\nCALL blanklines()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See results\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            metastring: \"title=\\\"results\\\"\",\n            children: \"unsorted array,  arg,  IntroSort array\\n--------------,  ---,  ---------------\\n   8.14589    ,   8 ,      1.43727    \\n   2.06649    ,   2 ,      2.06649    \\n   5.54984    ,   5 ,      3.97367    \\n   8.93775    ,  10 ,      5.31886    \\n   3.97367    ,   3 ,      5.54984    \\n   9.01701    ,   7 ,      5.73978    \\n   5.73978    ,   9 ,      7.48543    \\n   1.43727    ,   1 ,      8.14589    \\n   7.48543    ,   4 ,      8.93775    \\n   5.31886    ,   6 ,      9.01701\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"END PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n\n;// ./docs/docs-api/SortUtility/ArgSort.md\n\n\nconst ArgSort_frontMatter = {};\nconst ArgSort_contentTitle = 'ArgSort';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst ArgSort_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc, {\n  \"value\": \"Examples\",\n  \"id\": \"examples\",\n  \"level\": 2\n}];\nfunction ArgSort_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    input: \"input\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"argsort\",\n        children: \"ArgSort\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"ArgSort function performs an indirect heap sort on an array.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"It returns the integer array which can be used for obtaining the sorted array.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This function also takes the name of an algorithm as an argument.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Calling example:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ans = ArgSort(x, name)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"MODULE PURE FUNCTION ArgSort(x, name) RESULT(ans)\\n  INTEGER(Int8|Int16|Int32|Int64), REAL(Real32|Real64), INTENT(IN) :: x(:)\\n  CHARACTER(*), OPTIONAL, INTENT(IN) :: name\\n  INTEGER(I4B) :: ans(SIZE(x))\\nEND FUNCTION ArgSort\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"x\"\n            }), \" is a vector of reals or integers\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"Real64\"\n            }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"Real32\"\n            }), \" are supported\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"Int8\"\n            }), \" to \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"Int64\"\n            }), \" are supported\"]\n          }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"The result is always a vector of integer(I4B).\"\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"name\"\n            }), \" is optional, and represents the name of the sorting algorithm. Following algorithms are supported\", \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n              className: \"contains-task-list\",\n              children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n                className: \"task-list-item\",\n                children: [(0,jsx_runtime.jsx)(_components.input, {\n                  type: \"checkbox\",\n                  checked: true,\n                  disabled: true\n                }), \" \", \"HEAPSORT\"]\n              }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n                className: \"task-list-item\",\n                children: [(0,jsx_runtime.jsx)(_components.input, {\n                  type: \"checkbox\",\n                  checked: true,\n                  disabled: true\n                }), \" \", \"INTROSORT, default\"]\n              }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n                className: \"task-list-item\",\n                children: [(0,jsx_runtime.jsx)(_components.input, {\n                  type: \"checkbox\",\n                  checked: true,\n                  disabled: true\n                }), \" \", \"INTERSECTION\"]\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"examples\",\n      children: \"Examples\"\n    })]\n  });\n}\nfunction ArgSort_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(ArgSort_createMdxContent, {\n      ...props\n    })\n  }) : ArgSort_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/SortUtility/ArgSort.md\n");

/***/ })

}]);