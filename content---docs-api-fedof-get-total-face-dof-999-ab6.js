"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-fedof-get-total-face-dof-999-ab6"],{

/***/ "./docs/docs-api/FEDOF/GetTotalFaceDOF.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ GetTotalFaceDOF_contentTitle),\n  \"default\": () => (/* binding */ GetTotalFaceDOF_MDXContent),\n  frontMatter: () => (/* binding */ GetTotalFaceDOF_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_fedof_get_total_face_dof_md_999_namespaceObject),\n  toc: () => (/* binding */ GetTotalFaceDOF_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-fedof-get-total-face-dof-md-999.json\nconst site_docs_docs_api_fedof_get_total_face_dof_md_999_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"FEDOF/GetTotalFaceDOF\",\"title\":\"GetTotalFaceDOF\",\"description\":\"The GetTotalFaceDOF generic method in the FEDOF_Class provides the total number of degrees of freedom (DOF) associated with a face in a finite element mesh.\",\"source\":\"@site/docs/docs-api/FEDOF/GetTotalFaceDOF.md\",\"sourceDirName\":\"FEDOF\",\"slug\":\"/FEDOF/GetTotalFaceDOF\",\"permalink\":\"/docs-api/FEDOF/GetTotalFaceDOF\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEDOF/GetTotalFaceDOF.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetTotalEdgeDOF\",\"permalink\":\"/docs-api/FEDOF/GetTotalEdgeDOF\"},\"next\":{\"title\":\"GetTotalVertexDOF\",\"permalink\":\"/docs-api/FEDOF/GetTotalVertexDOF\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js + 27 modules\nvar CodeBlock = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js\");\n;// ./node_modules/raw-loader/dist/cjs.js!./docs/docs-api/FEDOF/examples/_GetTotalFaceDOF_test_1.F90\n/* harmony default export */ const _GetTotalFaceDOF_test_1 = (\"!> author: Vikas Sharma, Ph. D.\\n! date: 2025-06-07\\n! summary:  Testing GetTotalFaceDOF method of FEDOF class\\n! H1 Heirarchical Second Order Triangular Mesh\\n\\nPROGRAM main\\nUSE FEDOF_Class\\nUSE FEDomain_Class\\nUSE AbstractMesh_Class\\nUSE HDF5File_Class\\nUSE Display_Method\\nUSE GlobalData\\nUSE Test_Method\\nUSE ExceptionHandler_Class, ONLY: e, EXCEPTION_INFORMATION\\nUSE AppendUtility\\nUSE ArangeUtility\\nUSE ReallocateUtility\\n\\nIMPLICIT NONE\\n\\nCHARACTER(*), PARAMETER :: &\\n  filename = \\\"../../FEMesh/examples/meshdata/small_tri3_mesh.h5\\\", &\\n  baseContinuity = \\\"H1\\\", &\\n  baseInterpolation = \\\"Heirarchical\\\", &\\n  testname = baseContinuity//\\\" \\\"//baseInterpolation//\\\" GetTotalFaceDOF test\\\"\\n\\nTYPE(FEDOF_) :: fedof\\nTYPE(FEDomain_) :: dom\\nCLASS(AbstractMesh_), POINTER :: meshptr => NULL()\\nTYPE(HDF5File_) :: meshfile\\nINTEGER(I4B) :: order, totalVertexNodes, totalFaces\\nLOGICAL(LGT) :: isok\\n\\nCALL e%SetQuietMode(EXCEPTION_INFORMATION, .TRUE.)\\n\\nCALL meshfile%Initiate(filename, mode=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL dom%Initiate(meshfile, '')\\nmeshptr => dom%GetMeshPointer()\\ntotalVertexNodes = meshptr%GetTotalVertexNodes()\\ntotalFaces = meshptr%GetTotalFaces()\\n\\nCALL test1\\nCALL test2\\nCALL test3\\n\\nCALL dom%DEALLOCATE()\\nCALL meshfile%DEALLOCATE()\\n\\nCONTAINS\\n\\n!----------------------------------------------------------------------------\\n!                                                                      test1\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test1\\n\\n  INTEGER(I4B) :: tsize, found, want\\n  INTEGER(I4B), ALLOCATABLE :: con(:)\\n\\n  order = 1\\n  CALL fedof%Initiate(baseContinuity=baseContinuity, &\\n                      baseInterpolation=baseInterpolation, &\\n                      order=order, mesh=meshptr)\\n\\n  found = fedof%GetTotalFaceDOF(globalFace=1, islocal=.TRUE.)\\n  want = 0\\n\\n  CALL IS(found, want, testname//\\\" (order= \\\"//ToString(order)//\\\"): \\\")\\n\\n  found = fedof%GetTotalFaceDOF(globalElement=1, islocal=.TRUE., &\\n                                localFaceNumber=1)\\n\\n  CALL IS(found, want, testname//\\\" interface 2 (order= \\\"//ToString(order)//\\\"): \\\")\\n\\nEND SUBROUTINE test1\\n\\n!----------------------------------------------------------------------------\\n!                                                                      test2\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test2\\n  INTEGER(I4B) :: tsize, found, want\\n\\n  order = 2\\n  CALL fedof%Initiate(baseContinuity=baseContinuity, &\\n                      baseInterpolation=baseInterpolation, &\\n                      order=order, mesh=meshptr)\\n\\n  found = fedof%GetTotalFaceDOF(globalFace=1, islocal=.TRUE.)\\n  want = 1\\n\\n  CALL IS(found, want, testname//\\\" (order= \\\"//ToString(order)//\\\"): \\\")\\n\\n  found = fedof%GetTotalFaceDOF(globalElement=1, islocal=.TRUE., &\\n                                localFaceNumber=1)\\n\\n  CALL IS(found, want, testname//\\\" (order= \\\"//ToString(order)//\\\"): \\\")\\n\\nEND SUBROUTINE test2\\n\\n!----------------------------------------------------------------------------\\n!                                                                     test3\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test3\\n  INTEGER(I4B) :: tsize, found, want\\n\\n  order = 3\\n  CALL fedof%Initiate(baseContinuity=baseContinuity, &\\n                      baseInterpolation=baseInterpolation, &\\n                      order=order, mesh=meshptr)\\n\\n  found = fedof%GetTotalFaceDOF(globalFace=1, islocal=.TRUE.)\\n  want = 2\\n\\n  CALL IS(found, want, testname//\\\" (order= \\\"//ToString(order)//\\\"): \\\")\\n\\n  found = fedof%GetTotalFaceDOF(globalElement=1, islocal=.TRUE., &\\n                                localFaceNumber=1)\\n\\n  CALL IS(found, want, testname//\\\" (order= \\\"//ToString(order)//\\\"): \\\")\\n\\nEND SUBROUTINE test3\\n\\n!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\\n\\nEND PROGRAM main\\n\");\n;// ./docs/docs-api/FEDOF/examples/_GetTotalFaceDOF_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  return (0,jsx_runtime.jsx)(CodeBlock[\"default\"], {\n    language: \"fortran\",\n    children: _GetTotalFaceDOF_test_1\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/FEDOF/GetTotalFaceDOF.md\n\n\nconst GetTotalFaceDOF_frontMatter = {};\nconst GetTotalFaceDOF_contentTitle = 'GetTotalFaceDOF';\n\nconst assets = {\n\n};\n\n\n\n\nconst GetTotalFaceDOF_toc = [{\n  \"value\": \"Interfaces\",\n  \"id\": \"interfaces\",\n  \"level\": 2\n}, {\n  \"value\": \"Description\",\n  \"id\": \"description\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 1: GetTotalFaceDOF1\",\n  \"id\": \"interface-1-gettotalfacedof1\",\n  \"level\": 2\n}, {\n  \"value\": \"Parameters\",\n  \"id\": \"parameters\",\n  \"level\": 3\n}, {\n  \"value\": \"Implementation Details\",\n  \"id\": \"implementation-details\",\n  \"level\": 3\n}, {\n  \"value\": \"Interface 2: GetTotalFaceDOF2\",\n  \"id\": \"interface-2-gettotalfacedof2\",\n  \"level\": 2\n}, {\n  \"value\": \"Parameters\",\n  \"id\": \"parameters-1\",\n  \"level\": 3\n}, {\n  \"value\": \"Implementation Details\",\n  \"id\": \"implementation-details-1\",\n  \"level\": 3\n}, {\n  \"value\": \"Usage Example\",\n  \"id\": \"usage-example\",\n  \"level\": 2\n}, {\n  \"value\": \"Related Methods\",\n  \"id\": \"related-methods\",\n  \"level\": 2\n}, {\n  \"value\": \"Example 1\",\n  \"id\": \"example-1\",\n  \"level\": 2\n}, ...toc];\nfunction GetTotalFaceDOF_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"gettotalfacedof\",\n        children: \"GetTotalFaceDOF\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"GetTotalFaceDOF\"\n      }), \" generic method in the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"FEDOF_Class\"\n      }), \" provides the total number of degrees of freedom (DOF) associated with a face in a finite element mesh.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interfaces\",\n      children: \"Interfaces\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"From the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"FEDOF_Class.F90\"\n      }), \" file, the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"GetTotalFaceDOF\"\n      }), \" generic method has the following interfaces:\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROCEDURE, PASS(obj) :: GetTotalFaceDOF1 => GetTotalFaceDOF1\\n!! Get total face dof\\nPROCEDURE, PASS(obj) :: GetTotalFaceDOF2 => GetTotalFaceDOF2\\n!! Get total face dof from global element and local face number\\nGENERIC, PUBLIC :: GetTotalFaceDOF => GetTotalFaceDOF1, GetTotalFaceDOF2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The specific interfaces are defined as:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"MODULE FUNCTION GetTotalFaceDOF1(obj, globalFace, islocal) RESULT(ans)\\n  CLASS(FEDOF_), INTENT(IN) :: obj\\n  INTEGER(I4B), INTENT(IN) :: globalFace\\n  LOGICAL(LGT), INTENT(IN), OPTIONAL :: islocal\\n  INTEGER(I4B) :: ans\\nEND FUNCTION GetTotalFaceDOF1\\n\\nMODULE FUNCTION GetTotalFaceDOF2(obj, globalElement, localFaceNumber, &\\n                                 islocal) RESULT(ans)\\n  CLASS(FEDOF_), INTENT(IN) :: obj\\n  !! DOF object\\n  INTEGER(I4B), INTENT(IN) :: globalElement\\n  !! global or local element number\\n  INTEGER(I4B), INTENT(IN) :: localFaceNumber\\n  !! local face number in globall element\\n  LOGICAL(LGT), INTENT(IN), OPTIONAL :: islocal\\n  !! if true then globalElement is local element\\n  INTEGER(I4B) :: ans\\n  !! Total number of degree of freedom on face\\nEND FUNCTION GetTotalFaceDOF2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"description\",\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"GetTotalFaceDOF\"\n      }), \" generic method provides two implementations to retrieve the total face DOF count:\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetTotalFaceDOF1\"\n        }), \" - Gets total DOF count directly using a global face number\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetTotalFaceDOF2\"\n        }), \" - Gets total DOF count using a global element number and local face number within that element\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1-gettotalfacedof1\",\n      children: \"Interface 1: GetTotalFaceDOF1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"parameters\",\n      children: \"Parameters\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"CLASS(FEDOF_)\"\n        }), \", FEDOF object instance\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalFace\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", global face number\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"islocal\"\n        }), \" - Optional Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"LOGICAL(LGT)\"\n        }), \", if true, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalFace\"\n        }), \" is treated as a local face number\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"ans\"\n        }), \" - Output, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", total number of DOFs on the specified face\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"implementation-details\",\n      children: \"Implementation Details\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The implementation uses the internal face index array structure to calculate the total DOF count:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ans = obj%faceIA(globalface + 1) - obj%faceIA(globalface)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This efficiently computes the number of DOFs by finding the difference between consecutive indices in the compressed sparse row format.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2-gettotalfacedof2\",\n      children: \"Interface 2: GetTotalFaceDOF2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"parameters-1\",\n      children: \"Parameters\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"CLASS(FEDOF_)\"\n        }), \", DOF object\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalElement\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", global or local element number\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"localFaceNumber\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", local face number in global element\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"islocal\"\n        }), \" - Optional Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"LOGICAL(LGT)\"\n        }), \", if true, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalElement\"\n        }), \" is treated as a local element\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"ans\"\n        }), \" - Output, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", total number of degrees of freedom on the specified face\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"implementation-details-1\",\n      children: \"Implementation Details\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This implementation first converts the element and local face information to a global face number, then calls the first implementation:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTEGER(I4B) :: globalFace\\nglobalFace = obj%mesh%GetGlobalFaceNumber(globalElement=globalElement, &\\n                             islocal=islocal, localFaceNumber=localFaceNumber)\\nans = obj%GetTotalFaceDOF(globalFace=globalFace, islocal=islocal)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"usage-example\",\n      children: \"Usage Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"! Example to get total DOFs on a face\\nINTEGER(I4B) :: totalDOFs\\nTYPE(FEDOF_) :: myDOF\\n\\n! Method 1: Using global face number\\ntotalDOFs = myDOF%GetTotalFaceDOF(globalFace=3)\\n\\n! Method 2: Using element and local face number\\ntotalDOFs = myDOF%GetTotalFaceDOF(globalElement=7, localFaceNumber=2)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"related-methods\",\n      children: \"Related Methods\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetFaceDOF\"\n        }), \" - Retrieves the actual DOF indices for a face\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetTotalEdgeDOF\"\n        }), \" - Similar function but for element edges\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetTotalDOF\"\n        }), \" - Gets total DOF count for an entire element or the entire mesh\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetTotalVertexDOF\"\n        }), \" - Gets total DOF count for vertices\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"These methods are essential for traversing and accessing degrees of freedom in different components of the mesh hierarchy (vertices, edges, faces, cells).\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-1\",\n      children: \"Example 1\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(MDXContent, {})]\n  });\n}\nfunction GetTotalFaceDOF_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(GetTotalFaceDOF_createMdxContent, {\n      ...props\n    })\n  }) : GetTotalFaceDOF_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/FEDOF/GetTotalFaceDOF.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);