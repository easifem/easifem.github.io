"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-arpack-sseup-da-80-48a"],{

/***/ "./docs/docs-api/ARPACK/SSEUPD.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_arpack_sseupd_md_a80_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-arpack-sseupd-md-a80.json\nconst site_docs_docs_api_arpack_sseupd_md_a80_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"ARPACK/SSEUPD\",\"title\":\"SSEUPD\",\"description\":\"This subroutine returns the converged approximations to eigenvalues of Az = lambdaB*z.\",\"source\":\"@site/docs/docs-api/ARPACK/SSEUPD.md\",\"sourceDirName\":\"ARPACK\",\"slug\":\"/ARPACK/SSEUPD\",\"permalink\":\"/docs-api/ARPACK/SSEUPD\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/ARPACK/SSEUPD.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"SSAUPD\",\"permalink\":\"/docs-api/ARPACK/SSAUPD\"},\"next\":{\"title\":\"SymLargestEigenval\",\"permalink\":\"/docs-api/ARPACK/SymLargestEigenval\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/ARPACK/SSEUPD.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'SSEUPD';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Usage\",\n  \"id\": \"usage\",\n  \"level\": 2\n}, {\n  \"value\": \"RVEC\",\n  \"id\": \"rvec\",\n  \"level\": 2\n}, {\n  \"value\": \"HOWMNY\",\n  \"id\": \"howmny\",\n  \"level\": 2\n}, {\n  \"value\": \"SELECT\",\n  \"id\": \"select\",\n  \"level\": 2\n}, {\n  \"value\": \"D\",\n  \"id\": \"d\",\n  \"level\": 2\n}, {\n  \"value\": \"Z\",\n  \"id\": \"z\",\n  \"level\": 2\n}, {\n  \"value\": \"LDZ\",\n  \"id\": \"ldz\",\n  \"level\": 2\n}, {\n  \"value\": \"SIGMA\",\n  \"id\": \"sigma\",\n  \"level\": 2\n}, {\n  \"value\": \"Other args\",\n  \"id\": \"other-args\",\n  \"level\": 2\n}, {\n  \"value\": \"WORKL\",\n  \"id\": \"workl\",\n  \"level\": 2\n}, {\n  \"value\": \"INFO\",\n  \"id\": \"info\",\n  \"level\": 2\n}, {\n  \"value\": \"Remarks\",\n  \"id\": \"remarks\",\n  \"level\": 2\n}, {\n  \"value\": \"Remark-1\",\n  \"id\": \"remark-1\",\n  \"level\": 3\n}, {\n  \"value\": \"Remark-2\",\n  \"id\": \"remark-2\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    li: \"li\",\n    mdxAdmonitionTitle: \"mdxAdmonitionTitle\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"sseupd\",\n        children: \"SSEUPD\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"This subroutine returns the converged approximations to eigenvalues of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"A*z = lambda*B*z\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Optionally, it can also return:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"the corresponding approximate eigenvectors,\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"an orthonormal (Lanczos) basis for the associated approximate invariant subspace\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Both.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      title: \"There is negligible additional cost to obtain eigenvectors.\",\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"An orthonormal (Lanczos) basis is always computed. There is an additional storage cost of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"n*nev\"\n        }), \" if both are requested (in this case a separate array Z must be supplied).\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"These quantities are obtained from the Lanczos factorization computed by \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/ARPACK/SSAUPD\",\n        children: \"SSAUPD\"\n      }), \" for the linear operator \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"OP\"\n      }), \" prescribed by the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"MODE\"\n      }), \" selection, see \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/ARPACK/SSAUPD#iparam7\",\n        children: \"IPARAM(7)\"\n      }), \" in SSAUPD documentation. Therefore, \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SSAUPD\"\n      }), \" must be called before this routine is called. These approximate eigenvalues and vectors are commonly called \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Ritz values\"\n      }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Ritz vectors\"\n      }), \" respectively. They are referred to as such in the comments that follow.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The computed orthonormal basis for the invariant subspace corresponding to these Ritz values is referred to as a Lanczos basis.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"See documentation in the header of the subroutine SSAUPD for a definition of OP as well as other terms and the relation of computed Ritz values and vectors of OP with respect to the given problem \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"A*z = lambda*B*z\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The approximate eigenvalues of the original problem are returned in ascending algebraic order. The user may elect to call this routine once for each desired Ritz vector and store it peripherally if desired.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"There is also the option of computing a selected set of these vectors with a single call.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SSEUPD( &\\n  & RVEC, HOWMNY, SELECT, &\\n  & D, Z, LDZ, SIGMA, BMAT, &\\n  & N, WHICH, NEV, TOL, RESID, &\\n  & NCV, V, LDV, IPARAM, &\\n  & IPNTR, WORKD, WORKL, &\\n  & LWORKL, INFO )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"RVEC, LOGICAL, INPUT\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"rvec\",\n      children: \"RVEC\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Type: LOGICAL\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Intent: INPUT\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Specifies whether Ritz vectors corresponding to the Ritz value approximations to the eigenproblem \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"A*z = lambda*B*z\"\n      }), \" are computed.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.table, {\n      children: [(0,jsx_runtime.jsx)(_components.thead, {\n        children: (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.th, {\n            children: \"RVEC\"\n          }), (0,jsx_runtime.jsx)(_components.th, {\n            children: \"task\"\n          })]\n        })\n      }), (0,jsx_runtime.jsxs)(_components.tbody, {\n        children: [(0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \".FALSE.\"\n            })\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"Compute Ritz values only.\"\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \".TRUE.\"\n            })\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: \"Compute Ritz vectors.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"howmny\",\n      children: \"HOWMNY\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Type: Character*1\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Intent: INPUT\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Specifies how many Ritz vectors are wanted and the form of Z the matrix of Ritz vectors. See remark 1 below.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"'A', compute NEV Ritz vectors\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"'S', compute some of the Ritz vectors, specified by the logical array SELECT.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"select\",\n      children: \"SELECT\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Type: Logical array of dimension NCV.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Intent: INPUT/WORKSPACE\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"HOWMNY = S\"\n      }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SELECT\"\n      }), \" specifies the Ritz vectors to be computed.\\nTo select the Ritz vector corresponding to a Ritz value \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"D(j)\"\n      }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SELECT(j)\"\n      }), \" must be set to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \".TRUE.\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"HOWMNY = 'A'\"\n      }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SELECT\"\n      }), \" is used as a workspace for reordering the Ritz values.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"d\",\n      children: \"D\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"Type: \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"Real( NEV )\"\n          }), \".\"]\n        }), \"\\n\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n          children: \"Intent: OUTPUT\"\n        }), \"\\n\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"On exit, \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"D\"\n          }), \" contains the Ritz value approximations to the eigenvalues of \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"A*z = lambda*B*z\"\n          }), \". The values are returned in ascending order. If \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"IPARAM(7) = 3,4,5\"\n          }), \" then \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"D\"\n          }), \" represents the Ritz values of \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"OP\"\n          }), \" computed by \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"SSAUPD\"\n          }), \" transformed to those of the original eigensystem \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"A*z = lambda*B*z\"\n          }), \".\"]\n        }), \"\\n\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"IPARAM(7) = 1,2\"\n          }), \" then the Ritz values of OP are the same as the those of \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"A*z = lambda*B*z\"\n          }), \".\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"z\",\n      children: \"Z\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"Type: \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Real( N, NEV)\"\n        }), \" array if HOWMNY = 'A'.\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Intent: OUTPUT\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"On exit, Z contains the B-orthonormal Ritz vectors of the eigensystem \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"A*z = lambda*B*z\"\n      }), \" corresponding to the Ritz value approximations.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.mdxAdmonitionTitle, {\n        children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"RVEC = .FALSE.\"\n        }), \" then Z is not referenced.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.mdxAdmonitionTitle, {\n        children: [\"The array \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Z\"\n        }), \" may be set equal to first \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"NEV\"\n        }), \" columns of the Arnoldi/Lanczos basis array \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"V\"\n        }), \" computed by SSAUPD.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"ldz\",\n      children: \"LDZ\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Type: Integer.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Intent: INPUT\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The leading dimension of the array Z. If Ritz vectors are desired, then \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"LDZ .ge.  max( 1, N )\"\n      }), \". In any case, \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"LDZ .ge. 1\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"sigma\",\n      children: \"SIGMA\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Type: Real\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Intent: INPUT\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"IPARAM(7) = 3,4,5\"\n      }), \" represents the shift. Not referenced if \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"IPARAM(7) = 1 or 2\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"other-args\",\n      children: \"Other args\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The remaining arguments MUST be the same as for the call to SSAUPD that was just completed.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The remaining arguments\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"BMAT\\nN\\nWHICH\\nNEV\\nTOL\\nRESID\\nNCV\\nV\\nLDV\\nIPARAM\\nIPNTR\\nWORKD\\nWORKL\\nLWORKL\\nINFO\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"must be passed directly to SSEUPD following the last call to SSAUPD. These arguments MUST NOT BE MODIFIED between the last call to SSAUPD and the call to SSEUPD.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Two of these parameters (\", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"WORKL\"\n      }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"INFO\"\n      }), \") are also output parameters:\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"workl\",\n      children: \"WORKL\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Real work array of length LWORKL. (OUTPUT/WORKSPACE)\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"WORKL(1:4*ncv)\"\n        }), \" contains information obtained in \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ssaupd\"\n        }), \". They are not changed by \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"sseupd\"\n        }), \".\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"WORKL(4*ncv+1:ncv*ncv+8*ncv)\"\n        }), \" holds the untransformed Ritz values, the computed error estimates,\\nand the associated eigenvector matrix of H.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.mdxAdmonitionTitle, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"IPNTR(8:10)\"\n        }), \" contains the pointer into \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"WORKL\"\n        }), \" for addresses of the above information computed by SSEUPD.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"IPNTR(8)\"\n        }), \" pointer to the NCV RITZ values of the original system\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"IPNTR(9)\"\n        }), \" pointer to the NCV corresponding error bounds.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"IPNTR(10)\"\n        }), \" pointer to the NCV by NCV matrix of eigenvectors of the tridiagonal matrix T. Only referenced by \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"sseupd\"\n        }), \" if RVEC = .TRUE. See Remarks.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"info\",\n      children: \"INFO\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Integer\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"OUTPUT\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Error flag on output.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"0: Normal exit.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-1: N must be positive.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-2: NEV must be positive.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-3: NCV must be greater than NEV and less than or equal to N.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-5: WHICH must be one of 'LM', 'SM', 'LA', 'SA' or 'BE'.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-6: BMAT must be one of 'I' or 'G'.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-7: Length of private work WORKL array is not sufficient.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-8: Error return from trid. eigenvalue calculation; Information error from LAPACK routine ssteqr.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-9: Starting vector is zero.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-10: IPARAM(7) must be 1,2,3,4,5.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-11: IPARAM(7) = 1 and BMAT = 'G' are incompatible.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-12: NEV and WHICH = 'BE' are incompatible.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-14: SSAUPD did not find any eigenvalues to sufficient accuracy.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-15: HOWMNY must be one of 'A' or 'S' if RVEC = .true.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-16: HOWMNY = 'S' not yet implemented\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"-17: SSEUPD got a different count of the number of converged Ritz values than SSAUPD got. This indicates the user probably made an error in passing data from SSAUPD to SSEUPD or that the data was modified before entering SSEUPD.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"remarks\",\n      children: \"Remarks\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"remark-1\",\n      children: \"Remark-1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The converged Ritz values are always returned in increasing (algebraic) order.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"remark-2\",\n      children: \"Remark-2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Currently only HOWMNY = 'A' is implemented. It is included at this stage for the user who wants to incorporate it.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/ARPACK/SSEUPD.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);