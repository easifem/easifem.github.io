"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-triangle-interface-triangulate-46-b-beb"],{

/***/ "./docs/docs-api/TriangleInterface/triangulate.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_triangle_interface_triangulate_md_46b_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-triangle-interface-triangulate-md-46b.json\nconst site_docs_docs_api_triangle_interface_triangulate_md_46b_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"TriangleInterface/triangulate\",\"title\":\"triangulate\",\"description\":\"triswitches\",\"source\":\"@site/docs/docs-api/TriangleInterface/triangulate.md\",\"sourceDirName\":\"TriangleInterface\",\"slug\":\"/TriangleInterface/triangulate\",\"permalink\":\"/docs-api/TriangleInterface/triangulate\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/TriangleInterface/triangulate.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Switches\",\"permalink\":\"/docs-api/TriangleInterface/switches\"},\"next\":{\"title\":\"triangulateio\",\"permalink\":\"/docs-api/TriangleInterface/triangulateio\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/TriangleInterface/triangulate.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'triangulate';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"triswitches\",\n  \"id\": \"triswitches\",\n  \"level\": 2\n}, {\n  \"value\": \"in, out, vorout\",\n  \"id\": \"in-out-vorout\",\n  \"level\": 2\n}, {\n  \"value\": \"Caution regarding memory allocation\",\n  \"id\": \"caution-regarding-memory-allocation\",\n  \"level\": 2\n}, {\n  \"value\": \"In\",\n  \"id\": \"in\",\n  \"level\": 2\n}, {\n  \"value\": \"Out\",\n  \"id\": \"out\",\n  \"level\": 2\n}, {\n  \"value\": \"Vorout\",\n  \"id\": \"vorout\",\n  \"level\": 2\n}, {\n  \"value\": \"Final comments\",\n  \"id\": \"final-comments\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"triangulate\",\n        children: \"triangulate\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-c\",\n        children: \"void triangulate(triswitches, in, out, vorout)\\nchar triswitches;                            \\nstruct triangulateio in;                    \\nstruct triangulateio out;                  \\nstruct triangulateio vorout;\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"triswitches\",\n      children: \"triswitches\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"triswitches\"\n      }), \" is a string containing the command line switches you wish to invoke. No initial dash is required. Some suggestions:\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"You'll probably find it convenient to use the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"z\"\n        }), \" switch so that points (and other items) are numbered from zero. This simplifies indexing, because the first item of any type always starts at index \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"[0]\"\n        }), \" of the corresponding array, whether that item's number is zero or one.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"You'll probably want to use the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Q\"\n        }), \" switch in your final code, but you can take advantage of Triangle's printed output (including the\", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"V\"\n        }), \" switch) while debugging.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"If you are not using the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"q\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"a\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"u\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"D\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"j\"\n        }), \", or \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"s\"\n        }), \" switches, then the output points will be identical to the input points, except possibly for the boundary markers. If you don't need the boundary markers, you should use the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"N\"\n        }), \" (no nodes output) switch to save memory.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"I\"\n        }), \" (no iteration numbers) and\", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"g\"\n        }), \" (.off file output) switches have no effect when Triangle is compiled with \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"TRILIBRARY\"\n        }), \" defined.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"If you do need boundary markers, but need to save memory, a good nasty trick is to set \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"iout->pointlist\"\n        }), \" equal to \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"in->pointlist\"\n        }), \" before calling \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"triangulate()\"\n        }), \", so that Triangle overwrites the input points with identical copies.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"in-out-vorout\",\n      children: \"in, out, vorout\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"in\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"out\"\n        }), \", and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"vorout\"\n        }), \" are descriptions of the input, the output, and the Voronoi output.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"If the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"v\"\n        }), \" (Voronoi output) switch is not used,\", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"vorout\"\n        }), \" may be NULL. \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"in\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"out\"\n        }), \" may never be NULL.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Certain fields of the input and output structures must be initialized, as described below.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"caution-regarding-memory-allocation\",\n      children: \"Caution regarding memory allocation\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n          children: \"Any input fields that Triangle will examine must be initialized.\"\n        }), \"\\n\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n          children: \"Furthermore, for each output array that Triangle will write to, you must either provide space by setting the appropriate pointer to point to the space you want the data written to, or you must initialize the pointer to NULL, which tells Triangle to allocate space for the results.\"\n        }), \"\\n\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n          children: \"The latter option is preferable, because Triangle always knows exactly how much space to allocate.\"\n        }), \"\\n\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n          children: \"The former option is provided mainly for people who need to call Triangle from Fortran code, though it also makes possible some nasty space-saving tricks, like writing the output to the same arrays as the input.\"\n        }), \"\\n\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"Triangle will not \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"free()\"\n          }), \" any input or output arrays, including those it allocates itself; that's up to you.\"]\n        }), \"\\n\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"You should free arrays allocated by Triangle by calling the \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"trifree()\"\n          }), \" procedure defined below.\"]\n        }), \"\\n\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"By default, \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"trifree()\"\n          }), \" just calls the standard free() library procedure, but applications that call \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"triangulate()\"\n          }), \" may replace \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"trimalloc()\"\n          }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"trifree()\"\n          }), \" in triangle.c to use specialized memory allocators.\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Here's a guide to help you decide which fields you must initialize before you call triangulate().\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"in\",\n      children: \"In\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointlist\"\n        }), \" must always point to a list of points; \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofpoints\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofpointattributes\"\n        }), \" must be properly set.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointmarkerlist\"\n        }), \" must either be set to NULL (in which case all markers default to zero), or must point to a list of markers.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofpointattributes\"\n        }), \" is not zero, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointattributelist\"\n        }), \" must point to a list of point attributes.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"If the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"r\"\n        }), \" switch is used, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"trianglelist\"\n        }), \" must point to a list of triangles, and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberoftriangles\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofcorners\"\n        }), \", and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberoftriangleattributes\"\n        }), \" must be properly set. If \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberoftriangleattributes\"\n        }), \" is not zero, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"triangleattributelist\"\n        }), \" must point to a list of triangle attributes.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"If the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"a\"\n        }), \" switch is used (with no number following), \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"trianglearealist\"\n        }), \" must point to a list of triangle area constraints. \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"neighborlist\"\n        }), \" may be ignored.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"If the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"p\"\n        }), \" switch is used, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"segmentlist\"\n        }), \" must point to a list of segments, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofsegments\"\n        }), \" must be properly set, and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"segmentmarkerlist\"\n        }), \" must either be set to NULL (in which case all markers default to zero), or must point to a list of markers.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"If the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"p\"\n        }), \" switch is used without the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"r\"\n        }), \" switch, then \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofholes\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofregions\"\n        }), \" must be properly set. If \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofholes\"\n        }), \" is not zero, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"holelist\"\n        }), \" must point to a list of holes. If \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofregions\"\n        }), \" is not zero, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"regionlist\"\n        }), \" must point to a list of region constraints.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"If the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"p\"\n        }), \" switch is used, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"holelist\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofholes\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"regionlist\"\n        }), \", and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofregions\"\n        }), \" is copied to \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"out\"\n        }), \". (You can nonetheless get away with not initializing them if the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"r\"\n        }), \" switch is used.)\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"edgelist\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"edgemarkerlist\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"normlist\"\n        }), \", and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofedges\"\n        }), \" may be ignored.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"out\",\n      children: \"Out\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointlist\"\n        }), \" must be initialized (NULL or pointing to memory) unless the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"N\"\n        }), \" switch is used.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointmarkerlist\"\n        }), \" must be initialized unless the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"N\"\n        }), \" or \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"B\"\n        }), \" switch is used.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"N\"\n        }), \" is not used and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"in->numberofpointattributes\"\n        }), \" is not zero, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointattributelist\"\n        }), \" must be initialized.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"trianglelist\"\n        }), \" must be initialized unless the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"E\"\n        }), \" switch is used. \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"neighborlist\"\n        }), \" must be initialized if the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"n\"\n        }), \" switch is used. If the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"E\"\n        }), \" switch is not used and (\", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"in->numberofelementattributes\"\n        }), \" is not zero or the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"A\"\n        }), \" switch is used), \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"elementattributelist\"\n        }), \" must be initialized. \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"trianglearealist\"\n        }), \" may be ignored.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"segmentlist\"\n        }), \" must be initialized if the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"p\"\n        }), \" or \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"c\"\n        }), \" switch is used, and the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"P\"\n        }), \" switch is not used.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"segmentmarkerlist\"\n        }), \" must also be initialized under these circumstances unless the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"B\"\n        }), \" switch is used.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"edgelist\"\n        }), \" must be initialized if the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"e\"\n        }), \" switch is used. \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"edgemarkerlist\"\n        }), \" must be initialized if the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"e\"\n        }), \" switch is used and the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"B\"\n        }), \" switch is not.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"holelist\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"regionlist\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"normlist\"\n        }), \", and all scalars may be ignored.\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {}), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"vorout\",\n      children: \"Vorout\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"vorout\"\n      }), \" (only needed if \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"v\"\n      }), \" switch is used):\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointlist\"\n        }), \" must be initialized. If \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"in->numberofpointattributes\"\n        }), \" is not zero, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointattributelist\"\n        }), \" must be initialized. \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointmarkerlist\"\n        }), \" may be ignored.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"edgelist\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"normlist\"\n        }), \" must both be initialized. \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"edgemarkerlist\"\n        }), \" may be ignored.\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Everything else may be ignored.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"final-comments\",\n      children: \"Final comments\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"After a call to triangulate(), the valid fields of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"out\"\n        }), \" and\", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"vorout\"\n        }), \" will depend, in an obvious way, on the choice of switches used.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"Note that when the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"p\"\n        }), \" switch is used, the pointers \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"holelist\"\n        }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"regionlist\"\n        }), \" are copied from \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"in\"\n        }), \" to \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"out\"\n        }), \", but no new space is allocated; be careful that you don't free() the same array twice.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"On the other hand, Triangle will never copy the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"pointlist\"\n        }), \" pointer (or any others); new space is allocated for \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"out->pointlist\"\n        }), \", or if the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"N\"\n        }), \" switch is used, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"out->pointlist\"\n        }), \" remains uninitialized.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"All of the meaningful \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberof\"\n        }), \" fields will be properly set; for instance,\", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofedges\"\n        }), \" will represent the number of edges in the triangulation whether or not the edges were written. If segments are not used, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"numberofsegments\"\n        }), \" will indicate the number of boundary edges.\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/TriangleInterface/triangulate.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);