"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-csr-matrix-import-603-940"],{

/***/ "./docs/docs-api/CSRMatrix/Import.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ Import_contentTitle),\n  \"default\": () => (/* binding */ Import_MDXContent),\n  frontMatter: () => (/* binding */ Import_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_csr_matrix_import_md_603_namespaceObject),\n  toc: () => (/* binding */ Import_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-csr-matrix-import-md-603.json\nconst site_docs_docs_api_csr_matrix_import_md_603_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"CSRMatrix/Import\",\"title\":\"Import\",\"description\":\"Import() can be used for importing sparse matrix data from a file.\",\"source\":\"@site/docs/docs-api/CSRMatrix/Import.md\",\"sourceDirName\":\"CSRMatrix\",\"slug\":\"/CSRMatrix/Import\",\"permalink\":\"/docs-api/CSRMatrix/Import\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/CSRMatrix/Import.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Harwell-Boeing\",\"permalink\":\"/docs-api/CSRMatrix/Harwell-Boeing\"},\"next\":{\"title\":\"Initiate\",\"permalink\":\"/docs-api/CSRMatrix/Initiate\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/CSRMatrix/_Import_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM FIDAPM33\\nUSE easifemBase\\nTYPE(csrmatrix_) :: obj, obj2, pmat, pmat2\\nTYPE(sparseMatrixReOrdering_) :: reorder\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Import matrix\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL IMPORT(obj, \\\"./matrixMarket/fidapm33.mtx\\\", SPARSE_FMT_COO)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Let's see its content\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SPY(obj=obj, filename=\\\"FIDAPM33_BEFORE\\\", ext=\\\"png\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"Incomplete LU decompositiont\\\"\",\n        children: \"CALL getILUD(obj=obj, Pmat=pmat, alpha=1.0_DFP, droptol=0.001_DFP)\\nCALL spy(obj=pmat, filename=\\\"FIDAPM33_ILUD_BEFORE\\\", ext=\\\"png\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"NestedDissect from Metis.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"Cleanup\\\"\",\n        children: \"! CALL NestedDissect(reorder=reorder, csrMat=obj)\\n! obj2 = Permute(obj, reorder, reorder)\\n! CALL SPY(obj2, \\\"FIDAPM33_AFTER\\\")\\n!\\n! CALL getILUD(obj=obj2, Pmat=pmat2, alpha=1.0_DFP, droptol=0.001_DFP)\\n! CALL spy(pmat2, \\\"FIDAPM33_ILUD_AFTER\\\")\\n\\nCALL DEALLOCATE (obj)\\nCALL DEALLOCATE (obj2)\\nCALL DEALLOCATE (pmat)\\nCALL DEALLOCATE (pmat2)\\nEND PROGRAM FIDAPM33\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/CSRMatrix/Import.md\n\n\nconst Import_frontMatter = {};\nconst Import_contentTitle = 'Import';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst Import_toc = [{\n  \"value\": \"Header\",\n  \"id\": \"header\",\n  \"level\": 3\n}, {\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc];\nfunction Import_createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    li: \"li\",\n    mdxAdmonitionTitle: \"mdxAdmonitionTitle\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"import\",\n        children: \"Import\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"Import()\"\n      }), \" can be used for importing sparse matrix data from a file.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Currently, \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SPARSE_FMT_COO\"\n      }), \" is supported.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsx)(_components.p, {\n        children: \"The routine will open the file, read data, and then close the file.\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"SPARSE_FMT_COO\"\n      }), \" format is actually \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"MatrixMarket\"\n      }), \" format, which is described \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"https://math.nist.gov/MatrixMarket/formats.html\",\n        children: \"here\"\n      }), \" in detail.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The brief description of this file format is given below.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"Matrix market format\"\n      }), (0,jsx_runtime.jsxs)(\"div\", {\n        children: [(0,jsx_runtime.jsx)(_components.p, {\n          children: \"This is the native exchange format for the Matrix Market.\"\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"The Matrix Market (MM) exchange formats provide a simple mechanism to facilitate the exchange of matrix data. In particular, the objective has been to define a minimal base ASCII file format which can be very easily explained and parsed, but can easily adapted to applications with a more rigid structure, or extended to related data objects. The MM exchange format for matrices is really a collection of affiliated formats which share design elements. In our initial specification, two matrix formats are defined.\"\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"A file format suitable for representing general sparse matrices. Only nonzero entries are provided, and the coordinates of each nonzero entry is given explicitly. This is illustrated in the example below.\"\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"info\",\n          children: (0,jsx_runtime.jsxs)(_components.mdxAdmonitionTitle, {\n            children: [\"Comment starts with \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"%\"\n            })]\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"Consider the following \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"5x5\"\n          }), \" matrix:\"]\n        }), (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            children: \"1    0      0       6      0     \\n0   10.5    0       0      0     \\n0    0    .015      0      0     \\n0  250.5    0     -280    33.32  \\n0    0      0       0     12\\n\"\n          })\n        }), (0,jsx_runtime.jsx)(_components.p, {\n          children: \"In MM coordinate format this could be represented as follows.\"\n        }), (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            children: \"%%MatrixMarket matrix coordinate real general \\n%=================================================================================\\n%\\n% This ASCII file represents a sparse MxN matrix with L \\n% nonzeros in the following Matrix Market format:\\n%\\n% Indices are 1-based, i.e. A(1,1) is the first element.\\n%\\n%=================================================================================\\n  5  5  8\\n    1     1   1.000e+00\\n    2     2   1.050e+01\\n    3     3   1.500e-02\\n    1     4   6.000e+00\\n    4     2   2.505e+02\\n    4     4  -2.800e+02\\n    4     5   3.332e+01\\n    5     5   1.200e+01\\n\"\n          })\n        }), (0,jsx_runtime.jsx)(_components.h3, {\n          id: \"header\",\n          children: \"Header\"\n        }), (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            children: \"%%MatrixMarket ${1} ${2} ${3} ${4} ${5}\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n              children: (0,jsx_runtime.jsx)(_components.code, {\n                children: \"${1}=%%MatrixMarket\"\n              })\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n              children: (0,jsx_runtime.jsx)(_components.code, {\n                children: \"${2}=matrix\"\n              })\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n              children: (0,jsx_runtime.jsx)(_components.code, {\n                children: \"${3}=coorindate|array\"\n              })\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n              children: (0,jsx_runtime.jsx)(_components.code, {\n                children: \"${4}=real|integer|complex|pattern|\"\n              })\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n              children: (0,jsx_runtime.jsx)(_components.code, {\n                children: \"${5}=general|symmetric|skew-symmetric|Hermitian\"\n              })\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"The first line contains the type code. In this example, it indicates that the object being represented is a \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"matrix\"\n              }), \" in \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"coordinate\"\n              }), \" format and that the numeric data following is \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"real\"\n              }), \" and represented in \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"general\"\n              }), \" form. (By general we mean that the matrix format is not taking advantage of any symmetry properties.)\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n              children: \"Variants of the coordinate format are defined for matrices with complex and integer entries, as well as for those in which only the position of the nonzero entries is prescribed (pattern matrices). (These would be indicated by changing real to complex, integer, or pattern, respectively, on the header line).\"\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n              children: \"Additional variants are defined for cases in which symmetries can be used to significantly reduce the size of the data: symmetric, skew-symmetric and Hermitian. In these cases, only entries in the lower triangular portion need be supplied. In the skew-symmetric case the diagonal entries are zero, and hence they too are omitted. (These would be indicated by changing general to symmetric, skew-symmetric, or hermitian, respectively, on the header line).\"\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ See Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE Import(obj, fileName, matFormat)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    CHARACTER(LEN=*), INTENT(IN) :: fileName\\n    INTEGER(I4B), INTENT(IN) :: matFormat\\n  END SUBROUTINE Import\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"܀ Example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction Import_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(Import_createMdxContent, {\n      ...props\n    })\n  }) : Import_createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/CSRMatrix/Import.md\n");

/***/ })

}]);