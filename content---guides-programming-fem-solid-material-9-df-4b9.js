"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---guides-programming-fem-solid-material-9-df-4b9"],{

/***/ "./docs/guides/programming-fem/solidMaterial/index.mdx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_guides_programming_fem_solid_material_index_mdx_9df_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/guides/site-docs-guides-programming-fem-solid-material-index-mdx-9df.json\nconst site_docs_guides_programming_fem_solid_material_index_mdx_9df_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"programming-fem/solidMaterial/index\",\"title\":\"Solid material\",\"description\":\"SolidMaterial is a subclass of AbstractMaterial class. Its purpose is to handle solid materials, like steel, brass, copper, among others.\",\"source\":\"@site/docs/guides/programming-fem/solidMaterial/index.mdx\",\"sourceDirName\":\"programming-fem/solidMaterial\",\"slug\":\"/programming-fem/solidMaterial/\",\"permalink\":\"/guides/programming-fem/solidMaterial/\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/guides/programming-fem/solidMaterial/index.mdx\",\"tags\":[{\"inline\":true,\"label\":\"materials\",\"permalink\":\"/guides/tags/materials\"},{\"inline\":true,\"label\":\"materialModels\",\"permalink\":\"/guides/tags/material-models\"},{\"inline\":true,\"label\":\"models\",\"permalink\":\"/guides/tags/models\"},{\"inline\":true,\"label\":\"solidMechanics\",\"permalink\":\"/guides/tags/solid-mechanics\"},{\"inline\":true,\"label\":\"easifemClasses\",\"permalink\":\"/guides/tags/easifem-classes\"}],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"sidebarPosition\":1,\"frontMatter\":{\"sidebar_position\":1,\"date\":\"2023-08-05T00:00:00.000Z\",\"update\":\"2023-08-05T00:00:00.000Z\",\"status\":\"stable\",\"docs\":\"done\",\"extpkgs\":\"none\",\"category\":[\"SolidMechanics\",\"Models\",\"MaterialModels\"],\"tags\":[\"materials\",\"materialModels\",\"models\",\"solidMechanics\",\"easifemClasses\"]},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Import from toml-file (spatial user function)\",\"permalink\":\"/guides/programming-fem/dirichletBC/dbc_toml_userfunc_space\"},\"next\":{\"title\":\"Import from HDF5 file\",\"permalink\":\"/guides/programming-fem/solidMaterial/import_hdf_1\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/guides/programming-fem/solidMaterial/index.mdx\n\n\nconst frontMatter = {\n\tsidebar_position: 1,\n\tdate: new Date('2023-08-05T00:00:00.000Z'),\n\tupdate: new Date('2023-08-05T00:00:00.000Z'),\n\tstatus: 'stable',\n\tdocs: 'done',\n\textpkgs: 'none',\n\tcategory: [\n\t\t'SolidMechanics',\n\t\t'Models',\n\t\t'MaterialModels'\n\t],\n\ttags: [\n\t\t'materials',\n\t\t'materialModels',\n\t\t'models',\n\t\t'solidMechanics',\n\t\t'easifemClasses'\n\t]\n};\nconst contentTitle = 'Solid material';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"How to initiate?\",\n  \"id\": \"how-to-initiate\",\n  \"level\": 2\n}, {\n  \"value\": \"Step 1: Set parameter\",\n  \"id\": \"step-1-set-parameter\",\n  \"level\": 3\n}, {\n  \"value\": \"Step 2: Initiate\",\n  \"id\": \"step-2-initiate\",\n  \"level\": 3\n}, {\n  \"value\": \"Step 3: Add material\",\n  \"id\": \"step-3-add-material\",\n  \"level\": 3\n}, {\n  \"value\": \"Step 4: Get material pointer\",\n  \"id\": \"step-4-get-material-pointer\",\n  \"level\": 3\n}, {\n  \"value\": \"Further reading\",\n  \"id\": \"further-reading\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    mdxAdmonitionTitle: \"mdxAdmonitionTitle\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Card, CardSection, Details} = _components;\n  if (!Card) _missingMdxReference(\"Card\", true);\n  if (!CardSection) _missingMdxReference(\"CardSection\", true);\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"solid-material\",\n        children: \"Solid material\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/SolidMaterial/SolidMaterial_\",\n        children: \"SolidMaterial_\"\n      }), \" is a subclass of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/AbstractMaterial\",\n        children: \"AbstractMaterial\"\n      }), \" class. Its purpose is to handle solid materials, like steel, brass, copper, among others.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.code, {\n        children: \"SolidMaterial_\"\n      }), \" also encapsulates the abstract model for defining the material constitutive behavior. The structure of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SolidMaterial_\"\n      }), \" is given below.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE, EXTENDS(AbstractMaterial_) :: SolidMaterial_\\n  CLASS(AbstractSolidMechanicsModel_), POINTER :: stressStrainModel => NULL()\\n    !! Pointer to stress strain material behavior of solids\\nEND TYPE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"how-to-initiate\",\n      children: \"How to initiate?\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"There are three ways to initiate an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SolidMaterial_\"\n      }), \". In this section we will cover constructing the instance by using \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/SolidMaterial/Initiate\",\n        children: \"Initiate\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.admonition, {\n      type: \"info\",\n      children: [(0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {}), (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"We will consider the following example to learn about the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"SolidMaterial_\"\n        }), \".\"]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"Click here to see example\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"PROGRAM main\\nUSE easifemBase\\nUSE easifemClasses\\nUSE easifemMaterials\\n\\nCHARACTER(*), PARAMETER :: myName = \\\"main\\\"\\nCHARACTER(*), PARAMETER :: modName = \\\"main\\\"\\nTYPE(SolidMaterial_) :: obj\\nTYPE(ParameterList_) :: param\\nCLASS(UserFunction_), POINTER :: func => NULL()\\nINTEGER(I4B) :: ierr\\n\\nCALL FPL_Init(); CALL param%Initiate()\\n\\n! Set parameter\\nCALL SetSolidMaterialParam(param=param, name=\\\"SolidMaterial\\\")\\n\\n! Initiate an instance of `SolidMaterial_`\\nCALL obj%Initiate(param)\\n\\n! Adding a material property\\nCALL obj%AddMaterial(\\\"massDensity\\\")\\n\\nfunc => obj%GetMaterialPointer(\\\"massDensity\\\")\\n\\nIF (.NOT. ASSOCIATED(func)) THEN\\n  CALL e%RaiseError(modName//'::'//myName//' - '// &\\n    & '[error 1]')\\nEND IF\\n\\nCALL SetUserFunctionParam(param=param, name=\\\"massDensity\\\",  &\\n  & returnType=Scalar, argType=Constant)\\nCALL func%Initiate(param)\\nCALL func%Set(scalarValue=1.0_DFP)\\n\\nCALL obj%Display(msg=\\\"SolidMaterial\\\")\\n\\nCALL FPL_FINALIZE; CALL param%DEALLOCATE()\\nEND PROGRAM main\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"To initiate an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SolidMaterial_\"\n      }), \" follow the steps give below.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"step-1-set-parameter\",\n      children: \"Step 1: Set parameter\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"First, we call \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/SolidMaterial/SetSolidMaterialParam\",\n        children: \"SetSolidMaterialParam\"\n      }), \" method.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetSolidMaterialParam(param=param, name=\\\"SolidMaterial\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"step-2-initiate\",\n      children: \"Step 2: Initiate\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Then, we will call \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/SolidMaterial/Initiate\",\n        children: \"Initiate\"\n      }), \" method.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Initiate(param)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"step-3-add-material\",\n      children: \"Step 3: Add material\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"After we have initiated an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"AbstractMaterial_\"\n      }), \", we will ADD material to it by calling \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/AbstractMaterial/AddMaterial\",\n        children: \"AddMaterial\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%AddMaterial(\\\"massDensity\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"This routine just register a material name and allocate space for defining materal as a \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"UserFunction\"\n        }), \".\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"step-4-get-material-pointer\",\n      children: \"Step 4: Get material pointer\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"After registering a material, we can get the pointer of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/UserFunction\",\n        children: \"UserFunction\"\n      }), \" by calling the method \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/AbstractMaterial/GetMaterialPointer\",\n        children: \"GetMaterialPointer\"\n      }), \".\\nWe should initiate this pointer as described in the documentation of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/UserFunction\",\n        children: \"UserFunction\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"! Adding a material property\\nCALL obj%AddMaterial(\\\"massDensity\\\")\\n\\nfunc => obj%GetMaterialPointer(\\\"massDensity\\\")\\n\\nIF (.NOT. ASSOCIATED(func)) THEN\\n  CALL e%RaiseError(modName//'::'//myName//' - '// &\\n    & '[error 1]')\\nEND IF\\n\\nCALL SetUserFunctionParam(param=param, name=\\\"massDensity\\\",  &\\n  & returnType=Scalar, argType=Constant)\\nCALL func%Initiate(param)\\nCALL func%Set(scalarValue=1.0_DFP)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"further-reading\",\n      children: \"Further reading\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"There is more to \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"SolidMaterial_\"\n      }), \", and you can learn about them from following pages.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(CardSection, {\n      id: \"quadraturePoints\",\n      children: [(0,jsx_runtime.jsx)(Card, {\n        title: \"Construct by HDF5 file\",\n        to: \"/guides/programming-fem/solidMaterial/import_hdf_1\",\n        description: \"This example shows how to initiate SolidMaterial by using reading data from HDF5 file.\"\n      }), (0,jsx_runtime.jsx)(Card, {\n        title: \"Construct by toml file\",\n        to: \"/guides/programming-fem/solidMaterial/import_toml_1\",\n        description: \"This example shows how to initiate SolidMaterial by using toml-file.\"\n      }), (0,jsx_runtime.jsx)(Card, {\n        title: \"Toml file constant value\",\n        to: \"/guides/programming-fem/dirichletBC/dbc_toml_const\",\n        description: \"This example shows how to initiate DBC by reading a toml-file. Constant boundary condition, $u=\\\\alpha$\"\n      }), (0,jsx_runtime.jsx)(Card, {\n        title: \"Toml file constant function\",\n        to: \"/guides/programming-fem/dirichletBC/dbc_toml_userfunc_const\",\n        description: \"This example shows how to initiate DBC by reading a toml-file. Constant boundary condition, $u=\\\\alpha$\"\n      }), (0,jsx_runtime.jsx)(Card, {\n        title: \"Toml file space function\",\n        to: \"/guides/programming-fem/dirichletBC/dbc_toml_userfunc_const\",\n        description: \"This example shows how to initiate DBC by reading a toml-file. Space boundary condition, $u=g(x,y,z)$\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/guides/programming-fem/solidMaterial/index.mdx\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);