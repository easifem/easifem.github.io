"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-matrix-field-get-row-153-fe9"],{

/***/ "./docs/docs-api/MatrixField/GetRow.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_matrix_field_get_row_md_153_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-matrix-field-get-row-md-153.json\nconst site_docs_docs_api_matrix_field_get_row_md_153_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"MatrixField/GetRow\",\"title\":\"GetRow\",\"description\":\"Calling example:\",\"source\":\"@site/docs/docs-api/MatrixField/GetRow.md\",\"sourceDirName\":\"MatrixField\",\"slug\":\"/MatrixField/GetRow\",\"permalink\":\"/docs-api/MatrixField/GetRow\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/MatrixField/GetRow.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetPrecondition\",\"permalink\":\"/docs-api/MatrixField/GetPrecondition\"},\"next\":{\"title\":\"ILUSolve\",\"permalink\":\"/docs-api/MatrixField/ILUSolve\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/MatrixField/GetRow.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'GetRow';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Interface 1\",\n  \"id\": \"interface-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 3\",\n  \"id\": \"interface-3\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 4\",\n  \"id\": \"interface-4\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 5\",\n  \"id\": \"interface-5\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 6\",\n  \"id\": \"interface-6\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 7\",\n  \"id\": \"interface-7\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"getrow\",\n        children: \"GetRow\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Calling example:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetRow(obj, globalnode, idof, value(:), nodefieldval, scale, addcontribution\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetRow(obj, globalnode, ivar, idof, value(:), nodefieldval, scale, addcontribution\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetRow(obj, globalnode, ivar, spacecompo, timecompo, value(:), nodefieldval, scale, addcontribution\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetRow(obj, globalnode, ivar, spacecompo, timecompo(:), value(:), nodefieldval, scale, addcontribution\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetRow(obj, globalnode, ivar, spacecompo(:), timecompo, value(:), nodefieldval, scale, addcontribution\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetRow(obj, globalnode(:), ivar, spacecompo, timecompo(:), value(:), nodefieldval, scale, addcontribution\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetRow(obj, globalnode(:), ivar, spacecompo(:), timecompo, value(:), nodefieldval, scale, addcontribution\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1\",\n      children: \"Interface 1\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ See Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE getRow1(obj, globalNode, idof, VALUE, nodeFieldVal, &\\n    & scale, addContribution)\\n    CLASS(MatrixField_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: globalNode\\n    INTEGER(I4B), INTENT(IN) :: idof\\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\\n  END SUBROUTINE getRow1\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine returns the row of a sparse matrix. The row index is\\ncalculated using the \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"globalNode\"\n          }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"idof\"\n          }), \".\"]\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"globalNode\"\n              }), \" is the global node number of mesh\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"idof\"\n              }), \" is the degree of freedom number\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"value\"\n              }), \" is present then the vector is returned inside the rank 1 vector\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"nodeFieldVal\"\n              }), \" is present then the row is returned inside the\\nnode field\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ See Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE getRow2(obj, globalNode, ivar, idof, VALUE, &\\n    & nodeFieldVal, scale, addContribution)\\n    CLASS(MatrixField_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: globalNode\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), INTENT(IN) :: idof\\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\\n  END SUBROUTINE getRow2\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine returns the row of a sparse matrix. The row index is\\ncalculated using the \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"globalNode\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"idof\"\n          }), \", and \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"ivar\"\n          }), \".\"]\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"globalNode\"\n              }), \" is the global node number of mesh\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"idof\"\n              }), \" is the degree of freedom number\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"value\"\n              }), \" is present then the vector is returned inside the rank 1 vector\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"nodeFieldVal\"\n              }), \" is present then the row is returned inside the\\nnode field\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-3\",\n      children: \"Interface 3\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ See Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE getRow3(obj, globalNode, ivar, spacecompo, timecompo, &\\n    & VALUE, nodeFieldVal, scale, addContribution)\\n    CLASS(MatrixField_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: globalNode\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), INTENT(IN) :: spacecompo\\n    INTEGER(I4B), INTENT(IN) :: timecompo\\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\\n  END SUBROUTINE getRow3\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine returns the row of a sparse matrix. The row index is\\ncalculated using the (\", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"globalNode\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"ivar\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"spacecompo\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"timecompo\"\n          }), \").\"]\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"globalNode\"\n              }), \" is the global node number of mesh\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"idof\"\n              }), \" is the degree of freedom number\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"value\"\n              }), \" is present then the vector is returned inside the rank 1 vector\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"nodeFieldVal\"\n              }), \" is present then the row is returned inside the\\nnode field\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-4\",\n      children: \"Interface 4\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ See Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE getRow4(obj, globalNode, ivar, spacecompo, timecompo, &\\n    & VALUE, nodeFieldVal, scale, addContribution)\\n    CLASS(MatrixField_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: globalNode\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), INTENT(IN) :: spacecompo\\n    INTEGER(I4B), INTENT(IN) :: timecompo(:)\\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\\n  END SUBROUTINE getRow4\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine returns the row of a sparse matrix. The row index is\\ncalculated using the (\", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"globalNode\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"ivar\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"spacecompo\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"timecompo\"\n          }), \").\"]\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"globalNode\"\n              }), \" is the global node number of mesh\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"idof\"\n              }), \" is the degree of freedom number\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"value\"\n              }), \" is present then the vector is returned inside the rank 1 vector\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"nodeFieldVal\"\n              }), \" is present then the row is returned inside the\\nnode field\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-5\",\n      children: \"Interface 5\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ See Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE getRow5(obj, globalNode, ivar, spacecompo, timecompo, &\\n    & VALUE, nodeFieldVal, scale, addContribution)\\n    CLASS(MatrixField_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: globalNode\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), INTENT(IN) :: spacecompo(:)\\n    INTEGER(I4B), INTENT(IN) :: timecompo\\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\\n  END SUBROUTINE getRow5\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine returns the row of a sparse matrix. The row index is\\ncalculated using the (\", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"globalNode\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"ivar\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"spacecompo\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"timecompo\"\n          }), \").\"]\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"globalNode\"\n              }), \" is the global node number of mesh\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"idof\"\n              }), \" is the degree of freedom number\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"value\"\n              }), \" is present then the vector is returned inside the rank 1 vector\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"nodeFieldVal\"\n              }), \" is present then the row is returned inside the\\nnode field\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-6\",\n      children: \"Interface 6\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ See Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE getRow6(obj, globalNode, ivar, spacecompo, timecompo, &\\n    & VALUE, nodeFieldVal, scale, addContribution)\\n    CLASS(MatrixField_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), INTENT(IN) :: spacecompo\\n    INTEGER(I4B), INTENT(IN) :: timecompo(:)\\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\\n  END SUBROUTINE getRow6\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine returns the row of a sparse matrix. The row index is\\ncalculated using the (\", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"globalNode\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"ivar\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"spacecompo\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"timecompo\"\n          }), \").\"]\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"globalNode\"\n              }), \" is the global node number of mesh\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"idof\"\n              }), \" is the degree of freedom number\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"value\"\n              }), \" is present then the vector is returned inside the rank 1 vector\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"nodeFieldVal\"\n              }), \" is present then the row is returned inside the\\nnode field\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\",\n        default: true\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-7\",\n      children: \"Interface 7\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ See Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  SUBROUTINE getRow7(obj, globalNode, ivar, spacecompo, timecompo, &\\n    & VALUE, nodeFieldVal, scale, addContribution)\\n    CLASS(MatrixField_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: globalNode(:)\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), INTENT(IN) :: spacecompo(:)\\n    INTEGER(I4B), INTENT(IN) :: timecompo\\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: VALUE(:)\\n    CLASS(AbstractNodeField_), OPTIONAL, INTENT(INOUT) :: nodeFieldVal\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: scale\\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: addContribution\\n  END SUBROUTINE getRow7\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine returns the row of a sparse matrix. The row index is\\ncalculated using the (\", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"globalNode\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"ivar\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"spacecompo\"\n          }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"timecompo\"\n          }), \").\"]\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"globalNode\"\n              }), \" is the global node number of mesh\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"idof\"\n              }), \" is the degree of freedom number\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"value\"\n              }), \" is present then the vector is returned inside the rank 1 vector\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"nodeFieldVal\"\n              }), \" is present then the row is returned inside the\\nnode field\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢\",\n        default: true\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/MatrixField/GetRow.md\n");

/***/ })

}]);