"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-fedof-get-quadrature-points-402-593"],{

/***/ "./docs/docs-api/FEDOF/GetQuadraturePoints.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ GetQuadraturePoints_contentTitle),\n  \"default\": () => (/* binding */ GetQuadraturePoints_MDXContent),\n  frontMatter: () => (/* binding */ GetQuadraturePoints_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_fedof_get_quadrature_points_md_402_namespaceObject),\n  toc: () => (/* binding */ GetQuadraturePoints_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-fedof-get-quadrature-points-md-402.json\nconst site_docs_docs_api_fedof_get_quadrature_points_md_402_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"FEDOF/GetQuadraturePoints\",\"title\":\"GetQuadraturePoints\",\"description\":\"The GetQuadraturePoints method generates quadrature points for numerical integration over a finite element.\",\"source\":\"@site/docs/docs-api/FEDOF/GetQuadraturePoints.md\",\"sourceDirName\":\"FEDOF\",\"slug\":\"/FEDOF/GetQuadraturePoints\",\"permalink\":\"/docs-api/FEDOF/GetQuadraturePoints\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEDOF/GetQuadraturePoints.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetPrefix\",\"permalink\":\"/docs-api/FEDOF/GetPrefix\"},\"next\":{\"title\":\"GetTotalCellDOF\",\"permalink\":\"/docs-api/FEDOF/GetTotalCellDOF\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js + 27 modules\nvar CodeBlock = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js\");\n;// ./node_modules/raw-loader/dist/cjs.js!./docs/docs-api/FEDOF/examples/_GetQuadraturePoints_test_1.F90\n/* harmony default export */ const _GetQuadraturePoints_test_1 = (\"!> author: Vikas Sharma, Ph. D.\\n! date: 2025-06-08\\n! summary:  Testing GetQuadraturePoints method of FEDOF class\\n! obj_GetQuadraturePoints1(obj, quad, globalElement, quadratureType, &\\n! order, alpha, beta, lambda, islocal)\\n\\nPROGRAM main\\nUSE FEDOF_Class\\nUSE FEDomain_Class\\nUSE AbstractMesh_Class\\nUSE HDF5File_Class\\nUSE Display_Method\\nUSE GlobalData\\nUSE Test_Method\\nUSE ExceptionHandler_Class, ONLY: e, EXCEPTION_INFORMATION\\nUSE BaseType, ONLY: QuadraturePoint_, TypeQuadratureOpt\\nUSE QuadraturePoint_Method\\n\\nIMPLICIT NONE\\n\\nTYPE(FEDOF_) :: obj\\nTYPE(FEDomain_) :: dom\\n\\nCLASS(AbstractMesh_), POINTER :: meshptr => NULL()\\n\\nCHARACTER(*), PARAMETER :: &\\n  filename = \\\"../../FEMesh/examples/meshdata/small_tri3_mesh.h5\\\", &\\n  baseContinuity = \\\"H1\\\", &\\n  baseInterpolation = \\\"Hierarchical\\\", &\\n  testname = baseContinuity//\\\" \\\"//baseInterpolation// \\\" GetQuadraturePoints test:\\\"\\n\\nTYPE(HDF5File_) :: meshfile\\nTYPE(QuadraturePoint_) :: quad\\n\\nINTEGER(I4B) :: globalElement, telements, order\\n\\nCALL e%setQuietMode(EXCEPTION_INFORMATION, .TRUE.)\\nCALL meshfile%Initiate(filename, mode=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL dom%Initiate(meshfile, '')\\nmeshptr => dom%GetMeshPointer()\\n\\nCALL test1\\nCALL test2\\nCALL test3\\n\\nCALL dom%DEALLOCATE()\\nCALL meshfile%DEALLOCATE()\\n\\nCONTAINS\\n\\n!----------------------------------------------------------------------------\\n!                                                                      test1\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test1\\n\\n  order = 1\\n  CALL obj%Initiate(baseContinuity=baseContinuity, &\\n                    baseInterpolation=baseInterpolation, &\\n                    order=order, mesh=meshptr, &\\n                    ipType=TypeQuadratureOpt%equidistance)\\n\\n  telements = 1\\n  globalElement = 1\\n  order = 2\\n\\n  CALL obj%GetQuadraturePoints(quad=quad, globalElement=globalElement, &\\n                             quadratureType=TypeQuadratureOpt%GaussLegendre, &\\n                               order=order, islocal=.TRUE.)\\n\\n  CALL Display(quad, testname//\\\" quad: \\\")\\n\\nEND SUBROUTINE test1\\n\\n!----------------------------------------------------------------------------\\n!                                                                      test2\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test2\\n\\n  order = 2\\n  CALL obj%Initiate(baseContinuity=baseContinuity, &\\n                    baseInterpolation=baseInterpolation, &\\n                    order=order, mesh=meshptr, &\\n                    ipType=TypeQuadratureOpt%equidistance)\\n\\n  telements = 1\\n  globalElement = 1\\n  order = 2\\n\\n  CALL obj%GetQuadraturePoints(quad=quad, globalElement=globalElement, &\\n                             quadratureType=TypeQuadratureOpt%GaussLegendre, &\\n                               order=order, islocal=.TRUE.)\\n\\n  CALL Display(quad, testname//\\\" quad: \\\")\\n\\nEND SUBROUTINE test2\\n\\n!----------------------------------------------------------------------------\\n!                                                                     test3\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test3\\n\\n  order = 2\\n  CALL obj%Initiate(baseContinuity=baseContinuity, &\\n                    baseInterpolation=baseInterpolation, &\\n                    order=order, mesh=meshptr, &\\n                    ipType=TypeQuadratureOpt%equidistance)\\n\\n  telements = 1\\n  globalElement = 1\\n  order = 2\\n\\n  CALL obj%GetQuadraturePoints(quad=quad, globalElement=globalElement, &\\n                             quadratureType=TypeQuadratureOpt%GaussLegendre, &\\n                               order=order, islocal=.TRUE.)\\n\\n  CALL Display(quad, testname //\\\" quad: \\\")\\n\\nEND SUBROUTINE test3\\n\\nEND PROGRAM main\\n\\n! total nodes = 25\\n! total elements = 16\\n! total faces = 40\\n! total edges = 0\\n\");\n;// ./docs/docs-api/FEDOF/examples/_GetQuadraturePoints_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  return (0,jsx_runtime.jsx)(CodeBlock[\"default\"], {\n    language: \"fortran\",\n    children: _GetQuadraturePoints_test_1\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/FEDOF/GetQuadraturePoints.md\n\n\nconst GetQuadraturePoints_frontMatter = {};\nconst GetQuadraturePoints_contentTitle = 'GetQuadraturePoints';\n\nconst assets = {\n\n};\n\n\n\n\nconst GetQuadraturePoints_toc = [{\n  \"value\": \"Interface 1\",\n  \"id\": \"interface-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}, {\n  \"value\": \"Description\",\n  \"id\": \"description\",\n  \"level\": 2\n}, {\n  \"value\": \"Parameters for GetQuadraturePoints1 (Isotropic)\",\n  \"id\": \"parameters-for-getquadraturepoints1-isotropic\",\n  \"level\": 3\n}, {\n  \"value\": \"Parameters for GetQuadraturePoints2 (Anisotropic)\",\n  \"id\": \"parameters-for-getquadraturepoints2-anisotropic\",\n  \"level\": 3\n}, {\n  \"value\": \"Implementation Details\",\n  \"id\": \"implementation-details\",\n  \"level\": 3\n}, {\n  \"value\": \"Usage Example\",\n  \"id\": \"usage-example\",\n  \"level\": 2\n}, {\n  \"value\": \"Important Notes\",\n  \"id\": \"important-notes\",\n  \"level\": 2\n}, {\n  \"value\": \"Related Methods\",\n  \"id\": \"related-methods\",\n  \"level\": 2\n}, {\n  \"value\": \"Example 1\",\n  \"id\": \"example-1\",\n  \"level\": 2\n}, ...toc];\nfunction GetQuadraturePoints_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"getquadraturepoints\",\n        children: \"GetQuadraturePoints\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"GetQuadraturePoints\"\n      }), \" method generates quadrature points for numerical integration over a finite element.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1\",\n      children: \"Interface 1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"MODULE SUBROUTINE obj_GetQuadraturePoints1(obj, quad, globalElement, &\\n                          quadratureType, order, alpha, beta, lambda, islocal)\\n  CLASS(FEDOF_), INTENT(INOUT) :: obj\\n  !! fedof object\\n  TYPE(QuadraturePoint_), INTENT(INOUT) :: quad\\n  !! quadrature points\\n  INTEGER(I4B), INTENT(IN) :: globalElement\\n  !! global element number\\n  INTEGER(I4B), INTENT(IN) :: quadratureType\\n  !! Type of quadrature points\\n  !! GaussLegendre ! GaussLegendreLobatto\\n  !! GaussLegendreRadau, GaussLegendreRadauLeft\\n  !! GaussLegendreRadauRight ! GaussChebyshev\\n  !! GaussChebyshevLobatto ! GaussChebyshevRadau, GaussChebyshevRadauLeft\\n  !! GaussChebyshevRadauRight\\n  INTEGER(I4B), INTENT(IN) :: order\\n  !! Order of integrand\\n  !! either the order or the nips should be present\\n  !! Both nips and order should not be present\\n  REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\\n  !! Jacobi parameter\\n  REAL(DFP), OPTIONAL, INTENT(IN) :: beta\\n  !! Jacobi parameter\\n  REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\\n  !! Ultraspherical parameter\\n  LOGICAL(LGT), OPTIONAL, INTENT(IN) :: islocal\\n  !! if true then global element is local element\\nEND SUBROUTINE obj_GetQuadraturePoints1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"MODULE SUBROUTINE obj_GetQuadraturePoints2(obj, quad, globalElement, &\\n         p, q, r, quadratureType1, quadratureType2, quadratureType3, alpha1, &\\n      beta1, lambda1, alpha2, beta2, lambda2, alpha3, beta3, lambda3, islocal)\\n  CLASS(FEDOF_), INTENT(INOUT) :: obj\\n  !! abstract finite element\\n  TYPE(QuadraturePoint_), INTENT(INOUT) :: quad\\n  !! quadrature point\\n  INTEGER(I4B), INTENT(IN) :: globalElement\\n  !! global element number\\n  INTEGER(I4B), INTENT(IN) :: p\\n  !! order of integrand in x\\n  INTEGER(I4B), INTENT(IN) :: q\\n  !! order of integrand in y\\n  INTEGER(I4B), INTENT(IN) :: r\\n  !! order of integrand in z direction\\n  INTEGER(I4B), INTENT(IN) :: quadratureType1\\n  !! Type of quadrature points ! GaussLegendre ! GaussLegendreLobatto\\n  !! GaussLegendreRadau ! GaussLegendreRadauLeft ! GaussLegendreRadauRight\\n  !! GaussChebyshev ! GaussChebyshevLobatto ! GaussChebyshevRadau\\n  !! GaussChebyshevRadauLeft ! GaussChebyshevRadauRight\\n  INTEGER(I4B), INTENT(IN) :: quadratureType2\\n  !! Type of quadrature points\\n  INTEGER(I4B), INTENT(IN) :: quadratureType3\\n  !! Type of quadrature points\\n  REAL(DFP), OPTIONAL, INTENT(IN) :: alpha1, beta1, lambda1\\n  !! Jacobi parameter and Ultraspherical parameters\\n  REAL(DFP), OPTIONAL, INTENT(IN) :: alpha2, beta2, lambda2\\n  !! Jacobi parameter and Ultraspherical parameters\\n  REAL(DFP), OPTIONAL, INTENT(IN) :: alpha3, beta3, lambda3\\n  !! Jacobi parameter and Ultraspherical parameters\\n  LOGICAL(LGT), OPTIONAL, INTENT(IN) :: islocal\\n  !! if true then the global element is local element\\nEND SUBROUTINE obj_GetQuadraturePoints2\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"description\",\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"GetQuadraturePoints\"\n      }), \" method generates quadrature points for numerical integration over a finite element. It provides two variants:\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetQuadraturePoints1\"\n        }), \" - For isotropic integration (same order in all directions)\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetQuadraturePoints2\"\n        }), \" - For anisotropic integration (different orders in different directions)\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"These quadrature points are essential for accurately evaluating integrals in the finite element formulation.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"parameters-for-getquadraturepoints1-isotropic\",\n      children: \"Parameters for GetQuadraturePoints1 (Isotropic)\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj\"\n        }), \" - Input/Output, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"CLASS(FEDOF_)\"\n        }), \", FEDOF object instance\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"quad\"\n        }), \" - Output, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"TYPE(QuadraturePoint_)\"\n        }), \", quadrature points object\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalElement\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", global or local element number\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"quadratureType\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", type of quadrature rule (Gauss-Legendre, Gauss-Chebyshev, etc.)\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"order\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", polynomial order of the integrand\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"alpha\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"beta\"\n        }), \" - Optional Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"REAL(DFP)\"\n        }), \", Jacobi polynomial parameters\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"lambda\"\n        }), \" - Optional Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"REAL(DFP)\"\n        }), \", Ultraspherical polynomial parameter\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"islocal\"\n        }), \" - Optional Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"LOGICAL(LGT)\"\n        }), \", if true, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalElement\"\n        }), \" is treated as a local element number\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"parameters-for-getquadraturepoints2-anisotropic\",\n      children: \"Parameters for GetQuadraturePoints2 (Anisotropic)\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj\"\n        }), \" - Input/Output, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"CLASS(FEDOF_)\"\n        }), \", FEDOF object instance\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"quad\"\n        }), \" - Output, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"TYPE(QuadraturePoint_)\"\n        }), \", quadrature points object\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalElement\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", global or local element number\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"p\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"q\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"r\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", polynomial orders in x, y, and z directions\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"quadratureType1\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"quadratureType2\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"quadratureType3\"\n        }), \" - Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"INTEGER(I4B)\"\n        }), \", quadrature rule types for each direction\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"alpha1\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"beta1\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"lambda1\"\n        }), \", etc. - Optional Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"REAL(DFP)\"\n        }), \", polynomial parameters for each direction\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"islocal\"\n        }), \" - Optional Input, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"LOGICAL(LGT)\"\n        }), \", if true, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalElement\"\n        }), \" is treated as a local element number\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"implementation-details\",\n      children: \"Implementation Details\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Both methods determine the element topology and delegate to the appropriate finite element object:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ii = obj%mesh%GetElemTopologyIndx(globalElement=globalElement, islocal=islocal)\\n\\nCALL obj%fe(ii)%ptr%GetQuadraturePoints(quad=quad, order=order,\\nquadratureType = quadratureType, alpha = alpha, beta = beta, lambda = lambda)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"For the anisotropic version:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%fe(ii)%ptr%GetQuadraturePoints(quad=quad, p=p, q=q, r=r,\\nquadratureType1 = quadratureType1, quadratureType2 = quadratureType2,\\nquadratureType3 = quadratureType3, alpha1 = alpha1, beta1 = beta1,\\nlambda1 = lambda1, alpha2 = alpha2, beta2 = beta2, lambda2 = lambda2,\\nalpha3 = alpha3, beta3 = beta3, lambda3 = lambda3)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"usage-example\",\n      children: \"Usage Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"! Example to get quadrature points for numerical integration\\nUSE QuadraturePoint_Class\\nTYPE(QuadraturePoint_) :: myQuad\\nTYPE(FEDOF_) :: myDOF\\n\\n! Isotropic quadrature (same order in all directions)\\nCALL myDOF%GetQuadraturePoints(quad=myQuad, globalElement=5, &\\n                               quadratureType=GaussLegendre, order=4)\\n\\n! Anisotropic quadrature (different orders in different directions)\\nCALL myDOF%GetQuadraturePoints(quad=myQuad, globalElement=5, &\\n                               p=4, q=3, r=2, &\\n                               quadratureType1=GaussLegendre, &\\n                               quadratureType2=GaussLegendre, &\\n                               quadratureType3=GaussLegendre)\\n\\n! Now use myQuad for numerical integration\\n! ...\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"important-notes\",\n      children: \"Important Notes\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"quadratureType\"\n        }), \" parameters should use predefined constants for different quadrature rules\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The order should typically be at least twice the polynomial order of the element for accurate integration\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Special parameters (alpha, beta, lambda) allow customization of certain quadrature rules\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Different element types (triangles, tetrahedra, etc.) require appropriate quadrature rule selections\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"related-methods\",\n      children: \"Related Methods\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetLocalElemShapeData\"\n        }), \" - Uses quadrature points to evaluate shape functions\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetGlobalElemShapeData\"\n        }), \" - Maps quadrature points to the global coordinate system\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetCellOrder\"\n        }), \" - Can be used to determine appropriate integration order\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"GetQuadraturePoints\"\n      }), \" method is a fundamental component of finite element analysis, providing the integration points and weights necessary for accurately evaluating weak form integrals in the finite element method.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-1\",\n      children: \"Example 1\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(MDXContent, {})]\n  });\n}\nfunction GetQuadraturePoints_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(GetQuadraturePoints_createMdxContent, {\n      ...props\n    })\n  }) : GetQuadraturePoints_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/FEDOF/GetQuadraturePoints.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);