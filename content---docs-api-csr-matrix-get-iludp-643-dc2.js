"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-csr-matrix-get-iludp-643-dc2"],{

/***/ "./docs/docs-api/CSRMatrix/GetILUDP.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_csr_matrix_get_iludp_md_643_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-csr-matrix-get-iludp-md-643.json\nconst site_docs_docs_api_csr_matrix_get_iludp_md_643_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"CSRMatrix/GetILUDP\",\"title\":\"GetILUDP\",\"description\":\"This routine computes ILUDP preconditioner: incomplete LU factorization with standard droppoing strategy.\",\"source\":\"@site/docs/docs-api/CSRMatrix/GetILUDP.md\",\"sourceDirName\":\"CSRMatrix\",\"slug\":\"/CSRMatrix/GetILUDP\",\"permalink\":\"/docs-api/CSRMatrix/GetILUDP\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/CSRMatrix/GetILUDP.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetILUD\",\"permalink\":\"/docs-api/CSRMatrix/GetILUD\"},\"next\":{\"title\":\"GetILUK\",\"permalink\":\"/docs-api/CSRMatrix/GetILUK\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/CSRMatrix/GetILUDP.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'GetILUDP';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"getiludp\",\n        children: \"GetILUDP\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This routine computes ILUDP preconditioner: incomplete LU factorization with standard droppoing strategy.\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"üìù Interface 1\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE GetILUDP(obj, ALU, JLU, JU, alpha, droptol, &\\n    & permtol, mbloc, IPERM)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: ALU(:)\\n    INTEGER(I4B), ALLOCATABLE, INTENT(INOUT) :: JLU(:)\\n    INTEGER(I4B), ALLOCATABLE, INTENT(INOUT) :: JU(:)\\n    REAL(DFP), INTENT(IN) :: alpha\\n    REAL(DFP), INTENT(IN) :: droptol\\n    REAL(DFP), INTENT(IN) :: permtol\\n    INTEGER(I4B), INTENT(IN) :: mbloc\\n    INTEGER(I4B), ALLOCATABLE, INTENT(INOUT) :: IPERM(:)\\n  END SUBROUTINE GetILUDP\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"droptol\"\n            }), \" is the tolerance used for dropping elements in L and U. elements are dropped if they are .lt. norm(row) x droptol row = row being eliminated\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"permtol\"\n            }), \" is the tolerance ratio used for determning whether to permute two columns. Two columns are permuted only when \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"abs(a(i,j))*permtol .gt. abs(a (i,i))\"\n            })]\n          }), \"\\n\"]\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"info\",\n          children: (0,jsx_runtime.jsx)(_components.p, {\n            children: \"permtol = 0 means never permute, and a good values 0.1 to 0.01]\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"mbloc\"\n              }), \", if desired, permuting can be done only within the diagonal blocks of size mbloc. Useful for PDE problems with several degrees of freedom. If feature not wanted take mbloc=n.\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"iperm\"\n              }), \" contains the permutation arrays, \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"iperm(1:n)\"\n              }), \" old numbers of unknowns, \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"iperm(n+1:2\\\\*n)\"\n              }), \" reverse permutation for new unknowns.\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"abs(a(i,j)) < droptol\"\n              }), \", that is, average magnitude of elements in row i of A\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"alpha\"\n              }), \" is diagonal compensation parameter, alph \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"*\"\n              }), \" (sum of all dropped out elements in a given row) is added to the diagonal element of U of the factorization\"]\n            }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n              children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: \"alph = 0 means the scheme is ILU with threshold,\"\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: \"alph = 1 means the scheme is MILU with threshold.\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"droptol\"\n              }), \" is Threshold parameter for dropping small terms in the factorization. During the elimination, a term a(i,j) is dropped whenever \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"abs (a(i,j)) .lt. droptol\"\n              })]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"obj\"\n              }), \" matrix stored in Compressed Sparse Row format.\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"ALU,JLU\"\n              }), \", matrix stored in Modified Sparse Row (MSR) Format containing the L and U factors together. The diagonal (stored in ALU(1\", \":n\", \") ) is inverted. Each ith row of the ALU,JLU matrix contains the ith row of L (excluding the diagonal entry=1) followed by the ith row of U.\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [(0,jsx_runtime.jsx)(_components.code, {\n                children: \"JU\"\n              }), \" integer array of length n containing the pointers to the beginning of each row of U in the matrix \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"ALU,JLU\"\n              }), \".\"]\n            }), \"\\n\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n              children: [\"Theresholding in L and U as set by \", (0,jsx_runtime.jsx)(_components.code, {\n                children: \"droptol\"\n              }), \". Any element whose MAGNITUDE is less than some tolerance (relative to the abs value of\\ndiagonal element in U) is dropped.\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"iface2\",\n        label: \"Interface 2\",\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE GetILUDP(obj, Pmat, alpha, droptol, &\\n    & permtol, mbloc, IPERM)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: Pmat\\n    REAL(DFP), INTENT(IN) :: alpha\\n    REAL(DFP), INTENT(IN) :: droptol\\n    REAL(DFP), INTENT(IN) :: permtol\\n    INTEGER(I4B), INTENT(IN) :: mbloc\\n    INTEGER(I4B), ALLOCATABLE, INTENT(INOUT) :: IPERM(:)\\n  END SUBROUTINE GetILUDP\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine is similar to interface 1, but in this interface ILU factorization is returned as an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"CSRMatrix_\"\n          }), \".\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"‚óâ Close\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/CSRMatrix/GetILUDP.md\n");

/***/ })

}]);