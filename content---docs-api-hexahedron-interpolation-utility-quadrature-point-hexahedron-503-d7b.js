"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-hexahedron-interpolation-utility-quadrature-point-hexahedron-503-d7b"],{

/***/ "./docs/docs-api/HexahedronInterpolationUtility/QuadraturePoint_Hexahedron.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ QuadraturePoint_Hexahedron_contentTitle),\n  \"default\": () => (/* binding */ QuadraturePoint_Hexahedron_MDXContent),\n  frontMatter: () => (/* binding */ QuadraturePoint_Hexahedron_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_hexahedron_interpolation_utility_quadrature_point_hexahedron_md_503_namespaceObject),\n  toc: () => (/* binding */ QuadraturePoint_Hexahedron_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-hexahedron-interpolation-utility-quadrature-point-hexahedron-md-503.json\nconst site_docs_docs_api_hexahedron_interpolation_utility_quadrature_point_hexahedron_md_503_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"HexahedronInterpolationUtility/QuadraturePoint_Hexahedron\",\"title\":\"QuadraturePoint\",\"description\":\"Returns quadrature points on hexahedron.\",\"source\":\"@site/docs/docs-api/HexahedronInterpolationUtility/QuadraturePoint_Hexahedron.md\",\"sourceDirName\":\"HexahedronInterpolationUtility\",\"slug\":\"/HexahedronInterpolationUtility/QuadraturePoint_Hexahedron\",\"permalink\":\"/docs-api/HexahedronInterpolationUtility/QuadraturePoint_Hexahedron\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/HexahedronInterpolationUtility/QuadraturePoint_Hexahedron.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"LagrangeInDOF\",\"permalink\":\"/docs-api/HexahedronInterpolationUtility/LagrangeInDOF_Hexahedron\"},\"next\":{\"title\":\"VertexBasis\",\"permalink\":\"/docs-api/HexahedronInterpolationUtility/VertexBasis_Hexahedron\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/HexahedronInterpolationUtility/_QuadraturePoint_Hexahedron_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"program main\\n  use easifembase\\n  implicit none\\n  integer( i4b ) :: i1, i2, order\\n  real( dfp ), allocatable :: x(:,:)\\n  type(string) :: astr\\n  order=1\\n  x = QuadraturePoint_Hexahedron(  &\\n  & order=order, &\\n  & quadType=GaussLegendre )\\n  call display(x, \\\"ans:\\\")\\n\\n\\n  order=2\\n  x = QuadraturePoint_Hexahedron(  &\\n  & order=order, &\\n  & quadType=GaussLegendre )\\n  call display(x, \\\"ans:\\\")\\nend program main\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/HexahedronInterpolationUtility/_QuadraturePoint_Hexahedron_test_2.md\n\n\nconst _QuadraturePoint_Hexahedron_test_2_frontMatter = {};\nconst _QuadraturePoint_Hexahedron_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _QuadraturePoint_Hexahedron_test_2_toc = [];\nfunction _QuadraturePoint_Hexahedron_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"program main\\n  use easifembase\\n  implicit none\\n  integer( i4b ) :: i1, i2, order\\n  real( dfp ), allocatable :: x(:,:)\\n  type(string) :: astr\\n  order=1\\n  x = QuadraturePoint_Hexahedron(  &\\n  & order=order, &\\n  & quadType=GaussLegendreLobatto )\\n  call display(x, \\\"ans:\\\")\\n\\n\\n  order=2\\n  x = QuadraturePoint_Hexahedron(  &\\n  & order=order, &\\n  & quadType=GaussLegendreLobatto )\\n  call display(x, \\\"ans:\\\")\\nend program main\\n\"\n    })\n  });\n}\nfunction _QuadraturePoint_Hexahedron_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_QuadraturePoint_Hexahedron_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _QuadraturePoint_Hexahedron_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/HexahedronInterpolationUtility/_QuadraturePoint_Hexahedron_test_3.md\n\n\nconst _QuadraturePoint_Hexahedron_test_3_frontMatter = {};\nconst _QuadraturePoint_Hexahedron_test_3_contentTitle = undefined;\n\n\n\n\n\nconst _QuadraturePoint_Hexahedron_test_3_toc = [];\nfunction _QuadraturePoint_Hexahedron_test_3_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"program main\\n  use easifembase\\n  implicit none\\n  integer( i4b ) :: i1, i2, order\\n  real( dfp ), allocatable :: x(:,:)\\n  type(string) :: astr\\n  order=1\\n  x = QuadraturePoint_Hexahedron(  &\\n  & order=order, &\\n  & quadType=GaussChebyshev )\\n  call display(x, \\\"ans:\\\")\\n\\n\\n  order=2\\n  x = QuadraturePoint_Hexahedron(  &\\n  & order=order, &\\n  & quadType=GaussChebyshev )\\n  call display(x, \\\"ans:\\\")\\nend program main\\n\"\n    })\n  });\n}\nfunction _QuadraturePoint_Hexahedron_test_3_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_QuadraturePoint_Hexahedron_test_3_createMdxContent, {\n      ...props\n    })\n  }) : _QuadraturePoint_Hexahedron_test_3_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/HexahedronInterpolationUtility/QuadraturePoint_Hexahedron.md\n\n\nconst QuadraturePoint_Hexahedron_frontMatter = {};\nconst QuadraturePoint_Hexahedron_contentTitle = 'QuadraturePoint';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\n\nconst QuadraturePoint_Hexahedron_toc = [{\n  \"value\": \"Interface 1\",\n  \"id\": \"interface-1\",\n  \"level\": 2\n}, ...toc, ..._QuadraturePoint_Hexahedron_test_2_toc, ..._QuadraturePoint_Hexahedron_test_3_toc, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 3\",\n  \"id\": \"interface-3\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 4\",\n  \"id\": \"interface-4\",\n  \"level\": 2\n}];\nfunction QuadraturePoint_Hexahedron_createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    mdxAdmonitionTitle: \"mdxAdmonitionTitle\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"quadraturepoint\",\n        children: \"QuadraturePoint\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns quadrature points on hexahedron.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1\",\n      children: \"Interface 1\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE QuadraturePoint_Hexahedron\\n  MODULE FUNCTION QuadraturePoint_Hexahedron1( &\\n    & order, &\\n    & quadType, &\\n    & xij, &\\n    & alpha, &\\n    & beta, &\\n    & lambda) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: order\\n    !! order of integrand in x, y, and z direction\\n    INTEGER(I4B), INTENT(IN) :: quadType\\n    !! quadrature point type\\n    !! GaussLegendre\\n    !! GaussLegendreLobatto\\n    !! GaussLegendreRadauLeft\\n    !! GaussLegendreRadauRight\\n    !! GaussChebyshev1\\n    !! GaussChebyshev1Lobatto\\n    !! GaussChebyshev1RadauLeft\\n    !! GaussChebyshev1RadauRight\\n    !! GaussUltraspherical\\n    !! GaussUltrasphericalLobatto\\n    !! GaussUltrasphericalRadauLeft\\n    !! GaussUltrasphericalRadauRight\\n    !! GaussJacobi\\n    !! GaussJacobiLobatto\\n    !! GaussJacobiRadauLeft\\n    !! GaussJacobiRadauRight\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: xij(:, :)\\n    !! nodal coordiantes of hexahedron in xij format\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\\n    !! Jacobi parameter\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: beta\\n    !! Jacobi parameter\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\\n    !! Ultraspherical parameter\\n    REAL(DFP), ALLOCATABLE :: ans(:, :)\\n    !! quadrature points in xij format\\n  END FUNCTION QuadraturePoint_Hexahedron1\\nEND INTERFACE QuadraturePoint_Hexahedron\\n\"\n          })\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"info\",\n          children: (0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"order\"\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [(0,jsx_runtime.jsx)(_components.code, {\n            children: \"order\"\n          }), \" of accuracy in x, y, and z directions.\"]\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"info\",\n          children: (0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"xij\"\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"xij\"\n            }), \" contains nodal coordinates of hexahedron in \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"xij\"\n            }), \" format.\", \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n              children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n                children: [\"The number of rows in \", (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"xij\"\n                }), \" is 3\"]\n              }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n                children: [\"The number of columns in \", (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"xij\"\n                }), \" is 8\"]\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: \"If xij is absent then biunit hexahedron is assumed.\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"info\",\n          children: (0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"quadType\"\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"quadType\"\n            }), \" is quadrature point type, it can take following values\", \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n              children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussLegendre\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussLegendreLobatto\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussLegendreRadauLeft\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussLegendreRadauRight\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussChebyshev\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussChebyshevLobatto\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussChebyshevRadauLeft\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussChebyshevRadauRight\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussJacobi\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussJacobiLobatto\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussJacobiRadauLeft\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussJacobiRadauRight\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussUltraspherical\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussUltrasphericalLobatto\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussUltrasphericalRadauLeft\"\n                })\n              }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n                children: (0,jsx_runtime.jsx)(_components.code, {\n                  children: \"GaussUltrasphericalRadauRight\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"info\",\n          children: (0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"alpha, beta, lambda\"\n            })\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"alpha\"\n            }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"beta\"\n            }), \" are parameters for Jacobi quadrature points\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"lambda\"\n            }), \" is the parameter for Ultraspherical quadrature points\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ Example 1\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example2\",\n        label: \"Example 2\",\n        children: (0,jsx_runtime.jsx)(_QuadraturePoint_Hexahedron_test_2_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example3\",\n        label: \"Example 3\",\n        children: (0,jsx_runtime.jsx)(_QuadraturePoint_Hexahedron_test_3_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE QuadraturePoint_Hexahedron\\n  MODULE FUNCTION QuadraturePoint_Hexahedron2(  &\\n    & p, q, r, &\\n    & quadType1, quadType2, quadType3, &\\n    & xij, &\\n    & alpha1, beta1, lambda1, &\\n    & alpha2, beta2, lambda2, &\\n    & alpha3, beta3, lambda3 &\\n    & ) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: p\\n    !! order of integrand in x direction\\n    INTEGER(I4B), INTENT(IN) :: q\\n    !! order of  integrand in y direction\\n    INTEGER(I4B), INTENT(IN) :: r\\n    !! order of  integrand in z direction\\n    INTEGER(I4B), INTENT(IN) :: quadType1, quadType2, quadType3\\n    !! quadrature point type in x direction\\n    !! Equidistance\\n    !! GaussLegendre\\n    !! GaussLegendreLobatto\\n    !! GaussLegendreRadauLeft\\n    !! GaussLegendreRadauRight\\n    !! GaussChebyshev1\\n    !! GaussChebyshev1Lobatto\\n    !! GaussChebyshev1RadauLeft\\n    !! GaussChebyshev1RadauRight\\n    !! GaussUltraspherical\\n    !! GaussUltrasphericalLobatto\\n    !! GaussUltrasphericalRadauLeft\\n    !! GaussUltrasphericalRadauRight\\n    !! GaussJacobi\\n    !! GaussJacobiLobatto\\n    !! GaussJacobiRadauLeft\\n    !! GaussJacobiRadauRight\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: xij(:, :)\\n    !! four vertices of quadrangle in xij format\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha1, beta1, lambda1\\n    !! Jacobi parameter and Ultraspherical parameter\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha2, beta2, lambda2\\n    !! Jacobi parameter and Ultraspherical parameter\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha3, beta3, lambda3\\n    !! Jacobi parameter and Ultraspherical parameter\\n    REAL(DFP), ALLOCATABLE :: ans(:, :)\\n    !! interpolation points in xij format\\n  END FUNCTION QuadraturePoint_Hexahedron2\\nEND INTERFACE QuadraturePoint_Hexahedron\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"p,q,r\"\n        })\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Order of accuracy in x, y, and z directions.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.mdxAdmonitionTitle, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"quadType1\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"quadType2\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"quadType3\"\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Quadrature type in x, y, and z direction. It can take following values\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussLegendre\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussLegendreLobatto\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussLegendreRadauLeft\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussLegendreRadauRight\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussChebyshev\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussChebyshevLobatto\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussChebyshevRadauLeft\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussChebyshevRadauRight\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussJacobi\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussJacobiLobatto\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussJacobiRadauLeft\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussJacobiRadauRight\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussUltraspherical\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussUltrasphericalLobatto\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussUltrasphericalRadauLeft\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GaussUltrasphericalRadauRight\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.mdxAdmonitionTitle, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"alpha\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"beta\"\n        }), \", and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"lambda\"\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"These are parameters of Jacobi and Ultraspherical quadrature points.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-3\",\n      children: \"Interface 3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE QuadraturePoint_Hexahedron\\n  MODULE FUNCTION QuadraturePoint_Hexahedron3(nips, quadType, &\\n    & xij, alpha, beta, lambda) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: nips(1)\\n    !! number of integration points in x, y, and z direction\\n    INTEGER(I4B), INTENT(IN) :: quadType\\n    !! interpolation point type\\n    !! GaussLegendre\\n    !! GaussLegendreLobatto\\n    !! GaussLegendreRadauLeft\\n    !! GaussLegendreRadauRight\\n    !! GaussChebyshev1\\n    !! GaussChebyshev1Lobatto\\n    !! GaussChebyshev1RadauLeft\\n    !! GaussChebyshev1RadauRight\\n    !! GaussUltraspherical\\n    !! GaussUltrasphericalLobatto\\n    !! GaussUltrasphericalRadauLeft\\n    !! GaussUltrasphericalRadauRight\\n    !! GaussJacobi\\n    !! GaussJacobiLobatto\\n    !! GaussJacobiRadauLeft\\n    !! GaussJacobiRadauRight\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: xij(:, :)\\n    !! four vertices of quadrangle in xij format\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\\n    !! Jacobi parameter\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: beta\\n    !! Jacobi parameter\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\\n    !! Ultraspherical parameter\\n    REAL(DFP), ALLOCATABLE :: ans(:, :)\\n    !! interpolation points in xij format\\n  END FUNCTION QuadraturePoint_Hexahedron3\\nEND INTERFACE QuadraturePoint_Hexahedron\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsx)(_components.mdxAdmonitionTitle, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nips\"\n        })\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Number of integration points in x, y, and z direction.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-4\",\n      children: \"Interface 4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE QuadraturePoint_Hexahedron\\n  MODULE FUNCTION QuadraturePoint_Hexahedron4(  &\\n    & nipsx, nipsy, nipsz, &\\n    & quadType1, quadType2, quadType3, &\\n    & xij, &\\n    & alpha1, beta1, lambda1, &\\n    & alpha2, beta2, lambda2, &\\n    & alpha3, beta3, lambda3 &\\n    & ) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: nipsx(1)\\n    !! order of integrand in x direction\\n    INTEGER(I4B), INTENT(IN) :: nipsy(1)\\n    !! order of  integrand in y direction\\n    INTEGER(I4B), INTENT(IN) :: nipsz(1)\\n    !! order of  integrand in z direction\\n    INTEGER(I4B), INTENT(IN) :: quadType1, quadType2, quadType3\\n    !! quadrature point type in x, y, and z direction\\n    !! Equidistance\\n    !! GaussLegendre\\n    !! GaussLegendreLobatto\\n    !! GaussLegendreRadauLeft\\n    !! GaussLegendreRadauRight\\n    !! GaussChebyshev1\\n    !! GaussChebyshev1Lobatto\\n    !! GaussChebyshev1RadauLeft\\n    !! GaussChebyshev1RadauRight\\n    !! GaussUltraspherical\\n    !! GaussUltrasphericalLobatto\\n    !! GaussUltrasphericalRadauLeft\\n    !! GaussUltrasphericalRadauRight\\n    !! GaussJacobi\\n    !! GaussJacobiLobatto\\n    !! GaussJacobiRadauLeft\\n    !! GaussJacobiRadauRight\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: xij(:, :)\\n    !! four vertices of quadrangle in xij format\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha1, beta1, lambda1\\n    !! Jacobi and Ultraspherical parameter\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha2, beta2, lambda2\\n    !! Jacobi and Ultraspherical parameter\\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha3, beta3, lambda3\\n    !! Jacobi and Ultraspherical parameter\\n    REAL(DFP), ALLOCATABLE :: ans(:, :)\\n    !! interpolation points in xij format\\n  END FUNCTION QuadraturePoint_Hexahedron4\\nEND INTERFACE QuadraturePoint_Hexahedron\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.mdxAdmonitionTitle, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"nipsx\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nipsy\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nipsz\"\n        })]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Number of integration points in x, y, and z direction.\"\n    })]\n  });\n}\nfunction QuadraturePoint_Hexahedron_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(QuadraturePoint_Hexahedron_createMdxContent, {\n      ...props\n    })\n  }) : QuadraturePoint_Hexahedron_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/HexahedronInterpolationUtility/QuadraturePoint_Hexahedron.md\n");

/***/ })

}]);