"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-pl-plot-pl-plot-getting-started-18-c-ea7"],{

/***/ "./docs/docs-api/PLPlot/PLPlot_GettingStarted.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_pl_plot_pl_plot_getting_started_md_18c_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-pl-plot-pl-plot-getting-started-md-18c.json\nconst site_docs_docs_api_pl_plot_pl_plot_getting_started_md_18c_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"PLPlot/PLPlot_GettingStarted\",\"title\":\"PLPlot Getting Started\",\"description\":\"A Simple Example\",\"source\":\"@site/docs/docs-api/PLPlot/PLPlot_GettingStarted.md\",\"sourceDirName\":\"PLPlot\",\"slug\":\"/PLPlot/PLPlot_GettingStarted\",\"permalink\":\"/docs-api/PLPlot/PLPlot_GettingStarted\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/PLPlot/PLPlot_GettingStarted.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{\"title\":\"PLPlot Getting Started\"},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"PLPlot Devices\",\"permalink\":\"/docs-api/PLPlot/PLPlot_Devices\"},\"next\":{\"title\":\"PLPlot Installation\",\"permalink\":\"/docs-api/PLPlot/PLPlot_Installation\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/PLPlot/PLPlot_GettingStarted.md\n\n\nconst frontMatter = {\n\ttitle: 'PLPlot Getting Started'\n};\nconst contentTitle = 'PLPlot Getting Started';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"A Simple Example\",\n  \"id\": \"a-simple-example\",\n  \"level\": 2\n}, {\n  \"value\": \"PLINIT\",\n  \"id\": \"plinit\",\n  \"level\": 2\n}, {\n  \"value\": \"PLSDEV\",\n  \"id\": \"plsdev\",\n  \"level\": 2\n}, {\n  \"value\": \"PLENV\",\n  \"id\": \"plenv\",\n  \"level\": 2\n}, {\n  \"value\": \"PLBOX\",\n  \"id\": \"plbox\",\n  \"level\": 2\n}, {\n  \"value\": \"PLLAB\",\n  \"id\": \"pllab\",\n  \"level\": 2\n}, {\n  \"value\": \"PLPOIN\",\n  \"id\": \"plpoin\",\n  \"level\": 2\n}, {\n  \"value\": \"PLSTRING\",\n  \"id\": \"plstring\",\n  \"level\": 2\n}, {\n  \"value\": \"PLSYM\",\n  \"id\": \"plsym\",\n  \"level\": 2\n}, {\n  \"value\": \"PLLINE\",\n  \"id\": \"plline\",\n  \"level\": 2\n}, {\n  \"value\": \"COLORS\",\n  \"id\": \"colors\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"plplot-getting-started\",\n        children: \"PLPlot Getting Started\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"a-simple-example\",\n      children: \"A Simple Example\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n  USE easifemBase\\n  IMPLICIT NONE\\n  INTEGER, PARAMETER :: NSIZE = 101\\n  REAL( DFP ), DIMENSION(NSIZE) :: x, y\\n  REAL( DFP ) :: xmin = 0.0, xmax = 1.0, ymin = 0.0, ymax = 100.0\\n  INTEGER :: ierr\\n  ! Prepare data to be plotted.\\n  x = arange(0, NSIZE-1) / REAL(NSIZE-1, DFP)\\n  y = ymax * x**2\\n  ! Parse and process command line arguments\\n  ierr = PLPARSEOPTS( PL_PARSE_FULL )\\n  IF(ierr .NE. 0) THEN\\n    CALL Display( \\\"plparseopts error\\\" )\\n    STOP\\n  END IF\\n  !> Initiate the PLPLOT enviroment\\n  CALL PLINIT\\n  ! Create a labelled box to hold the plot.\\n  ! we have specified the box dimension\\n  CALL PLENV( xmin, xmax, ymin, ymax, 0, 0 )\\n  CALL PLLAB( \\\"x\\\", \\\"y=100 x#u2#d\\\", \\\"Simple PLplot demo of a 2D line plot\\\" )\\n  ! Plot the data that was prepared above.\\n  CALL PLLINE( x, y )\\n  ! Close PLplot library\\n  CALL PLEND\\nEND PROGRAM main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"plinit\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/initializing.html\",\n        children: \"PLINIT\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This routine should be called before doing anything with PLPLOT. It is the main initialization routine for PLPLOT.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"There are several routines affecting the initialization that must be called \", (0,jsx_runtime.jsx)(_components.em, {\n        children: \"before\"\n      }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plinit.html\",\n        title: \"plinit: Initialize PLplot\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plinit\"\n        })\n      }), \", if they are used. The function \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plsdev.html\",\n        title: \"plsdev: Set the device (keyword) name\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plsdev\"\n        })\n      }), \" allows you to set the device explicitly. The function \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plsetopt.html\",\n        title: \"plsetopt: Set any command-line option\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plsetopt\"\n        })\n      }), \" allows you to set any command-line option internally in your code. The function \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plssub.html\",\n        title: \"plssub: Set the number of subpages in x and y\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plssub\"\n        })\n      }), \" may be called to divide the output device plotting area into several subpages of equal size, each of which can be used separately.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h1, {\n      id: \"plend\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/finishing.html\",\n        children: \"PLEND\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Always call \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plend.html\",\n        title: \"plend: End plotting session\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plend\"\n        })\n      }), \" to close any output plot files and to free up resources.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"plsdev\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plsdev.html\",\n        children: \"PLSDEV\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The output device can be a terminal, disk file, window system, pipe, or socket. If the output device has not already been specified when \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plinit.html\",\n        title: \"plinit: Initialize PLplot\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plinit\"\n        })\n      }), \" is called, the output device will be taken from the value of the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"PLPLOT_DEV\"\n      }), \" environment variable. If this variable is not set (or is empty), a list of valid output devices is given and the user is prompted for a choice.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"The device can be specified BEFORE calling \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plinit.html\",\n          title: \"plinit: Initialize PLplot\",\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            children: \"plinit\"\n          })\n        }), \" by:\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL PLSDEV(STRING::devname)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"An ASCII character string containing the device name keyword of the required output device. If \", (0,jsx_runtime.jsx)(_components.em, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            children: \"devname\"\n          })\n        }), \" is NULL or if the first character of the string is a ``?'', the normal (prompted) start up is used.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Following is the list of device name.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-txt\",\n        children: \"Plotting Options:\\n < 1> xwin       X-Window (Xlib)\\n < 2> tk         Tcl/TK Window\\n < 3> ps         PostScript File (monochrome)\\n < 4> psc        PostScript File (color)\\n < 5> xfig       Fig file\\n < 6> null       Null device\\n < 7> ntk        New tk driver\\n < 8> tkwin      New tk driver\\n < 9> mem        User-supplied memory device\\n <10> wxwidgets  wxWidgets Driver\\n <11> psttf      PostScript File (monochrome)\\n <12> psttfc     PostScript File (color)\\n <13> svg        Scalable Vector Graphics (SVG 1.1)\\n <14> pdf        Portable Document Format PDF\\n <15> bmpqt      Qt Windows bitmap driver\\n <16> jpgqt      Qt jpg driver\\n <17> pngqt      Qt png driver\\n <18> ppmqt      Qt ppm driver\\n <19> tiffqt     Qt tiff driver\\n <20> svgqt      Qt SVG driver\\n <21> qtwidget   Qt Widget\\n <22> epsqt      Qt EPS driver\\n <23> pdfqt      Qt PDF driver\\n <24> extqt      External Qt driver\\n <25> memqt      Memory Qt driver\\n <26> xcairo     Cairo X Windows Driver\\n <27> pdfcairo   Cairo PDF Driver\\n <28> pscairo    Cairo PS Driver\\n <29> epscairo   Cairo EPS Driver\\n <30> svgcairo   Cairo SVG Driver\\n <31> pngcairo   Cairo PNG Driver\\n <32> memcairo   Cairo Memory Driver\\n <33> extcairo   Cairo External Context Driver\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"I prefer one of the following\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL PLSDEV(\\\"qtwidget\\\")\\nCALL PLSDEV(\\\"xwin\\\")\\nCALL PLSDEV(\\\"wxwidgets\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"plenv\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plenv.html\",\n        children: \"PLENV\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The function \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plenv.html\",\n        title: \"plenv: Set up standard window and draw box\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plenv\"\n        })\n      }), \" is used to define the scales and axes for simple graphs. \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plenv.html\",\n        title: \"plenv: Set up standard window and draw box\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plenv\"\n        })\n      }), \" starts a new picture on the next subpage (or a new page if necessary), and defines the ranges of the variables required. The routine will also draw a box, axes, and numeric labels if requested.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"plenv (xmin, xmax, ymin, ymax, just, axis)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"plbox\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plbox.html\",\n        children: \"PLBOX\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"plbox (xopt, xtick, nxsub, yopt, ytick, nysub)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"pllab\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/labelling.html\",\n        children: \"PLLAB\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The function \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/pllab.html\",\n        title: \"pllab: Simple routine to write labels\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"pllab\"\n        })\n      }), \" may be called after \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plenv.html\",\n        title: \"plenv: Set up standard window and draw box\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plenv\"\n        })\n      }), \" to write labels on the x and y axes, and at the top of the graph.  \"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"plpoin\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plpoin.html\",\n        children: \"PLPOIN\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL PLPOIN(REAL::X(:),REAL::Y(:),INT::CODE)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"If \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"0 < code < 32\"\n        }), \", then Hershey symbols is plotted. If \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"32 <= code <= 127\"\n        }), \" the corresponding printable ASCII character is plotted.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.img, {\n        src: \"http://plplot.sourceforge.net/examples-data/demo06/x06.01.png\",\n        alt: \"\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"plstring\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plstring.html\",\n        children: \"PLSTRING\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL PLSTRING(REAL::X(:),REAL::Y(:),STRING::STRING)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Plot a glyph at the specified points. The glyph is specified with a PLplot user string.  \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plstring.html\",\n        title: \"plstring: Plot a glyph at the specified points\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plstring\"\n        })\n      }), \" is now the preferred way of drawing points for unicode-aware devices because it gives users full access via a UTF-8 string to any unicode glyph they prefer for the symbol that is is available via system fonts.\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"See the following \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.org/examples.php?demo=07\",\n        children: \"example 7\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"plsym\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plsym.html\",\n        children: \"PLSYM\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"TO BE ADDED LATER.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"plline\",\n      children: (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plline.html\",\n        children: \"PLLINE\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [(0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/plline.html\",\n        title: \"plline: Draw a line\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"plline\"\n        })\n      }), \" draws a line or curve. The curve consists of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"n-1\"\n      }), \" line segments joining the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"n\"\n      }), \" points in the input arrays. For single line segments, \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"http://plplot.sourceforge.net/docbook-manual/plplot-html-5.15.0/pljoin.html\",\n        title: \"pljoin: Draw a line between two points\",\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"pljoin\"\n        })\n      }), \" is used to join two points.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"colors\",\n      children: \"COLORS\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"PLCOL0\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"PLSCOL0\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"PLCOLBG\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: (0,jsx_runtime.jsx)(_components.img, {\n        src: \"http://plplot.sourceforge.net/examples-data/demo02/x02.01.png\",\n        alt: \"\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Following example will print black on white\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n USE easifemBase\\n IMPLICIT NONE\\n INTEGER, PARAMETER :: NSIZE = 101\\n REAL( DFP ), DIMENSION(NSIZE) :: x, y\\n REAL( DFP ) :: xmin = 0.0, xmax = 1.0, ymin = 0.0, ymax = 100.0\\n INTEGER :: ierr\\n ! Prepare data to be plotted.\\n x = arange(0, NSIZE-1) / REAL(NSIZE-1, DFP)\\n y = ymax * x**2\\n ! Parse and process command line arguments\\n ierr = PLPARSEOPTS( PL_PARSE_FULL )\\n IF(ierr .NE. 0) THEN\\n   CALL Display( \\\"plparseopts error\\\" )\\n   STOP\\n END IF\\n !> Initiate the PLPLOT enviroment\\n CALL PLSDEV(\\\"qtwidget\\\")\\n CALL PLSCOLBG(255,255,255)\\n CALL PLINIT\\n CALL PLSCOL0(0, 0,0,0)\\n CALL PLCOL0(0)\\n ! COLOR\\n ! Create a labelled box to hold the plot.\\n ! we have specified the box dimension\\n CALL PLENV( xmin, xmax, ymin, ymax, 0, 0 )\\n CALL PLLAB( \\\"x\\\", \\\"y=100 x#u2#d\\\", \\\"Simple PLplot demo of a 2D line plot\\\" )\\n ! Plot the data that was prepared above.\\n CALL PLPOIN( x, y, 4 )\\n ! Close PLplot library\\n CALL PLEND\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/PLPlot/PLPlot_GettingStarted.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);