"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-fedof-get-vertex-dof-3-f-9-57a"],{

/***/ "./docs/docs-api/FEDOF/GetVertexDOF.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ GetVertexDOF_contentTitle),\n  \"default\": () => (/* binding */ GetVertexDOF_MDXContent),\n  frontMatter: () => (/* binding */ GetVertexDOF_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_fedof_get_vertex_dof_md_3f9_namespaceObject),\n  toc: () => (/* binding */ GetVertexDOF_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-fedof-get-vertex-dof-md-3f9.json\nconst site_docs_docs_api_fedof_get_vertex_dof_md_3f9_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"FEDOF/GetVertexDOF\",\"title\":\"GetVertexDOF\",\"description\":\"The GetVertexDOF method retrieves the degree of freedom (DOF) number associated with a specified vertex (node) in the mesh. In finite element analysis, each vertex in the mesh is typically assigned one or more degrees of freedom, which represent the unknown values to be solved for.\",\"source\":\"@site/docs/docs-api/FEDOF/GetVertexDOF.md\",\"sourceDirName\":\"FEDOF\",\"slug\":\"/FEDOF/GetVertexDOF\",\"permalink\":\"/docs-api/FEDOF/GetVertexDOF\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEDOF/GetVertexDOF.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetTotalVertexDOF\",\"permalink\":\"/docs-api/FEDOF/GetTotalVertexDOF\"},\"next\":{\"title\":\"ImportFromToml\",\"permalink\":\"/docs-api/FEDOF/ImportFromToml\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js + 27 modules\nvar CodeBlock = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js\");\n;// ./node_modules/raw-loader/dist/cjs.js!./docs/docs-api/FEDOF/examples/_GetVertexDOF_test_1.F90\n/* harmony default export */ const _GetVertexDOF_test_1 = (\"!> author: Vikas Sharma, Ph. D.\\n! date: 2025-06-07\\n! summary:  Testing GetVertexDOF method of FEDOF class\\n! H1 Heirarchical Second Order Triangular Mesh\\n\\nPROGRAM main\\nUSE FEDOF_Class\\nUSE FEDomain_Class\\nUSE AbstractMesh_Class\\nUSE HDF5File_Class\\nUSE Display_Method\\nUSE GlobalData\\nUSE Test_Method\\nUSE ExceptionHandler_Class, ONLY: e, EXCEPTION_INFORMATION\\nUSE AppendUtility\\nUSE ArangeUtility\\nuse ReallocateUtility\\n\\nIMPLICIT NONE\\n\\nCHARACTER(*), PARAMETER :: &\\n  filename = \\\"../../FEMesh/examples/meshdata/small_tri3_mesh.h5\\\", &\\n  baseContinuity = \\\"H1\\\", &\\n  baseInterpolation = \\\"Heirarchical\\\", &\\n  testname = baseContinuity//\\\" \\\"//baseInterpolation\\n\\nTYPE(FEDOF_) :: fedof\\nTYPE(FEDomain_) :: dom\\nCLASS(AbstractMesh_), POINTER :: meshptr => NULL()\\nTYPE(HDF5File_) :: meshfile\\nINTEGER(I4B), ALLOCATABLE :: found(:), want(:)\\nINTEGER(I4B) :: order, totalVertexNodes, totalFaces\\nLOGICAL(LGT) :: isok\\n\\nCALL e%SetQuietMode(EXCEPTION_INFORMATION, .TRUE.)\\n\\nCALL meshfile%Initiate(filename, mode=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL dom%Initiate(meshfile, '')\\nmeshptr => dom%GetMeshPointer()\\ntotalVertexNodes = meshptr%GetTotalVertexNodes()\\ntotalFaces = meshptr%GetTotalFaces()\\n\\nCALL test1\\nCALL test2\\nCALL test3\\n\\nCALL dom%DEALLOCATE()\\nCALL meshfile%DEALLOCATE()\\n\\nCONTAINS\\n\\n!----------------------------------------------------------------------------\\n!                                                                      test1\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test1\\n\\n  INTEGER(I4B) :: tsize\\n\\n  order = 1\\n  CALL fedof%Initiate(baseContinuity=baseContinuity, &\\n                      baseInterpolation=baseInterpolation, &\\n                      order=order, mesh=meshptr)\\n\\n  CALL Reallocate(found, 2, want, 2)\\n  CALL fedof%GetVertexDOF(globalNode=1, islocal=.TRUE., &\\n                            ans=found, tsize=tsize)\\n\\n  want(1) = 1\\n\\n  isok = ALL(found == want)\\n  CALL OK(isok, testname//\\\" GetVertexDOF (order= \\\"//ToString(order)//\\\"): \\\")\\n\\nEND SUBROUTINE test1\\n\\n!----------------------------------------------------------------------------\\n!                                                                      test2\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test2\\n\\n  INTEGER(I4B) :: tsize\\n\\n  order = 2\\n  CALL fedof%Initiate(baseContinuity=baseContinuity, &\\n                      baseInterpolation=baseInterpolation, &\\n                      order=order, mesh=meshptr)\\n\\n  CALL Reallocate(found, 2, want, 2)\\n  CALL fedof%GetVertexDOF(globalNode=1, islocal=.TRUE., &\\n                            ans=found, tsize=tsize)\\n\\n  want(1) = 1\\n\\n  isok = ALL(found == want)\\n  CALL OK(isok, testname//\\\" GetVertexDOF (order= \\\"//ToString(order)//\\\"): \\\")\\n\\nEND SUBROUTINE test2\\n\\n!----------------------------------------------------------------------------\\n!                                                                     test3\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test3\\n\\n  INTEGER(I4B) :: tsize\\n\\n  order = 3\\n  CALL fedof%Initiate(baseContinuity=baseContinuity, &\\n                      baseInterpolation=baseInterpolation, &\\n                      order=order, mesh=meshptr)\\n\\n  CALL Reallocate(found, 2, want, 2)\\n  CALL fedof%GetVertexDOF(globalNode=1, islocal=.TRUE., &\\n                            ans=found, tsize=tsize)\\n\\n  want(1) = 1\\n\\n  isok = ALL(found == want)\\n  CALL OK(isok, testname//\\\" GetVertexDOF (order= \\\"//ToString(order)//\\\"): \\\")\\n\\nEND SUBROUTINE test3\\n\\n!----------------------------------------------------------------------------\\n!                                                                 \\n!----------------------------------------------------------------------------\\n\\nEND PROGRAM main\\n\");\n;// ./docs/docs-api/FEDOF/examples/_GetVertexDOF_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  return (0,jsx_runtime.jsx)(CodeBlock[\"default\"], {\n    language: \"fortran\",\n    children: _GetVertexDOF_test_1\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./node_modules/raw-loader/dist/cjs.js!./docs/docs-api/FEDOF/examples/_GetVertexDOF_test_2.F90\n/* harmony default export */ const _GetVertexDOF_test_2 = (\"!> author: Vikas Sharma, Ph. D.\\n! date: 2025-06-07\\n! summary:  Testing GetVertexDOF method of FEDOF class\\n! H1 Heirarchical Second Order Triangular Mesh\\n\\nPROGRAM main\\nUSE FEDOF_Class\\nUSE FEDomain_Class\\nUSE AbstractMesh_Class\\nUSE HDF5File_Class\\nUSE Display_Method\\nUSE GlobalData\\nUSE Test_Method\\nUSE ExceptionHandler_Class, ONLY: e, EXCEPTION_INFORMATION\\nUSE AppendUtility\\nUSE ArangeUtility\\nUSE ReallocateUtility\\n\\nIMPLICIT NONE\\n\\nCHARACTER(*), PARAMETER :: &\\n  filename = \\\"../../FEMesh/examples/meshdata/small_tri6_mesh.h5\\\", &\\n  baseContinuity = \\\"H1\\\", &\\n  baseInterpolation = \\\"Heirarchical\\\", &\\n  testname = baseContinuity//\\\" \\\"//baseInterpolation\\n\\nTYPE(FEDOF_) :: fedof\\nTYPE(FEDomain_) :: dom\\nCLASS(AbstractMesh_), POINTER :: meshptr => NULL()\\nTYPE(HDF5File_) :: meshfile\\nINTEGER(I4B), ALLOCATABLE :: found(:), want(:)\\nINTEGER(I4B) :: order, totalVertexNodes, totalFaces\\nLOGICAL(LGT) :: isok\\n\\nCALL e%SetQuietMode(EXCEPTION_INFORMATION, .TRUE.)\\n\\nCALL meshfile%Initiate(filename, mode=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL dom%Initiate(meshfile, '')\\nmeshptr => dom%GetMeshPointer()\\ntotalVertexNodes = meshptr%GetTotalVertexNodes()\\ntotalFaces = meshptr%GetTotalFaces()\\n\\nCALL test1\\nCALL test2\\nCALL test3\\n\\nCALL dom%DEALLOCATE()\\nCALL meshfile%DEALLOCATE()\\n\\nCONTAINS\\n\\n!----------------------------------------------------------------------------\\n!                                                                      test1\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test1\\n\\n  INTEGER(I4B) :: tsize\\n\\n  order = 1\\n  CALL fedof%Initiate(baseContinuity=baseContinuity, &\\n                      baseInterpolation=baseInterpolation, &\\n                      order=order, mesh=meshptr)\\n\\n  CALL Reallocate(found, 2, want, 2)\\n  CALL fedof%GetVertexDOF(globalNode=1, islocal=.TRUE., &\\n                          ans=found, tsize=tsize)\\n\\n  want(1) = 1\\n\\n  isok = ALL(found == want)\\n  CALL OK(isok, testname//\\\" GetVertexDOF \\\"//ToString(order)//\\\"): \\\")\\n\\nEND SUBROUTINE test1\\n\\n!----------------------------------------------------------------------------\\n!                                                                      test2\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test2\\n\\n  INTEGER(I4B) :: tsize\\n\\n  order = 2\\n  CALL fedof%Initiate(baseContinuity=baseContinuity, &\\n                      baseInterpolation=baseInterpolation, &\\n                      order=order, mesh=meshptr)\\n\\n  CALL Reallocate(found, 2, want, 2)\\n  CALL fedof%GetVertexDOF(globalNode=1, islocal=.TRUE., &\\n                          ans=found, tsize=tsize)\\n\\n  want(1) = 1\\n\\n  isok = ALL(found == want)\\n  CALL OK(isok, testname//\\\" GetVertexDOF (order= \\\"//ToString(order)//\\\"): \\\")\\n\\nEND SUBROUTINE test2\\n\\n!----------------------------------------------------------------------------\\n!                                                                     test3\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test3\\n\\n  INTEGER(I4B) :: tsize\\n\\n  order = 3\\n  CALL fedof%Initiate(baseContinuity=baseContinuity, &\\n                      baseInterpolation=baseInterpolation, &\\n                      order=order, mesh=meshptr)\\n\\n  CALL Reallocate(found, 2, want, 2)\\n  CALL fedof%GetVertexDOF(globalNode=1, islocal=.TRUE., &\\n                          ans=found, tsize=tsize)\\n\\n  want(1) = 1\\n\\n  isok = ALL(found == want)\\n  CALL OK(isok, testname//\\\" GetVertexDOF (order= \\\"//ToString(order)//\\\"): \\\")\\n\\nEND SUBROUTINE test3\\n\\n!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\\n\\nEND PROGRAM main\\n\");\n;// ./docs/docs-api/FEDOF/examples/_GetVertexDOF_test_2.md\n\n\nconst _GetVertexDOF_test_2_frontMatter = {};\nconst _GetVertexDOF_test_2_contentTitle = undefined;\n\n\n\n\n\n\n\nconst _GetVertexDOF_test_2_toc = [];\nfunction _GetVertexDOF_test_2_createMdxContent(props) {\n  return (0,jsx_runtime.jsx)(CodeBlock[\"default\"], {\n    language: \"fortran\",\n    children: _GetVertexDOF_test_2\n  });\n}\nfunction _GetVertexDOF_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_GetVertexDOF_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _GetVertexDOF_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/FEDOF/GetVertexDOF.md\n\n\nconst GetVertexDOF_frontMatter = {};\nconst GetVertexDOF_contentTitle = 'GetVertexDOF';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst GetVertexDOF_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, {\n  \"value\": \"Parameters\",\n  \"id\": \"parameters\",\n  \"level\": 2\n}, {\n  \"value\": \"Implementation Details\",\n  \"id\": \"implementation-details\",\n  \"level\": 2\n}, {\n  \"value\": \"Notes\",\n  \"id\": \"notes\",\n  \"level\": 2\n}, {\n  \"value\": \"Example Usage\",\n  \"id\": \"example-usage\",\n  \"level\": 2\n}, {\n  \"value\": \"Example 1\",\n  \"id\": \"example-1\",\n  \"level\": 2\n}, ...toc, {\n  \"value\": \"Example 2\",\n  \"id\": \"example-2\",\n  \"level\": 2\n}, ..._GetVertexDOF_test_2_toc];\nfunction GetVertexDOF_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"getvertexdof\",\n        children: \"GetVertexDOF\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"GetVertexDOF\"\n      }), \" method retrieves the degree of freedom (DOF) number associated with a specified vertex (node) in the mesh. In finite element analysis, each vertex in the mesh is typically assigned one or more degrees of freedom, which represent the unknown values to be solved for.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE SUBROUTINE GetVertexDOF(obj, globalNode, ans, tsize, islocal)\\n    CLASS(FEDOF_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: globalNode\\n    INTEGER(I4B), INTENT(INOUT) :: ans(:)\\n    INTEGER(I4B), INTENT(OUT) :: tsize\\n    LOGICAL(LGT), INTENT(IN), OPTIONAL :: islocal\\n  END SUBROUTINE GetVertexDOF\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"parameters\",\n      children: \"Parameters\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj\"\n        }), \" - The \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"FEDOF_\"\n        }), \" object containing degree of freedom information\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalNode\"\n        }), \" - The global or local node number, depending on the value of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"islocal\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"ans\"\n        }), \" - An array that will store the degree of freedom number(s) associated with the specified node\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"tsize\"\n        }), \" - The number of degrees of freedom written to the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ans\"\n        }), \" array\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"islocal\"\n        }), \" - Optional logical flag. If present and \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \".TRUE.\"\n        }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"globalNode\"\n        }), \" is interpreted as a local node number; otherwise, it's a global node number\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"implementation-details\",\n      children: \"Implementation Details\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The implementation is straightforward for vertex DOFs:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"tsize = 1\\nans(1) = obj%mesh%GetLocalNodeNumber(globalNode, islocal=islocal)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"For vertex DOFs in most finite element formulations:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The method sets \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"tsize\"\n        }), \" to 1, indicating that one degree of freedom is associated with each vertex\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"It obtains the local node number using the mesh's \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetLocalNodeNumber\"\n        }), \" method, which converts global node numbers to local ones if necessary\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The local node number itself is used as the degree of freedom number\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"notes\",\n      children: \"Notes\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"This method assumes a simple one-to-one mapping between mesh vertices and degrees of freedom, which is typical for scalar problems (e.g., heat conduction, potential flow)\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"For vector problems (e.g., elasticity) or higher-order problems, a more complex mapping might be needed, potentially requiring multiple DOFs per vertex\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The implementation reflects that in typical finite element numbering schemes, vertex DOFs are numbered first, followed by edge, face, and cell DOFs\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"In the current implementation, the DOF number for a vertex is identical to its local node number in the mesh\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-usage\",\n      children: \"Example Usage\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This method is typically used when assembling the global system of equations or when mapping local element matrices to the global system:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTEGER(I4B) :: nodeDOF(1), tsize, nodeNum\\n\\n! Get the DOF number for node 5\\nnodeNum = 5\\nCALL fedof%GetVertexDOF(globalNode=nodeNum, ans=nodeDOF, tsize=tsize)\\n\\n! nodeDOF(1) now contains the DOF number for node 5\\n! tsize will be 1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"This method is often called internally by other methods in the \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"FEDOF_\"\n      }), \" class, particularly when constructing element connectivity arrays that map local element degrees of freedom to global system degrees of freedom.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-1\",\n      children: \"Example 1\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(MDXContent, {}), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-2\",\n      children: \"Example 2\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(_GetVertexDOF_test_2_MDXContent, {})]\n  });\n}\nfunction GetVertexDOF_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(GetVertexDOF_createMdxContent, {\n      ...props\n    })\n  }) : GetVertexDOF_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL2RvY3MtYXBpL0ZFRE9GL0dldFZlcnRleERPRi5tZCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzlCQTs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDOUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lYXNpZmVtLWRvY3MvLi9kb2NzL2RvY3MtYXBpL0ZFRE9GL2V4YW1wbGVzL19HZXRWZXJ0ZXhET0ZfdGVzdF8xLkY5MD8yYjQ1Iiwid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL2RvY3MvZG9jcy1hcGkvRkVET0YvZXhhbXBsZXMvX0dldFZlcnRleERPRl90ZXN0XzEubWQ/MWZlOCIsIndlYnBhY2s6Ly9lYXNpZmVtLWRvY3MvLi9kb2NzL2RvY3MtYXBpL0ZFRE9GL2V4YW1wbGVzL19HZXRWZXJ0ZXhET0ZfdGVzdF8yLkY5MD9mYmQ3Iiwid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL2RvY3MvZG9jcy1hcGkvRkVET0YvZXhhbXBsZXMvX0dldFZlcnRleERPRl90ZXN0XzIubWQ/MzU3OCIsIndlYnBhY2s6Ly9lYXNpZmVtLWRvY3MvLi9kb2NzL2RvY3MtYXBpL0ZFRE9GL0dldFZlcnRleERPRi5tZD9jNmY4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiIT4gYXV0aG9yOiBWaWthcyBTaGFybWEsIFBoLiBELlxcbiEgZGF0ZTogMjAyNS0wNi0wN1xcbiEgc3VtbWFyeTogIFRlc3RpbmcgR2V0VmVydGV4RE9GIG1ldGhvZCBvZiBGRURPRiBjbGFzc1xcbiEgSDEgSGVpcmFyY2hpY2FsIFNlY29uZCBPcmRlciBUcmlhbmd1bGFyIE1lc2hcXG5cXG5QUk9HUkFNIG1haW5cXG5VU0UgRkVET0ZfQ2xhc3NcXG5VU0UgRkVEb21haW5fQ2xhc3NcXG5VU0UgQWJzdHJhY3RNZXNoX0NsYXNzXFxuVVNFIEhERjVGaWxlX0NsYXNzXFxuVVNFIERpc3BsYXlfTWV0aG9kXFxuVVNFIEdsb2JhbERhdGFcXG5VU0UgVGVzdF9NZXRob2RcXG5VU0UgRXhjZXB0aW9uSGFuZGxlcl9DbGFzcywgT05MWTogZSwgRVhDRVBUSU9OX0lORk9STUFUSU9OXFxuVVNFIEFwcGVuZFV0aWxpdHlcXG5VU0UgQXJhbmdlVXRpbGl0eVxcbnVzZSBSZWFsbG9jYXRlVXRpbGl0eVxcblxcbklNUExJQ0lUIE5PTkVcXG5cXG5DSEFSQUNURVIoKiksIFBBUkFNRVRFUiA6OiAmXFxuICBmaWxlbmFtZSA9IFxcXCIuLi8uLi9GRU1lc2gvZXhhbXBsZXMvbWVzaGRhdGEvc21hbGxfdHJpM19tZXNoLmg1XFxcIiwgJlxcbiAgYmFzZUNvbnRpbnVpdHkgPSBcXFwiSDFcXFwiLCAmXFxuICBiYXNlSW50ZXJwb2xhdGlvbiA9IFxcXCJIZWlyYXJjaGljYWxcXFwiLCAmXFxuICB0ZXN0bmFtZSA9IGJhc2VDb250aW51aXR5Ly9cXFwiIFxcXCIvL2Jhc2VJbnRlcnBvbGF0aW9uXFxuXFxuVFlQRShGRURPRl8pIDo6IGZlZG9mXFxuVFlQRShGRURvbWFpbl8pIDo6IGRvbVxcbkNMQVNTKEFic3RyYWN0TWVzaF8pLCBQT0lOVEVSIDo6IG1lc2hwdHIgPT4gTlVMTCgpXFxuVFlQRShIREY1RmlsZV8pIDo6IG1lc2hmaWxlXFxuSU5URUdFUihJNEIpLCBBTExPQ0FUQUJMRSA6OiBmb3VuZCg6KSwgd2FudCg6KVxcbklOVEVHRVIoSTRCKSA6OiBvcmRlciwgdG90YWxWZXJ0ZXhOb2RlcywgdG90YWxGYWNlc1xcbkxPR0lDQUwoTEdUKSA6OiBpc29rXFxuXFxuQ0FMTCBlJVNldFF1aWV0TW9kZShFWENFUFRJT05fSU5GT1JNQVRJT04sIC5UUlVFLilcXG5cXG5DQUxMIG1lc2hmaWxlJUluaXRpYXRlKGZpbGVuYW1lLCBtb2RlPVxcXCJSRUFEXFxcIilcXG5DQUxMIG1lc2hmaWxlJU9QRU4oKVxcbkNBTEwgZG9tJUluaXRpYXRlKG1lc2hmaWxlLCAnJylcXG5tZXNocHRyID0+IGRvbSVHZXRNZXNoUG9pbnRlcigpXFxudG90YWxWZXJ0ZXhOb2RlcyA9IG1lc2hwdHIlR2V0VG90YWxWZXJ0ZXhOb2RlcygpXFxudG90YWxGYWNlcyA9IG1lc2hwdHIlR2V0VG90YWxGYWNlcygpXFxuXFxuQ0FMTCB0ZXN0MVxcbkNBTEwgdGVzdDJcXG5DQUxMIHRlc3QzXFxuXFxuQ0FMTCBkb20lREVBTExPQ0FURSgpXFxuQ0FMTCBtZXNoZmlsZSVERUFMTE9DQVRFKClcXG5cXG5DT05UQUlOU1xcblxcbiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXFxuISAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXN0MVxcbiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXFxuXFxuU1VCUk9VVElORSB0ZXN0MVxcblxcbiAgSU5URUdFUihJNEIpIDo6IHRzaXplXFxuXFxuICBvcmRlciA9IDFcXG4gIENBTEwgZmVkb2YlSW5pdGlhdGUoYmFzZUNvbnRpbnVpdHk9YmFzZUNvbnRpbnVpdHksICZcXG4gICAgICAgICAgICAgICAgICAgICAgYmFzZUludGVycG9sYXRpb249YmFzZUludGVycG9sYXRpb24sICZcXG4gICAgICAgICAgICAgICAgICAgICAgb3JkZXI9b3JkZXIsIG1lc2g9bWVzaHB0cilcXG5cXG4gIENBTEwgUmVhbGxvY2F0ZShmb3VuZCwgMiwgd2FudCwgMilcXG4gIENBTEwgZmVkb2YlR2V0VmVydGV4RE9GKGdsb2JhbE5vZGU9MSwgaXNsb2NhbD0uVFJVRS4sICZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5zPWZvdW5kLCB0c2l6ZT10c2l6ZSlcXG5cXG4gIHdhbnQoMSkgPSAxXFxuXFxuICBpc29rID0gQUxMKGZvdW5kID09IHdhbnQpXFxuICBDQUxMIE9LKGlzb2ssIHRlc3RuYW1lLy9cXFwiIEdldFZlcnRleERPRiAob3JkZXI9IFxcXCIvL1RvU3RyaW5nKG9yZGVyKS8vXFxcIik6IFxcXCIpXFxuXFxuRU5EIFNVQlJPVVRJTkUgdGVzdDFcXG5cXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcbiEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVzdDJcXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcblxcblNVQlJPVVRJTkUgdGVzdDJcXG5cXG4gIElOVEVHRVIoSTRCKSA6OiB0c2l6ZVxcblxcbiAgb3JkZXIgPSAyXFxuICBDQUxMIGZlZG9mJUluaXRpYXRlKGJhc2VDb250aW51aXR5PWJhc2VDb250aW51aXR5LCAmXFxuICAgICAgICAgICAgICAgICAgICAgIGJhc2VJbnRlcnBvbGF0aW9uPWJhc2VJbnRlcnBvbGF0aW9uLCAmXFxuICAgICAgICAgICAgICAgICAgICAgIG9yZGVyPW9yZGVyLCBtZXNoPW1lc2hwdHIpXFxuXFxuICBDQUxMIFJlYWxsb2NhdGUoZm91bmQsIDIsIHdhbnQsIDIpXFxuICBDQUxMIGZlZG9mJUdldFZlcnRleERPRihnbG9iYWxOb2RlPTEsIGlzbG9jYWw9LlRSVUUuLCAmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFucz1mb3VuZCwgdHNpemU9dHNpemUpXFxuXFxuICB3YW50KDEpID0gMVxcblxcbiAgaXNvayA9IEFMTChmb3VuZCA9PSB3YW50KVxcbiAgQ0FMTCBPSyhpc29rLCB0ZXN0bmFtZS8vXFxcIiBHZXRWZXJ0ZXhET0YgKG9yZGVyPSBcXFwiLy9Ub1N0cmluZyhvcmRlcikvL1xcXCIpOiBcXFwiKVxcblxcbkVORCBTVUJST1VUSU5FIHRlc3QyXFxuXFxuIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXG4hICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVzdDNcXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcblxcblNVQlJPVVRJTkUgdGVzdDNcXG5cXG4gIElOVEVHRVIoSTRCKSA6OiB0c2l6ZVxcblxcbiAgb3JkZXIgPSAzXFxuICBDQUxMIGZlZG9mJUluaXRpYXRlKGJhc2VDb250aW51aXR5PWJhc2VDb250aW51aXR5LCAmXFxuICAgICAgICAgICAgICAgICAgICAgIGJhc2VJbnRlcnBvbGF0aW9uPWJhc2VJbnRlcnBvbGF0aW9uLCAmXFxuICAgICAgICAgICAgICAgICAgICAgIG9yZGVyPW9yZGVyLCBtZXNoPW1lc2hwdHIpXFxuXFxuICBDQUxMIFJlYWxsb2NhdGUoZm91bmQsIDIsIHdhbnQsIDIpXFxuICBDQUxMIGZlZG9mJUdldFZlcnRleERPRihnbG9iYWxOb2RlPTEsIGlzbG9jYWw9LlRSVUUuLCAmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFucz1mb3VuZCwgdHNpemU9dHNpemUpXFxuXFxuICB3YW50KDEpID0gMVxcblxcbiAgaXNvayA9IEFMTChmb3VuZCA9PSB3YW50KVxcbiAgQ0FMTCBPSyhpc29rLCB0ZXN0bmFtZS8vXFxcIiBHZXRWZXJ0ZXhET0YgKG9yZGVyPSBcXFwiLy9Ub1N0cmluZyhvcmRlcikvL1xcXCIpOiBcXFwiKVxcblxcbkVORCBTVUJST1VUSU5FIHRlc3QzXFxuXFxuIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXG4hICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcblxcbkVORCBQUk9HUkFNIG1haW5cXG5cIjsiLCJcblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge307XG5leHBvcnQgY29uc3QgY29udGVudFRpdGxlID0gdW5kZWZpbmVkO1xuXG5cblxuaW1wb3J0IHtqc3ggYXMgX2pzeH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQge3VzZU1EWENvbXBvbmVudHMgYXMgX3Byb3ZpZGVDb21wb25lbnRzfSBmcm9tIFwiQG1keC1qcy9yZWFjdFwiO1xuaW1wb3J0IENvZGVCbG9jayBmcm9tICdAdGhlbWUvQ29kZUJsb2NrJztcbmltcG9ydCBDb2RlU25pcHBldCBmcm9tICchIXJhdy1sb2FkZXIhLi9fR2V0VmVydGV4RE9GX3Rlc3RfMS5GOTAnO1xuZXhwb3J0IGNvbnN0IHRvYyA9IFtdO1xuZnVuY3Rpb24gX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpIHtcbiAgcmV0dXJuIF9qc3goQ29kZUJsb2NrLCB7XG4gICAgbGFuZ3VhZ2U6IFwiZm9ydHJhblwiLFxuICAgIGNoaWxkcmVuOiBDb2RlU25pcHBldFxuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQocHJvcHMgPSB7fSkge1xuICBjb25zdCB7d3JhcHBlcjogTURYTGF5b3V0fSA9IHtcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBNRFhMYXlvdXQgPyBfanN4KE1EWExheW91dCwge1xuICAgIC4uLnByb3BzLFxuICAgIGNoaWxkcmVuOiBfanN4KF9jcmVhdGVNZHhDb250ZW50LCB7XG4gICAgICAuLi5wcm9wc1xuICAgIH0pXG4gIH0pIDogX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpO1xufVxuXG4iLCJleHBvcnQgZGVmYXVsdCBcIiE+IGF1dGhvcjogVmlrYXMgU2hhcm1hLCBQaC4gRC5cXG4hIGRhdGU6IDIwMjUtMDYtMDdcXG4hIHN1bW1hcnk6ICBUZXN0aW5nIEdldFZlcnRleERPRiBtZXRob2Qgb2YgRkVET0YgY2xhc3NcXG4hIEgxIEhlaXJhcmNoaWNhbCBTZWNvbmQgT3JkZXIgVHJpYW5ndWxhciBNZXNoXFxuXFxuUFJPR1JBTSBtYWluXFxuVVNFIEZFRE9GX0NsYXNzXFxuVVNFIEZFRG9tYWluX0NsYXNzXFxuVVNFIEFic3RyYWN0TWVzaF9DbGFzc1xcblVTRSBIREY1RmlsZV9DbGFzc1xcblVTRSBEaXNwbGF5X01ldGhvZFxcblVTRSBHbG9iYWxEYXRhXFxuVVNFIFRlc3RfTWV0aG9kXFxuVVNFIEV4Y2VwdGlvbkhhbmRsZXJfQ2xhc3MsIE9OTFk6IGUsIEVYQ0VQVElPTl9JTkZPUk1BVElPTlxcblVTRSBBcHBlbmRVdGlsaXR5XFxuVVNFIEFyYW5nZVV0aWxpdHlcXG5VU0UgUmVhbGxvY2F0ZVV0aWxpdHlcXG5cXG5JTVBMSUNJVCBOT05FXFxuXFxuQ0hBUkFDVEVSKCopLCBQQVJBTUVURVIgOjogJlxcbiAgZmlsZW5hbWUgPSBcXFwiLi4vLi4vRkVNZXNoL2V4YW1wbGVzL21lc2hkYXRhL3NtYWxsX3RyaTZfbWVzaC5oNVxcXCIsICZcXG4gIGJhc2VDb250aW51aXR5ID0gXFxcIkgxXFxcIiwgJlxcbiAgYmFzZUludGVycG9sYXRpb24gPSBcXFwiSGVpcmFyY2hpY2FsXFxcIiwgJlxcbiAgdGVzdG5hbWUgPSBiYXNlQ29udGludWl0eS8vXFxcIiBcXFwiLy9iYXNlSW50ZXJwb2xhdGlvblxcblxcblRZUEUoRkVET0ZfKSA6OiBmZWRvZlxcblRZUEUoRkVEb21haW5fKSA6OiBkb21cXG5DTEFTUyhBYnN0cmFjdE1lc2hfKSwgUE9JTlRFUiA6OiBtZXNocHRyID0+IE5VTEwoKVxcblRZUEUoSERGNUZpbGVfKSA6OiBtZXNoZmlsZVxcbklOVEVHRVIoSTRCKSwgQUxMT0NBVEFCTEUgOjogZm91bmQoOiksIHdhbnQoOilcXG5JTlRFR0VSKEk0QikgOjogb3JkZXIsIHRvdGFsVmVydGV4Tm9kZXMsIHRvdGFsRmFjZXNcXG5MT0dJQ0FMKExHVCkgOjogaXNva1xcblxcbkNBTEwgZSVTZXRRdWlldE1vZGUoRVhDRVBUSU9OX0lORk9STUFUSU9OLCAuVFJVRS4pXFxuXFxuQ0FMTCBtZXNoZmlsZSVJbml0aWF0ZShmaWxlbmFtZSwgbW9kZT1cXFwiUkVBRFxcXCIpXFxuQ0FMTCBtZXNoZmlsZSVPUEVOKClcXG5DQUxMIGRvbSVJbml0aWF0ZShtZXNoZmlsZSwgJycpXFxubWVzaHB0ciA9PiBkb20lR2V0TWVzaFBvaW50ZXIoKVxcbnRvdGFsVmVydGV4Tm9kZXMgPSBtZXNocHRyJUdldFRvdGFsVmVydGV4Tm9kZXMoKVxcbnRvdGFsRmFjZXMgPSBtZXNocHRyJUdldFRvdGFsRmFjZXMoKVxcblxcbkNBTEwgdGVzdDFcXG5DQUxMIHRlc3QyXFxuQ0FMTCB0ZXN0M1xcblxcbkNBTEwgZG9tJURFQUxMT0NBVEUoKVxcbkNBTEwgbWVzaGZpbGUlREVBTExPQ0FURSgpXFxuXFxuQ09OVEFJTlNcXG5cXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcbiEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVzdDFcXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcblxcblNVQlJPVVRJTkUgdGVzdDFcXG5cXG4gIElOVEVHRVIoSTRCKSA6OiB0c2l6ZVxcblxcbiAgb3JkZXIgPSAxXFxuICBDQUxMIGZlZG9mJUluaXRpYXRlKGJhc2VDb250aW51aXR5PWJhc2VDb250aW51aXR5LCAmXFxuICAgICAgICAgICAgICAgICAgICAgIGJhc2VJbnRlcnBvbGF0aW9uPWJhc2VJbnRlcnBvbGF0aW9uLCAmXFxuICAgICAgICAgICAgICAgICAgICAgIG9yZGVyPW9yZGVyLCBtZXNoPW1lc2hwdHIpXFxuXFxuICBDQUxMIFJlYWxsb2NhdGUoZm91bmQsIDIsIHdhbnQsIDIpXFxuICBDQUxMIGZlZG9mJUdldFZlcnRleERPRihnbG9iYWxOb2RlPTEsIGlzbG9jYWw9LlRSVUUuLCAmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhbnM9Zm91bmQsIHRzaXplPXRzaXplKVxcblxcbiAgd2FudCgxKSA9IDFcXG5cXG4gIGlzb2sgPSBBTEwoZm91bmQgPT0gd2FudClcXG4gIENBTEwgT0soaXNvaywgdGVzdG5hbWUvL1xcXCIgR2V0VmVydGV4RE9GIFxcXCIvL1RvU3RyaW5nKG9yZGVyKS8vXFxcIik6IFxcXCIpXFxuXFxuRU5EIFNVQlJPVVRJTkUgdGVzdDFcXG5cXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcbiEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVzdDJcXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcblxcblNVQlJPVVRJTkUgdGVzdDJcXG5cXG4gIElOVEVHRVIoSTRCKSA6OiB0c2l6ZVxcblxcbiAgb3JkZXIgPSAyXFxuICBDQUxMIGZlZG9mJUluaXRpYXRlKGJhc2VDb250aW51aXR5PWJhc2VDb250aW51aXR5LCAmXFxuICAgICAgICAgICAgICAgICAgICAgIGJhc2VJbnRlcnBvbGF0aW9uPWJhc2VJbnRlcnBvbGF0aW9uLCAmXFxuICAgICAgICAgICAgICAgICAgICAgIG9yZGVyPW9yZGVyLCBtZXNoPW1lc2hwdHIpXFxuXFxuICBDQUxMIFJlYWxsb2NhdGUoZm91bmQsIDIsIHdhbnQsIDIpXFxuICBDQUxMIGZlZG9mJUdldFZlcnRleERPRihnbG9iYWxOb2RlPTEsIGlzbG9jYWw9LlRSVUUuLCAmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhbnM9Zm91bmQsIHRzaXplPXRzaXplKVxcblxcbiAgd2FudCgxKSA9IDFcXG5cXG4gIGlzb2sgPSBBTEwoZm91bmQgPT0gd2FudClcXG4gIENBTEwgT0soaXNvaywgdGVzdG5hbWUvL1xcXCIgR2V0VmVydGV4RE9GIChvcmRlcj0gXFxcIi8vVG9TdHJpbmcob3JkZXIpLy9cXFwiKTogXFxcIilcXG5cXG5FTkQgU1VCUk9VVElORSB0ZXN0MlxcblxcbiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXFxuISAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlc3QzXFxuIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXG5cXG5TVUJST1VUSU5FIHRlc3QzXFxuXFxuICBJTlRFR0VSKEk0QikgOjogdHNpemVcXG5cXG4gIG9yZGVyID0gM1xcbiAgQ0FMTCBmZWRvZiVJbml0aWF0ZShiYXNlQ29udGludWl0eT1iYXNlQ29udGludWl0eSwgJlxcbiAgICAgICAgICAgICAgICAgICAgICBiYXNlSW50ZXJwb2xhdGlvbj1iYXNlSW50ZXJwb2xhdGlvbiwgJlxcbiAgICAgICAgICAgICAgICAgICAgICBvcmRlcj1vcmRlciwgbWVzaD1tZXNocHRyKVxcblxcbiAgQ0FMTCBSZWFsbG9jYXRlKGZvdW5kLCAyLCB3YW50LCAyKVxcbiAgQ0FMTCBmZWRvZiVHZXRWZXJ0ZXhET0YoZ2xvYmFsTm9kZT0xLCBpc2xvY2FsPS5UUlVFLiwgJlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYW5zPWZvdW5kLCB0c2l6ZT10c2l6ZSlcXG5cXG4gIHdhbnQoMSkgPSAxXFxuXFxuICBpc29rID0gQUxMKGZvdW5kID09IHdhbnQpXFxuICBDQUxMIE9LKGlzb2ssIHRlc3RuYW1lLy9cXFwiIEdldFZlcnRleERPRiAob3JkZXI9IFxcXCIvL1RvU3RyaW5nKG9yZGVyKS8vXFxcIik6IFxcXCIpXFxuXFxuRU5EIFNVQlJPVVRJTkUgdGVzdDNcXG5cXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcbiFcXG4hLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcblxcbkVORCBQUk9HUkFNIG1haW5cXG5cIjsiLCJcblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge307XG5leHBvcnQgY29uc3QgY29udGVudFRpdGxlID0gdW5kZWZpbmVkO1xuXG5cblxuaW1wb3J0IHtqc3ggYXMgX2pzeH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQge3VzZU1EWENvbXBvbmVudHMgYXMgX3Byb3ZpZGVDb21wb25lbnRzfSBmcm9tIFwiQG1keC1qcy9yZWFjdFwiO1xuaW1wb3J0IENvZGVCbG9jayBmcm9tICdAdGhlbWUvQ29kZUJsb2NrJztcbmltcG9ydCBDb2RlU25pcHBldCBmcm9tICchIXJhdy1sb2FkZXIhLi9fR2V0VmVydGV4RE9GX3Rlc3RfMi5GOTAnO1xuZXhwb3J0IGNvbnN0IHRvYyA9IFtdO1xuZnVuY3Rpb24gX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpIHtcbiAgcmV0dXJuIF9qc3goQ29kZUJsb2NrLCB7XG4gICAgbGFuZ3VhZ2U6IFwiZm9ydHJhblwiLFxuICAgIGNoaWxkcmVuOiBDb2RlU25pcHBldFxuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQocHJvcHMgPSB7fSkge1xuICBjb25zdCB7d3JhcHBlcjogTURYTGF5b3V0fSA9IHtcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBNRFhMYXlvdXQgPyBfanN4KE1EWExheW91dCwge1xuICAgIC4uLnByb3BzLFxuICAgIGNoaWxkcmVuOiBfanN4KF9jcmVhdGVNZHhDb250ZW50LCB7XG4gICAgICAuLi5wcm9wc1xuICAgIH0pXG4gIH0pIDogX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpO1xufVxuXG4iLCJcblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge307XG5leHBvcnQgY29uc3QgY29udGVudFRpdGxlID0gJ0dldFZlcnRleERPRic7XG5leHBvcnQge2RlZmF1bHQgYXMgbWV0YWRhdGF9IGZyb20gJ0BzaXRlLy5kb2N1c2F1cnVzL2RvY3VzYXVydXMtcGx1Z2luLWNvbnRlbnQtZG9jcy9kb2NzLWFwaS9zaXRlLWRvY3MtZG9jcy1hcGktZmVkb2YtZ2V0LXZlcnRleC1kb2YtbWQtM2Y5Lmpzb24nXG5leHBvcnQgY29uc3QgYXNzZXRzID0ge1xuXG59O1xuXG5pbXBvcnQge0ZyYWdtZW50IGFzIF9GcmFnbWVudCwganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHN9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmltcG9ydCBFWEFNUExFNjksIHt0b2MgYXMgX190b2NFWEFNUExFNjl9IGZyb20gXCIuL2V4YW1wbGVzL19HZXRWZXJ0ZXhET0ZfdGVzdF8xLm1kXCI7XG5pbXBvcnQgRVhBTVBMRTc2LCB7dG9jIGFzIF9fdG9jRVhBTVBMRTc2fSBmcm9tIFwiLi9leGFtcGxlcy9fR2V0VmVydGV4RE9GX3Rlc3RfMi5tZFwiO1xuZXhwb3J0IGNvbnN0IHRvYyA9IFt7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2VcIixcbiAgXCJpZFwiOiBcImludGVyZmFjZVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlBhcmFtZXRlcnNcIixcbiAgXCJpZFwiOiBcInBhcmFtZXRlcnNcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbXBsZW1lbnRhdGlvbiBEZXRhaWxzXCIsXG4gIFwiaWRcIjogXCJpbXBsZW1lbnRhdGlvbi1kZXRhaWxzXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiTm90ZXNcIixcbiAgXCJpZFwiOiBcIm5vdGVzXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiRXhhbXBsZSBVc2FnZVwiLFxuICBcImlkXCI6IFwiZXhhbXBsZS11c2FnZVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkV4YW1wbGUgMVwiLFxuICBcImlkXCI6IFwiZXhhbXBsZS0xXCIsXG4gIFwibGV2ZWxcIjogMlxufSwgLi4uX190b2NFWEFNUExFNjksIHtcbiAgXCJ2YWx1ZVwiOiBcIkV4YW1wbGUgMlwiLFxuICBcImlkXCI6IFwiZXhhbXBsZS0yXCIsXG4gIFwibGV2ZWxcIjogMlxufSwgLi4uX190b2NFWEFNUExFNzZdO1xuZnVuY3Rpb24gX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpIHtcbiAgY29uc3QgX2NvbXBvbmVudHMgPSB7XG4gICAgY29kZTogXCJjb2RlXCIsXG4gICAgaDE6IFwiaDFcIixcbiAgICBoMjogXCJoMlwiLFxuICAgIGhlYWRlcjogXCJoZWFkZXJcIixcbiAgICBsaTogXCJsaVwiLFxuICAgIG9sOiBcIm9sXCIsXG4gICAgcDogXCJwXCIsXG4gICAgcHJlOiBcInByZVwiLFxuICAgIHVsOiBcInVsXCIsXG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gX2pzeHMoX0ZyYWdtZW50LCB7XG4gICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmhlYWRlciwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuaDEsIHtcbiAgICAgICAgaWQ6IFwiZ2V0dmVydGV4ZG9mXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkdldFZlcnRleERPRlwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiR2V0VmVydGV4RE9GXCJcbiAgICAgIH0pLCBcIiBtZXRob2QgcmV0cmlldmVzIHRoZSBkZWdyZWUgb2YgZnJlZWRvbSAoRE9GKSBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIGEgc3BlY2lmaWVkIHZlcnRleCAobm9kZSkgaW4gdGhlIG1lc2guIEluIGZpbml0ZSBlbGVtZW50IGFuYWx5c2lzLCBlYWNoIHZlcnRleCBpbiB0aGUgbWVzaCBpcyB0eXBpY2FsbHkgYXNzaWduZWQgb25lIG9yIG1vcmUgZGVncmVlcyBvZiBmcmVlZG9tLCB3aGljaCByZXByZXNlbnQgdGhlIHVua25vd24gdmFsdWVzIHRvIGJlIHNvbHZlZCBmb3IuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImludGVyZmFjZVwiLFxuICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWZvcnRyYW5cIixcbiAgICAgICAgY2hpbGRyZW46IFwiSU5URVJGQUNFXFxuICBNT0RVTEUgU1VCUk9VVElORSBHZXRWZXJ0ZXhET0Yob2JqLCBnbG9iYWxOb2RlLCBhbnMsIHRzaXplLCBpc2xvY2FsKVxcbiAgICBDTEFTUyhGRURPRl8pLCBJTlRFTlQoSU4pIDo6IG9ialxcbiAgICBJTlRFR0VSKEk0QiksIElOVEVOVChJTikgOjogZ2xvYmFsTm9kZVxcbiAgICBJTlRFR0VSKEk0QiksIElOVEVOVChJTk9VVCkgOjogYW5zKDopXFxuICAgIElOVEVHRVIoSTRCKSwgSU5URU5UKE9VVCkgOjogdHNpemVcXG4gICAgTE9HSUNBTChMR1QpLCBJTlRFTlQoSU4pLCBPUFRJT05BTCA6OiBpc2xvY2FsXFxuICBFTkQgU1VCUk9VVElORSBHZXRWZXJ0ZXhET0ZcXG5FTkQgSU5URVJGQUNFXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInBhcmFtZXRlcnNcIixcbiAgICAgIGNoaWxkcmVuOiBcIlBhcmFtZXRlcnNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIm9ialwiXG4gICAgICAgIH0pLCBcIiAtIFRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiRkVET0ZfXCJcbiAgICAgICAgfSksIFwiIG9iamVjdCBjb250YWluaW5nIGRlZ3JlZSBvZiBmcmVlZG9tIGluZm9ybWF0aW9uXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJnbG9iYWxOb2RlXCJcbiAgICAgICAgfSksIFwiIC0gVGhlIGdsb2JhbCBvciBsb2NhbCBub2RlIG51bWJlciwgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZSBvZiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiaXNsb2NhbFwiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiYW5zXCJcbiAgICAgICAgfSksIFwiIC0gQW4gYXJyYXkgdGhhdCB3aWxsIHN0b3JlIHRoZSBkZWdyZWUgb2YgZnJlZWRvbSBudW1iZXIocykgYXNzb2NpYXRlZCB3aXRoIHRoZSBzcGVjaWZpZWQgbm9kZVwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwidHNpemVcIlxuICAgICAgICB9KSwgXCIgLSBUaGUgbnVtYmVyIG9mIGRlZ3JlZXMgb2YgZnJlZWRvbSB3cml0dGVuIHRvIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiYW5zXCJcbiAgICAgICAgfSksIFwiIGFycmF5XCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJpc2xvY2FsXCJcbiAgICAgICAgfSksIFwiIC0gT3B0aW9uYWwgbG9naWNhbCBmbGFnLiBJZiBwcmVzZW50IGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiLlRSVUUuXCJcbiAgICAgICAgfSksIFwiLCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiZ2xvYmFsTm9kZVwiXG4gICAgICAgIH0pLCBcIiBpcyBpbnRlcnByZXRlZCBhcyBhIGxvY2FsIG5vZGUgbnVtYmVyOyBvdGhlcndpc2UsIGl0J3MgYSBnbG9iYWwgbm9kZSBudW1iZXJcIl1cbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbXBsZW1lbnRhdGlvbi1kZXRhaWxzXCIsXG4gICAgICBjaGlsZHJlbjogXCJJbXBsZW1lbnRhdGlvbiBEZXRhaWxzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGUgaW1wbGVtZW50YXRpb24gaXMgc3RyYWlnaHRmb3J3YXJkIGZvciB2ZXJ0ZXggRE9GczpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJ0c2l6ZSA9IDFcXG5hbnMoMSkgPSBvYmolbWVzaCVHZXRMb2NhbE5vZGVOdW1iZXIoZ2xvYmFsTm9kZSwgaXNsb2NhbD1pc2xvY2FsKVxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkZvciB2ZXJ0ZXggRE9GcyBpbiBtb3N0IGZpbml0ZSBlbGVtZW50IGZvcm11bGF0aW9uczpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5vbCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiVGhlIG1ldGhvZCBzZXRzIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJ0c2l6ZVwiXG4gICAgICAgIH0pLCBcIiB0byAxLCBpbmRpY2F0aW5nIHRoYXQgb25lIGRlZ3JlZSBvZiBmcmVlZG9tIGlzIGFzc29jaWF0ZWQgd2l0aCBlYWNoIHZlcnRleFwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJJdCBvYnRhaW5zIHRoZSBsb2NhbCBub2RlIG51bWJlciB1c2luZyB0aGUgbWVzaCdzIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJHZXRMb2NhbE5vZGVOdW1iZXJcIlxuICAgICAgICB9KSwgXCIgbWV0aG9kLCB3aGljaCBjb252ZXJ0cyBnbG9iYWwgbm9kZSBudW1iZXJzIHRvIGxvY2FsIG9uZXMgaWYgbmVjZXNzYXJ5XCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJUaGUgbG9jYWwgbm9kZSBudW1iZXIgaXRzZWxmIGlzIHVzZWQgYXMgdGhlIGRlZ3JlZSBvZiBmcmVlZG9tIG51bWJlclwiXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwibm90ZXNcIixcbiAgICAgIGNoaWxkcmVuOiBcIk5vdGVzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJUaGlzIG1ldGhvZCBhc3N1bWVzIGEgc2ltcGxlIG9uZS10by1vbmUgbWFwcGluZyBiZXR3ZWVuIG1lc2ggdmVydGljZXMgYW5kIGRlZ3JlZXMgb2YgZnJlZWRvbSwgd2hpY2ggaXMgdHlwaWNhbCBmb3Igc2NhbGFyIHByb2JsZW1zIChlLmcuLCBoZWF0IGNvbmR1Y3Rpb24sIHBvdGVudGlhbCBmbG93KVwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJGb3IgdmVjdG9yIHByb2JsZW1zIChlLmcuLCBlbGFzdGljaXR5KSBvciBoaWdoZXItb3JkZXIgcHJvYmxlbXMsIGEgbW9yZSBjb21wbGV4IG1hcHBpbmcgbWlnaHQgYmUgbmVlZGVkLCBwb3RlbnRpYWxseSByZXF1aXJpbmcgbXVsdGlwbGUgRE9GcyBwZXIgdmVydGV4XCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlRoZSBpbXBsZW1lbnRhdGlvbiByZWZsZWN0cyB0aGF0IGluIHR5cGljYWwgZmluaXRlIGVsZW1lbnQgbnVtYmVyaW5nIHNjaGVtZXMsIHZlcnRleCBET0ZzIGFyZSBudW1iZXJlZCBmaXJzdCwgZm9sbG93ZWQgYnkgZWRnZSwgZmFjZSwgYW5kIGNlbGwgRE9Gc1wiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJbiB0aGUgY3VycmVudCBpbXBsZW1lbnRhdGlvbiwgdGhlIERPRiBudW1iZXIgZm9yIGEgdmVydGV4IGlzIGlkZW50aWNhbCB0byBpdHMgbG9jYWwgbm9kZSBudW1iZXIgaW4gdGhlIG1lc2hcIlxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImV4YW1wbGUtdXNhZ2VcIixcbiAgICAgIGNoaWxkcmVuOiBcIkV4YW1wbGUgVXNhZ2VcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRoaXMgbWV0aG9kIGlzIHR5cGljYWxseSB1c2VkIHdoZW4gYXNzZW1ibGluZyB0aGUgZ2xvYmFsIHN5c3RlbSBvZiBlcXVhdGlvbnMgb3Igd2hlbiBtYXBwaW5nIGxvY2FsIGVsZW1lbnQgbWF0cmljZXMgdG8gdGhlIGdsb2JhbCBzeXN0ZW06XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWZvcnRyYW5cIixcbiAgICAgICAgY2hpbGRyZW46IFwiSU5URUdFUihJNEIpIDo6IG5vZGVET0YoMSksIHRzaXplLCBub2RlTnVtXFxuXFxuISBHZXQgdGhlIERPRiBudW1iZXIgZm9yIG5vZGUgNVxcbm5vZGVOdW0gPSA1XFxuQ0FMTCBmZWRvZiVHZXRWZXJ0ZXhET0YoZ2xvYmFsTm9kZT1ub2RlTnVtLCBhbnM9bm9kZURPRiwgdHNpemU9dHNpemUpXFxuXFxuISBub2RlRE9GKDEpIG5vdyBjb250YWlucyB0aGUgRE9GIG51bWJlciBmb3Igbm9kZSA1XFxuISB0c2l6ZSB3aWxsIGJlIDFcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoaXMgbWV0aG9kIGlzIG9mdGVuIGNhbGxlZCBpbnRlcm5hbGx5IGJ5IG90aGVyIG1ldGhvZHMgaW4gdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiRkVET0ZfXCJcbiAgICAgIH0pLCBcIiBjbGFzcywgcGFydGljdWxhcmx5IHdoZW4gY29uc3RydWN0aW5nIGVsZW1lbnQgY29ubmVjdGl2aXR5IGFycmF5cyB0aGF0IG1hcCBsb2NhbCBlbGVtZW50IGRlZ3JlZXMgb2YgZnJlZWRvbSB0byBnbG9iYWwgc3lzdGVtIGRlZ3JlZXMgb2YgZnJlZWRvbS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiZXhhbXBsZS0xXCIsXG4gICAgICBjaGlsZHJlbjogXCJFeGFtcGxlIDFcIlxuICAgIH0pLCBcIlxcblwiLCBcIlxcblwiLCBfanN4KEVYQU1QTEU2OSwge30pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJleGFtcGxlLTJcIixcbiAgICAgIGNoaWxkcmVuOiBcIkV4YW1wbGUgMlwiXG4gICAgfSksIFwiXFxuXCIsIFwiXFxuXCIsIF9qc3goRVhBTVBMRTc2LCB7fSldXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./docs/docs-api/FEDOF/GetVertexDOF.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);