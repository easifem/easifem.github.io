"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-csr-matrix-get-diagonalb-32-4a6"],{

/***/ "./docs/docs-api/CSRMatrix/GetDiagonal.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_csr_matrix_get_diagonal_md_b32_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-csr-matrix-get-diagonal-md-b32.json\nconst site_docs_docs_api_csr_matrix_get_diagonal_md_b32_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"CSRMatrix/GetDiagonal\",\"title\":\"GetDiagonal\",\"description\":\"This routine returns the diagonal entries of sparse MATRIX.\",\"source\":\"@site/docs/docs-api/CSRMatrix/GetDiagonal.md\",\"sourceDirName\":\"CSRMatrix\",\"slug\":\"/CSRMatrix/GetDiagonal\",\"permalink\":\"/docs-api/CSRMatrix/GetDiagonal\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/CSRMatrix/GetDiagonal.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetColumn\",\"permalink\":\"/docs-api/CSRMatrix/GetColumn\"},\"next\":{\"title\":\"GetILUD\",\"permalink\":\"/docs-api/CSRMatrix/GetILUD\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/CSRMatrix/GetDiagonal.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'GetDiagonal';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"getdiagonal\",\n        children: \"GetDiagonal\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This routine returns the diagonal entries of sparse MATRIX.\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"üìù Interface 1\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE GetDiagonal(obj, diag, idiag, offset)\\n    TYPE(CSRMatrix_), INTENT(IN) :: obj\\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: diag(:)\\n    INTEGER(I4B), ALLOCATABLE, INTENT(INOUT) :: idiag(:)\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: offset\\n  END SUBROUTINE GetDiagonal\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n            children: \"This subroutine returns the diagonal entries of sparse matrix.\"\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"offset\"\n            }), \" containing the offset of the wanted diagonal the diagonal extracted is the one corresponding to the entries \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"a(i,j)\"\n            }), \" with \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"j-i = ioff\"\n            }), \". Thus \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"ioff = 0\"\n            }), \" means the main diagonal\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"diag\"\n            }), \" is an array of reals of length nrow containing the wanted diagonal. diag contains the diagonal (\", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"a(i,j),j-i = ioff\"\n            }), \") as defined above.\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"idiag\"\n            }), \" is an array of integer of length \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"len\"\n            }), \", containing the poisitions in the original arrays \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"a\"\n            }), \" and \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"ja\"\n            }), \" of the diagonal elements collected in \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"diag\"\n            }), \". A zero entry in \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"idiag(i)\"\n            }), \" means that there was no entry found in row i belonging to the diagonal.\"]\n          }), \"\\n\"]\n        })]\n      }), (0,jsx_runtime.jsxs)(TabItem[\"default\"], {\n        value: \"iface2\",\n        label: \"Interface 2\",\n        children: [(0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE GetDiagonal(obj, diag, offset)\\n    TYPE(CSRMatrix_), INTENT(INOUT) :: obj\\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: diag(:)\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: offset\\n  END SUBROUTINE GetDiagonal\\nEND INTERFACE\\n\"\n          })\n        }), (0,jsx_runtime.jsxs)(_components.p, {\n          children: [\"This routine is like interface-1, but in this routine we do not get \", (0,jsx_runtime.jsx)(_components.code, {\n            children: \"idiag\"\n          })]\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"‚óâ Close\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL2RvY3MtYXBpL0NTUk1hdHJpeC9HZXREaWFnb25hbC5tZCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lYXNpZmVtLWRvY3MvLi9kb2NzL2RvY3MtYXBpL0NTUk1hdHJpeC9HZXREaWFnb25hbC5tZD9hMWQzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7fTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSAnR2V0RGlhZ29uYWwnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1ldGFkYXRhfSBmcm9tICdAc2l0ZS8uZG9jdXNhdXJ1cy9kb2N1c2F1cnVzLXBsdWdpbi1jb250ZW50LWRvY3MvZG9jcy1hcGkvc2l0ZS1kb2NzLWRvY3MtYXBpLWNzci1tYXRyaXgtZ2V0LWRpYWdvbmFsLW1kLWIzMi5qc29uJ1xuZXhwb3J0IGNvbnN0IGFzc2V0cyA9IHtcblxufTtcblxuaW1wb3J0IHtGcmFnbWVudCBhcyBfRnJhZ21lbnQsIGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7dXNlTURYQ29tcG9uZW50cyBhcyBfcHJvdmlkZUNvbXBvbmVudHN9IGZyb20gXCJAbWR4LWpzL3JlYWN0XCI7XG5pbXBvcnQgVGFicyBmcm9tICdAdGhlbWUvVGFicyc7XG5pbXBvcnQgVGFiSXRlbSBmcm9tICdAdGhlbWUvVGFiSXRlbSc7XG5leHBvcnQgY29uc3QgdG9jID0gW3tcbiAgXCJ2YWx1ZVwiOiBcIkludGVyZmFjZVwiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlXCIsXG4gIFwibGV2ZWxcIjogMlxufV07XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBjb2RlOiBcImNvZGVcIixcbiAgICBoMTogXCJoMVwiLFxuICAgIGgyOiBcImgyXCIsXG4gICAgaGVhZGVyOiBcImhlYWRlclwiLFxuICAgIGxpOiBcImxpXCIsXG4gICAgcDogXCJwXCIsXG4gICAgcHJlOiBcInByZVwiLFxuICAgIHVsOiBcInVsXCIsXG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gX2pzeHMoX0ZyYWdtZW50LCB7XG4gICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmhlYWRlciwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuaDEsIHtcbiAgICAgICAgaWQ6IFwiZ2V0ZGlhZ29uYWxcIixcbiAgICAgICAgY2hpbGRyZW46IFwiR2V0RGlhZ29uYWxcIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGlzIHJvdXRpbmUgcmV0dXJucyB0aGUgZGlhZ29uYWwgZW50cmllcyBvZiBzcGFyc2UgTUFUUklYLlwiXG4gICAgfSksIFwiXFxuXCIsIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImludGVyZmFjZVwiLFxuICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoVGFicywge1xuICAgICAgY2hpbGRyZW46IFtfanN4cyhUYWJJdGVtLCB7XG4gICAgICAgIHZhbHVlOiBcImludGVyZmFjZVwiLFxuICAgICAgICBsYWJlbDogXCLwn5OdIEludGVyZmFjZSAxXCIsXG4gICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiSU5URVJGQUNFXFxuICBNT0RVTEUgU1VCUk9VVElORSBHZXREaWFnb25hbChvYmosIGRpYWcsIGlkaWFnLCBvZmZzZXQpXFxuICAgIFRZUEUoQ1NSTWF0cml4XyksIElOVEVOVChJTikgOjogb2JqXFxuICAgIFJFQUwoREZQKSwgQUxMT0NBVEFCTEUsIElOVEVOVChJTk9VVCkgOjogZGlhZyg6KVxcbiAgICBJTlRFR0VSKEk0QiksIEFMTE9DQVRBQkxFLCBJTlRFTlQoSU5PVVQpIDo6IGlkaWFnKDopXFxuICAgIElOVEVHRVIoSTRCKSwgT1BUSU9OQUwsIElOVEVOVChJTikgOjogb2Zmc2V0XFxuICBFTkQgU1VCUk9VVElORSBHZXREaWFnb25hbFxcbkVORCBJTlRFUkZBQ0VcXG5cIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwiVGhpcyBzdWJyb3V0aW5lIHJldHVybnMgdGhlIGRpYWdvbmFsIGVudHJpZXMgb2Ygc3BhcnNlIG1hdHJpeC5cIlxuICAgICAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwib2Zmc2V0XCJcbiAgICAgICAgICAgIH0pLCBcIiBjb250YWluaW5nIHRoZSBvZmZzZXQgb2YgdGhlIHdhbnRlZCBkaWFnb25hbCB0aGUgZGlhZ29uYWwgZXh0cmFjdGVkIGlzIHRoZSBvbmUgY29ycmVzcG9uZGluZyB0byB0aGUgZW50cmllcyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcImEoaSxqKVwiXG4gICAgICAgICAgICB9KSwgXCIgd2l0aCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcImotaSA9IGlvZmZcIlxuICAgICAgICAgICAgfSksIFwiLiBUaHVzIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwiaW9mZiA9IDBcIlxuICAgICAgICAgICAgfSksIFwiIG1lYW5zIHRoZSBtYWluIGRpYWdvbmFsXCJdXG4gICAgICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgICBjaGlsZHJlbjogXCJkaWFnXCJcbiAgICAgICAgICAgIH0pLCBcIiBpcyBhbiBhcnJheSBvZiByZWFscyBvZiBsZW5ndGggbnJvdyBjb250YWluaW5nIHRoZSB3YW50ZWQgZGlhZ29uYWwuIGRpYWcgY29udGFpbnMgdGhlIGRpYWdvbmFsIChcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcImEoaSxqKSxqLWkgPSBpb2ZmXCJcbiAgICAgICAgICAgIH0pLCBcIikgYXMgZGVmaW5lZCBhYm92ZS5cIl1cbiAgICAgICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcImlkaWFnXCJcbiAgICAgICAgICAgIH0pLCBcIiBpcyBhbiBhcnJheSBvZiBpbnRlZ2VyIG9mIGxlbmd0aCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcImxlblwiXG4gICAgICAgICAgICB9KSwgXCIsIGNvbnRhaW5pbmcgdGhlIHBvaXNpdGlvbnMgaW4gdGhlIG9yaWdpbmFsIGFycmF5cyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcImFcIlxuICAgICAgICAgICAgfSksIFwiIGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcImphXCJcbiAgICAgICAgICAgIH0pLCBcIiBvZiB0aGUgZGlhZ29uYWwgZWxlbWVudHMgY29sbGVjdGVkIGluIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwiZGlhZ1wiXG4gICAgICAgICAgICB9KSwgXCIuIEEgemVybyBlbnRyeSBpbiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcImlkaWFnKGkpXCJcbiAgICAgICAgICAgIH0pLCBcIiBtZWFucyB0aGF0IHRoZXJlIHdhcyBubyBlbnRyeSBmb3VuZCBpbiByb3cgaSBiZWxvbmdpbmcgdG8gdGhlIGRpYWdvbmFsLlwiXVxuICAgICAgICAgIH0pLCBcIlxcblwiXVxuICAgICAgICB9KV1cbiAgICAgIH0pLCBfanN4cyhUYWJJdGVtLCB7XG4gICAgICAgIHZhbHVlOiBcImlmYWNlMlwiLFxuICAgICAgICBsYWJlbDogXCJJbnRlcmZhY2UgMlwiLFxuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWZvcnRyYW5cIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIklOVEVSRkFDRVxcbiAgTU9EVUxFIFNVQlJPVVRJTkUgR2V0RGlhZ29uYWwob2JqLCBkaWFnLCBvZmZzZXQpXFxuICAgIFRZUEUoQ1NSTWF0cml4XyksIElOVEVOVChJTk9VVCkgOjogb2JqXFxuICAgIFJFQUwoREZQKSwgQUxMT0NBVEFCTEUsIElOVEVOVChJTk9VVCkgOjogZGlhZyg6KVxcbiAgICBJTlRFR0VSKEk0QiksIE9QVElPTkFMLCBJTlRFTlQoSU4pIDo6IG9mZnNldFxcbiAgRU5EIFNVQlJPVVRJTkUgR2V0RGlhZ29uYWxcXG5FTkQgSU5URVJGQUNFXFxuXCJcbiAgICAgICAgICB9KVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbXCJUaGlzIHJvdXRpbmUgaXMgbGlrZSBpbnRlcmZhY2UtMSwgYnV0IGluIHRoaXMgcm91dGluZSB3ZSBkbyBub3QgZ2V0IFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcImlkaWFnXCJcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSldXG4gICAgICB9KSwgX2pzeChUYWJJdGVtLCB7XG4gICAgICAgIHZhbHVlOiBcImNsb3NlXCIsXG4gICAgICAgIGxhYmVsOiBcIuKXiSBDbG9zZVwiXG4gICAgICB9KV1cbiAgICB9KV1cbiAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHByb3BzID0ge30pIHtcbiAgY29uc3Qge3dyYXBwZXI6IE1EWExheW91dH0gPSB7XG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gTURYTGF5b3V0ID8gX2pzeChNRFhMYXlvdXQsIHtcbiAgICAuLi5wcm9wcyxcbiAgICBjaGlsZHJlbjogX2pzeChfY3JlYXRlTWR4Q29udGVudCwge1xuICAgICAgLi4ucHJvcHNcbiAgICB9KVxuICB9KSA6IF9jcmVhdGVNZHhDb250ZW50KHByb3BzKTtcbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./docs/docs-api/CSRMatrix/GetDiagonal.md\n");

/***/ })

}]);