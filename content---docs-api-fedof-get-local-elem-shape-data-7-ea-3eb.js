"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-fedof-get-local-elem-shape-data-7-ea-3eb"],{

/***/ "./docs/docs-api/FEDOF/GetLocalElemShapeData.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_fedof_get_local_elem_shape_data_md_7ea_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-fedof-get-local-elem-shape-data-md-7ea.json\nconst site_docs_docs_api_fedof_get_local_elem_shape_data_md_7ea_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"FEDOF/GetLocalElemShapeData\",\"title\":\"GetLocalElemShapeData\",\"description\":\"The GetLocalElemShapeData method retrieves local element shape function data for a specific element in a finite element mesh. This method acts as a dispatcher that calls the appropriate shape function evaluation method based on the continuity and interpolation type of the finite element space.\",\"source\":\"@site/docs/docs-api/FEDOF/GetLocalElemShapeData.md\",\"sourceDirName\":\"FEDOF\",\"slug\":\"/FEDOF/GetLocalElemShapeData\",\"permalink\":\"/docs-api/FEDOF/GetLocalElemShapeData\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEDOF/GetLocalElemShapeData.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetGlobalElemShapeData\",\"permalink\":\"/docs-api/FEDOF/GetGlobalElemShapeData\"},\"next\":{\"title\":\"GetMaxTotalConnectivity\",\"permalink\":\"/docs-api/FEDOF/GetMaxTotalConnectivity\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_1.md + 1 modules\nvar _GetLocalElemshapeData_test_1 = __webpack_require__(\"./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_1.md\");\n// EXTERNAL MODULE: ./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_2.md + 1 modules\nvar _GetLocalElemshapeData_test_2 = __webpack_require__(\"./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_2.md\");\n;// ./docs/docs-api/FEDOF/GetLocalElemShapeData.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'GetLocalElemShapeData';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Syntax\",\n  \"id\": \"syntax\",\n  \"level\": 2\n}, {\n  \"value\": \"Arguments\",\n  \"id\": \"arguments\",\n  \"level\": 2\n}, {\n  \"value\": \"Description\",\n  \"id\": \"description\",\n  \"level\": 2\n}, {\n  \"value\": \"Implementation Details\",\n  \"id\": \"implementation-details\",\n  \"level\": 2\n}, {\n  \"value\": \"Example Usage\",\n  \"id\": \"example-usage\",\n  \"level\": 2\n}, {\n  \"value\": \"Notes\",\n  \"id\": \"notes\",\n  \"level\": 2\n}, {\n  \"value\": \"Example 1\",\n  \"id\": \"example-1\",\n  \"level\": 2\n}, ..._GetLocalElemshapeData_test_1.toc, {\n  \"value\": \"Example 2\",\n  \"id\": \"example-2\",\n  \"level\": 2\n}, ..._GetLocalElemshapeData_test_2.toc];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"getlocalelemshapedata\",\n        children: \"GetLocalElemShapeData\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"The \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"GetLocalElemShapeData\"\n      }), \" method retrieves local element shape function data for a specific element in a finite element mesh. This method acts as a dispatcher that calls the appropriate shape function evaluation method based on the continuity and interpolation type of the finite element space.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"syntax\",\n      children: \"Syntax\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%GetLocalElemShapeData(globalElement, elemsd, quad, islocal)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"arguments\",\n      children: \"Arguments\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.table, {\n      children: [(0,jsx_runtime.jsx)(_components.thead, {\n        children: (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.th, {\n            children: \"Argument\"\n          }), (0,jsx_runtime.jsx)(_components.th, {\n            children: \"Intent\"\n          }), (0,jsx_runtime.jsx)(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), (0,jsx_runtime.jsxs)(_components.tbody, {\n        children: [(0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"obj\"\n            })\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"INOUT\"\n            })\n          }), (0,jsx_runtime.jsxs)(_components.td, {\n            children: [\"An instance of the \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"FEDOF_\"\n            }), \" class\"]\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"globalElement\"\n            })\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"IN\"\n            })\n          }), (0,jsx_runtime.jsxs)(_components.td, {\n            children: [\"Global element number (or local element number if \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"islocal=.TRUE.\"\n            }), \")\"]\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"elemsd\"\n            })\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"INOUT\"\n            })\n          }), (0,jsx_runtime.jsxs)(_components.td, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"ElemShapedata_\"\n            }), \" object to store the shape function data\"]\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"quad\"\n            })\n          }), (0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"IN\"\n            })\n          }), (0,jsx_runtime.jsxs)(_components.td, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"QuadraturePoint_\"\n            }), \" object containing quadrature points\"]\n          })]\n        }), (0,jsx_runtime.jsxs)(_components.tr, {\n          children: [(0,jsx_runtime.jsx)(_components.td, {\n            children: (0,jsx_runtime.jsx)(_components.code, {\n              children: \"islocal\"\n            })\n          }), (0,jsx_runtime.jsxs)(_components.td, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"IN\"\n            }), \", \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"OPTIONAL\"\n            })]\n          }), (0,jsx_runtime.jsxs)(_components.td, {\n            children: [\"Logical flag - if true, \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"globalElement\"\n            }), \" is treated as a local element number\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"description\",\n      children: \"Description\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This method determines the appropriate shape function evaluation strategy based on the case name derived from the basis continuity and interpolation type. Currently, it supports:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"H1LAGR\"\n        }), \": H1-conforming Lagrange interpolation\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"H1HIER\"\n        }), \": H1-conforming Hierarchical interpolation\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The method dispatches to the appropriate specialized method:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetLocalElemShapeDataH1Lagrange\"\n        }), \" for Lagrange interpolation\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetLocalElemShapeDataH1Hierarchical\"\n        }), \" for Hierarchical interpolation\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"implementation-details\",\n      children: \"Implementation Details\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"The method performs the following steps:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"Obtains the case name by calling \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"obj%GetCaseName()\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Uses a SELECT CASE statement to call the appropriate specialized method\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Raises an error if no matching case is found\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-usage\",\n      children: \"Example Usage\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE(FEDOF_) :: fedof\\nTYPE(ElemShapedata_) :: elemsd\\nTYPE(QuadraturePoint_) :: quad\\nINTEGER :: elemNumber\\n\\n! Initialize fedof, elemsd, quad, and elemNumber\\n\\n! Get local element shape data\\nCALL fedof%GetLocalElemShapeData(globalElement=elemNumber, elemsd=elemsd, quad=quad)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"notes\",\n      children: \"Notes\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The method depends on the continuity and interpolation type settings in the FEDOF object\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Error checking is performed in debug mode to ensure the element is valid\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"This method serves as a high-level interface to different shape function implementations\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Would you like me to explain any specific part of this method in more detail?\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-1\",\n      children: \"Example 1\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(_GetLocalElemshapeData_test_1[\"default\"], {}), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example-2\",\n      children: \"Example 2\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(_GetLocalElemshapeData_test_2[\"default\"], {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/FEDOF/GetLocalElemShapeData.md\n");

/***/ }),

/***/ "./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_1.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  toc: () => (/* binding */ toc)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js + 27 modules\nvar CodeBlock = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js\");\n;// ./node_modules/raw-loader/dist/cjs.js!./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_1.F90\n/* harmony default export */ const _GetLocalElemshapeData_test_1 = (\"!> author: Vikas Sharma, Ph. D.\\n! date: 2025-06-09\\n! summary:  This program tests the GetLocalElemshapeData\\n! method of the FEDOF class.\\n\\nPROGRAM main\\nUSE FEDOF_Class\\nUSE FEDomain_Class\\nUSE AbstractMesh_Class\\nUSE HDF5File_Class\\nUSE Display_Method\\nUSE GlobalData\\nUSE Test_Method\\nUSE ExceptionHandler_Class, ONLY: e, EXCEPTION_INFORMATION\\nUSE BaseType, ONLY: QuadraturePoint_, TypeQuadratureOpt, ElemshapeData_\\nUSE QuadraturePoint_Method\\nUSE ElemshapeData_Method\\nUSE ApproxUtility\\n\\nIMPLICIT NONE\\n\\nTYPE(FEDOF_) :: obj, geoobj\\nTYPE(FEDomain_) :: dom\\nCLASS(AbstractMesh_), POINTER :: meshptr => NULL()\\nCHARACTER(*), PARAMETER :: &\\n  filename = \\\"../../FEMesh/examples/meshdata/small_tri3_mesh.h5\\\", &\\n  baseContinuity = \\\"H1\\\", &\\n  baseInterpolation = \\\"Heirarchical\\\", &\\n  testname = baseContinuity//\\\" \\\"//baseInterpolation//\\\" GetLocalElemshapeData \\\"\\n\\nTYPE(HDF5File_) :: meshfile\\n\\nTYPE(QuadraturePoint_) :: quad\\n\\nTYPE(ElemshapeData_) :: elemsd, geoelemsd\\n\\nINTEGER(I4B) :: globalElement, telements, order, &\\n                nodecon(100), ii, jj, nsd\\n\\nREAL(DFP) :: nodecoord(3, 100)\\n\\nLOGICAL(LGT) :: islocal, isok\\n\\nCALL e%setQuietMode(EXCEPTION_INFORMATION, .TRUE.)\\nCALL meshfile%Initiate(filename, mode=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL dom%Initiate(meshfile, '')\\nmeshptr => dom%GetMeshPointer()\\nnsd = meshptr%GetNSD()\\n\\nCALL test1\\nCALL test2\\nCALL test3\\n\\nCALL dom%DEALLOCATE()\\nCALL meshfile%DEALLOCATE()\\n\\nCONTAINS\\n\\n!----------------------------------------------------------------------------\\n!                                                                     test1\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test1\\n\\n  REAL(DFP) :: found(1), want(1)\\n\\n  order = 1\\n  CALL obj%Initiate(baseContinuity=baseContinuity, &\\n                    baseInterpolation=baseInterpolation, &\\n                    order=order, mesh=meshptr, &\\n                    ipType=TypeQuadratureOpt%equidistance)\\n\\n  globalElement = 1; islocal = .TRUE.\\n  CALL obj%GetQuadraturePoints(quad=quad, globalElement=globalElement, &\\n                             quadratureType=TypeQuadratureOpt%GaussLegendre, &\\n                               order=order, islocal=islocal)\\n\\n  CALL obj%GetLocalElemshapeData(quad=quad, elemsd=elemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL meshptr%GetNodeCoord(nodecoord=nodecoord, nrow=ii, ncol=jj, &\\n                            globalElement=globalElement, islocal=islocal)\\n\\n  CALL obj%GetGlobalElemshapeData(elemsd=elemsd, xij=nodecoord(1:nsd, 1:jj), &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  found = SUM(elemsd%N, dim=1)\\n  want = 1.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\nEND SUBROUTINE test1\\n\\n!----------------------------------------------------------------------------\\n!                                                                     test2\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test2\\n\\n  REAL(DFP) :: found(1), want(1)\\n\\n  order = 2\\n  CALL obj%Initiate(baseContinuity=baseContinuity, &\\n                    baseInterpolation=baseInterpolation, &\\n                    order=order, mesh=meshptr, &\\n                    ipType=TypeQuadratureOpt%equidistance)\\n\\n  CALL geoobj%Initiate(baseContinuity=\\\"H1\\\", &\\n                       baseInterpolation=\\\"Lagrange\\\", &\\n                       order=1, mesh=meshptr, &\\n                       ipType=TypeQuadratureOpt%equidistance)\\n\\n  globalElement = 1; islocal = .TRUE.\\n  CALL obj%GetQuadraturePoints(quad=quad, globalElement=globalElement, &\\n                             quadratureType=TypeQuadratureOpt%GaussLegendre, &\\n                               order=1, islocal=islocal)\\n\\n  CALL obj%GetLocalElemshapeData(quad=quad, elemsd=elemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL geoobj%GetLocalElemshapeData(quad=quad, elemsd=geoelemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL meshptr%GetNodeCoord(nodecoord=nodecoord, nrow=ii, ncol=jj, &\\n                            globalElement=globalElement, islocal=islocal)\\n\\n  CALL obj%GetGlobalElemshapeData(elemsd=elemsd, xij=nodecoord(1:nsd, 1:jj), &\\n                               globalElement=globalElement, islocal=islocal, &\\n                                  geoelemsd=geoelemsd)\\n\\n  found = SUM(elemsd%N(1:3, :), dim=1)\\n  want = 1.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%N\\\")\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%dNdXi\\\")\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%dNdXi\\\")\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%dNdXt\\\")\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%dNdXt\\\")\\n\\nEND SUBROUTINE test2\\n\\n!----------------------------------------------------------------------------\\n!                                                                    test3\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test3\\n\\n  REAL(DFP) :: found(1), want(1)\\n\\n  order = 3\\n  CALL obj%Initiate(baseContinuity=baseContinuity, &\\n                    baseInterpolation=baseInterpolation, &\\n                    order=order, mesh=meshptr, &\\n                    ipType=TypeQuadratureOpt%equidistance)\\n\\n  CALL geoobj%Initiate(baseContinuity=\\\"H1\\\", &\\n                       baseInterpolation=\\\"Lagrange\\\", &\\n                       order=1, mesh=meshptr, &\\n                       ipType=TypeQuadratureOpt%equidistance)\\n\\n  globalElement = 1; islocal = .TRUE.\\n  CALL obj%GetQuadraturePoints(quad=quad, globalElement=globalElement, &\\n                             quadratureType=TypeQuadratureOpt%GaussLegendre, &\\n                               order=1, islocal=islocal)\\n\\n  CALL obj%GetLocalElemshapeData(quad=quad, elemsd=elemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL geoobj%GetLocalElemshapeData(quad=quad, elemsd=geoelemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL meshptr%GetNodeCoord(nodecoord=nodecoord, nrow=ii, ncol=jj, &\\n                            globalElement=globalElement, islocal=islocal)\\n\\n  CALL obj%GetGlobalElemshapeData(elemsd=elemsd, xij=nodecoord(1:nsd, 1:jj), &\\n                               globalElement=globalElement, islocal=islocal, &\\n                                  geoelemsd=geoelemsd)\\n\\n  found = SUM(elemsd%N(1:3, :), dim=1)\\n  want = 1.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%N\\\")\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%dNdXi\\\")\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%dNdXi\\\")\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%dNdXt\\\")\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%dNdXt\\\")\\n\\nEND SUBROUTINE test3\\n\\n!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\\n\\nEND PROGRAM main\\n\\n! total nodes = 25\\n! total elements = 16\\n! total faces = 40\\n! total edges = 0\\n\");\n;// ./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  return (0,jsx_runtime.jsx)(CodeBlock[\"default\"], {\n    language: \"fortran\",\n    children: _GetLocalElemshapeData_test_1\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_1.md\n");

/***/ }),

/***/ "./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_2.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  toc: () => (/* binding */ toc)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js + 27 modules\nvar CodeBlock = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js\");\n;// ./node_modules/raw-loader/dist/cjs.js!./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_2.F90\n/* harmony default export */ const _GetLocalElemshapeData_test_2 = (\"!> author: Vikas Sharma, Ph. D.\\n! date: 2025-06-09\\n! summary:  This program tests the GetLocalElemshapeData\\n! method of the FEDOF class.\\n\\nPROGRAM main\\nUSE FEDOF_Class\\nUSE FEDomain_Class\\nUSE AbstractMesh_Class\\nUSE HDF5File_Class\\nUSE Display_Method\\nUSE GlobalData\\nUSE Test_Method\\nUSE ExceptionHandler_Class, ONLY: e, EXCEPTION_INFORMATION\\nUSE BaseType, ONLY: QuadraturePoint_, TypeQuadratureOpt, ElemshapeData_\\nUSE QuadraturePoint_Method\\nUSE ElemshapeData_Method\\nUSE ApproxUtility\\n\\nIMPLICIT NONE\\n\\nTYPE(FEDOF_) :: obj, geoobj\\nTYPE(FEDomain_) :: dom\\nCLASS(AbstractMesh_), POINTER :: meshptr => NULL()\\nCHARACTER(*), PARAMETER :: &\\n  filename = \\\"../../FEMesh/examples/meshdata/small_tri6_mesh.h5\\\", &\\n  baseContinuity = \\\"H1\\\", &\\n  baseInterpolation = \\\"Heirarchical\\\", &\\n  testname = baseContinuity//\\\" \\\"//baseInterpolation//\\\" GetLocalElemshapeData \\\"\\n\\nTYPE(HDF5File_) :: meshfile\\n\\nTYPE(QuadraturePoint_) :: quad\\n\\nTYPE(ElemshapeData_) :: elemsd, geoelemsd\\n\\nINTEGER(I4B) :: globalElement, telements, order, &\\n                nodecon(100), ii, jj, nsd\\n\\nREAL(DFP) :: nodecoord(3, 100)\\n\\nLOGICAL(LGT) :: islocal, isok\\n\\nCALL e%setQuietMode(EXCEPTION_INFORMATION, .TRUE.)\\nCALL meshfile%Initiate(filename, mode=\\\"READ\\\")\\nCALL meshfile%OPEN()\\nCALL dom%Initiate(meshfile, '')\\nmeshptr => dom%GetMeshPointer()\\nnsd = meshptr%GetNSD()\\n\\nCALL test1\\nCALL test2\\nCALL test3\\n\\nCALL dom%DEALLOCATE()\\nCALL meshfile%DEALLOCATE()\\n\\nCONTAINS\\n\\n!----------------------------------------------------------------------------\\n!                                                                     test1\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test1\\n\\n  REAL(DFP) :: found(1), want(1)\\n\\n  order = 1\\n  CALL obj%Initiate(baseContinuity=baseContinuity, &\\n                    baseInterpolation=baseInterpolation, &\\n                    order=order, mesh=meshptr, &\\n                    ipType=TypeQuadratureOpt%equidistance)\\n\\n  globalElement = 1; islocal = .TRUE.\\n  CALL obj%GetQuadraturePoints(quad=quad, globalElement=globalElement, &\\n                             quadratureType=TypeQuadratureOpt%GaussLegendre, &\\n                               order=order, islocal=islocal)\\n\\n  CALL obj%GetLocalElemshapeData(quad=quad, elemsd=elemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL meshptr%GetNodeCoord(nodecoord=nodecoord, nrow=ii, ncol=jj, &\\n                            globalElement=globalElement, islocal=islocal)\\n\\n  CALL obj%GetGlobalElemshapeData(elemsd=elemsd, xij=nodecoord(1:nsd, 1:jj), &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  found = SUM(elemsd%N, dim=1)\\n  want = 1.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname)\\n\\nEND SUBROUTINE test1\\n\\n!----------------------------------------------------------------------------\\n!                                                                     test2\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test2\\n\\n  REAL(DFP) :: found(1), want(1)\\n\\n  order = 2\\n  CALL obj%Initiate(baseContinuity=baseContinuity, &\\n                    baseInterpolation=baseInterpolation, &\\n                    order=order, mesh=meshptr, &\\n                    ipType=TypeQuadratureOpt%equidistance)\\n\\n  CALL geoobj%Initiate(baseContinuity=\\\"H1\\\", &\\n                       baseInterpolation=\\\"Lagrange\\\", &\\n                       order=1, mesh=meshptr, &\\n                       ipType=TypeQuadratureOpt%equidistance)\\n\\n  globalElement = 1; islocal = .TRUE.\\n  CALL obj%GetQuadraturePoints(quad=quad, globalElement=globalElement, &\\n                             quadratureType=TypeQuadratureOpt%GaussLegendre, &\\n                               order=1, islocal=islocal)\\n\\n  CALL obj%GetLocalElemshapeData(quad=quad, elemsd=elemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL geoobj%GetLocalElemshapeData(quad=quad, elemsd=geoelemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL meshptr%GetNodeCoord(nodecoord=nodecoord, nrow=ii, ncol=jj, &\\n                            globalElement=globalElement, islocal=islocal)\\n\\n  CALL obj%GetGlobalElemshapeData(elemsd=elemsd, xij=nodecoord(1:nsd, 1:jj), &\\n                               globalElement=globalElement, islocal=islocal, &\\n                                  geoelemsd=geoelemsd)\\n\\n  found = SUM(elemsd%N(1:3, :), dim=1)\\n  want = 1.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%N\\\")\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%dNdXi\\\")\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%dNdXi\\\")\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%dNdXt\\\")\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test2 elemsd%dNdXt\\\")\\n\\nEND SUBROUTINE test2\\n\\n!----------------------------------------------------------------------------\\n!                                                                    test3\\n!----------------------------------------------------------------------------\\n\\nSUBROUTINE test3\\n\\n  REAL(DFP) :: found(1), want(1)\\n\\n  order = 3\\n  CALL obj%Initiate(baseContinuity=baseContinuity, &\\n                    baseInterpolation=baseInterpolation, &\\n                    order=order, mesh=meshptr, &\\n                    ipType=TypeQuadratureOpt%equidistance)\\n\\n  CALL geoobj%Initiate(baseContinuity=\\\"H1\\\", &\\n                       baseInterpolation=\\\"Lagrange\\\", &\\n                       order=1, mesh=meshptr, &\\n                       ipType=TypeQuadratureOpt%equidistance)\\n\\n  globalElement = 1; islocal = .TRUE.\\n  CALL obj%GetQuadraturePoints(quad=quad, globalElement=globalElement, &\\n                             quadratureType=TypeQuadratureOpt%GaussLegendre, &\\n                               order=1, islocal=islocal)\\n\\n  CALL obj%GetLocalElemshapeData(quad=quad, elemsd=elemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL geoobj%GetLocalElemshapeData(quad=quad, elemsd=geoelemsd, &\\n                                 globalElement=globalElement, islocal=islocal)\\n\\n  CALL meshptr%GetNodeCoord(nodecoord=nodecoord, nrow=ii, ncol=jj, &\\n                            globalElement=globalElement, islocal=islocal)\\n\\n  CALL obj%GetGlobalElemshapeData(elemsd=elemsd, xij=nodecoord(1:nsd, 1:jj), &\\n                               globalElement=globalElement, islocal=islocal, &\\n                                  geoelemsd=geoelemsd)\\n\\n  found = SUM(elemsd%N(1:3, :), dim=1)\\n  want = 1.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%N\\\")\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%dNdXi\\\")\\n\\n  found(1) = SUM(elemsd%dNdXi(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%dNdXi\\\")\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 1, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%dNdXt\\\")\\n\\n  found(1) = SUM(elemsd%dNdXt(:, 2, 1), dim=1)\\n  want(1) = 0.0_DFP\\n  isok = found(1) .approxeq.want(1)\\n  CALL OK(isok, testname//\\\" test3 elemsd%dNdXt\\\")\\n\\nEND SUBROUTINE test3\\n\\n!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\\n\\nEND PROGRAM main\\n\\n! total nodes = 25\\n! total elements = 16\\n! total faces = 40\\n! total edges = 0\\n\");\n;// ./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_2.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  return (0,jsx_runtime.jsx)(CodeBlock[\"default\"], {\n    language: \"fortran\",\n    children: _GetLocalElemshapeData_test_2\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/FEDOF/examples/_GetLocalElemshapeData_test_2.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);