"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-triangle-interpolation-utility-vertex-basis-triangle-2-da-40c"],{

/***/ "./docs/docs-api/TriangleInterpolationUtility/VertexBasis_Triangle.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ VertexBasis_Triangle_contentTitle),\n  \"default\": () => (/* binding */ VertexBasis_Triangle_MDXContent),\n  frontMatter: () => (/* binding */ VertexBasis_Triangle_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_triangle_interpolation_utility_vertex_basis_triangle_md_2da_namespaceObject),\n  toc: () => (/* binding */ VertexBasis_Triangle_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-triangle-interpolation-utility-vertex-basis-triangle-md-2da.json\nconst site_docs_docs_api_triangle_interpolation_utility_vertex_basis_triangle_md_2da_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"TriangleInterpolationUtility/VertexBasis_Triangle\",\"title\":\"VertexBasis_Triangle\",\"description\":\"Returns value of vertex function on triangle.\",\"source\":\"@site/docs/docs-api/TriangleInterpolationUtility/VertexBasis_Triangle.md\",\"sourceDirName\":\"TriangleInterpolationUtility\",\"slug\":\"/TriangleInterpolationUtility/VertexBasis_Triangle\",\"permalink\":\"/docs-api/TriangleInterpolationUtility/VertexBasis_Triangle\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/TriangleInterpolationUtility/VertexBasis_Triangle.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"QuadraturePoint\",\"permalink\":\"/docs-api/TriangleInterpolationUtility/QuadraturePoint_Triangle\"},\"next\":{\"title\":\"TxtFile\",\"permalink\":\"/docs-api/TxtFile/\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/TriangleInterpolationUtility/_VertexBasis_Triangle_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"program main\\n  use easifembase\\n  use easifemClasses\\n  implicit none\\n  real(dfp), allocatable :: xij(:,:), avec(:)\\n  integer(i4b) :: ii, jj, cnt, n\\n\\n  n = 51\\n  call reallocate(avec, n)\\n  call reallocate(xij, 2, int((n+1)*(n+2)/2))\\n  avec= linspace(0.0_DFP, 1.0_DFP, n)\\n  cnt=0\\n  do ii = 1, n\\n    do jj = 1, n-ii+1\\n      cnt=cnt+1\\n      xij(1,cnt) = avec(ii)\\n      xij(2,cnt) = avec(jj)\\n    end do\\n  end do\\n\\n  BLOCK\\n    real(dfp), allocatable :: ans(:,:)\\n    integer(i4b) :: ii, order, pe1, pe2, pe3\\n    type( VTKPlot_ ) :: aplot\\n    character(len=*), parameter :: fname=\\\"./results/\\\"\\n    !!\\n    order=4\\n    pe1=order; pe2 = order; pe3 = order\\n    !!\\n    ans = VertexBasis_Triangle(xij=xij, refTriangle=\\\"UNIT\\\")\\n    !!\\n    do ii  = 1, size(ans,2)\\n      call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\\n        & filename=fname//\\\"PVertex-\\\" // &\\n        & tostring(ii) //\\\".vtp\\\", &\\n        & label=\\\"P\\\")\\n    end do\\n    !!\\n  END BLOCK\\nend program main\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/TriangleInterpolationUtility/VertexBasis_Triangle.md\n\n\nconst VertexBasis_Triangle_frontMatter = {};\nconst VertexBasis_Triangle_contentTitle = 'VertexBasis_Triangle';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst VertexBasis_Triangle_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc];\nfunction VertexBasis_Triangle_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"vertexbasis_triangle\",\n        children: \"VertexBasis_Triangle\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns value of vertex function on triangle.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE FUNCTION VertexBasis_Triangle(xij, refTriangle) RESULT(ans)\\n    REAL(DFP), INTENT(IN) :: xij(:, :)\\n    !! point of evaluation\\n    CHARACTER(*), INTENT(IN) :: refTriangle\\n    REAL(DFP) :: ans(SIZE(xij, 2), 3)\\n    !! ans(:,v1) basis function of vertex v1 at all points\\n  END FUNCTION VertexBasis_Triangle\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction VertexBasis_Triangle_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(VertexBasis_Triangle_createMdxContent, {\n      ...props\n    })\n  }) : VertexBasis_Triangle_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL2RvY3MtYXBpL1RyaWFuZ2xlSW50ZXJwb2xhdGlvblV0aWxpdHkvVmVydGV4QmFzaXNfVHJpYW5nbGUubWQiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3BDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL2RvY3MvZG9jcy1hcGkvVHJpYW5nbGVJbnRlcnBvbGF0aW9uVXRpbGl0eS9fVmVydGV4QmFzaXNfVHJpYW5nbGVfdGVzdF8xLm1kP2U5NWYiLCJ3ZWJwYWNrOi8vZWFzaWZlbS1kb2NzLy4vZG9jcy9kb2NzLWFwaS9UcmlhbmdsZUludGVycG9sYXRpb25VdGlsaXR5L1ZlcnRleEJhc2lzX1RyaWFuZ2xlLm1kPzIyMTYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjb25zdCBmcm9udE1hdHRlciA9IHt9O1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUaXRsZSA9IHVuZGVmaW5lZDtcblxuXG5cbmltcG9ydCB7anN4IGFzIF9qc3h9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbXTtcbmZ1bmN0aW9uIF9jcmVhdGVNZHhDb250ZW50KHByb3BzKSB7XG4gIGNvbnN0IF9jb21wb25lbnRzID0ge1xuICAgIGNvZGU6IFwiY29kZVwiLFxuICAgIHByZTogXCJwcmVcIixcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1mb3J0cmFuXCIsXG4gICAgICBjaGlsZHJlbjogXCJwcm9ncmFtIG1haW5cXG4gIHVzZSBlYXNpZmVtYmFzZVxcbiAgdXNlIGVhc2lmZW1DbGFzc2VzXFxuICBpbXBsaWNpdCBub25lXFxuICByZWFsKGRmcCksIGFsbG9jYXRhYmxlIDo6IHhpaig6LDopLCBhdmVjKDopXFxuICBpbnRlZ2VyKGk0YikgOjogaWksIGpqLCBjbnQsIG5cXG5cXG4gIG4gPSA1MVxcbiAgY2FsbCByZWFsbG9jYXRlKGF2ZWMsIG4pXFxuICBjYWxsIHJlYWxsb2NhdGUoeGlqLCAyLCBpbnQoKG4rMSkqKG4rMikvMikpXFxuICBhdmVjPSBsaW5zcGFjZSgwLjBfREZQLCAxLjBfREZQLCBuKVxcbiAgY250PTBcXG4gIGRvIGlpID0gMSwgblxcbiAgICBkbyBqaiA9IDEsIG4taWkrMVxcbiAgICAgIGNudD1jbnQrMVxcbiAgICAgIHhpaigxLGNudCkgPSBhdmVjKGlpKVxcbiAgICAgIHhpaigyLGNudCkgPSBhdmVjKGpqKVxcbiAgICBlbmQgZG9cXG4gIGVuZCBkb1xcblxcbiAgQkxPQ0tcXG4gICAgcmVhbChkZnApLCBhbGxvY2F0YWJsZSA6OiBhbnMoOiw6KVxcbiAgICBpbnRlZ2VyKGk0YikgOjogaWksIG9yZGVyLCBwZTEsIHBlMiwgcGUzXFxuICAgIHR5cGUoIFZUS1Bsb3RfICkgOjogYXBsb3RcXG4gICAgY2hhcmFjdGVyKGxlbj0qKSwgcGFyYW1ldGVyIDo6IGZuYW1lPVxcXCIuL3Jlc3VsdHMvXFxcIlxcbiAgICAhIVxcbiAgICBvcmRlcj00XFxuICAgIHBlMT1vcmRlcjsgcGUyID0gb3JkZXI7IHBlMyA9IG9yZGVyXFxuICAgICEhXFxuICAgIGFucyA9IFZlcnRleEJhc2lzX1RyaWFuZ2xlKHhpaj14aWosIHJlZlRyaWFuZ2xlPVxcXCJVTklUXFxcIilcXG4gICAgISFcXG4gICAgZG8gaWkgID0gMSwgc2l6ZShhbnMsMilcXG4gICAgICBjYWxsIGFwbG90JXNjYXR0ZXIzRCh4PXhpaigxLDopLCB5PXhpaigyLCA6KSwgej1hbnMoOixpaSksICZcXG4gICAgICAgICYgZmlsZW5hbWU9Zm5hbWUvL1xcXCJQVmVydGV4LVxcXCIgLy8gJlxcbiAgICAgICAgJiB0b3N0cmluZyhpaSkgLy9cXFwiLnZ0cFxcXCIsICZcXG4gICAgICAgICYgbGFiZWw9XFxcIlBcXFwiKVxcbiAgICBlbmQgZG9cXG4gICAgISFcXG4gIEVORCBCTE9DS1xcbmVuZCBwcm9ncmFtIG1haW5cXG5cIlxuICAgIH0pXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiIsIlxuXG5leHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7fTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSAnVmVydGV4QmFzaXNfVHJpYW5nbGUnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1ldGFkYXRhfSBmcm9tICdAc2l0ZS8uZG9jdXNhdXJ1cy9kb2N1c2F1cnVzLXBsdWdpbi1jb250ZW50LWRvY3MvZG9jcy1hcGkvc2l0ZS1kb2NzLWRvY3MtYXBpLXRyaWFuZ2xlLWludGVycG9sYXRpb24tdXRpbGl0eS12ZXJ0ZXgtYmFzaXMtdHJpYW5nbGUtbWQtMmRhLmpzb24nXG5leHBvcnQgY29uc3QgYXNzZXRzID0ge1xuXG59O1xuXG5pbXBvcnQge0ZyYWdtZW50IGFzIF9GcmFnbWVudCwganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHN9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmltcG9ydCBUYWJzIGZyb20gJ0B0aGVtZS9UYWJzJztcbmltcG9ydCBUYWJJdGVtIGZyb20gJ0B0aGVtZS9UYWJJdGVtJztcbmltcG9ydCBFWEFNUExFMTIsIHt0b2MgYXMgX190b2NFWEFNUExFMTJ9IGZyb20gXCIuL19WZXJ0ZXhCYXNpc19UcmlhbmdsZV90ZXN0XzEubWRcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbe1xuICBcInZhbHVlXCI6IFwiSW50ZXJmYWNlXCIsXG4gIFwiaWRcIjogXCJpbnRlcmZhY2VcIixcbiAgXCJsZXZlbFwiOiAyXG59LCAuLi5fX3RvY0VYQU1QTEUxMl07XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBjb2RlOiBcImNvZGVcIixcbiAgICBoMTogXCJoMVwiLFxuICAgIGgyOiBcImgyXCIsXG4gICAgaGVhZGVyOiBcImhlYWRlclwiLFxuICAgIHA6IFwicFwiLFxuICAgIHByZTogXCJwcmVcIixcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBfanN4cyhfRnJhZ21lbnQsIHtcbiAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuaGVhZGVyLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5oMSwge1xuICAgICAgICBpZDogXCJ2ZXJ0ZXhiYXNpc190cmlhbmdsZVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJWZXJ0ZXhCYXNpc19UcmlhbmdsZVwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlJldHVybnMgdmFsdWUgb2YgdmVydGV4IGZ1bmN0aW9uIG9uIHRyaWFuZ2xlLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImludGVyZmFjZVwiLFxuICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlXCJcbiAgICB9KSwgXCJcXG5cIiwgXCJcXG5cIiwgX2pzeHMoVGFicywge1xuICAgICAgY2hpbGRyZW46IFtfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiaW50ZXJmYWNlXCIsXG4gICAgICAgIGxhYmVsOiBcItyAIEludGVyZmFjZVwiLFxuICAgICAgICBkZWZhdWx0OiB0cnVlLFxuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiSU5URVJGQUNFXFxuICBNT0RVTEUgUFVSRSBGVU5DVElPTiBWZXJ0ZXhCYXNpc19UcmlhbmdsZSh4aWosIHJlZlRyaWFuZ2xlKSBSRVNVTFQoYW5zKVxcbiAgICBSRUFMKERGUCksIElOVEVOVChJTikgOjogeGlqKDosIDopXFxuICAgICEhIHBvaW50IG9mIGV2YWx1YXRpb25cXG4gICAgQ0hBUkFDVEVSKCopLCBJTlRFTlQoSU4pIDo6IHJlZlRyaWFuZ2xlXFxuICAgIFJFQUwoREZQKSA6OiBhbnMoU0laRSh4aWosIDIpLCAzKVxcbiAgICAhISBhbnMoOix2MSkgYmFzaXMgZnVuY3Rpb24gb2YgdmVydGV4IHYxIGF0IGFsbCBwb2ludHNcXG4gIEVORCBGVU5DVElPTiBWZXJ0ZXhCYXNpc19UcmlhbmdsZVxcbkVORCBJTlRFUkZBQ0VcXG5cIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9KSwgX2pzeChUYWJJdGVtLCB7XG4gICAgICAgIHZhbHVlOiBcImV4YW1wbGVcIixcbiAgICAgICAgbGFiZWw6IFwi77iP3IAgU2VlIGV4YW1wbGVcIixcbiAgICAgICAgY2hpbGRyZW46IF9qc3goRVhBTVBMRTEyLCB7fSlcbiAgICAgIH0pLCBfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiY2xvc2VcIixcbiAgICAgICAgbGFiZWw6IFwi4oaiIFwiXG4gICAgICB9KV1cbiAgICB9KV1cbiAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHByb3BzID0ge30pIHtcbiAgY29uc3Qge3dyYXBwZXI6IE1EWExheW91dH0gPSB7XG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gTURYTGF5b3V0ID8gX2pzeChNRFhMYXlvdXQsIHtcbiAgICAuLi5wcm9wcyxcbiAgICBjaGlsZHJlbjogX2pzeChfY3JlYXRlTWR4Q29udGVudCwge1xuICAgICAgLi4ucHJvcHNcbiAgICB9KVxuICB9KSA6IF9jcmVhdGVNZHhDb250ZW50KHByb3BzKTtcbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./docs/docs-api/TriangleInterpolationUtility/VertexBasis_Triangle.md\n");

/***/ })

}]);