"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-steady-stokes-221-setbd-8-01d"],{

/***/ "./docs/docs-api/SteadyStokes221/Set.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ Set_contentTitle),\n  \"default\": () => (/* binding */ Set_MDXContent),\n  frontMatter: () => (/* binding */ Set_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_steady_stokes_221_set_md_bd8_namespaceObject),\n  toc: () => (/* binding */ Set_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-steady-stokes-221-set-md-bd8.json\nconst site_docs_docs_api_steady_stokes_221_set_md_bd8_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"SteadyStokes221/Set\",\"title\":\"Set\",\"description\":\"Set the kernel.\",\"source\":\"@site/docs/docs-api/SteadyStokes221/Set.md\",\"sourceDirName\":\"SteadyStokes221\",\"slug\":\"/SteadyStokes221/Set\",\"permalink\":\"/docs-api/SteadyStokes221/Set\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/SteadyStokes221/Set.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Run\",\"permalink\":\"/docs-api/SteadyStokes221/Run\"},\"next\":{\"title\":\"SteadyStokes221Param\",\"permalink\":\"/docs-api/SteadyStokes221/SetSteadyStokes221Param\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/SteadyStokes221/_Set_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"This example tests and demonstrates the usage of \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Set()\"\n      }), \" method of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/SteadyStokes221/SteadyStokes221_\",\n        children: \"SteadyStokes221\"\n      }), \".\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"After we are done setting the properties of a kernel, we should call \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Set()\"\n        }), \" method.\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The set method does a lot of work, for example depending upon the options provided by the user it allocates the field instances for matrices, vectors, material properties etc.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The main computation starts only after calling the Set function.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"PROGRAM main\\n  USE easifemBase\\n  USE easifemClasses\\n  USE easifemMaterials\\n  USE easifemKernels\\n  USE SteadyStokes221_Class\\n  IMPLICIT NONE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Declare variables\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE( SteadyStokes221_ ) :: obj\\nTYPE( ParameterList_ ) :: param\\nTYPE( DomainPointer_ ) :: domains(2)\\nCLASS( Domain_ ), POINTER :: dom => NULL()\\nCHARACTER( LEN = * ), PARAMETER :: domainFileNamePressure=\\\"./mesh_tri3.h5\\\"\\nCHARACTER( LEN = * ), PARAMETER :: domainFileNameVelocity=\\\"./mesh_tri6.h5\\\"\\nTYPE(String) :: filename(2)\\nTYPE( MeshSelection_ ) :: region\\nCLASS( DirichletBC_ ), POINTER :: dbc => NULL()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Initiate an instance of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/ParameterList/ParameterList_\",\n        children: \"ParameterList_\"\n      }), \", param, this will be used to initiate several objects.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL FPL_INIT(); CALL param%Initiate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetSteadyStokes221Param( &\\n  & param=param, &\\n  & isConservativeForm=.TRUE., &\\n  & gravity = [0.0_DFP, -9.8_DFP, 0.0_DFP], &\\n  & domainFileForPressure = domainFileNamePressure, &\\n  & domainFileForVelocity = domainFileNameVelocity, &\\n  & engine=\\\"NATIVE_SERIAL\\\", &\\n  & CoordinateSystem=KERNEL_CARTESIAN, &\\n  & maxIter = 100, &\\n  & rtoleranceForPressure = REAL( 1.0E-6, DFP ), &\\n  & rtoleranceForVelocity = REAL( 1.0E-6, DFP ), &\\n  & atoleranceForPressure = REAL( 1.0E-6, DFP ), &\\n  & atoleranceForVelocity = REAL( 1.0E-6, DFP ), &\\n  & toleranceForSteadyState = REAL( 1.0E-6, DFP ), &\\n  & tFluidMaterials=1, &\\n  & tDirichletBCForPressure=1, &\\n  & tDirichletBCForVelocity=3, &\\n  & baseInterpolationForSpace=\\\"LagrangeInterpolation\\\", &\\n  & baseContinuityForSpace=\\\"H1\\\", &\\n  & quadratureTypeForSpace=\\\"GaussLegendre\\\", &\\n  & postProcessOpt=1)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set parameters for linear solver.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetLinSolverParam( &\\n  & param=param, &\\n  & solverName=LIS_GMRES,&\\n  & preconditionOption=NO_PRECONDITION, &\\n  & convergenceIn=convergenceInRes, &\\n  & convergenceType=relativeConvergence, &\\n  & maxIter=100, &\\n  & relativeToRHS=.TRUE., &\\n  & KrylovSubspaceSize=20, &\\n  & rtol=REAL( 1.0E-10, DFP ), &\\n  & atol=REAL( 1.0D-10, DFP ) )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate the domain.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"filename = [String(domainFileNamePressure), &\\n  & String(domainFileNameVelocity)]\\nCALL e%setQuietMode(.TRUE.)\\nCALL Initiate(domains=domains, filename=filename)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Initiate kernel\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL e%setQuietMode(.FALSE.)\\nCALL obj%Initiate(param=param, domains=domains )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Add fluid material to kernel. To do so, we first create an instance of \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"/docs-api/MeshSelection/MeshSelection_\",\n        children: \"MeshSelection_\"\n      }), \".\\nThen we add this instance to the kernel.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL e%setQuietMode(.TRUE.)\\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd, meshID=[1] )\\nCALL SetFluidMaterialParam( &\\n  & param=param, &\\n  & name=\\\"fluidMaterial\\\", &\\n  & massDensity=1000.0_DFP, &\\n  & dynamicViscosity = 0.001_DFP, &\\n  & stressStrainModel=\\\"NewtonianFluidModel\\\" )\\nCALL SetNewtonianFluidModelParam( &\\n  & param = param, &\\n  & dynamicViscosity = 0.001_DFP )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL e%setQuietMode(.FALSE.)\\nCALL obj%AddFluidMaterial( &\\n  & materialNo=1, &\\n  & materialName=\\\"fluidMaterial\\\", &\\n  & param=param, &\\n  & region=region)\\nCALL region%Deallocate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"AddDirichletBC, V1=0, Now we show how to add dirichlet boundary condition. To this end first we create an instance of [[MeshSelection_]] to select the region of the mesh. Then we define the dirichlet bonundary condition, and pass these two information to kernel.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set parameters for dirichlet boundary condition:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetDirichletBCParam( &\\n  & param=param, &\\n  & name=\\\"ZeroV1\\\", &\\n  & idof=1, &\\n  & nodalValueType=Constant, &\\n  & useFunction=.FALSE. )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Select the mesh region:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"#define BOTTOM 1\\n#define RIGHT 2\\n#define TOP 3\\n#define LEFT 4\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM, RIGHT, LEFT] )\\nCALL region%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add dirichlet boundary condition and the region to kernel:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%AddVelocityDirichletBC( &\\n  & dbcNo=1, &\\n  & param=param, &\\n  & boundary=region )\\ndbc => obj%GetVelocityDirichletBCPointer( dbcNo=1 )\\nCALL dbc%Set( ConstantNodalValue=0.0_DFP )\\ndbc=>NULL()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"AddDirichletBC, V1=U, Set parameters for dirichlet boundary condition:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetDirichletBCParam( &\\n  & param=param, &\\n  & name=\\\"UpstreamV1\\\", &\\n  & idof=1, &\\n  & nodalValueType=Constant, &\\n  & useFunction=.FALSE. )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Select the mesh region:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL region%Deallocate()\\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd-1, meshID=[TOP] )\\nCALL region%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add dirichlet boundary condition and the region to kernel:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%AddVelocityDirichletBC( &\\n  & dbcNo=2, &\\n  & param=param, &\\n  & boundary=region )\\ndbc => obj%GetVelocityDirichletBCPointer( dbcNo=2 )\\nCALL dbc%Set( ConstantNodalValue=0.1_DFP )\\ndbc=>NULL()\\nCALL region%Deallocate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"AddDirichletBC, V2=0, Set parameters for dirichlet boundary condition:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetDirichletBCParam( &\\n  & param=param, &\\n  & name=\\\"ZeroV2\\\", &\\n  & idof=2, &\\n  & nodalValueType=Constant, &\\n  & useFunction=.FALSE. )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Select the mesh region:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL region%Deallocate()\\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM, RIGHT, TOP, LEFT] )\\nCALL region%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add dirichlet boundary condition and the region to kernel:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%AddVelocityDirichletBC( &\\n  & dbcNo=3, &\\n  & param=param, &\\n  & boundary=region )\\ndbc => obj%GetVelocityDirichletBCPointer( dbcNo=3 )\\nCALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\\nCALL region%Deallocate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"AddDirichletBC, P=0, Set parameters for dirichlet boundary condition:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL SetDirichletBCParam( &\\n  & param=param, &\\n  & name=\\\"ZeroP\\\", &\\n  & idof=1, &\\n  & nodalValueType=Constant, &\\n  & useFunction=.FALSE. )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Select the mesh region:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL region%Deallocate()\\nCALL region%Initiate( isSelectionByMeshID=.TRUE. )\\nCALL region%Add( dim=obj%nsd-1, meshID=[BOTTOM] )\\nCALL region%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add dirichlet boundary condition and the region to kernel:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%AddPressureDirichletBC( dbcNo=1, param=param, &\\n  & boundary=region )\\ndbc => obj%GetPressureDirichletBCPointer( dbcNo=1 )\\nCALL dbc%Set( ConstantNodalValue=0.0_DFP ); dbc=>NULL()\\nCALL region%Deallocate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Now that we are done with the setup, we should call \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Set\"\n      }), \" method. In this method, the kernel checks the data, configuration, and intiates appropriate variables.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Set()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Let see the content of the kernel on the terminal screen by using \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Display\"\n      }), \" method.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Display(\\\"\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Deallocate()\\nCALL param%Deallocate(); CALL FPL_FINALIZE()\\nEND PROGRAM main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/SteadyStokes221/Set.md\n\n\nconst Set_frontMatter = {};\nconst Set_contentTitle = 'Set';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst Set_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, ...toc];\nfunction Set_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"set\",\n        children: \"Set\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set the kernel.\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Once we are done setting up the finite element model for the kernel, we should call this subroutine.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"Only after calling this routine we should proceed to the main computation\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"After initiating the kernel, we have all the information to construct the state of the kernel\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"This routine checks all the options.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE Set(obj)\\n    CLASS(SteadyStokes221_), INTENT(INOUT) :: obj\\n  END SUBROUTINE Set\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction Set_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(Set_createMdxContent, {\n      ...props\n    })\n  }) : Set_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/SteadyStokes221/Set.md\n");

/***/ })

}]);