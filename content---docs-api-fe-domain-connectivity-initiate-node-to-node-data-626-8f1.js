"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-fe-domain-connectivity-initiate-node-to-node-data-626-8f1"],{

/***/ "./docs/docs-api/FEDomainConnectivity/InitiateNodeToNodeData.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ InitiateNodeToNodeData_contentTitle),\n  \"default\": () => (/* binding */ InitiateNodeToNodeData_MDXContent),\n  frontMatter: () => (/* binding */ InitiateNodeToNodeData_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_fe_domain_connectivity_initiate_node_to_node_data_md_626_namespaceObject),\n  toc: () => (/* binding */ InitiateNodeToNodeData_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-fe-domain-connectivity-initiate-node-to-node-data-md-626.json\nconst site_docs_docs_api_fe_domain_connectivity_initiate_node_to_node_data_md_626_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"FEDomainConnectivity/InitiateNodeToNodeData\",\"title\":\"InitiateNodeToNodeData\",\"description\":\"This routine initiates nodeToNode data (mapping) between two domains or parts of domains.\",\"source\":\"@site/docs/docs-api/FEDomainConnectivity/InitiateNodeToNodeData.md\",\"sourceDirName\":\"FEDomainConnectivity\",\"slug\":\"/FEDomainConnectivity/InitiateNodeToNodeData\",\"permalink\":\"/docs-api/FEDomainConnectivity/InitiateNodeToNodeData\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/FEDomainConnectivity/InitiateNodeToNodeData.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"InitiateFacetToCellData\",\"permalink\":\"/docs-api/FEDomainConnectivity/InitiateFacetToCellData\"},\"next\":{\"title\":\"MasterCellNumber\",\"permalink\":\"/docs-api/FEDomainConnectivity/MasterCellNumber\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/FEDomainConnectivity/examples/_InitiateNodeToNodeData_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"PROGRAM main\\n\\nUSE GlobalData\\nUSE Test_Method\\nUSE ApproxUtility\\nUSE FEDomainConnectivity_Class\\nUSE FEDomain_Class\\nUSE HDF5File_Class\\n\\nIMPLICIT NONE\\n\\nCHARACTER(*), PARAMETER :: domain1_filename = &\\n                           \\\"../../Mesh/examples/meshdata/small_tri3_mesh.h5\\\"\\nCHARACTER(*), PARAMETER :: domain2_filename = &\\n                           \\\"../../Mesh/examples/meshdata/small_tri3_mesh.h5\\\"\\nCHARACTER(*), PARAMETER :: test_name = \\\"InitiateNodeToNodeData test 1\\\"\\nINTEGER(I4B), PARAMETER :: nsd = 2\\n\\nTYPE(FEDomainConnectivity_) :: obj\\n\\nTYPE(FEDomain_) :: domain1, domain2\\n\\nTYPE(HDF5File_) :: domain1_meshfile, domain2_meshfile\\n\\nINTEGER(I4B), POINTER :: nodeToNode(:)\\n\\nREAL(DFP) :: x1(3), x2(3)\\n\\nINTEGER(I4B) :: ii, tnodes, jj\\nLOGICAL(LGT) :: isok\\n\\nCALL domain1_meshfile%Initiate(fileName=domain1_filename, MODE=\\\"READ\\\")\\nCALL domain1_meshfile%OPEN()\\nCALL domain1%Initiate(domain1_meshfile, \\\"\\\")\\nCALL domain1_meshfile%DEALLOCATE()\\n\\nCALL domain2_meshfile%Initiate(fileName=domain2_filename, MODE=\\\"READ\\\")\\nCALL domain2_meshfile%OPEN()\\nCALL domain2%Initiate(domain2_meshfile, \\\"\\\")\\nCALL domain2_meshfile%DEALLOCATE()\\n\\n! node to node mapping\\n! local node number of domain1 are mapped to global node number of domain2\\nCALL obj%InitiateNodeToNodeData(domain1=domain1, domain2=domain2)\\n\\nnodeToNode => obj%GetNodeToNodePointer()\\n\\ntnodes = domain1%GetTotalNodes()\\n\\nDO ii = 1, tnodes\\n\\n  CALL domain1%GetNodeCoord(nodecoord=x1, globalNode=ii, islocal=.TRUE.)\\n\\n  jj = nodeToNode(ii)\\n\\n  if(jj .eq. 0) cycle\\n\\n  CALL domain2%GetNodeCoord(nodecoord=x2, globalNode=jj, islocal=.FALSE.)\\n\\n  isok = ALL(x1(1:nsd) .APPROXEQ.x2(1:nsd))\\n  IF (.NOT. isok) THEN\\n    EXIT\\n  END IF\\nEND DO\\n\\nCALL OK(isok, test_name)\\n\\nCALL domain1%DEALLOCATE()\\nCALL domain2%DEALLOCATE()\\nCALL obj%DEALLOCATE()\\n\\nEND PROGRAM main\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/FEDomainConnectivity/examples/_InitiateNodeToNodeData_test_2.md\n\n\nconst _InitiateNodeToNodeData_test_2_frontMatter = {};\nconst _InitiateNodeToNodeData_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _InitiateNodeToNodeData_test_2_toc = [];\nfunction _InitiateNodeToNodeData_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"PROGRAM main\\n\\nUSE GlobalData\\nUSE Test_Method\\nUSE ApproxUtility\\nUSE FEDomainConnectivity_Class\\nUSE FEDomain_Class\\nUSE HDF5File_Class\\n\\nIMPLICIT NONE\\n\\nCHARACTER(*), PARAMETER :: domain1_filename = &\\n                           \\\"../../Mesh/examples/meshdata/small_tri3_mesh.h5\\\"\\nCHARACTER(*), PARAMETER :: domain2_filename = &\\n                           \\\"../../Mesh/examples/meshdata/small_tri6_mesh.h5\\\"\\nCHARACTER(*), PARAMETER :: test_name = \\\"InitiateNodeToNodeData test 2\\\"\\nINTEGER(I4B), PARAMETER :: nsd = 2\\n\\nTYPE(FEDomainConnectivity_) :: obj\\n\\nTYPE(FEDomain_) :: domain1, domain2\\n\\nTYPE(HDF5File_) :: domain1_meshfile, domain2_meshfile\\n\\nINTEGER(I4B), POINTER :: nodeToNode(:)\\n\\nREAL(DFP) :: x1(3), x2(3)\\n\\nINTEGER(I4B) :: ii, tnodes, jj\\nLOGICAL(LGT) :: isok\\n\\nCALL domain1_meshfile%Initiate(fileName=domain1_filename, MODE=\\\"READ\\\")\\nCALL domain1_meshfile%OPEN()\\nCALL domain1%Initiate(domain1_meshfile, \\\"\\\")\\nCALL domain1_meshfile%DEALLOCATE()\\n\\nCALL domain2_meshfile%Initiate(fileName=domain2_filename, MODE=\\\"READ\\\")\\nCALL domain2_meshfile%OPEN()\\nCALL domain2%Initiate(domain2_meshfile, \\\"\\\")\\nCALL domain2_meshfile%DEALLOCATE()\\n\\n! node to node mapping\\n! local node number of domain1 are mapped to global node number of domain2\\nCALL obj%InitiateNodeToNodeData(domain1=domain1, domain2=domain2)\\n\\nnodeToNode => obj%GetNodeToNodePointer()\\n\\ntnodes = domain1%GetTotalNodes()\\n\\nDO ii = 1, tnodes\\n\\n  CALL domain1%GetNodeCoord(nodecoord=x1, globalNode=ii, islocal=.TRUE.)\\n\\n  jj = nodeToNode(ii)\\n\\n  IF (jj .EQ. 0) CYCLE\\n\\n  CALL domain2%GetNodeCoord(nodecoord=x2, globalNode=jj, islocal=.FALSE.)\\n\\n  isok = ALL(x1(1:nsd) .APPROXEQ.x2(1:nsd))\\n  IF (.NOT. isok) THEN\\n    EXIT\\n  END IF\\nEND DO\\n\\nCALL OK(isok, test_name)\\n\\nCALL domain1%DEALLOCATE()\\nCALL domain2%DEALLOCATE()\\nCALL obj%DEALLOCATE()\\n\\nEND PROGRAM main\\n\"\n    })\n  });\n}\nfunction _InitiateNodeToNodeData_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_InitiateNodeToNodeData_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _InitiateNodeToNodeData_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/FEDomainConnectivity/InitiateNodeToNodeData.md\n\n\nconst InitiateNodeToNodeData_frontMatter = {};\nconst InitiateNodeToNodeData_contentTitle = 'InitiateNodeToNodeData';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst InitiateNodeToNodeData_toc = [{\n  \"value\": \"Interface 1\",\n  \"id\": \"interface-1\",\n  \"level\": 2\n}, ...toc, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}, ..._InitiateNodeToNodeData_test_2_toc, {\n  \"value\": \"More examples\",\n  \"id\": \"more-examples\",\n  \"level\": 2\n}];\nfunction InitiateNodeToNodeData_createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {TabItem, Tabs} = _components;\n  if (!TabItem) _missingMdxReference(\"TabItem\", true);\n  if (!Tabs) _missingMdxReference(\"Tabs\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"initiatenodetonodedata\",\n        children: \"InitiateNodeToNodeData\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This routine initiates nodeToNode data (mapping) between two domains or parts of domains.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1\",\n      children: \"Interface 1\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsxs)(TabItem, {\n        value: \"interface\",\n        label: \"Interface\",\n        default: true,\n        children: [(0,jsx_runtime.jsx)(_components.p, {\n          children: \"This subroutine generates the node to node connectivity between two meshes\"\n        }), (0,jsx_runtime.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"obj%nodeToNode\"\n            }), \" will be initiated\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"domain1\"\n            }), \" main domain\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"domain2\"\n            }), \" secondary domain\"]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"dim1, entitynum1\"\n            }), \" dimension and entity number of mesh in \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"domain1\"\n            })]\n          }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n            children: [(0,jsx_runtime.jsx)(_components.code, {\n              children: \"dim2, entitynum2\"\n            }), \" dimension and entity number of mesh in \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"domain2\"\n            })]\n          }), \"\\n\"]\n        }), (0,jsx_runtime.jsx)(_components.admonition, {\n          type: \"caution\",\n          children: (0,jsx_runtime.jsxs)(_components.p, {\n            children: [\"In this case bounds of \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"nodeToNode\"\n            }), \" will be from 1 to \", (0,jsx_runtime.jsx)(_components.code, {\n              children: \"mesh1%maxNptrs\"\n            }), \".\"]\n          })\n        }), (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE dc_InitiateNodeToNodeData1(obj, domain1, domain2, &\\n    & dim1, dim2, entityNum1, entityNum2)\\n    CLASS(DomainConnectivity_), INTENT(INOUT) :: obj\\n    !! Domain connectivity object,\\n    !! [[DomainConnectivity:nodeToNode]] will be initiated\\n    CLASS(Domain_), INTENT(IN) :: domain1\\n    !! Primary domain, in nodeToNode(i), i denotes the\\n    !! global node number in domain1 domain.\\n    CLASS(Domain_), INTENT(IN) :: domain2\\n    !! secondary domain, => nodeToNode(i) denotes the\\n    !! global node number in `domain2` domain.\\n    INTEGER(I4B), INTENT(IN) :: dim1\\n    !! dimension of mesh in domain1\\n    INTEGER(I4B), INTENT(IN) :: dim2\\n    !! dimension of mesh in domain2\\n    INTEGER(I4B), INTENT(IN) :: entityNum1\\n    !! entity num of mesh in domain1\\n    INTEGER(I4B), INTENT(IN) :: entityNum2\\n    !! entity num of mesh in domain2\\n  END SUBROUTINE dc_InitiateNodeToNodeData1\\nEND INTERFACE\\n\"\n          })\n        })]\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ close\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE SUBROUTINE dc_InitiateNodeToNodeData2(obj, domain1, domain2)\\n    CLASS(DomainConnectivity_), INTENT(INOUT) :: obj\\n    !! Domain connectivity object\\n    CLASS(Domain_), INTENT(IN) :: domain1\\n    !! Primary domain, in nodeToNode(i), i denotes the\\n    !! global node number in domain1 domain.\\n    CLASS(Domain_), INTENT(IN) :: domain2\\n    !! Secondary domain => nodeToNode(i) denotes the\\n    !! global node number in domain2 domain.\\n  END SUBROUTINE dc_InitiateNodeToNodeData2\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"example\",\n        label: \"example\",\n        children: (0,jsx_runtime.jsx)(_InitiateNodeToNodeData_test_2_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ close\"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"more-examples\",\n      children: \"More examples\"\n    })]\n  });\n}\nfunction InitiateNodeToNodeData_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(InitiateNodeToNodeData_createMdxContent, {\n      ...props\n    })\n  }) : InitiateNodeToNodeData_createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/FEDomainConnectivity/InitiateNodeToNodeData.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);