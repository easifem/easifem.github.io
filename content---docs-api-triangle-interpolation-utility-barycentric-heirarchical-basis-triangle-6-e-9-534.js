"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-triangle-interpolation-utility-barycentric-heirarchical-basis-triangle-6-e-9-534"],{

/***/ "./docs/docs-api/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ BarycentricHeirarchicalBasis_Triangle_contentTitle),\n  \"default\": () => (/* binding */ BarycentricHeirarchicalBasis_Triangle_MDXContent),\n  frontMatter: () => (/* binding */ BarycentricHeirarchicalBasis_Triangle_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_triangle_interpolation_utility_barycentric_heirarchical_basis_triangle_md_6e9_namespaceObject),\n  toc: () => (/* binding */ BarycentricHeirarchicalBasis_Triangle_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-triangle-interpolation-utility-barycentric-heirarchical-basis-triangle-md-6e9.json\nconst site_docs_docs_api_triangle_interpolation_utility_barycentric_heirarchical_basis_triangle_md_6e9_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle\",\"title\":\"BarycentricHeirarchicalBasis\",\"description\":\"Evaluate all modal basis (Heirarchical polynomials) on Triangle.\",\"source\":\"@site/docs/docs-api/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle.md\",\"sourceDirName\":\"TriangleInterpolationUtility\",\"slug\":\"/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle\",\"permalink\":\"/docs-api/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"BarycentricEdgeBasis\",\"permalink\":\"/docs-api/TriangleInterpolationUtility/BarycentricEdgeBasis_Triangle\"},\"next\":{\"title\":\"BarycentricVertexBasis\",\"permalink\":\"/docs-api/TriangleInterpolationUtility/BarycentricVertexBasis_Triangle\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/TriangleInterpolationUtility/examples/_BarycentricHeirarchicalBasis_Triangle_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\n  use easifembase\\n  use easifemClasses\\n  implicit none\\n  real(dfp), allocatable :: xij(:,:), avec(:), lambda(:,:)\\n  integer(i4b) :: ii, jj, cnt, n\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"generate points\\\"\",\n        children: \"    n = 51\\n    call reallocate(avec, n)\\n    call reallocate(xij, 2, int((n+1)*(n+2)/2))\\n    avec= linspace(0.0_DFP, 1.0_DFP, n)\\n    cnt=0\\n    do ii = 1, n\\n      do jj = 1, n-ii+1\\n        cnt=cnt+1\\n        xij(1,cnt) = avec(ii)\\n        xij(2,cnt) = avec(jj)\\n      end do\\n    end do\\n\\n  lambda = BarycentricCoordTriangle(xij, \\\"UNIT\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"order=1; pe1=1; pe2=1; pe3=1\\\"\",\n        children: \"BLOCK\\n  real(dfp), allocatable :: ans(:,:)\\n  integer(i4b) :: ii, order, pe1, pe2, pe3\\n  type( VTKPlot_ ) :: aplot\\n  character(len=*), parameter :: fname=\\\"./results/\\\"\\n  !!\\n  order=1; pe1=1; pe2=1; pe3=1\\n  !!\\n  ans = BarycentricHeirarchicalBasis_Triangle(&\\n    & order=order, pe1=pe1, pe2=pe2, pe3=pe3, &\\n    & lambda=lambda, refTriangle=\\\"UNIT\\\")\\n  !!\\n  do ii  = 1, size(ans,2)\\n    call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\\n      & filename=fname//\\\"Pbary( order=\\\" // tostring(order) // &\\n        & \\\", pe1=\\\"//tostring(pe1) // &\\n        & \\\", pe2=\\\"//tostring(pe2) // &\\n        & \\\", pe3=\\\"//tostring(pe3) // &\\n        & \\\" )\\\" // tostring(ii) // &\\n        & \\\".vtp\\\", &\\n      & label=\\\"P\\\")\\n  end do\\n  !!\\nEND BLOCK\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"order=4; pe1=4; pe2=4; pe3=4\\\"\",\n        children: \"BLOCK\\n  real(dfp), allocatable :: ans(:,:)\\n  integer(i4b) :: ii, order, pe1, pe2, pe3\\n  type( VTKPlot_ ) :: aplot\\n  character(len=*), parameter :: fname=\\\"./results/\\\"\\n  !!\\n  order=4; pe1=4; pe2=4; pe3=4\\n  !!\\n  ans = BarycentricHeirarchicalBasis_Triangle(&\\n    & order=order, pe1=pe1, pe2=pe2, pe3=pe3, &\\n    & lambda=lambda, refTriangle=\\\"UNIT\\\")\\n  !!\\n  do ii  = 1, size(ans,2)\\n    call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\\n      & filename=fname//\\\"Pbary( order=\\\" // tostring(order) // &\\n        & \\\", pe1=\\\"//tostring(pe1) // &\\n        & \\\", pe2=\\\"//tostring(pe2) // &\\n        & \\\", pe3=\\\"//tostring(pe3) // &\\n        & \\\" )\\\" // tostring(ii) // &\\n        & \\\".vtp\\\", &\\n      & label=\\\"P\\\")\\n  end do\\n  !!\\nEND BLOCK\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"order=5; pe1=5; pe2=5; pe3=5\\\"\",\n        children: \"BLOCK\\n  real(dfp), allocatable :: ans(:,:)\\n  integer(i4b) :: ii, order, pe1, pe2, pe3\\n  type( VTKPlot_ ) :: aplot\\n  character(len=*), parameter :: fname=\\\"./results/\\\"\\n  !!\\n  order=5; pe1=5; pe2=5; pe3=5\\n  !!\\n  ans = BarycentricHeirarchicalBasis_Triangle(&\\n    & order=order, pe1=pe1, pe2=pe2, pe3=pe3, &\\n    & lambda=lambda, refTriangle=\\\"UNIT\\\")\\n  !!\\n  do ii  = 1, size(ans,2)\\n    call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\\n      & filename=fname//\\\"Pbary( order=\\\" // tostring(order) // &\\n        & \\\", pe1=\\\"//tostring(pe1) // &\\n        & \\\", pe2=\\\"//tostring(pe2) // &\\n        & \\\", pe3=\\\"//tostring(pe3) // &\\n        & \\\" )\\\" // tostring(ii) // &\\n        & \\\".vtp\\\", &\\n      & label=\\\"P\\\")\\n  end do\\n  !!\\nEND BLOCK\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title=\\\"order=5; pe1=1; pe2=5; pe3=3\\\"\",\n        children: \"BLOCK\\n  real(dfp), allocatable :: ans(:,:)\\n  integer(i4b) :: ii, order, pe1, pe2, pe3\\n  type( VTKPlot_ ) :: aplot\\n  character(len=*), parameter :: fname=\\\"./results/\\\"\\n  !!\\n  order=5; pe1=1; pe2=5; pe3=3\\n  !!\\n  ans = BarycentricHeirarchicalBasis_Triangle(&\\n    & order=order, pe1=pe1, pe2=pe2, pe3=pe3, &\\n    & lambda=lambda, refTriangle=\\\"UNIT\\\")\\n  !!\\n  do ii  = 1, size(ans,2)\\n    call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\\n      & filename=fname//\\\"Pbary( order=\\\" // tostring(order) // &\\n        & \\\", pe1=\\\"//tostring(pe1) // &\\n        & \\\", pe2=\\\"//tostring(pe2) // &\\n        & \\\", pe3=\\\"//tostring(pe3) // &\\n        & \\\" )\\\" // tostring(ii) // &\\n        & \\\".vtp\\\", &\\n      & label=\\\"P\\\")\\n  end do\\n  !!\\nEND BLOCK\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/TriangleInterpolationUtility/examples/_BarycentricHeirarchicalBasis_Triangle_test_2.md\n\n\nconst _BarycentricHeirarchicalBasis_Triangle_test_2_frontMatter = {};\nconst _BarycentricHeirarchicalBasis_Triangle_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _BarycentricHeirarchicalBasis_Triangle_test_2_toc = [];\nfunction _BarycentricHeirarchicalBasis_Triangle_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"program main\\n  use easifembase\\n  use easifemClasses\\n  implicit none\\n  real(dfp), allocatable :: xij(:,:), avec(:), lambda(:,:)\\n  integer(i4b) :: ii, jj, cnt, n\\n\\n  n = 51\\n  call reallocate(avec, n)\\n  call reallocate(xij, 2, int((n+1)*(n+2)/2))\\n  avec= linspace(0.0_DFP, 1.0_DFP, n)\\n  cnt=0\\n  do ii = 1, n\\n    do jj = 1, n-ii+1\\n      cnt=cnt+1\\n      xij(1,cnt) = avec(ii)\\n      xij(2,cnt) = avec(jj)\\n    end do\\n  end do\\n\\n  lambda = BarycentricCoordTriangle(xij, \\\"UNIT\\\")\\n\\n  BLOCK\\n    real(dfp), allocatable :: ans(:,:)\\n    integer(i4b) :: ii, order\\n    type( VTKPlot_ ) :: aplot\\n    character(len=*), parameter :: fname=\\\"./results/\\\"\\n    !!\\n    order=5\\n    !!\\n    ans = BarycentricHeirarchicalBasis_Triangle(order=order, &\\n      & lambda=lambda, refTriangle=\\\"UNIT\\\")\\n    !!\\n    do ii  = 1, size(ans,2)\\n      call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\\n        & filename=fname//\\\"Pbary( order=\\\" // tostring(order) // &\\n          & \\\" )\\\" // tostring(ii) // &\\n          & \\\".vtp\\\", &\\n        & label=\\\"P\\\")\\n    end do\\n    !!\\n  END BLOCK\\nend program main\\n\"\n    })\n  });\n}\nfunction _BarycentricHeirarchicalBasis_Triangle_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_BarycentricHeirarchicalBasis_Triangle_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _BarycentricHeirarchicalBasis_Triangle_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle.md\n\n\nconst BarycentricHeirarchicalBasis_Triangle_frontMatter = {};\nconst BarycentricHeirarchicalBasis_Triangle_contentTitle = 'BarycentricHeirarchicalBasis';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst BarycentricHeirarchicalBasis_Triangle_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, {\n  \"value\": \"Example 1\",\n  \"id\": \"example-1\",\n  \"level\": 3\n}, ...toc, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}, {\n  \"value\": \"Example 2\",\n  \"id\": \"example-2\",\n  \"level\": 3\n}, ..._BarycentricHeirarchicalBasis_Triangle_test_2_toc];\nfunction BarycentricHeirarchicalBasis_Triangle_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details, TabItem, Tabs} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  if (!TabItem) _missingMdxReference(\"TabItem\", true);\n  if (!Tabs) _missingMdxReference(\"Tabs\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"barycentricheirarchicalbasis\",\n        children: \"BarycentricHeirarchicalBasis\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluate all modal basis (Heirarchical polynomials) on Triangle.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE FUNCTION BarycentricHeirarchicalBasis_Triangle1(order, &\\n    & pe1, pe2, pe3, lambda, refTriangle) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: order\\n    !! order in the cell of triangle, it should be greater than 2\\n    INTEGER(I4B), INTENT(IN) :: pe1\\n    !! order of interpolation on edge e1\\n    INTEGER(I4B), INTENT(IN) :: pe2\\n    !! order of interpolation on edge e2\\n    INTEGER(I4B), INTENT(IN) :: pe3\\n    !! order of interpolation on edge e3\\n    REAL(DFP), INTENT(IN) :: lambda(:, :)\\n    !! Barycenteric coordinates\\n    !! number of rows = 3\\n    !! number of cols = number of points\\n    CHARACTER(*), INTENT(IN) :: refTriangle\\n    !! reference triangle, \\\"BIUNIT\\\", \\\"UNIT\\\"\\n    REAL(DFP) :: ans( &\\n      & SIZE(xij, 2), &\\n      & pe1 + pe2 + pe3 + INT((order - 1) * (order - 2) / 2))\\n    !!\\n  END FUNCTION BarycentricHeirarchicalBasis_Triangle1\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"example-1\",\n      children: \"Example 1\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See example\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs, {\n      children: [(0,jsx_runtime.jsx)(TabItem, {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE FUNCTION BarycentricHeirarchicalBasis_Triangle(order, lambda, &\\n    & refTriangle) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: order\\n    !! order of approximation on triangle\\n    REAL(DFP), INTENT(IN) :: lambda(:, :)\\n    !! Barycenteric coordinates\\n    !! number of rows = 3\\n    !! number of cols = number of points\\n    CHARACTER(*), INTENT(IN) :: refTriangle\\n    !! reference triangle, \\\"BIUNIT\\\", \\\"UNIT\\\"\\n    REAL(DFP) :: ans( &\\n      & SIZE(xij, 2), &\\n      & INT((order + 1) * (order + 2) / 2))\\n    !!\\n  END FUNCTION BarycentricHeirarchicalBasis_Triangle\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem, {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"example-2\",\n      children: \"Example 2\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See example\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_BarycentricHeirarchicalBasis_Triangle_test_2_MDXContent, {})\n      })]\n    })]\n  });\n}\nfunction BarycentricHeirarchicalBasis_Triangle_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(BarycentricHeirarchicalBasis_Triangle_createMdxContent, {\n      ...props\n    })\n  }) : BarycentricHeirarchicalBasis_Triangle_createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/TriangleInterpolationUtility/BarycentricHeirarchicalBasis_Triangle.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);