"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-dof-get-index-5-db-5c8"],{

/***/ "./docs/docs-api/DOF/GetIndex.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ GetIndex_contentTitle),\n  \"default\": () => (/* binding */ GetIndex_MDXContent),\n  frontMatter: () => (/* binding */ GetIndex_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_dof_get_index_md_5db_namespaceObject),\n  toc: () => (/* binding */ GetIndex_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-dof-get-index-md-5db.json\nconst site_docs_docs_api_dof_get_index_md_5db_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"DOF/GetIndex\",\"title\":\"GetIndex\",\"description\":\"Get index of node number.\",\"source\":\"@site/docs/docs-api/DOF/GetIndex.md\",\"sourceDirName\":\"DOF\",\"slug\":\"/DOF/GetIndex\",\"permalink\":\"/docs-api/DOF/GetIndex\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/DOF/GetIndex.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"sidebarPosition\":4,\"frontMatter\":{\"sidebar_position\":4},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"GetIDOF\",\"permalink\":\"/docs-api/DOF/GetIDOF\"},\"next\":{\"title\":\"GetNodeLoc\",\"permalink\":\"/docs-api/DOF/GetNodeLoc\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/DOF/examples/_GetIndex_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"PROGRAM main\\nUSE GlobalData\\nUSE BaseType, ONLY: DOF_\\nUSE DOF_Method\\nUSE Test_Method\\n\\nIMPLICIT NONE\\n\\nTYPE(DOF_) :: obj\\nINTEGER(I4B), ALLOCATABLE :: indx(:)\\n\\n! Initiate an instance of[DOF_] (DOF_.md)\\n\\nCALL Initiate(obj, tNodes=[10, 10], &\\n              names=[\\\"V\\\", \\\"P\\\"], spaceCompo=[3, 1], &\\n              timeCompo=[1, 1], storageFMT=FMT_NODES)\\n\\n! GetIndex\\n\\nindx = GetIndex(obj, nodeNum=1)\\nCALL OK(ALL(indx .EQ. [1, 2, 3, 4]), \\\"indx .EQ. [1,2,3,4]:\\\")\\n\\nindx = GetIndex(obj, nodeNum=5)\\nCALL OK(ALL(indx .EQ. [17, 18, 19, 20]), \\\"indx .EQ. [17,18,19,20]\\\")\\n\\nindx = GetIndex(obj, nodeNum=1, iVar=1)\\nCALL OK(ALL(indx .EQ. [1, 2, 3]), \\\"indx .Eq. [1,2,3]\\\")\\n\\nindx = GetIndex(obj, nodeNum=1, varName=\\\"V\\\")\\nCALL OK(ALL(indx .EQ. [1, 2, 3]), \\\"indx .Eq. [1,2,3]\\\")\\n\\nindx = GetIndex(obj, nodeNum=1, iVar=2)\\nCALL OK(ALL(indx .EQ. [4]), \\\"indx .Eq. [4]\\\")\\n\\nindx = GetIndex(obj, nodeNum=1, varName=\\\"P\\\")\\nCALL OK(ALL(indx .EQ. [4]), \\\"indx .Eq. [4]\\\")\\n\\nindx = GetIndex(obj, nodeNum=2, iVar=1)\\nCALL OK(ALL(indx .EQ. [5, 6, 7]), \\\"indx .Eq. [5,6,7]\\\")\\n\\nindx = GetIndex(obj, nodeNum=2, iVar=2)\\nCALL OK(ALL(indx .EQ. [8]), \\\"indx .Eq. [8]\\\")\\n\\nindx = GetIndex(obj, nodeNum=[1, 2], iVar=1)\\nCALL OK(ALL(indx .EQ. [1, 2, 3, 5, 6, 7]), \\\"indx .Eq. [1,2,3,5,6,7]\\\")\\n\\nindx = [GetIndex(obj, nodeNum=1, iVar=1, idof=1)]\\nCALL OK(ALL(indx .EQ. [1]), \\\"indx .Eq. [1]\\\")\\n\\nindx = [GetIndex(obj, nodeNum=1, iVar=1, idof=2)]\\nCALL OK(ALL(indx .EQ. [2]), \\\"indx .Eq. [2]\\\")\\n\\nindx = [GetIndex(obj, nodeNum=1, iVar=1, idof=3)]\\nCALL OK(ALL(indx .EQ. [3]), \\\"indx .Eq. [3]\\\")\\n\\nindx = [GetIndex(obj, nodeNum=2, iVar=1, idof=1)]\\nCALL OK(ALL(indx .EQ. [5]), \\\"indx .Eq. [5]\\\")\\n\\nindx = [GetIndex(obj, nodeNum=2, iVar=1, idof=2)]\\nCALL OK(ALL(indx .EQ. [6]), \\\"indx .Eq. [6]\\\")\\n\\nindx = [GetIndex(obj, nodeNum=2, iVar=1, idof=3)]\\nCALL OK(ALL(indx .EQ. [7]), \\\"indx .Eq. [7]\\\")\\n\\nCALL DEALLOCATE (obj)\\nEND PROGRAM main\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/DOF/GetIndex.md\n\n\nconst GetIndex_frontMatter = {\n\tsidebar_position: 4\n};\nconst GetIndex_contentTitle = 'GetIndex';\n\nconst assets = {\n\n};\n\n\n\n\nconst GetIndex_toc = [{\n  \"value\": \"What is an index\",\n  \"id\": \"what-is-an-index\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 1\",\n  \"id\": \"interface-1\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 3\",\n  \"id\": \"interface-3\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 4\",\n  \"id\": \"interface-4\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 5\",\n  \"id\": \"interface-5\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 6\",\n  \"id\": \"interface-6\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 7\",\n  \"id\": \"interface-7\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 8\",\n  \"id\": \"interface-8\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 9\",\n  \"id\": \"interface-9\",\n  \"level\": 2\n}, {\n  \"value\": \"Interface 10\",\n  \"id\": \"interface-10\",\n  \"level\": 2\n}, {\n  \"value\": \"Examples\",\n  \"id\": \"examples\",\n  \"level\": 2\n}, ...toc];\nfunction GetIndex_createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"getindex\",\n        children: \"GetIndex\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Get index of node number.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Calling example:\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum)\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-1\",\n          children: \"Interface 1\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum, ivar)\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-2\",\n          children: \"Interface 2\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum, varname)\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-3\",\n          children: \"Interface 3\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum(:) )\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-4\",\n          children: \"Interface 4\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum(:), ivar)\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-5\",\n          children: \"Interface 5\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum(:), varname)\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-6\",\n          children: \"Interface 6\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum, ivar, idof)\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-7\",\n          children: \"Interface 7\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum(:), ivar, idof)\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-8\",\n          children: \"Interface 8\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum, ivar, spacecompo, timecompo)\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-9\",\n          children: \"Interface 9\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"GetIndex(obj, nodenum(:), ivar, spacecompo, timecompo)\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"#interface-10\",\n          children: \"Interface 10\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodenum\"\n        }), \" should be lesser than the total number of nodes defined for dof number \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"idof\"\n        }), \".\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"idof\"\n        }), \"s are continuously numbered, so if there are two or more physical variables, then idof of the second or later physical variables does not start from 1.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"what-is-an-index\",\n      children: \"What is an index\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Index is a location of a nodal degree of freedom. For example, consider \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"velocity\"\n      }), \" variable with 3 space and 2 time components. Now what is the location of velocity (space component 1, and time component 2) at node number 3. This location is called index.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1\",\n      children: \"Interface 1\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetIndex1(obj, nodenum) RESULT(ans)\\n    CLASS(DOF_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: nodenum\\n    INTEGER(I4B), ALLOCATABLE :: ans(:)\\n  END FUNCTION GetIndex1\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"This function returns indices, representing the location of all degrees of freedom define on a given node number.\"\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The size of these indices is equal to the total number of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"DOF\"\n        }), \" in obj\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"In this way, \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ans(ii)\"\n        }), \" represents the location of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ii\"\n        }), \" \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"dof\"\n        }), \" at node number \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodenum\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"It is user's responsibility to ensure that for every physical variable the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodenumber\"\n        }), \" is lesser than the total number of nodes defined for that physical variable.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The returned indices can be used to extract values from an instance of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"RealVector\"\n        }), \" or Fortran vector.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"The size of returned vector \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ans\"\n        }), \" will be the total number of degrees of freedom in the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"DOF\"\n        }), \" object.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetIndex2(obj, nodenum, ivar) RESULT(ans)\\n    CLASS(DOF_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: nodenum\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), ALLOCATABLE :: ans(:)\\n  END FUNCTION GetIndex2\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"This function returns indices, representing the locations of all the degrees of freedom of a given physical variable \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ivar\"\n        }), \" at a given node number \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodenum\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The physical variable is defined by \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ivar\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The size of these indices is equal to the total number of DOF defined for the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ivar\"\n        }), \" physical variable.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"It is user's responsibility to ensure that for the selected physical var the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodenum\"\n        }), \" is lesser than the total number of nodes defined for that physical variable.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-3\",\n      children: \"Interface 3\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetIndex3(obj, nodenum, varname) RESULT(ans)\\n    CLASS(DOF_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: nodenum\\n    CHARACTER(1), INTENT(IN) :: varname\\n    INTEGER(I4B), ALLOCATABLE :: ans(:)\\n  END FUNCTION GetIndex3\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Same as \", (0,jsx_runtime.jsx)(_components.a, {\n        href: \"#interface-2\",\n        children: \"Interface 2\"\n      }), \", but physical variable is selected by it name.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-4\",\n      children: \"Interface 4\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetIndex4(obj, nodenum) RESULT(ans)\\n    CLASS(DOF_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\\n    INTEGER(I4B), ALLOCATABLE :: ans(:)\\n  END FUNCTION GetIndex4\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"This function returns indices, representing the location of all the degrees of freedom defined at node numbers specified by nodenum.\"\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The size of these indices is equal to the total number of DOF in obj times the size of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodenum(:)\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-5\",\n      children: \"Interface 5\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetIndex5(obj, nodenum, ivar) RESULT(ans)\\n    CLASS(DOF_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\\n    INTEGER(I4B), INTENT(IN) :: ivar\\n    INTEGER(I4B), ALLOCATABLE :: ans(:)\\n  END FUNCTION GetIndex5\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"This function returns indices, representing the location of all the degrees of freedom of physical variable given by \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ivar\"\n        }), \", at nodes given in \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodenum\"\n        }), \".\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The physical variable is defined by \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ivar\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The size of these indices is equal to the total number of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"DOF\"\n        }), \" defined for the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"ivar\"\n        }), \" physical variable times the size of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodenum\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-6\",\n      children: \"Interface 6\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION GetIndex6(obj, nodenum, varname) RESULT(ans)\\n    CLASS(DOF_), INTENT(IN) :: obj\\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\\n    CHARACTER(1), INTENT(IN) :: varname\\n    INTEGER(I4B), ALLOCATABLE :: ans(:)\\n  END FUNCTION GetIndex6\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"This function returns a vector of integers (indices) for a given node number and a given physical Variable.\"\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The physical variable is defined by \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"varname\"\n        })]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The size of these indices is equal to the total number of DOF defined for the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"varname\"\n        }), \" physical variable.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The returned indices represent the degrees of freedom of physical variable \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"varname\"\n        }), \" defined on each node.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"It is user's responsibility to ensure that for the selected physical var the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"nodenumber\"\n        }), \" is lesser than the total number of nodes defined for that physical variable.\"]\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"The returned indices can be used for getting the dof (all dof) defined on the nodenum for the given physical variable.\"\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"The returned indices can be used to extract values from an instance of \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"/docs-api/RealVector/RealVector_\",\n          children: \"RealVector\"\n        }), \" or fortran vector of real numbers.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-7\",\n      children: \"Interface 7\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE GetIndex\\n  MODULE PROCEDURE dof_getNodeLoc5\\nEND INTERFACE GetIndex\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-8\",\n      children: \"Interface 8\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE GetIndex\\n  MODULE PROCEDURE dof_getNodeLoc6\\nEND INTERFACE GetIndex\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-9\",\n      children: \"Interface 9\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE GetIndex\\n  MODULE PROCEDURE dof_getNodeLoc7\\nEND INTERFACE GetIndex\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-10\",\n      children: \"Interface 10\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE GetIndex\\n  MODULE PROCEDURE dof_getNodeLoc8\\nEND INTERFACE GetIndex\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"examples\",\n      children: \"Examples\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See examples\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      })]\n    })]\n  });\n}\nfunction GetIndex_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(GetIndex_createMdxContent, {\n      ...props\n    })\n  }) : GetIndex_createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL2RvY3MtYXBpL0RPRi9HZXRJbmRleC5tZCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNwQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL2RvY3MvZG9jcy1hcGkvRE9GL2V4YW1wbGVzL19HZXRJbmRleF90ZXN0XzEubWQ/MWY4NiIsIndlYnBhY2s6Ly9lYXNpZmVtLWRvY3MvLi9kb2NzL2RvY3MtYXBpL0RPRi9HZXRJbmRleC5tZD9hNjg1Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7fTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSB1bmRlZmluZWQ7XG5cblxuXG5pbXBvcnQge2pzeCBhcyBfanN4fSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7dXNlTURYQ29tcG9uZW50cyBhcyBfcHJvdmlkZUNvbXBvbmVudHN9IGZyb20gXCJAbWR4LWpzL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgdG9jID0gW107XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBjb2RlOiBcImNvZGVcIixcbiAgICBwcmU6IFwicHJlXCIsXG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgY2hpbGRyZW46IFwiUFJPR1JBTSBtYWluXFxuVVNFIEdsb2JhbERhdGFcXG5VU0UgQmFzZVR5cGUsIE9OTFk6IERPRl9cXG5VU0UgRE9GX01ldGhvZFxcblVTRSBUZXN0X01ldGhvZFxcblxcbklNUExJQ0lUIE5PTkVcXG5cXG5UWVBFKERPRl8pIDo6IG9ialxcbklOVEVHRVIoSTRCKSwgQUxMT0NBVEFCTEUgOjogaW5keCg6KVxcblxcbiEgSW5pdGlhdGUgYW4gaW5zdGFuY2Ugb2ZbRE9GX10gKERPRl8ubWQpXFxuXFxuQ0FMTCBJbml0aWF0ZShvYmosIHROb2Rlcz1bMTAsIDEwXSwgJlxcbiAgICAgICAgICAgICAgbmFtZXM9W1xcXCJWXFxcIiwgXFxcIlBcXFwiXSwgc3BhY2VDb21wbz1bMywgMV0sICZcXG4gICAgICAgICAgICAgIHRpbWVDb21wbz1bMSwgMV0sIHN0b3JhZ2VGTVQ9Rk1UX05PREVTKVxcblxcbiEgR2V0SW5kZXhcXG5cXG5pbmR4ID0gR2V0SW5kZXgob2JqLCBub2RlTnVtPTEpXFxuQ0FMTCBPSyhBTEwoaW5keCAuRVEuIFsxLCAyLCAzLCA0XSksIFxcXCJpbmR4IC5FUS4gWzEsMiwzLDRdOlxcXCIpXFxuXFxuaW5keCA9IEdldEluZGV4KG9iaiwgbm9kZU51bT01KVxcbkNBTEwgT0soQUxMKGluZHggLkVRLiBbMTcsIDE4LCAxOSwgMjBdKSwgXFxcImluZHggLkVRLiBbMTcsMTgsMTksMjBdXFxcIilcXG5cXG5pbmR4ID0gR2V0SW5kZXgob2JqLCBub2RlTnVtPTEsIGlWYXI9MSlcXG5DQUxMIE9LKEFMTChpbmR4IC5FUS4gWzEsIDIsIDNdKSwgXFxcImluZHggLkVxLiBbMSwyLDNdXFxcIilcXG5cXG5pbmR4ID0gR2V0SW5kZXgob2JqLCBub2RlTnVtPTEsIHZhck5hbWU9XFxcIlZcXFwiKVxcbkNBTEwgT0soQUxMKGluZHggLkVRLiBbMSwgMiwgM10pLCBcXFwiaW5keCAuRXEuIFsxLDIsM11cXFwiKVxcblxcbmluZHggPSBHZXRJbmRleChvYmosIG5vZGVOdW09MSwgaVZhcj0yKVxcbkNBTEwgT0soQUxMKGluZHggLkVRLiBbNF0pLCBcXFwiaW5keCAuRXEuIFs0XVxcXCIpXFxuXFxuaW5keCA9IEdldEluZGV4KG9iaiwgbm9kZU51bT0xLCB2YXJOYW1lPVxcXCJQXFxcIilcXG5DQUxMIE9LKEFMTChpbmR4IC5FUS4gWzRdKSwgXFxcImluZHggLkVxLiBbNF1cXFwiKVxcblxcbmluZHggPSBHZXRJbmRleChvYmosIG5vZGVOdW09MiwgaVZhcj0xKVxcbkNBTEwgT0soQUxMKGluZHggLkVRLiBbNSwgNiwgN10pLCBcXFwiaW5keCAuRXEuIFs1LDYsN11cXFwiKVxcblxcbmluZHggPSBHZXRJbmRleChvYmosIG5vZGVOdW09MiwgaVZhcj0yKVxcbkNBTEwgT0soQUxMKGluZHggLkVRLiBbOF0pLCBcXFwiaW5keCAuRXEuIFs4XVxcXCIpXFxuXFxuaW5keCA9IEdldEluZGV4KG9iaiwgbm9kZU51bT1bMSwgMl0sIGlWYXI9MSlcXG5DQUxMIE9LKEFMTChpbmR4IC5FUS4gWzEsIDIsIDMsIDUsIDYsIDddKSwgXFxcImluZHggLkVxLiBbMSwyLDMsNSw2LDddXFxcIilcXG5cXG5pbmR4ID0gW0dldEluZGV4KG9iaiwgbm9kZU51bT0xLCBpVmFyPTEsIGlkb2Y9MSldXFxuQ0FMTCBPSyhBTEwoaW5keCAuRVEuIFsxXSksIFxcXCJpbmR4IC5FcS4gWzFdXFxcIilcXG5cXG5pbmR4ID0gW0dldEluZGV4KG9iaiwgbm9kZU51bT0xLCBpVmFyPTEsIGlkb2Y9MildXFxuQ0FMTCBPSyhBTEwoaW5keCAuRVEuIFsyXSksIFxcXCJpbmR4IC5FcS4gWzJdXFxcIilcXG5cXG5pbmR4ID0gW0dldEluZGV4KG9iaiwgbm9kZU51bT0xLCBpVmFyPTEsIGlkb2Y9MyldXFxuQ0FMTCBPSyhBTEwoaW5keCAuRVEuIFszXSksIFxcXCJpbmR4IC5FcS4gWzNdXFxcIilcXG5cXG5pbmR4ID0gW0dldEluZGV4KG9iaiwgbm9kZU51bT0yLCBpVmFyPTEsIGlkb2Y9MSldXFxuQ0FMTCBPSyhBTEwoaW5keCAuRVEuIFs1XSksIFxcXCJpbmR4IC5FcS4gWzVdXFxcIilcXG5cXG5pbmR4ID0gW0dldEluZGV4KG9iaiwgbm9kZU51bT0yLCBpVmFyPTEsIGlkb2Y9MildXFxuQ0FMTCBPSyhBTEwoaW5keCAuRVEuIFs2XSksIFxcXCJpbmR4IC5FcS4gWzZdXFxcIilcXG5cXG5pbmR4ID0gW0dldEluZGV4KG9iaiwgbm9kZU51bT0yLCBpVmFyPTEsIGlkb2Y9MyldXFxuQ0FMTCBPSyhBTEwoaW5keCAuRVEuIFs3XSksIFxcXCJpbmR4IC5FcS4gWzddXFxcIilcXG5cXG5DQUxMIERFQUxMT0NBVEUgKG9iailcXG5FTkQgUFJPR1JBTSBtYWluXFxuXCJcbiAgICB9KVxuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQocHJvcHMgPSB7fSkge1xuICBjb25zdCB7d3JhcHBlcjogTURYTGF5b3V0fSA9IHtcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBNRFhMYXlvdXQgPyBfanN4KE1EWExheW91dCwge1xuICAgIC4uLnByb3BzLFxuICAgIGNoaWxkcmVuOiBfanN4KF9jcmVhdGVNZHhDb250ZW50LCB7XG4gICAgICAuLi5wcm9wc1xuICAgIH0pXG4gIH0pIDogX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpO1xufVxuXG4iLCJcblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge1xuXHRzaWRlYmFyX3Bvc2l0aW9uOiA0XG59O1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUaXRsZSA9ICdHZXRJbmRleCc7XG5leHBvcnQge2RlZmF1bHQgYXMgbWV0YWRhdGF9IGZyb20gJ0BzaXRlLy5kb2N1c2F1cnVzL2RvY3VzYXVydXMtcGx1Z2luLWNvbnRlbnQtZG9jcy9kb2NzLWFwaS9zaXRlLWRvY3MtZG9jcy1hcGktZG9mLWdldC1pbmRleC1tZC01ZGIuanNvbidcbmV4cG9ydCBjb25zdCBhc3NldHMgPSB7XG5cbn07XG5cbmltcG9ydCB7RnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4c30gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQge3VzZU1EWENvbXBvbmVudHMgYXMgX3Byb3ZpZGVDb21wb25lbnRzfSBmcm9tIFwiQG1keC1qcy9yZWFjdFwiO1xuaW1wb3J0IEVYQU1QTEUxNjQsIHt0b2MgYXMgX190b2NFWEFNUExFMTY0fSBmcm9tIFwiLi9leGFtcGxlcy9fR2V0SW5kZXhfdGVzdF8xLm1kXCI7XG5leHBvcnQgY29uc3QgdG9jID0gW3tcbiAgXCJ2YWx1ZVwiOiBcIldoYXQgaXMgYW4gaW5kZXhcIixcbiAgXCJpZFwiOiBcIndoYXQtaXMtYW4taW5kZXhcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgMVwiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlLTFcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgMlwiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlLTJcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgM1wiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlLTNcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgNFwiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlLTRcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgNVwiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlLTVcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgNlwiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlLTZcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgN1wiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlLTdcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgOFwiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlLThcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgOVwiLFxuICBcImlkXCI6IFwiaW50ZXJmYWNlLTlcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJJbnRlcmZhY2UgMTBcIixcbiAgXCJpZFwiOiBcImludGVyZmFjZS0xMFwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkV4YW1wbGVzXCIsXG4gIFwiaWRcIjogXCJleGFtcGxlc1wiLFxuICBcImxldmVsXCI6IDJcbn0sIC4uLl9fdG9jRVhBTVBMRTE2NF07XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBhOiBcImFcIixcbiAgICBhZG1vbml0aW9uOiBcImFkbW9uaXRpb25cIixcbiAgICBjb2RlOiBcImNvZGVcIixcbiAgICBoMTogXCJoMVwiLFxuICAgIGgyOiBcImgyXCIsXG4gICAgaGVhZGVyOiBcImhlYWRlclwiLFxuICAgIGxpOiBcImxpXCIsXG4gICAgcDogXCJwXCIsXG4gICAgcHJlOiBcInByZVwiLFxuICAgIHVsOiBcInVsXCIsXG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9LCB7RGV0YWlsc30gPSBfY29tcG9uZW50cztcbiAgaWYgKCFEZXRhaWxzKSBfbWlzc2luZ01keFJlZmVyZW5jZShcIkRldGFpbHNcIiwgdHJ1ZSk7XG4gIHJldHVybiBfanN4cyhfRnJhZ21lbnQsIHtcbiAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuaGVhZGVyLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5oMSwge1xuICAgICAgICBpZDogXCJnZXRpbmRleFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJHZXRJbmRleFwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkdldCBpbmRleCBvZiBub2RlIG51bWJlci5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkNhbGxpbmcgZXhhbXBsZTpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkdldEluZGV4KG9iaiwgbm9kZW51bSlcIlxuICAgICAgICB9KSwgXCIgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2ludGVyZmFjZS0xXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDFcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkdldEluZGV4KG9iaiwgbm9kZW51bSwgaXZhcilcIlxuICAgICAgICB9KSwgXCIgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2ludGVyZmFjZS0yXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDJcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkdldEluZGV4KG9iaiwgbm9kZW51bSwgdmFybmFtZSlcIlxuICAgICAgICB9KSwgXCIgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2ludGVyZmFjZS0zXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDNcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkdldEluZGV4KG9iaiwgbm9kZW51bSg6KSApXCJcbiAgICAgICAgfSksIFwiIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNpbnRlcmZhY2UtNFwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSA0XCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJHZXRJbmRleChvYmosIG5vZGVudW0oOiksIGl2YXIpXCJcbiAgICAgICAgfSksIFwiIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNpbnRlcmZhY2UtNVwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSA1XCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJHZXRJbmRleChvYmosIG5vZGVudW0oOiksIHZhcm5hbWUpXCJcbiAgICAgICAgfSksIFwiIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNpbnRlcmZhY2UtNlwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSA2XCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJHZXRJbmRleChvYmosIG5vZGVudW0sIGl2YXIsIGlkb2YpXCJcbiAgICAgICAgfSksIFwiIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNpbnRlcmZhY2UtN1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSA3XCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJHZXRJbmRleChvYmosIG5vZGVudW0oOiksIGl2YXIsIGlkb2YpXCJcbiAgICAgICAgfSksIFwiIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNpbnRlcmZhY2UtOFwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSA4XCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJHZXRJbmRleChvYmosIG5vZGVudW0sIGl2YXIsIHNwYWNlY29tcG8sIHRpbWVjb21wbylcIlxuICAgICAgICB9KSwgXCIgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2ludGVyZmFjZS05XCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDlcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkdldEluZGV4KG9iaiwgbm9kZW51bSg6KSwgaXZhciwgc3BhY2Vjb21wbywgdGltZWNvbXBvKVwiXG4gICAgICAgIH0pLCBcIiBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjaW50ZXJmYWNlLTEwXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDEwXCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hZG1vbml0aW9uLCB7XG4gICAgICB0eXBlOiBcIm5vdGVcIixcbiAgICAgIGNoaWxkcmVuOiBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwibm9kZW51bVwiXG4gICAgICAgIH0pLCBcIiBzaG91bGQgYmUgbGVzc2VyIHRoYW4gdGhlIHRvdGFsIG51bWJlciBvZiBub2RlcyBkZWZpbmVkIGZvciBkb2YgbnVtYmVyIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJpZG9mXCJcbiAgICAgICAgfSksIFwiLlwiXVxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hZG1vbml0aW9uLCB7XG4gICAgICB0eXBlOiBcImluZm9cIixcbiAgICAgIGNoaWxkcmVuOiBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiaWRvZlwiXG4gICAgICAgIH0pLCBcInMgYXJlIGNvbnRpbnVvdXNseSBudW1iZXJlZCwgc28gaWYgdGhlcmUgYXJlIHR3byBvciBtb3JlIHBoeXNpY2FsIHZhcmlhYmxlcywgdGhlbiBpZG9mIG9mIHRoZSBzZWNvbmQgb3IgbGF0ZXIgcGh5c2ljYWwgdmFyaWFibGVzIGRvZXMgbm90IHN0YXJ0IGZyb20gMS5cIl1cbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcIndoYXQtaXMtYW4taW5kZXhcIixcbiAgICAgIGNoaWxkcmVuOiBcIldoYXQgaXMgYW4gaW5kZXhcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiSW5kZXggaXMgYSBsb2NhdGlvbiBvZiBhIG5vZGFsIGRlZ3JlZSBvZiBmcmVlZG9tLiBGb3IgZXhhbXBsZSwgY29uc2lkZXIgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJ2ZWxvY2l0eVwiXG4gICAgICB9KSwgXCIgdmFyaWFibGUgd2l0aCAzIHNwYWNlIGFuZCAyIHRpbWUgY29tcG9uZW50cy4gTm93IHdoYXQgaXMgdGhlIGxvY2F0aW9uIG9mIHZlbG9jaXR5IChzcGFjZSBjb21wb25lbnQgMSwgYW5kIHRpbWUgY29tcG9uZW50IDIpIGF0IG5vZGUgbnVtYmVyIDMuIFRoaXMgbG9jYXRpb24gaXMgY2FsbGVkIGluZGV4LlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbnRlcmZhY2UtMVwiLFxuICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDFcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJJTlRFUkZBQ0VcXG4gIE1PRFVMRSBQVVJFIEZVTkNUSU9OIEdldEluZGV4MShvYmosIG5vZGVudW0pIFJFU1VMVChhbnMpXFxuICAgIENMQVNTKERPRl8pLCBJTlRFTlQoSU4pIDo6IG9ialxcbiAgICBJTlRFR0VSKEk0QiksIElOVEVOVChJTikgOjogbm9kZW51bVxcbiAgICBJTlRFR0VSKEk0QiksIEFMTE9DQVRBQkxFIDo6IGFucyg6KVxcbiAgRU5EIEZVTkNUSU9OIEdldEluZGV4MVxcbkVORCBJTlRFUkZBQ0VcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJUaGlzIGZ1bmN0aW9uIHJldHVybnMgaW5kaWNlcywgcmVwcmVzZW50aW5nIHRoZSBsb2NhdGlvbiBvZiBhbGwgZGVncmVlcyBvZiBmcmVlZG9tIGRlZmluZSBvbiBhIGdpdmVuIG5vZGUgbnVtYmVyLlwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlRoZSBzaXplIG9mIHRoZXNlIGluZGljZXMgaXMgZXF1YWwgdG8gdGhlIHRvdGFsIG51bWJlciBvZiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiRE9GXCJcbiAgICAgICAgfSksIFwiIGluIG9ialwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJJbiB0aGlzIHdheSwgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcImFucyhpaSlcIlxuICAgICAgICB9KSwgXCIgcmVwcmVzZW50cyB0aGUgbG9jYXRpb24gb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcImlpXCJcbiAgICAgICAgfSksIFwiIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJkb2ZcIlxuICAgICAgICB9KSwgXCIgYXQgbm9kZSBudW1iZXIgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIm5vZGVudW1cIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiSXQgaXMgdXNlcidzIHJlc3BvbnNpYmlsaXR5IHRvIGVuc3VyZSB0aGF0IGZvciBldmVyeSBwaHlzaWNhbCB2YXJpYWJsZSB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIm5vZGVudW1iZXJcIlxuICAgICAgICB9KSwgXCIgaXMgbGVzc2VyIHRoYW4gdGhlIHRvdGFsIG51bWJlciBvZiBub2RlcyBkZWZpbmVkIGZvciB0aGF0IHBoeXNpY2FsIHZhcmlhYmxlLlwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJUaGUgcmV0dXJuZWQgaW5kaWNlcyBjYW4gYmUgdXNlZCB0byBleHRyYWN0IHZhbHVlcyBmcm9tIGFuIGluc3RhbmNlIG9mIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJSZWFsVmVjdG9yXCJcbiAgICAgICAgfSksIFwiIG9yIEZvcnRyYW4gdmVjdG9yLlwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuYWRtb25pdGlvbiwge1xuICAgICAgdHlwZTogXCJub3RlXCIsXG4gICAgICBjaGlsZHJlbjogX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgICBjaGlsZHJlbjogW1wiVGhlIHNpemUgb2YgcmV0dXJuZWQgdmVjdG9yIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJhbnNcIlxuICAgICAgICB9KSwgXCIgd2lsbCBiZSB0aGUgdG90YWwgbnVtYmVyIG9mIGRlZ3JlZXMgb2YgZnJlZWRvbSBpbiB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkRPRlwiXG4gICAgICAgIH0pLCBcIiBvYmplY3QuXCJdXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbnRlcmZhY2UtMlwiLFxuICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDJcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJJTlRFUkZBQ0VcXG4gIE1PRFVMRSBQVVJFIEZVTkNUSU9OIEdldEluZGV4MihvYmosIG5vZGVudW0sIGl2YXIpIFJFU1VMVChhbnMpXFxuICAgIENMQVNTKERPRl8pLCBJTlRFTlQoSU4pIDo6IG9ialxcbiAgICBJTlRFR0VSKEk0QiksIElOVEVOVChJTikgOjogbm9kZW51bVxcbiAgICBJTlRFR0VSKEk0QiksIElOVEVOVChJTikgOjogaXZhclxcbiAgICBJTlRFR0VSKEk0QiksIEFMTE9DQVRBQkxFIDo6IGFucyg6KVxcbiAgRU5EIEZVTkNUSU9OIEdldEluZGV4MlxcbkVORCBJTlRFUkZBQ0VcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlRoaXMgZnVuY3Rpb24gcmV0dXJucyBpbmRpY2VzLCByZXByZXNlbnRpbmcgdGhlIGxvY2F0aW9ucyBvZiBhbGwgdGhlIGRlZ3JlZXMgb2YgZnJlZWRvbSBvZiBhIGdpdmVuIHBoeXNpY2FsIHZhcmlhYmxlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJpdmFyXCJcbiAgICAgICAgfSksIFwiIGF0IGEgZ2l2ZW4gbm9kZSBudW1iZXIgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIm5vZGVudW1cIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiVGhlIHBoeXNpY2FsIHZhcmlhYmxlIGlzIGRlZmluZWQgYnkgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIml2YXJcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiVGhlIHNpemUgb2YgdGhlc2UgaW5kaWNlcyBpcyBlcXVhbCB0byB0aGUgdG90YWwgbnVtYmVyIG9mIERPRiBkZWZpbmVkIGZvciB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIml2YXJcIlxuICAgICAgICB9KSwgXCIgcGh5c2ljYWwgdmFyaWFibGUuXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIkl0IGlzIHVzZXIncyByZXNwb25zaWJpbGl0eSB0byBlbnN1cmUgdGhhdCBmb3IgdGhlIHNlbGVjdGVkIHBoeXNpY2FsIHZhciB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIm5vZGVudW1cIlxuICAgICAgICB9KSwgXCIgaXMgbGVzc2VyIHRoYW4gdGhlIHRvdGFsIG51bWJlciBvZiBub2RlcyBkZWZpbmVkIGZvciB0aGF0IHBoeXNpY2FsIHZhcmlhYmxlLlwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImludGVyZmFjZS0zXCIsXG4gICAgICBjaGlsZHJlbjogXCJJbnRlcmZhY2UgM1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1mb3J0cmFuXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIklOVEVSRkFDRVxcbiAgTU9EVUxFIFBVUkUgRlVOQ1RJT04gR2V0SW5kZXgzKG9iaiwgbm9kZW51bSwgdmFybmFtZSkgUkVTVUxUKGFucylcXG4gICAgQ0xBU1MoRE9GXyksIElOVEVOVChJTikgOjogb2JqXFxuICAgIElOVEVHRVIoSTRCKSwgSU5URU5UKElOKSA6OiBub2RlbnVtXFxuICAgIENIQVJBQ1RFUigxKSwgSU5URU5UKElOKSA6OiB2YXJuYW1lXFxuICAgIElOVEVHRVIoSTRCKSwgQUxMT0NBVEFCTEUgOjogYW5zKDopXFxuICBFTkQgRlVOQ1RJT04gR2V0SW5kZXgzXFxuRU5EIElOVEVSRkFDRVxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiU2FtZSBhcyBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiI2ludGVyZmFjZS0yXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSAyXCJcbiAgICAgIH0pLCBcIiwgYnV0IHBoeXNpY2FsIHZhcmlhYmxlIGlzIHNlbGVjdGVkIGJ5IGl0IG5hbWUuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImludGVyZmFjZS00XCIsXG4gICAgICBjaGlsZHJlbjogXCJJbnRlcmZhY2UgNFwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1mb3J0cmFuXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIklOVEVSRkFDRVxcbiAgTU9EVUxFIFBVUkUgRlVOQ1RJT04gR2V0SW5kZXg0KG9iaiwgbm9kZW51bSkgUkVTVUxUKGFucylcXG4gICAgQ0xBU1MoRE9GXyksIElOVEVOVChJTikgOjogb2JqXFxuICAgIElOVEVHRVIoSTRCKSwgSU5URU5UKElOKSA6OiBub2RlbnVtKDopXFxuICAgIElOVEVHRVIoSTRCKSwgQUxMT0NBVEFCTEUgOjogYW5zKDopXFxuICBFTkQgRlVOQ1RJT04gR2V0SW5kZXg0XFxuRU5EIElOVEVSRkFDRVxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlRoaXMgZnVuY3Rpb24gcmV0dXJucyBpbmRpY2VzLCByZXByZXNlbnRpbmcgdGhlIGxvY2F0aW9uIG9mIGFsbCB0aGUgZGVncmVlcyBvZiBmcmVlZG9tIGRlZmluZWQgYXQgbm9kZSBudW1iZXJzIHNwZWNpZmllZCBieSBub2RlbnVtLlwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlRoZSBzaXplIG9mIHRoZXNlIGluZGljZXMgaXMgZXF1YWwgdG8gdGhlIHRvdGFsIG51bWJlciBvZiBET0YgaW4gb2JqIHRpbWVzIHRoZSBzaXplIG9mIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJub2RlbnVtKDopXCJcbiAgICAgICAgfSksIFwiLlwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImludGVyZmFjZS01XCIsXG4gICAgICBjaGlsZHJlbjogXCJJbnRlcmZhY2UgNVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1mb3J0cmFuXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIklOVEVSRkFDRVxcbiAgTU9EVUxFIFBVUkUgRlVOQ1RJT04gR2V0SW5kZXg1KG9iaiwgbm9kZW51bSwgaXZhcikgUkVTVUxUKGFucylcXG4gICAgQ0xBU1MoRE9GXyksIElOVEVOVChJTikgOjogb2JqXFxuICAgIElOVEVHRVIoSTRCKSwgSU5URU5UKElOKSA6OiBub2RlbnVtKDopXFxuICAgIElOVEVHRVIoSTRCKSwgSU5URU5UKElOKSA6OiBpdmFyXFxuICAgIElOVEVHRVIoSTRCKSwgQUxMT0NBVEFCTEUgOjogYW5zKDopXFxuICBFTkQgRlVOQ1RJT04gR2V0SW5kZXg1XFxuRU5EIElOVEVSRkFDRVxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiVGhpcyBmdW5jdGlvbiByZXR1cm5zIGluZGljZXMsIHJlcHJlc2VudGluZyB0aGUgbG9jYXRpb24gb2YgYWxsIHRoZSBkZWdyZWVzIG9mIGZyZWVkb20gb2YgcGh5c2ljYWwgdmFyaWFibGUgZ2l2ZW4gYnkgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIml2YXJcIlxuICAgICAgICB9KSwgXCIsIGF0IG5vZGVzIGdpdmVuIGluIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJub2RlbnVtXCJcbiAgICAgICAgfSksIFwiLlwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJUaGUgcGh5c2ljYWwgdmFyaWFibGUgaXMgZGVmaW5lZCBieSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiaXZhclwiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJUaGUgc2l6ZSBvZiB0aGVzZSBpbmRpY2VzIGlzIGVxdWFsIHRvIHRoZSB0b3RhbCBudW1iZXIgb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkRPRlwiXG4gICAgICAgIH0pLCBcIiBkZWZpbmVkIGZvciB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIml2YXJcIlxuICAgICAgICB9KSwgXCIgcGh5c2ljYWwgdmFyaWFibGUgdGltZXMgdGhlIHNpemUgb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIm5vZGVudW1cIlxuICAgICAgICB9KSwgXCIuXCJdXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiaW50ZXJmYWNlLTZcIixcbiAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSA2XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWZvcnRyYW5cIixcbiAgICAgICAgY2hpbGRyZW46IFwiSU5URVJGQUNFXFxuICBNT0RVTEUgUFVSRSBGVU5DVElPTiBHZXRJbmRleDYob2JqLCBub2RlbnVtLCB2YXJuYW1lKSBSRVNVTFQoYW5zKVxcbiAgICBDTEFTUyhET0ZfKSwgSU5URU5UKElOKSA6OiBvYmpcXG4gICAgSU5URUdFUihJNEIpLCBJTlRFTlQoSU4pIDo6IG5vZGVudW0oOilcXG4gICAgQ0hBUkFDVEVSKDEpLCBJTlRFTlQoSU4pIDo6IHZhcm5hbWVcXG4gICAgSU5URUdFUihJNEIpLCBBTExPQ0FUQUJMRSA6OiBhbnMoOilcXG4gIEVORCBGVU5DVElPTiBHZXRJbmRleDZcXG5FTkQgSU5URVJGQUNFXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiVGhpcyBmdW5jdGlvbiByZXR1cm5zIGEgdmVjdG9yIG9mIGludGVnZXJzIChpbmRpY2VzKSBmb3IgYSBnaXZlbiBub2RlIG51bWJlciBhbmQgYSBnaXZlbiBwaHlzaWNhbCBWYXJpYWJsZS5cIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJUaGUgcGh5c2ljYWwgdmFyaWFibGUgaXMgZGVmaW5lZCBieSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwidmFybmFtZVwiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJUaGUgc2l6ZSBvZiB0aGVzZSBpbmRpY2VzIGlzIGVxdWFsIHRvIHRoZSB0b3RhbCBudW1iZXIgb2YgRE9GIGRlZmluZWQgZm9yIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwidmFybmFtZVwiXG4gICAgICAgIH0pLCBcIiBwaHlzaWNhbCB2YXJpYWJsZS5cIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiVGhlIHJldHVybmVkIGluZGljZXMgcmVwcmVzZW50IHRoZSBkZWdyZWVzIG9mIGZyZWVkb20gb2YgcGh5c2ljYWwgdmFyaWFibGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcInZhcm5hbWVcIlxuICAgICAgICB9KSwgXCIgZGVmaW5lZCBvbiBlYWNoIG5vZGUuXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIkl0IGlzIHVzZXIncyByZXNwb25zaWJpbGl0eSB0byBlbnN1cmUgdGhhdCBmb3IgdGhlIHNlbGVjdGVkIHBoeXNpY2FsIHZhciB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIm5vZGVudW1iZXJcIlxuICAgICAgICB9KSwgXCIgaXMgbGVzc2VyIHRoYW4gdGhlIHRvdGFsIG51bWJlciBvZiBub2RlcyBkZWZpbmVkIGZvciB0aGF0IHBoeXNpY2FsIHZhcmlhYmxlLlwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiVGhlIHJldHVybmVkIGluZGljZXMgY2FuIGJlIHVzZWQgZm9yIGdldHRpbmcgdGhlIGRvZiAoYWxsIGRvZikgZGVmaW5lZCBvbiB0aGUgbm9kZW51bSBmb3IgdGhlIGdpdmVuIHBoeXNpY2FsIHZhcmlhYmxlLlwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlRoZSByZXR1cm5lZCBpbmRpY2VzIGNhbiBiZSB1c2VkIHRvIGV4dHJhY3QgdmFsdWVzIGZyb20gYW4gaW5zdGFuY2Ugb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiL2RvY3MtYXBpL1JlYWxWZWN0b3IvUmVhbFZlY3Rvcl9cIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJSZWFsVmVjdG9yXCJcbiAgICAgICAgfSksIFwiIG9yIGZvcnRyYW4gdmVjdG9yIG9mIHJlYWwgbnVtYmVycy5cIl1cbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbnRlcmZhY2UtN1wiLFxuICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDdcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJJTlRFUkZBQ0UgR2V0SW5kZXhcXG4gIE1PRFVMRSBQUk9DRURVUkUgZG9mX2dldE5vZGVMb2M1XFxuRU5EIElOVEVSRkFDRSBHZXRJbmRleFxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbnRlcmZhY2UtOFwiLFxuICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDhcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJJTlRFUkZBQ0UgR2V0SW5kZXhcXG4gIE1PRFVMRSBQUk9DRURVUkUgZG9mX2dldE5vZGVMb2M2XFxuRU5EIElOVEVSRkFDRSBHZXRJbmRleFxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbnRlcmZhY2UtOVwiLFxuICAgICAgY2hpbGRyZW46IFwiSW50ZXJmYWNlIDlcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtZm9ydHJhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJJTlRFUkZBQ0UgR2V0SW5kZXhcXG4gIE1PRFVMRSBQUk9DRURVUkUgZG9mX2dldE5vZGVMb2M3XFxuRU5EIElOVEVSRkFDRSBHZXRJbmRleFxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbnRlcmZhY2UtMTBcIixcbiAgICAgIGNoaWxkcmVuOiBcIkludGVyZmFjZSAxMFwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1mb3J0cmFuXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIklOVEVSRkFDRSBHZXRJbmRleFxcbiAgTU9EVUxFIFBST0NFRFVSRSBkb2ZfZ2V0Tm9kZUxvYzhcXG5FTkQgSU5URVJGQUNFIEdldEluZGV4XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImV4YW1wbGVzXCIsXG4gICAgICBjaGlsZHJlbjogXCJFeGFtcGxlc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKERldGFpbHMsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChcInN1bW1hcnlcIiwge1xuICAgICAgICBjaGlsZHJlbjogXCJTZWUgZXhhbXBsZXNcIlxuICAgICAgfSksIF9qc3goXCJkaXZcIiwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeChFWEFNUExFMTY0LCB7fSlcbiAgICAgIH0pXVxuICAgIH0pXVxuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQocHJvcHMgPSB7fSkge1xuICBjb25zdCB7d3JhcHBlcjogTURYTGF5b3V0fSA9IHtcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBNRFhMYXlvdXQgPyBfanN4KE1EWExheW91dCwge1xuICAgIC4uLnByb3BzLFxuICAgIGNoaWxkcmVuOiBfanN4KF9jcmVhdGVNZHhDb250ZW50LCB7XG4gICAgICAuLi5wcm9wc1xuICAgIH0pXG4gIH0pIDogX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpO1xufVxuZnVuY3Rpb24gX21pc3NpbmdNZHhSZWZlcmVuY2UoaWQsIGNvbXBvbmVudCkge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCBcIiArIChjb21wb25lbnQgPyBcImNvbXBvbmVudFwiIDogXCJvYmplY3RcIikgKyBcIiBgXCIgKyBpZCArIFwiYCB0byBiZSBkZWZpbmVkOiB5b3UgbGlrZWx5IGZvcmdvdCB0byBpbXBvcnQsIHBhc3MsIG9yIHByb3ZpZGUgaXQuXCIpO1xufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./docs/docs-api/DOF/GetIndex.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);