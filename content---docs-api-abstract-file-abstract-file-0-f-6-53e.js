"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-abstract-file-abstract-file-0-f-6-53e"],{

/***/ "./docs/docs-api/AbstractFile/AbstractFile_.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_abstract_file_abstract_file_md_0f6_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-abstract-file-abstract-file-md-0f6.json\nconst site_docs_docs_api_abstract_file_abstract_file_md_0f6_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"AbstractFile/AbstractFile_\",\"title\":\"AbstractFile\",\"description\":\"This type is an abstract type, so it has no specific implementation. It exists only to provide a base for the extended types. It specifies the maximum lengths for the file path, name, and extension, some basic attributes of a file such as whether or not it is open and also if it is open for reading or writing are provided. Methods to interface to all attributes are also provided. Since this is an abstract type, it has no specific implementation so see one of it\\'s extended types for examples on how it should be used.\",\"source\":\"@site/docs/docs-api/AbstractFile/AbstractFile_.md\",\"sourceDirName\":\"AbstractFile\",\"slug\":\"/AbstractFile/AbstractFile_\",\"permalink\":\"/docs-api/AbstractFile/AbstractFile_\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/AbstractFile/AbstractFile_.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"AbstractFile\",\"permalink\":\"/docs-api/AbstractFile/\"},\"next\":{\"title\":\"Deallocate\",\"permalink\":\"/docs-api/AbstractFile/Deallocate\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/AbstractFile/AbstractFile_.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'AbstractFile';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Structure\",\n  \"id\": \"structure\",\n  \"level\": 2\n}, {\n  \"value\": \"Deferred methods\",\n  \"id\": \"deferred-methods\",\n  \"level\": 2\n}, {\n  \"value\": \"Open\",\n  \"id\": \"open\",\n  \"level\": 3\n}, {\n  \"value\": \"Close\",\n  \"id\": \"close\",\n  \"level\": 3\n}, {\n  \"value\": \"Delete\",\n  \"id\": \"delete\",\n  \"level\": 3\n}, {\n  \"value\": \"ConstructorMethods\",\n  \"id\": \"constructormethods\",\n  \"level\": 2\n}, {\n  \"value\": \"AddSurrogate\",\n  \"id\": \"addsurrogate\",\n  \"level\": 3\n}, {\n  \"value\": \"Deallocate\",\n  \"id\": \"deallocate\",\n  \"level\": 3\n}, {\n  \"value\": \"SetMethods\",\n  \"id\": \"setmethods\",\n  \"level\": 2\n}, {\n  \"value\": \"SetFilePath\",\n  \"id\": \"setfilepath\",\n  \"level\": 3\n}, {\n  \"value\": \"SetFileName\",\n  \"id\": \"setfilename\",\n  \"level\": 3\n}, {\n  \"value\": \"SetFileExt\",\n  \"id\": \"setfileext\",\n  \"level\": 3\n}, {\n  \"value\": \"SetEOFStat\",\n  \"id\": \"seteofstat\",\n  \"level\": 3\n}, {\n  \"value\": \"SetOpenStat\",\n  \"id\": \"setopenstat\",\n  \"level\": 3\n}, {\n  \"value\": \"SetReadStat\",\n  \"id\": \"setreadstat\",\n  \"level\": 3\n}, {\n  \"value\": \"SetWriteStat\",\n  \"id\": \"setwritestat\",\n  \"level\": 3\n}, {\n  \"value\": \"GetMethods\",\n  \"id\": \"getmethods\",\n  \"level\": 2\n}, {\n  \"value\": \"GetFilePath\",\n  \"id\": \"getfilepath\",\n  \"level\": 3\n}, {\n  \"value\": \"GetFileName\",\n  \"id\": \"getfilename\",\n  \"level\": 3\n}, {\n  \"value\": \"GetFileExt\",\n  \"id\": \"getfileext\",\n  \"level\": 3\n}, {\n  \"value\": \"GetFileParts\",\n  \"id\": \"getfileparts\",\n  \"level\": 3\n}, {\n  \"value\": \"EnquireMethods\",\n  \"id\": \"enquiremethods\",\n  \"level\": 2\n}, {\n  \"value\": \"IsOpen\",\n  \"id\": \"isopen\",\n  \"level\": 3\n}, {\n  \"value\": \"IsEOF\",\n  \"id\": \"iseof\",\n  \"level\": 3\n}, {\n  \"value\": \"IsRead\",\n  \"id\": \"isread\",\n  \"level\": 3\n}, {\n  \"value\": \"IsWrite\",\n  \"id\": \"iswrite\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"abstractfile\",\n        children: \"AbstractFile\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This type is an abstract type, so it has no specific implementation. It exists only to provide a base for the extended types. It specifies the maximum lengths for the file path, name, and extension, some basic attributes of a file such as whether or not it is open and also if it is open for reading or writing are provided. Methods to interface to all attributes are also provided. Since this is an abstract type, it has no specific implementation so see one of it's extended types for examples on how it should be used.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.admonition, {\n      title: \"Inspiration\",\n      type: \"info\",\n      children: (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"The developement of this module is inspired from the \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"FileType_Base.F90\"\n        }), \" of Futility package. The original source is located \", (0,jsx_runtime.jsx)(_components.a, {\n          href: \"https://github.com/CASL/Futility/blob/master/src/FileType_Base.F90\",\n          children: \"here\"\n        }), \". The original code has been modified as per the code-standard of easifem library.\"]\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"structure\",\n      children: \"Structure\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"TYPE,ABSTRACT :: AbstractFile_\\n  PRIVATE\\n  INTEGER(I4B) :: pathlen=0\\n    !! The length of the path string for this file\\n  INTEGER(I4B) :: fnamelen=0\\n    !! The length of the name string for this file\\n  INTEGER(I4B) :: extlen=0\\n    !! The length of the file name extension string for this file\\n  TYPE(String) :: path\\n    !! The path string to the file\\n  TYPE(String) :: fileName\\n    !! The name of the file (without the file extension)\\n  TYPE(String) :: ext\\n    !! The extension of the file name\\n  LOGICAL(LGT) :: openstat=.FALSE.\\n    !! Whether or not the file is open\\n  LOGICAL(LGT) :: EOFstat=.FALSE.\\n    !! Whether or not the end of file has been reached\\n  LOGICAL(LGT) :: readstat=.FALSE.\\n    !! Whether or not the file is open for reading\\n  LOGICAL(LGT) :: writestat=.FALSE.\\n    !! Whether or not the file is open for writing\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"deferred-methods\",\n      children: \"Deferred methods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"open\",\n      children: \"Open\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method to open the file. The generic interface is given below\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ABSTRACT INTERFACE\\n  SUBROUTINE Open(obj)\\n    IMPORT :: AbstractFile_\\n    CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  END SUBROUTINE Open\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"close\",\n      children: \"Close\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method to close the file. The generic interface is given below.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ABSTRACT INTERFACE\\n  SUBROUTINE Close(obj)\\n    IMPORT :: AbstractFile_\\n    CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  END SUBROUTINE Close\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"delete\",\n      children: \"Delete\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Method to delete a file. The generic interface is given below.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"ABSTRACT INTERFACE\\n  SUBROUTINE Delete(obj)\\n    IMPORT :: AbstractFile_\\n    CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  END SUBROUTINE Delete\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"constructormethods\",\n      children: \"ConstructorMethods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"addsurrogate\",\n      children: \"AddSurrogate\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Add surrogate to the module error handler.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE SUBROUTINE addSurrogate( obj, UserObj )\\n  CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  TYPE( ExceptionHandler_ ), INTENT( IN ) :: UserObj\\nEND SUBROUTINE addSurrogate\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"deallocate\",\n      children: \"Deallocate\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Deallocate the data stored inside an instance of file object. Also you can delete the existing file.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE SUBROUTINE Deallocate( obj, delete )\\n  CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  LOGICAL( LGT ), OPTIONAL, INTENT( IN ) :: delete\\nEND SUBROUTINE Deallocate\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"setmethods\",\n      children: \"SetMethods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setfilepath\",\n      children: \"SetFilePath\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set the path of file.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE SUBROUTINE setFilePath( obj, path )\\n  CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  TYPE( String ), INTENT( IN ) :: path\\nEND SUBROUTINE setFilePath\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setfilename\",\n      children: \"SetFileName\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set filename (without extension and dot)\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE SUBROUTINE setFileName( obj, fileName )\\n  CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  TYPE( String ), INTENT( IN ) :: fileName\\nEND SUBROUTINE setFileName\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setfileext\",\n      children: \"SetFileExt\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set the file extension.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE SUBROUTINE setFileExt( obj, Ext )\\n  CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  TYPE( String ), INTENT( IN ) :: Ext\\nEND SUBROUTINE setFileExt\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"seteofstat\",\n      children: \"SetEOFStat\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set the end of file status.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE SUBROUTINE setEOFstat( obj, stat )\\n  CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  LOGICAL( LGT ), INTENT( IN ) :: stat\\nEND SUBROUTINE setEOFstat\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setopenstat\",\n      children: \"SetOpenStat\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set the status of open or not.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE SUBROUTINE setOpenStat( obj, stat )\\n  CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  LOGICAL( LGT ), INTENT( IN ) :: stat\\nEND SUBROUTINE setOpenStat\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setreadstat\",\n      children: \"SetReadStat\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set the status for read access\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE SUBROUTINE setReadStat( obj, stat )\\n  CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  LOGICAL( LGT ), INTENT( IN ) :: stat\\nEND SUBROUTINE setReadStat\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"setwritestat\",\n      children: \"SetWriteStat\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Set the status for write access\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE SUBROUTINE setWriteStat( obj, stat )\\n  CLASS( AbstractFile_ ), INTENT( INOUT ) :: obj\\n  LOGICAL( LGT ), INTENT( IN ) :: stat\\nEND SUBROUTINE setWriteStat\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"getmethods\",\n      children: \"GetMethods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getfilepath\",\n      children: \"GetFilePath\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Get the path of the file.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE FUNCTION getFilePath( obj ) RESULT( path )\\n  CLASS( AbstractFile_ ), INTENT( IN ) :: obj\\n  TYPE( String ) :: path\\nEND FUNCTION getFilePath\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getfilename\",\n      children: \"GetFileName\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Get the name of the file without extension\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE FUNCTION getFileName( obj ) RESULT( fileName )\\n  CLASS( AbstractFile_ ), INTENT( IN ) :: obj\\n  TYPE( String ) :: fileName\\nEND FUNCTION getFileName\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getfileext\",\n      children: \"GetFileExt\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Get the extension of the file.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE FUNCTION getFileExt( obj ) RESULT( Ext )\\n  CLASS( AbstractFile_ ), INTENT( IN ) :: obj\\n  TYPE( String ) :: Ext\\nEND FUNCTION getFileExt\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getfileparts\",\n      children: \"GetFileParts\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Get the path, name, and extension of the file.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE PURE SUBROUTINE getFileParts( obj, path, fileName, ext )\\n  CLASS( AbstractFile_ ), INTENT( IN ) :: obj\\n  TYPE( String ), INTENT( OUT ) :: path\\n  TYPE( String ), INTENT( OUT ) :: fileName\\n  TYPE( String ), INTENT( OUT ) :: ext\\nEND SUBROUTINE getFileParts\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"enquiremethods\",\n      children: \"EnquireMethods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"isopen\",\n      children: \"IsOpen\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns true if the file is open\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-forran\",\n        children: \"INTERFACE\\nMODULE FUNCTION isOpen( obj ) RESULT( ans )\\n  CLASS( AbstractFile_ ), INTENT( IN ) :: obj\\n  LOGICAL( LGT ) :: ans\\nEND FUNCTION isOpen\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"iseof\",\n      children: \"IsEOF\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns true if end of file is reached.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE FUNCTION isEOF( obj ) RESULT( ans )\\n  CLASS( AbstractFile_ ), INTENT( IN ) :: obj\\n  LOGICAL( LGT ) :: ans\\nEND FUNCTION isEOF\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"isread\",\n      children: \"IsRead\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns true if the file is opened with read access.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE FUNCTION isRead( obj ) RESULT( ans )\\n  CLASS( AbstractFile_ ), INTENT( IN ) :: obj\\n  LOGICAL( LGT ) :: ans\\nEND FUNCTION isRead\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"iswrite\",\n      children: \"IsWrite\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns true if the file is opened with write access.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\nMODULE FUNCTION isWrite( obj ) RESULT( ans )\\n  CLASS( AbstractFile_ ), INTENT( IN ) :: obj\\n  LOGICAL( LGT ) :: ans\\nEND FUNCTION isWrite\\nEND INTERFACE\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/AbstractFile/AbstractFile_.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);