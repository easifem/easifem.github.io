"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-jacobi-polynomial-utility-jacobi-d-matrix-27-f-49d"],{

/***/ "./docs/docs-api/JacobiPolynomialUtility/JacobiDMatrix.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ JacobiDMatrix_contentTitle),\n  \"default\": () => (/* binding */ JacobiDMatrix_MDXContent),\n  frontMatter: () => (/* binding */ JacobiDMatrix_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_jacobi_polynomial_utility_jacobi_d_matrix_md_27f_namespaceObject),\n  toc: () => (/* binding */ JacobiDMatrix_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-jacobi-polynomial-utility-jacobi-d-matrix-md-27f.json\nconst site_docs_docs_api_jacobi_polynomial_utility_jacobi_d_matrix_md_27f_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"JacobiPolynomialUtility/JacobiDMatrix\",\"title\":\"JacobiDMatrix\",\"description\":\"Interface\",\"source\":\"@site/docs/docs-api/JacobiPolynomialUtility/JacobiDMatrix.md\",\"sourceDirName\":\"JacobiPolynomialUtility\",\"slug\":\"/JacobiPolynomialUtility/JacobiDMatrix\",\"permalink\":\"/docs-api/JacobiPolynomialUtility/JacobiDMatrix\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/JacobiPolynomialUtility/JacobiDMatrix.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"JacobiBeta\",\"permalink\":\"/docs-api/JacobiPolynomialUtility/JacobiBeta\"},\"next\":{\"title\":\"JacobiEval\",\"permalink\":\"/docs-api/JacobiPolynomialUtility/JacobiEval\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/JacobiPolynomialUtility/_JacobiDMatrix_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    annotation: \"annotation\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    li: \"li\",\n    math: \"math\",\n    mi: \"mi\",\n    mn: \"mn\",\n    mo: \"mo\",\n    mrow: \"mrow\",\n    p: \"p\",\n    pre: \"pre\",\n    semantics: \"semantics\",\n    span: \"span\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"This example shows the usage of \", (0,jsx_runtime.jsx)(_components.code, {\n          children: \"JacobiDMatrix\"\n        }), \" method.\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [\"This routine yields the differentiation matrix, \", (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex\",\n          children: [(0,jsx_runtime.jsx)(_components.span, {\n            className: \"katex-mathml\",\n            children: (0,jsx_runtime.jsx)(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: (0,jsx_runtime.jsxs)(_components.semantics, {\n                children: [(0,jsx_runtime.jsx)(_components.mrow, {\n                  children: (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"D\"\n                  })\n                }), (0,jsx_runtime.jsx)(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"D\"\n                })]\n              })\n            })\n          }), (0,jsx_runtime.jsx)(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6833em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.02778em\"\n                },\n                children: \"D\"\n              })]\n            })\n          })]\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n        children: [\"In this example \", (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex\",\n          children: [(0,jsx_runtime.jsx)(_components.span, {\n            className: \"katex-mathml\",\n            children: (0,jsx_runtime.jsx)(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: (0,jsx_runtime.jsxs)(_components.semantics, {\n                children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"α\"\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    children: \"=\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"β\"\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    children: \"=\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"0.0\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"\\\\alpha=\\\\beta=0.0\"\n                })]\n              })\n            })\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: [(0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.0037em\"\n                },\n                children: \"α\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mrel\",\n                children: \"=\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.8889em\",\n                  verticalAlign: \"-0.1944em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.05278em\"\n                },\n                children: \"β\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mrel\",\n                children: \"=\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6444em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord\",\n                children: \"0.0\"\n              })]\n            })]\n          })]\n        }), \" (that is, proportional to Legendre polynomial)\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\n  use easifembase\\n  use easifemclasses\\n  implicit none\\n  integer( i4b ) :: n, ii\\n  real(dfp), allocatable :: fval( : ), pt( : ), wt(:), &\\n    & f1val(:), error(:, :), D(:,:)\\n  real( dfp ), parameter :: alpha=0.0_DFP, beta=0.0_DFP, tol=1.0E-10\\n  type(string) :: astr\\n  integer( i4b ), parameter :: quadType = GaussLobatto\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.admonition, {\n      type: \"note\",\n      children: [(0,jsx_runtime.jsx)(_components.p, {\n        children: \"In this example we consider\"\n      }), (0,jsx_runtime.jsx)(_components.span, {\n        className: \"katex-display\",\n        children: (0,jsx_runtime.jsxs)(_components.span, {\n          className: \"katex\",\n          children: [(0,jsx_runtime.jsx)(_components.span, {\n            className: \"katex-mathml\",\n            children: (0,jsx_runtime.jsx)(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              display: \"block\",\n              children: (0,jsx_runtime.jsxs)(_components.semantics, {\n                children: [(0,jsx_runtime.jsxs)(_components.mrow, {\n                  children: [(0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"f\"\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    stretchy: \"false\",\n                    children: \"(\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"x\"\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    stretchy: \"false\",\n                    children: \")\"\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    children: \"=\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"s\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"i\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"n\"\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    stretchy: \"false\",\n                    children: \"(\"\n                  }), (0,jsx_runtime.jsx)(_components.mn, {\n                    children: \"4\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"π\"\n                  }), (0,jsx_runtime.jsx)(_components.mi, {\n                    children: \"x\"\n                  }), (0,jsx_runtime.jsx)(_components.mo, {\n                    stretchy: \"false\",\n                    children: \")\"\n                  })]\n                }), (0,jsx_runtime.jsx)(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"f(x) = sin(4\\\\pi x)\"\n                })]\n              })\n            })\n          }), (0,jsx_runtime.jsxs)(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: [(0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"1em\",\n                  verticalAlign: \"-0.25em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mopen\",\n                children: \"(\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"x\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mclose\",\n                children: \")\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mrel\",\n                children: \"=\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.span, {\n              className: \"base\",\n              children: [(0,jsx_runtime.jsx)(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"1em\",\n                  verticalAlign: \"-0.25em\"\n                }\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"s\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"in\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mopen\",\n                children: \"(\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord\",\n                children: \"4\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.03588em\"\n                },\n                children: \"π\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"x\"\n              }), (0,jsx_runtime.jsx)(_components.span, {\n                className: \"mclose\",\n                children: \")\"\n              })]\n            })]\n          })]\n        })\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        metastring: \"title \\\"Prepare quadratures\\\"\",\n        children: \"!!\\nerror = zeros(30, 2, 1.0_DFP)\\n!!\\nDO n = 1, SIZE(error,1)\\n  !!\\n  call reallocate( pt, n+1, wt, n+1, fval, n+1 )\\n  !!\\n  call JacobiQuadrature( n=n+1, alpha=alpha, beta=beta, &\\n    & pt=pt, wt=wt, quadType=quadType )\\n  !!\\n  fval = func1(pt)\\n  !!\\n  D = JacobiDMatrix(n=n, alpha=alpha, &\\n    & beta=beta, x=pt, quadType=quadType)\\n  !!\\n  f1val = dfunc1(pt)\\n  !!\\n  error(n,1) = n\\n  error(n,2) = NORM2( ABS(f1val-MATMUL(D,fval)) )\\n  !!\\nEND DO\\n!!\\nCALL display( MdEncode(error), \\\"error=\\\")\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See results\"\n      }), (0,jsx_runtime.jsxs)(\"div\", {\n        children: [(0,jsx_runtime.jsx)(_components.p, {\n          children: \"error=\"\n        }), (0,jsx_runtime.jsxs)(_components.table, {\n          children: [(0,jsx_runtime.jsx)(_components.thead, {\n            children: (0,jsx_runtime.jsxs)(_components.tr, {\n              children: [(0,jsx_runtime.jsx)(_components.th, {\n                children: \"order(n)\"\n              }), (0,jsx_runtime.jsx)(_components.th, {\n                children: \"MAX(err)\"\n              })]\n            })\n          }), (0,jsx_runtime.jsxs)(_components.tbody, {\n            children: [(0,jsx_runtime.jsxs)(_components.tr, {\n              children: [(0,jsx_runtime.jsx)(_components.td, {\n                children: \"1\"\n              }), (0,jsx_runtime.jsx)(_components.td, {\n                children: \"17.772\"\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.tr, {\n              children: [(0,jsx_runtime.jsx)(_components.td, {\n                children: \"2\"\n              }), (0,jsx_runtime.jsx)(_components.td, {\n                children: \"21.766\"\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.tr, {\n              children: [(0,jsx_runtime.jsx)(_components.td, {\n                children: \"5\"\n              }), (0,jsx_runtime.jsx)(_components.td, {\n                children: \"30.677\"\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.tr, {\n              children: [(0,jsx_runtime.jsx)(_components.td, {\n                children: \"10\"\n              }), (0,jsx_runtime.jsx)(_components.td, {\n                children: \"30.737\"\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.tr, {\n              children: [(0,jsx_runtime.jsx)(_components.td, {\n                children: \"15\"\n              }), (0,jsx_runtime.jsx)(_components.td, {\n                children: \"5.9239\"\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.tr, {\n              children: [(0,jsx_runtime.jsx)(_components.td, {\n                children: \"20\"\n              }), (0,jsx_runtime.jsx)(_components.td, {\n                children: \"8.60174E-02\"\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.tr, {\n              children: [(0,jsx_runtime.jsx)(_components.td, {\n                children: \"25\"\n              }), (0,jsx_runtime.jsx)(_components.td, {\n                children: \"1.11384E-04\"\n              })]\n            }), (0,jsx_runtime.jsxs)(_components.tr, {\n              children: [(0,jsx_runtime.jsx)(_components.td, {\n                children: \"30\"\n              }), (0,jsx_runtime.jsx)(_components.td, {\n                children: \"1.93772E-07\"\n              })]\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"contains\\nelemental function func1(x) result(ans)\\n  real(dfp), intent(in) :: x\\n  real(dfp) :: ans\\n  ans = SIN(4.0_DFP * pi * x)\\nend function func1\\n!!\\nelemental function dfunc1(x) result(ans)\\n  real(dfp), intent(in) :: x\\n  real(dfp) :: ans\\n  ans = 4.0_DFP * pi * COS(4.0_DFP * pi * x)\\nend function dfunc1\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n\n;// ./docs/docs-api/JacobiPolynomialUtility/JacobiDMatrix.md\n\n\nconst JacobiDMatrix_frontMatter = {};\nconst JacobiDMatrix_contentTitle = 'JacobiDMatrix';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst JacobiDMatrix_toc = [{\n  \"value\": \"Interface\",\n  \"id\": \"interface\",\n  \"level\": 2\n}, {\n  \"value\": \"Example\",\n  \"id\": \"example\",\n  \"level\": 2\n}, ...toc];\nfunction JacobiDMatrix_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"jacobidmatrix\",\n        children: \"JacobiDMatrix\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE FUNCTION JacobiDMatrix(n, alpha, beta, x, quadType) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: n\\n      !! order of Jacobi polynomial\\n    REAL(DFP), INTENT(IN) :: alpha\\n      !! alpha > -1.0\\n    REAL(DFP), INTENT(IN) :: beta\\n      !! beta > -1.0\\n    REAL(DFP), INTENT(IN) :: x(0:n)\\n      !! quadrature points\\n    INTEGER(I4B), INTENT(IN) :: quadType\\n      !! Gauss and GaussLobatto\\n    REAL(DFP) :: ans(0:n, 0:n)\\n      !! D matrix\\n  END FUNCTION JacobiDMatrix\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"example\",\n      children: \"Example\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    })]\n  });\n}\nfunction JacobiDMatrix_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(JacobiDMatrix_createMdxContent, {\n      ...props\n    })\n  }) : JacobiDMatrix_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/JacobiPolynomialUtility/JacobiDMatrix.md\n");

/***/ })

}]);