"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-exception-handler-test-exception-handlerbe-7-65d"],{

/***/ "./docs/docs-api/ExceptionHandler/test_ExceptionHandler.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_exception_handler_test_exception_handler_md_be7_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-exception-handler-test-exception-handler-md-be7.json\nconst site_docs_docs_api_exception_handler_test_exception_handler_md_be7_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"ExceptionHandler/test_ExceptionHandler\",\"title\":\"test_ExceptionHandler\",\"description\":\"\",\"source\":\"@site/docs/docs-api/ExceptionHandler/test_ExceptionHandler.md\",\"sourceDirName\":\"ExceptionHandler\",\"slug\":\"/ExceptionHandler/test_ExceptionHandler\",\"permalink\":\"/docs-api/ExceptionHandler/test_ExceptionHandler\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/ExceptionHandler/test_ExceptionHandler.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"ExceptionHandler example 1\",\"permalink\":\"/docs-api/ExceptionHandler/ExceptionHandler_test_1\"},\"next\":{\"title\":\"EyeUtility\",\"permalink\":\"/docs-api/EyeUtility/\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/ExceptionHandler/test_ExceptionHandler.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\nconst assets = {\n\n};\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"! This program is a part of EASIFEM library\\n! Copyright (C) 2020-2021  Vikas Sharma, Ph.D\\n!\\n! This program is free software: you can redistribute it and/or modify\\n! it under the terms of the GNU General Public License as published by\\n! the Free Software Foundation, either version 3 of the License, or\\n! (at your option) any later version.\\n!\\n! This program is distributed in the hope that it will be useful,\\n! but WITHOUT ANY WARRANTY; without even the implied warranty of\\n! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n! GNU General Public License for more details.\\n!\\n! You should have received a copy of the GNU General Public License\\n! along with this program.  If not, see <https: //www.gnu.org/licenses/>\\n!\\n\\n!> authors: Vikas Sharma, Ph. D.\\n! date:  5 April 2021\\n! summary:  Tutorial for [[exceptionHandler_]] data type\\n\\nmodule test_exceptionHandler\\nuse easifemBase\\nuse easifemClasses\\nimplicit none\\ncontains\\n\\n  ! surr => NULL()\\n  ! CALL eDomain%getSurrogate(surr)\\n  ! IF( .NOT. ASSOCIATED( surr ) ) THEN\\n  !   CALL eDomain%setQuietMode( .TRUE. )\\n  !   CALL eDomain%setStopOnError( .TRUE. )\\n  !   INQUIRE(file=eLogFile, exist=exist, opened=opened )\\n  !   IF( exist ) THEN\\n  !     IF( .NOT. opened ) OPEN( Unit=eUnitNo, FILE=eLogFile, &\\n  !       & POSITION='APPEND',STATUS='OLD', &\\n  !       & ACTION=\\\"WRITE\\\" )\\n  !     CALL eDomain%setLogFileUnit( eUnitNo )\\n  !     CALL eDomain%setLogActive( .TRUE. )\\n  !   ELSE\\n  !     OPEN( Unit=eUnitNo, FILE=eLogFile, &\\n  !       & ACCESS='SEQUENTIAL',FORM='FORMATTED',STATUS='REPLACE' )\\n  !     CALL eDomain%setLogFileUnit( eUnitNo )\\n  !     CALL eDomain%setLogActive( .TRUE. )\\n  !   END IF\\n  ! END IF\\n  ! surr => NULL()\\n\\n!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\\n\\nsubroutine test0\\n  TYPE( exceptionHandler_ ) :: obj\\n  CALL obj%setQuietMode(.TRUE.)\\n  CALL obj%setLogFileUnit(23)\\n  OPEN(UNIT=obj%getLogFileUnit(),FILE='Exception.log', &\\n      ACCESS='SEQUENTIAL',FORM='FORMATTED')\\n  CALL obj%setLogActive(.TRUE.)\\n  CALL display(obj%isLogActive(), \\\"isLogActive=\\\")\\n  CALL obj%raiseInformation('Test information')\\n  CALL obj%raiseWarning('Test warning')\\n  CALL obj%raiseDebug('Test debug')\\n  CALL obj%raiseError('Test error')\\nend\\n\\n!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\\n\\nsubroutine test1\\n  WRITE(*,*) 'TESTING PARAMETERS'\\n  WRITE(*,*) '  Passed:              EXCEPTION_OK = ',EXCEPTION_OK\\n  WRITE(*,*) '  Passed:     EXCEPTION_INFORMATION = ',EXCEPTION_INFORMATION\\n  WRITE(*,*) '  Passed:         EXCEPTION_WARNING = ',EXCEPTION_WARNING\\n  WRITE(*,*) '  Passed:           EXCEPTION_DEBUG = ',EXCEPTION_DEBUG\\n  WRITE(*,*) '  Passed:           EXCEPTION_ERROR = ',EXCEPTION_ERROR\\n  WRITE(*,*) '  Passed:     EXCEPTION_FATAL_ERROR = ',EXCEPTION_FATAL_ERROR\\n  WRITE(*,*) '  Passed:            EXCEPTION_SIZE = ',EXCEPTION_SIZE\\n  WRITE(*,*) '  Passed: EXCEPTION_MAX_MESG_LENGTH = ', EXCEPTION_MAX_MESG_LENGTH\\nend\\n\\nsubroutine test2\\n  type( exceptionHandler_ ) :: obj\\n  CALL Display( obj%isQuietMode(),'%isQuietMode() = ' )\\n  CALL Display( obj%isQuietMode(EXCEPTION_INFORMATION),'%isQuietMode(INFO)=')\\n  CALL Display( obj%isQuietMode(EXCEPTION_WARNING),'%isQuietMode(WARNING)=')\\n  CALL Display( obj%isQuietMode(EXCEPTION_DEBUG),'%isQuietMode(DEBUG)=')\\n  CALL Display( obj%isQuietMode(EXCEPTION_ERROR),'%isQuietMode(ERROR)=')\\n  CALL Display( obj%isQuietMode(EXCEPTION_FATAL_ERROR),'%isQuietMode(FATAL_ERROR)=')\\n  CALL Display( obj%isQuietMode(EXCEPTION_OK),'%isQuietMode(OK) =')\\n  CALL Display(obj%isStopOnError(),'%isStopOnError =')\\n  CALL Display(ALL(obj%getCounterAll() == 0),'getCounterAll() =')\\n  CALL Display(obj%getCounter(EXCEPTION_INFORMATION) == 0,'INFO =')\\n  CALL Display(obj%getCounter(EXCEPTION_WARNING) == 0,'WARN =')\\n  CALL Display(obj%getCounter(EXCEPTION_DEBUG) == 0,'DEBUG =')\\n  CALL Display(obj%getCounter(EXCEPTION_ERROR) == 0,'ERROR =')\\n  CALL Display(obj%getCounter(EXCEPTION_FATAL_ERROR) == 0,'FATAL_ERROR =')\\n  CALL Display(obj%getCounter(EXCEPTION_OK) == -1,'OK =')\\n  CALL Display(obj%getLastMessage() == '','%getLastMessage() = ' )\\n  CALL Display(obj%getLogFileUnit() == 666,'%getLogFileUnit = ')\\n  CALL Display(.NOT.obj%isLogActive(),'%isLogActive = ')\\n\\n  CALL obj%setQuietMode(.TRUE.)\\n  CALL Display(obj%isQuietMode(),'%setQuietMode(T)=')\\n  CALL Display(obj%isQuietMode(EXCEPTION_INFORMATION),'%setQuietMode(T) INFO =')\\n  CALL Display(obj%isQuietMode(EXCEPTION_WARNING),'%setQuietMode(T) WARN=')\\n  CALL Display(obj%isQuietMode(EXCEPTION_DEBUG),'%setQuietMode(T) DEBUG=')\\n  CALL Display(obj%isQuietMode(EXCEPTION_ERROR),'%setQuietMode(T) ERROR=')\\n  CALL Display(.NOT.obj%isQuietMode(EXCEPTION_FATAL_ERROR),'%setQuietMode(T) FATAL=')\\n\\n  CALL obj%setQuietMode(.FALSE.)\\n  CALL Display(.NOT.obj%isQuietMode(),'%setQuietMode(F)=')\\n  CALL Display(.NOT.obj%isQuietMode(EXCEPTION_INFORMATION),'%setQuietMode(F) INFO =')\\n  CALL Display(.NOT.obj%isQuietMode(EXCEPTION_WARNING),'%setQuietMode(F) WARNING =')\\n  CALL Display(.NOT.obj%isQuietMode(EXCEPTION_DEBUG),'%setQuietMode(F) DEBUG=')\\n  CALL Display(.NOT.obj%isQuietMode(EXCEPTION_ERROR),'%setQuietMode(F) ERROR=')\\n  CALL Display(.NOT.obj%isQuietMode(EXCEPTION_FATAL_ERROR),'%setQuietMode(F) FATAL=')\\n\\n  CALL obj%setQuietMode(EXCEPTION_INFORMATION,.TRUE.)\\n  CALL Display(.NOT.obj%isQuietMode(),'%setQuietMode(INFO,T)=')\\n  CALL Display(obj%isQuietMode(EXCEPTION_INFORMATION),'%setQuietMode(INFO,T) INFO=')\\n  CALL obj%setQuietMode(EXCEPTION_WARNING,.TRUE.)\\n  CALL Display(.NOT.obj%isQuietMode(),'%setQuietMode(WARN,T)=')\\n  CALL Display(obj%isQuietMode(EXCEPTION_WARNING),'%setQuietMode(WARN,T) WARN=')\\n  CALL obj%setQuietMode(EXCEPTION_DEBUG,.FALSE.)\\n  CALL Display(.NOT.obj%isQuietMode(),'%setQuietMode(DEBUG,F)=')\\n  CALL Display(.NOT.obj%isQuietMode(EXCEPTION_DEBUG),'%setQuietMode(DEBUG,F) DEBUG=')\\n  CALL obj%setQuietMode(EXCEPTION_ERROR,.TRUE.)\\n  CALL Display(.NOT.obj%isQuietMode(),'%setQuietMode(ERROR,T)=')\\n  CALL Display(obj%isQuietMode(EXCEPTION_ERROR),'%setQuietMode(ERROR,T) ERROR=')\\n  CALL obj%setQuietMode(EXCEPTION_FATAL_ERROR,.TRUE.)\\n  CALL Display(.NOT.obj%isQuietMode(),'%setQuietMode(FATAL,T)=')\\n  CALL Display(.NOT.obj%isQuietMode(EXCEPTION_FATAL_ERROR),'%setQuietMode(FATAL,T) FATAL=')\\n  CALL obj%setQuietMode(EXCEPTION_OK,.FALSE.)\\n  CALL Display(.NOT.obj%isQuietMode(),'%setQuietMode(OK,T)=')\\n  CALL Display(.NOT.obj%isQuietMode(EXCEPTION_OK),'%setQuietMode(OK,T) OK=')\\n  CALL obj%setQuietMode((/.FALSE.,.FALSE.,.FALSE.,.FALSE./))\\n\\n  CALL obj%setVerboseMode(.TRUE.)\\n  CALL Display(obj%isVerboseMode(),'%setVerboseMode(T)=')\\n  CALL Display(obj%isVerboseMode(EXCEPTION_INFORMATION),'%setVerboseMode(T) INFO=')\\n  CALL Display(obj%isVerboseMode(EXCEPTION_WARNING),'%setVerboseMode(T) WARN=')\\n  CALL Display(obj%isVerboseMode(EXCEPTION_DEBUG),'%setVerboseMode(T) DEBUG=')\\n  CALL Display(obj%isVerboseMode(EXCEPTION_ERROR),'%setVerboseMode(T) ERROR=')\\n  CALL Display(.NOT.obj%isVerboseMode(EXCEPTION_FATAL_ERROR),'%setVerboseMode(T) FATAL=')\\n  CALL obj%setVerboseMode(.FALSE.)\\n  CALL Display(.NOT.obj%isVerboseMode(),'%setVerboseMode(F)=')\\n  CALL Display(.NOT.obj%isVerboseMode(EXCEPTION_INFORMATION),'%setVerboseMode(F) INFO=')\\n  CALL Display(.NOT.obj%isVerboseMode(EXCEPTION_WARNING),'%setVerboseMode(F) WARNING=')\\n  CALL Display(.NOT.obj%isVerboseMode(EXCEPTION_DEBUG),'%setVerboseMode(F) DEBUG=')\\n  CALL Display(.NOT.obj%isVerboseMode(EXCEPTION_ERROR),'%setVerboseMode(F) ERROR=')\\n  CALL Display(.NOT.obj%isVerboseMode(EXCEPTION_FATAL_ERROR),'%setVerboseMode(F) FATAL=')\\n\\n  CALL obj%setVerboseMode(EXCEPTION_INFORMATION,.TRUE.)\\n  CALL Display(.NOT.obj%isVerboseMode(),'%setVerboseMode(INFO,T)=')\\n  CALL Display(obj%isVerboseMode(EXCEPTION_INFORMATION),'%setVerboseMode(INFO,T) INFO=')\\n  CALL obj%setVerboseMode(EXCEPTION_WARNING,.TRUE.)\\n  CALL Display(.NOT.obj%isVerboseMode(),'%setVerboseMode(WARN,T)=')\\n  CALL Display(obj%isVerboseMode(EXCEPTION_WARNING),'%setVerboseMode(WARN,T) WARN=')\\n  CALL obj%setVerboseMode(EXCEPTION_DEBUG,.FALSE.)\\n  CALL Display(.NOT.obj%isVerboseMode(),'%setVerboseMode(DEBUG,F)=')\\n  CALL Display(.NOT.obj%isVerboseMode(EXCEPTION_DEBUG),'%setVerboseMode(DEBUG,F) DEBUG=')\\n  CALL obj%setVerboseMode(EXCEPTION_ERROR,.TRUE.)\\n  CALL Display(.NOT.obj%isVerboseMode(),'%setVerboseMode(ERROR,T)=')\\n  CALL Display(obj%isVerboseMode(EXCEPTION_ERROR),'%setVerboseMode(ERROR,T) ERROR=')\\n  CALL obj%setVerboseMode(EXCEPTION_FATAL_ERROR,.TRUE.)\\n  CALL Display(.NOT.obj%isVerboseMode(),'%setVerboseMode(FATAL,T)=')\\n  CALL Display(.NOT.obj%isVerboseMode(EXCEPTION_FATAL_ERROR),'%setVerboseMode(FATAL,T) FATAL=')\\n  CALL obj%setVerboseMode(EXCEPTION_OK,.FALSE.)\\n  CALL Display(.NOT.obj%isVerboseMode(),'%setVerboseMode(OK,T)=')\\n  CALL Display(.NOT.obj%isVerboseMode(EXCEPTION_OK),'%setVerboseMode(OK,T) OK=')\\n  CALL obj%setVerboseMode((/.TRUE.,.TRUE.,.TRUE.,.TRUE./))\\nend\\n\\n!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\\n\\nsubroutine test3\\n  type( exceptionHandler_ ) :: obj\\n  CHARACTER( LEN = EXCEPTION_MAX_MESG_LENGTH ) :: mesg\\n\\n  CALL obj%raiseInformation('Test information')\\n  CALL Display(ALL(obj%getCounterAll() == (/1,0,0,0,0/)),'%counterall=')\\n  CALL Display(obj%getCounter(EXCEPTION_INFORMATION) == 1,'%counter(INFO)=')\\n  mesg=' - EXCEPTION_INFORMATION: Test information'\\n  CALL Display( obj%getLastMessage(), \\\"last mesg=\\\")\\n  CALL Display(obj%getLastMessage() == TRIM(mesg),'mesg=')\\n\\n  CALL obj%raiseWarning('Test warning')\\n  CALL Display(ALL(obj%getCounterAll() == (/1,1,0,0,0/)),'%counterall=')\\n  CALL Display(obj%getCounter(EXCEPTION_WARNING) == 1,'%counter(WARN)=')\\n  mesg='#### EXCEPTION_WARNING #### - Test warning'\\n  CALL Display( obj%getLastMessage(), \\\"last mesg=\\\")\\n  CALL Display(obj%getLastMessage() == TRIM(mesg),'mesg=')\\n\\n  CALL obj%raiseDebug('Test debug')\\n  CALL Display(ALL(obj%getCounterAll() == (/1,1,1,0,0/)),'%raiseDebug=')\\n  CALL Display(obj%getCounter(EXCEPTION_DEBUG) == 1,'%counter(DEBUG)=')\\n  mesg='#### EXCEPTION_DEBUG_MESG #### - Test debug'\\n  CALL Display(obj%getLastMessage() == TRIM(mesg),'mesg=')\\n\\n  CALL obj%setStopOnError(.FALSE.)\\n  CALL Display(.NOT.obj%isStopOnError(),'setStopOnError(F)=')\\n  CALL obj%setStopOnError(.TRUE.)\\n  CALL Display(obj%isStopOnError(),'setStopOnError(T)=')\\n  CALL obj%setStopOnError(.FALSE.)\\n  CALL Display(.NOT.obj%isStopOnError(),'setStopOnError(F)=')\\n\\n  CALL obj%raiseError('Test error')\\n  CALL Display(ALL(obj%getCounterAll() == (/1,1,1,1,0/)),'%raiseError=')\\n  CALL Display(obj%getCounter(EXCEPTION_ERROR) == 1,'%counter(ERROR)=')\\n  mesg='#### EXCEPTION_ERROR #### - Test error'\\n  CALL Display(obj%getLastMessage() == TRIM(mesg),'mesg=')\\n\\n  CALL obj%initCounter()\\n  CALL Display(ALL(obj%getCounterAll() == 0),'counterAll=')\\n  CALL Display(obj%getCounter(EXCEPTION_INFORMATION) == 0,'%counter(INFO)=')\\n  CALL Display(obj%getCounter(EXCEPTION_WARNING) == 0,'%counter(WARN)=')\\n  CALL Display(obj%getCounter(EXCEPTION_DEBUG) == 0,'%counter(DEBUG)=')\\n  CALL Display(obj%getCounter(EXCEPTION_ERROR) == 0,'%counter(ERROR)=')\\n  CALL Display(obj%getCounter(EXCEPTION_FATAL_ERROR) == 0,'%counter(FATAL)=')\\n  CALL Display(obj%getLastMessage() == '','mesg=')\\n\\n  CALL obj%raiseWarning('Very                                              '//&\\n                          'long                                              '//&\\n                          'message                                           '//&\\n                          'exceeding                                         '//&\\n                          'size                                              '//&\\n                          'of                                                '//&\\n                          'character                                         '//&\\n                          'length                                            '//&\\n                          'limit                                             '//&\\n                          'of                                                '//&\\n                          '512.....The remainder of this message will be truncated')\\n\\nend\\n\\n!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\\n\\nsubroutine test4\\n  type( exceptionHandler_ ) :: obj\\n\\n  CALL Display( \\\"test04\\\")\\n  CALL EqualLine()\\n  CALL obj%setQuietMode(.TRUE.)\\n  CALL obj%setLogFileUnit(stdout)\\n  CALL obj%setLogFileUnit(stderr)\\n  CALL obj%setLogFileUnit(-1)\\n\\n  CALL Display(obj%getCounter(EXCEPTION_WARNING),'%counter(WARN)=')\\n  CALL Display(TRIM(obj%getLastMessage()),'%getLastMessage=')\\n  CALL obj%setLogFileUnit(23)\\n  CALL Display(obj%getLogFileUnit() == 23,'setLogFileUnit(23)=')\\n  CALL obj%setQuietMode(.FALSE.)\\n  CALL Display(.NOT.obj%isLogActive(),'%isLogActive=')\\n  CALL obj%setLogActive(.TRUE.)\\n  CALL Display(.NOT.obj%isLogActive(),'%setLogActive=')\\n  CALL obj%setLogActive(.FALSE.)\\n  CALL Display(.NOT.obj%isLogActive(),'%setLogActive=')\\n\\n  OPEN(UNIT=obj%getLogFileUnit(),FILE='Exception.log', &\\n      ACCESS='SEQUENTIAL', FORM='FORMATTED')\\n  CALL obj%setLogActive(.TRUE.)\\n  CALL Display(obj%isLogActive(),'%setLogActive ')\\n  CALL obj%setLogActive(.FALSE.)\\n  CALL Display(.NOT.obj%isLogActive(),'%setLogActive ')\\n  CALL obj%setLogActive(.TRUE.)\\n  CALL obj%setQuietMode(.TRUE.)\\n  CALL obj%setStopOnError(.FALSE.)\\n  CALL obj%raiseInformation('Test information')\\n  CALL obj%raiseWarning('Test warning')\\n  CALL obj%raiseDebug('Test debug')\\n  CALL obj%raiseError('Test error')\\n  CLOSE(obj%getLogFileUnit())\\n\\n  ! OPEN(UNIT=testE%getLogFileUnit(),FILE='Exception.log', &\\n  !     ACCESS='SEQUENTIAL',FORM='FORMATTED',ACTION='READ')\\n  ! READ(testE%getLogFileUnit(),'(a)') mesg2\\n  ! mesg=''\\n  ! ASSERT(TRIM(mesg) == TRIM(mesg2),'blank line')\\n  ! READ(testE%getLogFileUnit(),'(a)') mesg2\\n  ! mesg='      EXCEPTION_INFORMATION: Test information'\\n  ! ASSERT(TRIM(mesg) == TRIM(mesg2),TRIM(mesg))\\n  ! READ(testE%getLogFileUnit(),'(a)') mesg2\\n  ! mesg='#### EXCEPTION_WARNING ####'\\n  ! ASSERT(TRIM(mesg) == TRIM(mesg2),TRIM(mesg))\\n  ! READ(testE%getLogFileUnit(),'(a)') mesg2\\n  ! mesg='      Test warning'\\n  ! ASSERT(TRIM(mesg) == TRIM(mesg2),TRIM(mesg))\\n  ! READ(testE%getLogFileUnit(),'(a)') mesg2\\n  ! mesg='#### EXCEPTION_DEBUG_MESG ####'\\n  ! ASSERT(TRIM(mesg) == TRIM(mesg2),TRIM(mesg))\\n  ! READ(testE%getLogFileUnit(),'(a)') mesg2\\n  ! mesg='      Test debug'\\n  ! ASSERT(TRIM(mesg) == TRIM(mesg2),TRIM(mesg))\\n  ! READ(testE%getLogFileUnit(),'(a)') mesg2\\n  ! mesg='#### EXCEPTION_ERROR ####'\\n  ! ASSERT(TRIM(mesg) == TRIM(mesg2),TRIM(mesg))\\n  ! READ(testE%getLogFileUnit(),'(a)') mesg2\\n  ! mesg='      Test error'\\n  ! ASSERT(TRIM(mesg) == TRIM(mesg2),TRIM(mesg))\\n  ! CLOSE(testE%getLogFileUnit())\\nend\\n\\n! SUBROUTINE testVerbosity()\\n!   INTEGER(SIK) :: ioerr\\n!   OPEN(UNIT=testE%getLogFileUnit(),FILE='Exception.log', &\\n!       ACCESS='SEQUENTIAL',FORM='FORMATTED',STATUS='REPLACE')\\n!   CALL testE%setQuietMode(.FALSE.)\\n!   CALL testE%setVerboseMode(EXCEPTION_INFORMATION,.FALSE.)\\n!   CALL testE%setVerboseMode(EXCEPTION_WARNING,.FALSE.)\\n!   CALL testE%setVerboseMode(EXCEPTION_DEBUG,.FALSE.)\\n!   CALL testE%setVerboseMode(EXCEPTION_ERROR,.FALSE.)\\n!   CALL testE%raiseInformation('Test information no log')\\n!   CALL testE%raiseWarning('Test warning no log')\\n!   CALL testE%raiseDebug('Test debug no log')\\n!   CALL testE%raiseError('Test error no log')\\n!   CLOSE(testE%getLogFileUnit())\\n!   OPEN(UNIT=testE%getLogFileUnit(),FILE='Exception.log', &\\n!       ACCESS='SEQUENTIAL',FORM='FORMATTED',ACTION='READ')\\n!   READ(testE%getLogFileUnit(),'(a)',IOSTAT=ioerr) mesg2\\n!   ASSERT(ioerr == IOSTAT_END,'EOF Log file')\\n! ENDSUBROUTINE testVerbosity\\n! !\\n! !-------------------------------------------------------------------------------\\n! SUBROUTINE testSurrogate()\\n!   CALL testE2%addSurrogate(testE)\\n!   ASSERT(testE2%isStopOnError() .EQV. testE%isStopOnError(),'isStopOnError')\\n!   ASSERT(testE2%getLogFileUnit() == testE%getLogFileUnit(),'getLogFileUnit')\\n!   ASSERT(testE2%isQuietMode() .EQV. testE%isQuietMode(),'isQuiet')\\n!   ASSERT(ALL(testE2%getCounterAll() == testE%getCounterAll()),'getCounterAll')\\n!   ASSERT(testE2%getLastMessage() == testE%getLastMessage(),'getLastMessage')\\n!   ASSERT(testE2%isLogActive() .EQV. testE%isLogActive(),'isLogActive')\\n\\n!   CALL testE2%getSurrogate(testE3)\\n!   ASSERT(ASSOCIATED(testE3,testE), 'getSurrogate')\\n\\n!   CALL testE2%setQuietMode(.TRUE.)\\n!   ASSERT(testE2%isQuietMode() .NEQV. testE%isQuietMode(),'isQuiet (NEQV)')\\n! ENDSUBROUTINE testSurrogate\\n! !\\n! !-------------------------------------------------------------------------------\\n! SUBROUTINE testAssignment()\\n!   testE2=testE\\n!   ASSERT(testE2%isStopOnError() .EQV. testE%isStopOnError(),'isStopOnError')\\n!   ASSERT(testE2%getLogFileUnit() == testE%getLogFileUnit(),'getLogFileUnit')\\n!   ASSERT(testE2%isQuietMode() .EQV. testE%isQuietMode(),'isQuiet')\\n!   ASSERT(ALL(testE2%getCounterAll() == testE%getCounterAll()),'getCounterAll')\\n!   ASSERT(testE2%getLastMessage() == testE%getLastMessage(),'getLastMessage')\\n!   ASSERT(testE2%isLogActive() .EQV. testE%isLogActive(),'isLogActive')\\n! ENDSUBROUTINE testAssignment\\n! !\\n! !-------------------------------------------------------------------------------\\n! SUBROUTINE testReset()\\n!   CALL testE%reset()\\n!   ASSERT(.NOT.testE%isQuietMode(),'%isQuietMode()')\\n!   ASSERT(testE%isStopOnError(),'%isStopOnError')\\n!   ASSERT(testE%getLogFileUnit() == 666,'%getLogFileUnit')\\n!   ASSERT(ALL(testE%getCounterAll() == 0),'getCounterAll()')\\n!   ASSERT(testE%getLastMessage() == '','%getLastMessage()')\\n!   ASSERT(.NOT.testE%isLogActive(),'%isLogActive')\\n! ENDSUBROUTINE testReset\\n! !\\n! !-------------------------------------------------------------------------------\\n! SUBROUTINE testSetCounter()\\n!   ASSERT(ALL(testE%getCounterAll() == 0),'getCounterAll()')\\n!   CALL testE%setCounter((/-1,-1,-1,-1,1/))\\n!   ASSERT(ALL(testE%getCounterAll() == (/0,0,0,0,1/)),'setCounterAll() -1 for first 4')\\n!   CALL testE%setCounter(EXCEPTION_INFORMATION,2)\\n!   ASSERT(ALL(testE%getCounterAll() == (/2,0,0,0,1/)),'setCounter() Info')\\n!   CALL testE%setCounter(EXCEPTION_WARNING,3)\\n!   ASSERT(ALL(testE%getCounterAll() == (/2,3,0,0,1/)),'setCounter() Warning')\\n!   CALL testE%setCounter(EXCEPTION_DEBUG,4)\\n!   ASSERT(ALL(testE%getCounterAll() == (/2,3,4,0,1/)),'setCounter() Debug')\\n!   CALL testE%setCounter(EXCEPTION_ERROR,5)\\n!   ASSERT(ALL(testE%getCounterAll() == (/2,3,4,5,1/)),'setCounter() Error')\\n!   CALL testE%setCounter(EXCEPTION_FATAL_ERROR,6)\\n!   ASSERT(ALL(testE%getCounterAll() == (/2,3,4,5,6/)),'setCounter() Error')\\n! ENDSUBROUTINE testSetCounter\\n\\n!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\\n\\nend module\\n\\nprogram main\\nuse test_exceptionHandler\\nimplicit none\\ncall test0\\nend program main\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/ExceptionHandler/test_ExceptionHandler.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);