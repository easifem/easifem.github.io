"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-vtk-file-test-vtk-filec-98-ca0"],{

/***/ "./docs/docs-api/VTKFile/test_VTKFile.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_vtk_file_test_vtk_file_md_c98_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-vtk-file-test-vtk-file-md-c98.json\nconst site_docs_docs_api_vtk_file_test_vtk_file_md_c98_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"VTKFile/test_VTKFile\",\"title\":\"test_VTKFile\",\"description\":\"module test_m\",\"source\":\"@site/docs/docs-api/VTKFile/test_VTKFile.md\",\"sourceDirName\":\"VTKFile\",\"slug\":\"/VTKFile/test_VTKFile\",\"permalink\":\"/docs-api/VTKFile/test_VTKFile\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/VTKFile/test_VTKFile.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"VTKFile_test_9\",\"permalink\":\"/docs-api/VTKFile/VTKFile_test_9\"},\"next\":{\"title\":\"VTKPlot\",\"permalink\":\"/docs-api/VTKPlot/\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/VTKFile/test_VTKFile.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\nconst assets = {\n\n};\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.p, {\n      children: \"module test_m\\nuse easifemBase\\nuse easifemClasses\\nimplicit none\\ncontains\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"SUBROUTINE test13\\nTYPE(VTKFile_) :: aVTKfile\\nINTEGER( I4B ), PARAMETER :: nx1=0, nx2=9, ny1=0, ny2=5, nz1=0, nz2=5\\nREAL(DFP) :: xv(nx1\", \":nx2\", \"), yv(ny1\", \":ny2\", \"), zv(nz1\", \":nz2\", \"), &\\n& x(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), y(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), &\\n& z(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), v(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \")\\nINTEGER(I4B) :: i, j, k\\nCALL Display(\\\"TEST :: BINARY APPENDED VTS\\\")\\nCALL aVTKfile%InitiateVTKFile(filename=\\\"./vtkfile_binary_appended.vts\\\", &\\n& mode=\\\"NEW\\\", DataFormat=VTK_BINARY_APPENDED, &\\n& DataStructureType=VTK_StructuredGrid, &\\n& WholeExtent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nCALL aVTKfile%WritePiece(extent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nDO k = nz1, nz2\\nDO j = ny1, ny2\\nDO i = nx1, nx2\\nx(i, j, k) = i * 1.0_DFP\\ny(i, j, k) = j * 1.0_DFP\\nz(i, j, k) = k * 1.0_DFP\\nv(i, j, k) = x(i, j, k)**2 + y(i, j, k)**2 + z(i, j, k)**2\\nEND DO\\nEND DO\\nEND DO\\nCALL aVTKfile%WritePoints(x=x, y=y, z=z)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('open'))\\nCALL aVTKfile%WriteDataArray(name=String(\\\"presssure\\\"), x=v, &\\n& numberOfComponents=1)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('close'))\\nCALL aVTKfile%WritePiece()\\nCALL aVTKfile%Close()\\nCALL aVTKfile%Deallocate()\\nEND SUBROUTINE\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"SUBROUTINE test12\\nTYPE(VTKFile_) :: aVTKfile\\nINTEGER( I4B ), PARAMETER :: nx1=0, nx2=9, ny1=0, ny2=5, nz1=0, nz2=5\\nREAL(DFP) :: xv(nx1\", \":nx2\", \"), yv(ny1\", \":ny2\", \"), zv(nz1\", \":nz2\", \"), &\\n& x(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), y(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), &\\n& z(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), v(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \")\\nINTEGER(I4B) :: i, j, k\\nCALL Display(\\\"TEST :: BINARY VTS\\\")\\nCALL aVTKfile%InitiateVTKFile(filename=\\\"./vtkfile_binary.vts\\\", mode=\\\"NEW\\\",&\\n& DataFormat=VTK_BINARY, DataStructureType=VTK_StructuredGrid, &\\n& WholeExtent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nCALL aVTKfile%WritePiece(extent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nDO k = nz1, nz2\\nDO j = ny1, ny2\\nDO i = nx1, nx2\\nx(i, j, k) = i * 1.0_DFP\\ny(i, j, k) = j * 1.0_DFP\\nz(i, j, k) = k * 1.0_DFP\\nv(i, j, k) = x(i, j, k)**2 + y(i, j, k)**2 + z(i, j, k)**2\\nEND DO\\nEND DO\\nEND DO\\nCALL aVTKfile%WritePoints(x=x, y=y, z=z)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('open'))\\nCALL aVTKfile%WriteDataArray(name=String(\\\"presssure\\\"), x=v, &\\n& numberOfComponents=1)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('close'))\\nCALL aVTKfile%WritePiece()\\nCALL aVTKfile%Close()\\nCALL aVTKfile%Deallocate()\\nEND SUBROUTINE\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"SUBROUTINE test0\\nTYPE(VTKFile_) :: aVTKfile\\nINTEGER( I4B ), PARAMETER :: nx1=0, nx2=9, ny1=0, ny2=5, nz1=0, nz2=5\\nREAL(DFP) :: x(nx1\", \":nx2\", \"), y(ny1\", \":ny2\", \"), z(nz1\", \":nz2\", \"), v(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \")\\nINTEGER(I4B) :: i, j, k\\nCALL Display(\\\"TEST :: ASCII VTR\\\")\\nCALL aVTKfile%InitiateVTKFile(filename=\\\"./vtkfile_ascii.vtr\\\", mode=\\\"NEW\\\", &\\n& DataFormat=VTK_ASCII, DataStructureType=VTK_RectilinearGrid, &\\n& WholeExtent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nCALL aVTKfile%WritePiece(extent=[nx1, nx2, ny1, ny2, nz1, nz2])\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"CALL RANDOM_NUMBER(x)\\nCALL RANDOM_NUMBER(y)\\nCALL RANDOM_NUMBER(z)\\nDO k = nz1, nz2\\nDO j = ny1, ny2\\nDO i = nx1, nx2\\nv(i, j, k) = x(i) * y(j) * z(k)\\nEND DO\\nEND DO\\nEND DO\\nCALL aVTKfile%WritePoints(x=x, y=y, z=z)\\n! CALL aVTKfile%WriteDataArray(location=String('node'), &\\n! & action=String('open'))\\n! CALL aVTKfile%WriteDataArray( name=String(\\\"presssure\\\"), x=v, &\\n! & numberOfComponents=1 )\\n! CALL aVTKfile%WriteDataArray( location=String('node'), &\\n! & action=String('close') )\\nCALL aVTKfile%WritePiece()\\nCALL aVTKfile%Close()\\nCALL aVTKfile%Deallocate()\\nEND SUBROUTINE\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"SUBROUTINE test10\\nTYPE(VTKFile_) :: aVTKfile\\nINTEGER( I4B ), PARAMETER :: nx1=0, nx2=9, ny1=0, ny2=5, nz1=0, nz2=5\\nREAL(DFP) :: v(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \")\\nINTEGER(I4B) :: i, j, k\\nCALL Display(\\\"TEST :: BINARY APPENDED VTI\\\")\\nCALL aVTKfile%InitiateVTKFile(filename=\\\"./vtkfile_binary_appended.vti\\\", &\\n& mode=\\\"NEW\\\", DataFormat=VTK_BINARY_APPENDED, &\\n& DataStructureType=VTK_ImageData, &\\n& WholeExtent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nCALL aVTKfile%WritePiece(extent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nDO k = nz1, nz2\\nDO j = ny1, ny2\\nDO i = nx1, nx2\\nv(i, j, k) = REAL(i * j * k, DFP)\\nEND DO\\nEND DO\\nEND DO\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('open'))\\nCALL aVTKfile%WriteDataArray(name=String(\\\"presssure\\\"), x=v, &\\n& numberOfComponents=1)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('close'))\\nCALL aVTKfile%WritePiece()\\nCALL aVTKfile%Close()\\nCALL aVTKfile%Deallocate()\\nEND SUBROUTINE\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"SUBROUTINE test9\\nTYPE(VTKFile_) :: aVTKfile\\nINTEGER( I4B ), PARAMETER :: nx1=0, nx2=9, ny1=0, ny2=5, nz1=0, nz2=5\\nREAL(DFP) :: v(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \")\\nINTEGER(I4B) :: i, j, k\\nCALL Display(\\\"TEST :: BINARY VTI\\\")\\nCALL aVTKfile%InitiateVTKFile(filename=\\\"./vtkfile_binary.vti\\\", &\\n& mode=\\\"NEW\\\", DataFormat=VTK_BINARY, DataStructureType=VTK_ImageData, &\\n& WholeExtent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nCALL aVTKfile%WritePiece(extent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nDO k = nz1, nz2\\nDO j = ny1, ny2\\nDO i = nx1, nx2\\nv(i, j, k) = REAL(i * j * k, DFP)\\nEND DO\\nEND DO\\nEND DO\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('open'))\\nCALL aVTKfile%WriteDataArray(name=String(\\\"presssure\\\"), x=v, &\\n& numberOfComponents=1)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('close'))\\nCALL aVTKfile%WritePiece()\\nCALL aVTKfile%Close()\\nCALL aVTKfile%Deallocate()\\nEND SUBROUTINE\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"SUBROUTINE test8\\nTYPE(VTKFile_) :: aVTKfile\\nINTEGER( I4B ), PARAMETER :: nx1=0, nx2=9, ny1=0, ny2=5, nz1=0, nz2=5\\nREAL(DFP) :: v(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \")\\nINTEGER(I4B) :: i, j, k\\nCALL Display(\\\"TEST :: ASCII VTI\\\")\\nCALL aVTKfile%InitiateVTKFile(filename=\\\"./vtkfile_ascii.vti\\\", mode=\\\"NEW\\\", &\\n& DataFormat=VTK_ASCII, DataStructureType=VTK_ImageData, &\\n& WholeExtent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nCALL aVTKfile%WritePiece(extent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nDO k = nz1, nz2\\nDO j = ny1, ny2\\nDO i = nx1, nx2\\nv(i, j, k) = REAL(i * j * k, DFP)\\nEND DO\\nEND DO\\nEND DO\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('open'))\\nCALL aVTKfile%WriteDataArray(name=String(\\\"presssure\\\"), x=v, &\\n& numberOfComponents=1)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('close'))\\nCALL aVTKfile%WritePiece()\\nCALL aVTKfile%Close()\\nCALL aVTKfile%Deallocate()\\nEND SUBROUTINE\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"SUBROUTINE test7\\nTYPE(VTKFile_) :: aVTKfile\\nINTEGER( I4B ), PARAMETER :: nx1=0, nx2=9, ny1=0, ny2=5, nz1=0, nz2=5\\nREAL(DFP) :: xv(nx1\", \":nx2\", \"), yv(ny1\", \":ny2\", \"), zv(nz1\", \":nz2\", \"), &\\n& x(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), y(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), &\\n& z(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), v(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \")\\nINTEGER(I4B) :: i, j, k\\nCALL Display(\\\"TEST :: BINARY APPENDED VTS\\\")\\nCALL aVTKfile%InitiateVTKFile(filename=\\\"./vtkfile_binary_appended.vts\\\", &\\n& mode=\\\"NEW\\\", DataFormat=VTK_BINARY_APPENDED, &\\n& DataStructureType=VTK_StructuredGrid, &\\n& WholeExtent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nCALL aVTKfile%WritePiece(extent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nDO k = nz1, nz2\\nDO j = ny1, ny2\\nDO i = nx1, nx2\\nx(i, j, k) = i * 1.0_DFP\\ny(i, j, k) = j * 1.0_DFP\\nz(i, j, k) = k * 1.0_DFP\\nv(i, j, k) = x(i, j, k)**2 + y(i, j, k)**2 + z(i, j, k)**2\\nEND DO\\nEND DO\\nEND DO\\nCALL aVTKfile%WritePoints(x=x, y=y, z=z)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('open'))\\nCALL aVTKfile%WriteDataArray(name=String(\\\"presssure\\\"), x=v, &\\n& numberOfComponents=1)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('close'))\\nCALL aVTKfile%WritePiece()\\nCALL aVTKfile%Close()\\nCALL aVTKfile%Deallocate()\\nEND SUBROUTINE\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"SUBROUTINE test6\\nTYPE(VTKFile_) :: aVTKfile\\nINTEGER( I4B ), PARAMETER :: nx1=0, nx2=9, ny1=0, ny2=5, nz1=0, nz2=5\\nREAL(DFP) :: xv(nx1\", \":nx2\", \"), yv(ny1\", \":ny2\", \"), zv(nz1\", \":nz2\", \"), &\\n& x(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), y(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), &\\n& z(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), v(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \")\\nINTEGER(I4B) :: i, j, k\\nCALL Display(\\\"TEST :: BINARY VTS\\\")\\nCALL aVTKfile%InitiateVTKFile(filename=\\\"./vtkfile_binary.vts\\\", mode=\\\"NEW\\\",&\\n& DataFormat=VTK_BINARY, DataStructureType=VTK_StructuredGrid, &\\n& WholeExtent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nCALL aVTKfile%WritePiece(extent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nDO k = nz1, nz2\\nDO j = ny1, ny2\\nDO i = nx1, nx2\\nx(i, j, k) = i * 1.0_DFP\\ny(i, j, k) = j * 1.0_DFP\\nz(i, j, k) = k * 1.0_DFP\\nv(i, j, k) = x(i, j, k)**2 + y(i, j, k)**2 + z(i, j, k)**2\\nEND DO\\nEND DO\\nEND DO\\nCALL aVTKfile%WritePoints(x=x, y=y, z=z)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('open'))\\nCALL aVTKfile%WriteDataArray(name=String(\\\"presssure\\\"), x=v, &\\n& numberOfComponents=1)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('close'))\\nCALL aVTKfile%WritePiece()\\nCALL aVTKfile%Close()\\nCALL aVTKfile%Deallocate()\\nEND SUBROUTINE\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!----------------------------------------------------------------------------\\n!\\n!----------------------------------------------------------------------------\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"SUBROUTINE test5\\nTYPE(VTKFile_) :: aVTKfile\\nINTEGER( I4B ), PARAMETER :: nx1=0, nx2=9, ny1=0, ny2=5, nz1=0, nz2=5\\nREAL(DFP) :: xv(nx1\", \":nx2\", \"), yv(ny1\", \":ny2\", \"), zv(nz1\", \":nz2\", \"), &\\n& x(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), y(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), &\\n& z(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \"), v(nx1\", \":nx2\", \", ny1\", \":ny2\", \", nz1\", \":nz2\", \")\\nINTEGER(I4B) :: i, j, k\\nCALL Display(\\\"TEST :: ASCII VTS\\\")\\nCALL aVTKfile%InitiateVTKFile(filename=\\\"./vtkfile_ascii.vts\\\", mode=\\\"NEW\\\", &\\n& DataFormat=VTK_ASCII, DataStructureType=VTK_StructuredGrid, &\\n& WholeExtent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nCALL aVTKfile%WritePiece(extent=[nx1, nx2, ny1, ny2, nz1, nz2])\\nDO k = nz1, nz2\\nDO j = ny1, ny2\\nDO i = nx1, nx2\\nx(i, j, k) = i * 1.0_DFP\\ny(i, j, k) = j * 1.0_DFP\\nz(i, j, k) = k * 1.0_DFP\\nv(i, j, k) = REAL(i * j * k, DFP)\\nEND DO\\nEND DO\\nEND DO\\nCALL aVTKfile%WritePoints(x=x, y=y, z=z)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('open'))\\nCALL aVTKfile%WriteDataArray(name=String(\\\"presssure\\\"), x=v, &\\n& numberOfComponents=1)\\nCALL aVTKfile%WriteDataArray(location=String('node'), &\\n& action=String('close'))\\nCALL aVTKfile%WritePiece()\\nCALL aVTKfile%Close()\\nCALL aVTKfile%Deallocate()\\nEND SUBROUTINE\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/VTKFile/test_VTKFile.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);