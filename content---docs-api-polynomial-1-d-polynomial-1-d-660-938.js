"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-polynomial-1-d-polynomial-1-d-660-938"],{

/***/ "./docs/docs-api/Polynomial1D/Polynomial1D_.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ contentTitle),\n  \"default\": () => (/* binding */ MDXContent),\n  frontMatter: () => (/* binding */ frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_polynomial_1_d_polynomial_1_d_md_660_namespaceObject),\n  toc: () => (/* binding */ toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-polynomial-1-d-polynomial-1-d-md-660.json\nconst site_docs_docs_api_polynomial_1_d_polynomial_1_d_md_660_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"Polynomial1D/Polynomial1D_\",\"title\":\"Structure\",\"description\":\"This class defines the Polynomials in one argument.\",\"source\":\"@site/docs/docs-api/Polynomial1D/Polynomial1D_.md\",\"sourceDirName\":\"Polynomial1D\",\"slug\":\"/Polynomial1D/Polynomial1D_\",\"permalink\":\"/docs-api/Polynomial1D/Polynomial1D_\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/Polynomial1D/Polynomial1D_.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Polynomial1D\",\"permalink\":\"/docs-api/Polynomial1D/\"},\"next\":{\"title\":\"Polynomial1D example 1\",\"permalink\":\"/docs-api/Polynomial1D/Polynomial1D_test_1\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n;// ./docs/docs-api/Polynomial1D/Polynomial1D_.md\n\n\nconst frontMatter = {};\nconst contentTitle = 'Structure';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"ConstructorMethods\",\n  \"id\": \"constructormethods\",\n  \"level\": 3\n}, {\n  \"value\": \"Polynomial1D function\",\n  \"id\": \"polynomial1d-function\",\n  \"level\": 3\n}, {\n  \"value\": \"Polynomial1D_Pointer\",\n  \"id\": \"polynomial1d_pointer\",\n  \"level\": 3\n}, {\n  \"value\": \"Deallocate\",\n  \"id\": \"deallocate\",\n  \"level\": 3\n}, {\n  \"value\": \"GetMethods\",\n  \"id\": \"getmethods\",\n  \"level\": 2\n}, {\n  \"value\": \"Eval\",\n  \"id\": \"eval\",\n  \"level\": 3\n}, {\n  \"value\": \"EvalGradient\",\n  \"id\": \"evalgradient\",\n  \"level\": 3\n}, {\n  \"value\": \"Grad\",\n  \"id\": \"grad\",\n  \"level\": 3\n}, {\n  \"value\": \"GetStringForUID\",\n  \"id\": \"getstringforuid\",\n  \"level\": 3\n}, {\n  \"value\": \"GetDegree\",\n  \"id\": \"getdegree\",\n  \"level\": 3\n}, {\n  \"value\": \"GetDisplayString\",\n  \"id\": \"getdisplaystring\",\n  \"level\": 3\n}, {\n  \"value\": \"GetCoeff\",\n  \"id\": \"getcoeff\",\n  \"level\": 3\n}, {\n  \"value\": \"GetOrder\",\n  \"id\": \"getorder\",\n  \"level\": 3\n}, {\n  \"value\": \"IOMethods\",\n  \"id\": \"iomethods\",\n  \"level\": 2\n}, {\n  \"value\": \"Display\",\n  \"id\": \"display\",\n  \"level\": 3\n}, {\n  \"value\": \"OperatorMethods\",\n  \"id\": \"operatormethods\",\n  \"level\": 2\n}, {\n  \"value\": \"OPERATOR(+)\",\n  \"id\": \"operator\",\n  \"level\": 3\n}, {\n  \"value\": \"OPERATOR(*)\",\n  \"id\": \"operator-1\",\n  \"level\": 3\n}, {\n  \"value\": \"OPERATOR(-)\",\n  \"id\": \"operator-\",\n  \"level\": 3\n}, {\n  \"value\": \"ASSIGNMENT(=)\",\n  \"id\": \"assignment\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"structure\",\n        children: \"Structure\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"This class defines the Polynomials in one argument.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"constructormethods\",\n      children: \"ConstructorMethods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"polynomial1d-function\",\n      children: \"Polynomial1D function\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"We can create an instance by calling Polynomial1D function.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"MODULE PURE FUNCTION Polynomial1D(coeff, degree, varname) &\\n  & RESULT(ans)\\n  REAL(DFP), INTENT(IN) :: coeff(:)\\n  INTEGER(I4B), INTENT(IN) :: degree(:)\\n  CHARACTER(LEN=*), INTENT(IN) :: varname\\n  TYPE(Polynomial1D_) :: ans\\nEND FUNCTION Polynomial1D\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"coeff\"\n        }), \" coefficient of polynomial\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"degree\"\n        }), \" degress of monomials\"]\n      }), \"\\n\", (0,jsx_runtime.jsxs)(_components.li, {\n        children: [(0,jsx_runtime.jsx)(_components.code, {\n          children: \"varname\"\n        }), \" variable name\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!!! example \\\"Example\\\"\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"[[Polynomial1D_test_1]]\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"polynomial1d_pointer\",\n      children: \"Polynomial1D_Pointer\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.p, {\n      children: [\"Same as \", (0,jsx_runtime.jsx)(_components.code, {\n        children: \"Polynomial1D\"\n      }), \" function, but returns the pointer to a newly created instance of Polynomial.\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"deallocate\",\n      children: \"Deallocate\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Deallocate the Polynomial.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL obj%Deallocate()\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"getmethods\",\n      children: \"GetMethods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"eval\",\n      children: \"Eval\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluate the function at a given point.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"MODULE PURE FUNCTION Polynomial1D(coeff, degree, &\\n  & varname) RESULT(ans)\\n  REAL(DFP), INTENT(IN) :: coeff(:)\\n  INTEGER(I4B), INTENT(IN) :: degree(:)\\n  CHARACTER(LEN=*), INTENT(IN) :: varname\\n  TYPE(Polynomial1D_) :: ans\\nEND FUNCTION Polynomial1D\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!!! example \\\"Example\\\"\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"[[Polynomial1D_test_2]]\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"evalgradient\",\n      children: \"EvalGradient\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluate first derivative of the polynomial at a given point.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"MODULE ELEMENTAL FUNCTION EvalGradient(obj, x) RESULT(ans)\\n  CLASS(Polynomial1D_), INTENT(IN) :: obj\\n  REAL(DFP), INTENT(IN) :: x\\n  REAL(DFP) :: ans\\nEND FUNCTION EvalGradient\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!!! example \\\"Example\\\"\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"[[Polynomial1D_test_2]]\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"grad\",\n      children: \"Grad\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the gradient of the polynomial as an instance of a polynomial.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Interface:\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"MODULE ELEMENTAL FUNCTION Grad(obj) RESULT(ans)\\n  CLASS(Polynomial1D_), INTENT(IN) :: obj\\n  TYPE(Polynomial1D_) :: ans\\nEND FUNCTION Grad\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!!! example \\\"Example\\\"\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"[[Polynomial1D_test_2]]\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getstringforuid\",\n      children: \"GetStringForUID\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the string for creating the UID. This routine is for internal use only.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getdegree\",\n      children: \"GetDegree\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the degrees of monomials.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!!! example \\\"Example\\\"\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"[[Polynomial1D_test_2]]\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getdisplaystring\",\n      children: \"GetDisplayString\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"REturns the string for displaying the contents of the Polynomial.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getcoeff\",\n      children: \"GetCoeff\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the coefficient of the polynomials. See, [[Polynomial1D_test_2]]\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"getorder\",\n      children: \"GetOrder\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the order of the Polynomial.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"iomethods\",\n      children: \"IOMethods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"display\",\n      children: \"Display\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Display the content of the polynomial.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"operatormethods\",\n      children: \"OperatorMethods\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"operator\",\n      children: \"OPERATOR(+)\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can add two instances of [[Monomial1D_]] to obtain an instance of [[Polynomial1D_]].\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can add a [[Monomial1D_]] and a scalar to get an instance of [[Polynomial1D_]]\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can add an instance of [[Polynomial1D_]] and an instance of [[Monomial1D_]] to get an instance of [[Polynomial1D_]].\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can add two instances of [[Polynomial1D_]] to get an instance of [[Polynomial1D_]].Grad.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can add an instance of [[Polynomial1D_]] and a scalar to get an instance of [[Polynomial1D_]].\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!!! example \\\"Examples\\\"\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"[[Polynomial1D_test_5.md]]\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"operator-1\",\n      children: \"OPERATOR(*)\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can multiply two instances of [[Monomial1D_]] to obtain an instance of [[Polynomial1D_]].\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can multiply a [[Monomial1D_]] and a scalar to get an instance of [[Polynomial1D_]]\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can multiply an instance of [[Polynomial1D_]] and an instance of [[Monomial1D_]] to get an instance of [[Polynomial1D_]].\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can multiply two instances of [[Polynomial1D_]] to get an instance of [[Polynomial1D_]].Grad.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can multiply an instance of [[Polynomial1D_]] and a scalar to get an instance of [[Polynomial1D_]].\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!!! example \\\"Examples\\\"\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"[[Polynomial1D_test_4.md]]\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"operator-\",\n      children: \"OPERATOR(-)\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can subtract two instances of [[Monomial1D_]] to obtain an instance of [[Polynomial1D_]].\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can subtract a [[Monomial1D_]] and a scalar to get an instance of [[Polynomial1D_]]\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can subtract an instance of [[Polynomial1D_]] and an instance of [[Monomial1D_]] to get an instance of [[Polynomial1D_]].\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can subtract two instances of [[Polynomial1D_]] to get an instance of [[Polynomial1D_]].Grad.\"\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"We can subtract an instance of [[Polynomial1D_]] and a scalar to get an instance of [[Polynomial1D_]].\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"!!! example \\\"Examples\\\"\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: \"[[Polynomial1D_test_6.md]]\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h3, {\n      id: \"assignment\",\n      children: \"ASSIGNMENT(=)\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Poly=Poly\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Poly=Mono\"\n        })\n      }), \"\\n\", (0,jsx_runtime.jsx)(_components.li, {\n        children: (0,jsx_runtime.jsx)(_components.code, {\n          children: \"Poly=Scalar\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/Polynomial1D/Polynomial1D_.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Vhc2lmZW0tZG9jcy8uL25vZGVfbW9kdWxlcy9AbWR4LWpzL3JlYWN0L2xpYi9pbmRleC5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7TURYQ29tcG9uZW50c30gZnJvbSAnbWR4L3R5cGVzLmpzJ1xuICogQGltcG9ydCB7Q29tcG9uZW50LCBSZWFjdEVsZW1lbnQsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgTWVyZ2VDb21wb25lbnRzXG4gKiAgIEN1c3RvbSBtZXJnZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59IGN1cnJlbnRDb21wb25lbnRzXG4gKiAgIEN1cnJlbnQgY29tcG9uZW50cyBmcm9tIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMge01EWENvbXBvbmVudHN9XG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cy5cbiAqXG4gKiBAdHlwZWRlZiBQcm9wc1xuICogICBDb25maWd1cmF0aW9uIGZvciBgTURYUHJvdmlkZXJgLlxuICogQHByb3BlcnR5IHtSZWFjdE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkfSBbY2hpbGRyZW5dXG4gKiAgIENoaWxkcmVuIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+IHwgTWVyZ2VDb21wb25lbnRzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NvbXBvbmVudHNdXG4gKiAgIEFkZGl0aW9uYWwgY29tcG9uZW50cyB0byB1c2Ugb3IgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlbSAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Rpc2FibGVQYXJlbnRDb250ZXh0PWZhbHNlXVxuICogICBUdXJuIG9mZiBvdXRlciBjb21wb25lbnQgY29udGV4dCAoZGVmYXVsdDogYGZhbHNlYCkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuY29uc3QgZW1wdHlDb21wb25lbnRzID0ge31cblxuY29uc3QgTURYQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZW1wdHlDb21wb25lbnRzKVxuXG4vKipcbiAqIEdldCBjdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgTURYIENvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBDdXJyZW50IGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNRFhDb21wb25lbnRzKGNvbXBvbmVudHMpIHtcbiAgY29uc3QgY29udGV4dENvbXBvbmVudHMgPSBSZWFjdC51c2VDb250ZXh0KE1EWENvbnRleHQpXG5cbiAgLy8gTWVtb2l6ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSB0b3AtbGV2ZWwgY29udGV4dCBjaGFuZ2VzXG4gIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIEN1c3RvbSBtZXJnZSB2aWEgYSBmdW5jdGlvbiBwcm9wXG4gICAgICBpZiAodHlwZW9mIGNvbXBvbmVudHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHMoY29udGV4dENvbXBvbmVudHMpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7Li4uY29udGV4dENvbXBvbmVudHMsIC4uLmNvbXBvbmVudHN9XG4gICAgfSxcbiAgICBbY29udGV4dENvbXBvbmVudHMsIGNvbXBvbmVudHNdXG4gIClcbn1cblxuLyoqXG4gKiBQcm92aWRlciBmb3IgTURYIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtSZWFkb25seTxQcm9wcz59IHByb3BlcnRpZXNcbiAqICAgUHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9XG4gKiAgIEVsZW1lbnQuXG4gKiBAc2F0aXNmaWVzIHtDb21wb25lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBNRFhQcm92aWRlcihwcm9wZXJ0aWVzKSB7XG4gIC8qKiBAdHlwZSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz59ICovXG4gIGxldCBhbGxDb21wb25lbnRzXG5cbiAgaWYgKHByb3BlcnRpZXMuZGlzYWJsZVBhcmVudENvbnRleHQpIHtcbiAgICBhbGxDb21wb25lbnRzID1cbiAgICAgIHR5cGVvZiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBwcm9wZXJ0aWVzLmNvbXBvbmVudHMoZW1wdHlDb21wb25lbnRzKVxuICAgICAgICA6IHByb3BlcnRpZXMuY29tcG9uZW50cyB8fCBlbXB0eUNvbXBvbmVudHNcbiAgfSBlbHNlIHtcbiAgICBhbGxDb21wb25lbnRzID0gdXNlTURYQ29tcG9uZW50cyhwcm9wZXJ0aWVzLmNvbXBvbmVudHMpXG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNRFhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHt2YWx1ZTogYWxsQ29tcG9uZW50c30sXG4gICAgcHJvcGVydGllcy5jaGlsZHJlblxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);