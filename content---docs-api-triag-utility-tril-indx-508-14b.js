"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-triag-utility-tril-indx-508-14b"],{

/***/ "./docs/docs-api/TriagUtility/TrilIndx.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ TrilIndx_contentTitle),\n  \"default\": () => (/* binding */ TrilIndx_MDXContent),\n  frontMatter: () => (/* binding */ TrilIndx_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_triag_utility_tril_indx_md_508_namespaceObject),\n  toc: () => (/* binding */ TrilIndx_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-triag-utility-tril-indx-md-508.json\nconst site_docs_docs_api_triag_utility_tril_indx_md_508_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"TriagUtility/TrilIndx\",\"title\":\"TrilIndx\",\"description\":\"Returns the indices of lower triangle part of a matrix.\",\"source\":\"@site/docs/docs-api/TriagUtility/TrilIndx.md\",\"sourceDirName\":\"TriagUtility\",\"slug\":\"/TriagUtility/TrilIndx\",\"permalink\":\"/docs-api/TriagUtility/TrilIndx\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/TriagUtility/TrilIndx.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"Tril\",\"permalink\":\"/docs-api/TriagUtility/Tril\"},\"next\":{\"title\":\"Triu\",\"permalink\":\"/docs-api/TriagUtility/Triu\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/TriagUtility/_TrilIndx_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\nINTEGER(I4B), ALLOCATABLE :: indx(:,:)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Display(TrilIndx(m=3,n=3,diagNo=0), \\\"(3,3) diagNo=0, = \\\" )\\nCALL Display(TrilIndx(m=3,n=3,diagNo=1), \\\"(3,3) diagNo=1, = \\\" )\\nCALL Display(TrilIndx(m=3,n=3,diagNo=2), \\\"(3,3) diagNo=2, = \\\" )\\nCALL Display(TrilIndx(m=3,n=3,diagNo=-1), \\\"(3,3) diagNo=-1, = \\\" )\\nCALL Display(TrilIndx(m=3,n=3,diagNo=-2), \\\"(3,3) diagNo=-2, = \\\" )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See results\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            children: \"(3,3) diagNo=0, = \\n------------------\\n       1  1       \\n       2  2       \\n       3  3       \\n       2  1       \\n       3  2       \\n       3  1       \\n(3,3) diagNo=1, = \\n------------------\\n       1  2       \\n       2  3       \\n       1  1       \\n       2  2       \\n       3  3       \\n       2  1       \\n       3  2       \\n       3  1       \\n(3,3) diagNo=2, = \\n------------------\\n       1  3       \\n       1  2       \\n       2  3       \\n       1  1       \\n       2  2       \\n       3  3       \\n       2  1       \\n       3  2       \\n       3  1       \\n(3,3) diagNo=-1, = \\n-------------------\\n       2  1        \\n       3  2        \\n       3  1        \\n(3,3) diagNo=-2, = \\n-------------------\\n       3  1\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n\n;// ./docs/docs-api/TriagUtility/_TrilIndx_test_2.md\n\n\nconst _TrilIndx_test_2_frontMatter = {};\nconst _TrilIndx_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _TrilIndx_test_2_toc = [];\nfunction _TrilIndx_test_2_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _TrilIndx_test_2_missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\nINTEGER(I4B), ALLOCATABLE :: indx(:,:)\\nREAL( DFP ) :: amat(3,3)\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"CALL Display(TrilIndx(amat,diagNo=0), \\\"(3,3) diagNo=0, = \\\" )\\nCALL Display(TrilIndx(amat,diagNo=1), \\\"(3,3) diagNo=1, = \\\" )\\nCALL Display(TrilIndx(amat,diagNo=2), \\\"(3,3) diagNo=2, = \\\" )\\nCALL Display(TrilIndx(amat,diagNo=-1), \\\"(3,3) diagNo=-1, = \\\" )\\nCALL Display(TrilIndx(amat,diagNo=-2), \\\"(3,3) diagNo=-2, = \\\" )\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See results\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            children: \"(3,3) diagNo=0, = \\n------------------\\n       1  1       \\n       2  2       \\n       3  3       \\n       2  1       \\n       3  2       \\n       3  1       \\n(3,3) diagNo=1, = \\n------------------\\n       1  2       \\n       2  3       \\n       1  1       \\n       2  2       \\n       3  3       \\n       2  1       \\n       3  2       \\n       3  1       \\n(3,3) diagNo=2, = \\n------------------\\n       1  3       \\n       1  2       \\n       2  3       \\n       1  1       \\n       2  2       \\n       3  3       \\n       2  1       \\n       3  2       \\n       3  1       \\n(3,3) diagNo=-1, = \\n-------------------\\n       2  1        \\n       3  2        \\n       3  1        \\n(3,3) diagNo=-2, = \\n-------------------\\n       3  1\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"end program main\\n\"\n      })\n    })]\n  });\n}\nfunction _TrilIndx_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_TrilIndx_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _TrilIndx_test_2_createMdxContent(props);\n}\nfunction _TrilIndx_test_2_missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n\n;// ./docs/docs-api/TriagUtility/TrilIndx.md\n\n\nconst TrilIndx_frontMatter = {};\nconst TrilIndx_contentTitle = 'TrilIndx';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\nconst TrilIndx_toc = [{\n  \"value\": \"Interface 1\",\n  \"id\": \"interface-1\",\n  \"level\": 2\n}, ...toc, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}, ..._TrilIndx_test_2_toc];\nfunction TrilIndx_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"trilindx\",\n        children: \"TrilIndx\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Returns the indices of lower triangle part of a matrix.\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-1\",\n      children: \"Interface 1\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \" INTERFACE\\n  MODULE PURE FUNCTION TrilIndx(m, n, diagNo) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: m\\n    !! number of rows\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: n\\n    !! number of columns, default = m\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: diagNo\\n    !! diagonal number, default = 0\\n    !! diagNo>0 means super diagonal\\n    !! diagNo<0 means subdiagonal\\n    INTEGER(I4B), ALLOCATABLE :: ans(:, :)\\n    !! ans(:,1) contains the row indices\\n    !! ans(:,2) contains the col indices\\n  END FUNCTION TrilIndx\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE FUNCTION TrilIndx(A, diagNo) RESULT(ans)\\n    CLASS(*), INTENT(IN) :: A(:, :)\\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: diagNo\\n    !! diagonal number, default = 0\\n    !! diagNo>0 means super diagonal\\n    !! diagNo<0 means subdiagonal\\n    INTEGER(I4B), ALLOCATABLE :: ans(:, :)\\n    !! ans(:,1) contains the row indices\\n    !! ans(:,2) contains the col indices\\n  END FUNCTION TrilIndx\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(_TrilIndx_test_2_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    })]\n  });\n}\nfunction TrilIndx_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(TrilIndx_createMdxContent, {\n      ...props\n    })\n  }) : TrilIndx_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/TriagUtility/TrilIndx.md\n");

/***/ })

}]);