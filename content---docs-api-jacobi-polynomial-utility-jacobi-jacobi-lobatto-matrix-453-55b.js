"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-jacobi-polynomial-utility-jacobi-jacobi-lobatto-matrix-453-55b"],{

/***/ "./docs/docs-api/JacobiPolynomialUtility/JacobiJacobiLobattoMatrix.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ JacobiJacobiLobattoMatrix_contentTitle),\n  \"default\": () => (/* binding */ JacobiJacobiLobattoMatrix_MDXContent),\n  frontMatter: () => (/* binding */ JacobiJacobiLobattoMatrix_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_jacobi_polynomial_utility_jacobi_jacobi_lobatto_matrix_md_453_namespaceObject),\n  toc: () => (/* binding */ JacobiJacobiLobattoMatrix_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-jacobi-polynomial-utility-jacobi-jacobi-lobatto-matrix-md-453.json\nconst site_docs_docs_api_jacobi_polynomial_utility_jacobi_jacobi_lobatto_matrix_md_453_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"JacobiPolynomialUtility/JacobiJacobiLobattoMatrix\",\"title\":\"JacobiJacobiLobattoMatrix\",\"description\":\"Jacobi Lobatto matrix for Jacobi polynomial.\",\"source\":\"@site/docs/docs-api/JacobiPolynomialUtility/JacobiJacobiLobattoMatrix.md\",\"sourceDirName\":\"JacobiPolynomialUtility\",\"slug\":\"/JacobiPolynomialUtility/JacobiJacobiLobattoMatrix\",\"permalink\":\"/docs-api/JacobiPolynomialUtility/JacobiJacobiLobattoMatrix\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/JacobiPolynomialUtility/JacobiJacobiLobattoMatrix.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"JacobiInvTransform\",\"permalink\":\"/docs-api/JacobiPolynomialUtility/JacobiInvTransform\"},\"next\":{\"title\":\"JacobiJacobiMatrix\",\"permalink\":\"/docs-api/JacobiPolynomialUtility/JacobiJacobiMatrix\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/JacobiPolynomialUtility/_JacobiJacobiLobattoMatrix_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\nuse easifemBase\\nimplicit none\\nINTEGER( I4B ), parameter :: n = 5\\nREAL( DFP ) :: D(n+2), E(n+2), alphaCoeff(n+2), betaCoeff(n+2)\\nCALL JacobiJacobiLobattoMatrix(n, 0.0_DFP, 0.0_DFP, D, E, alphaCoeff, betaCoeff)\\nCALL Display(D, \\\"D: \\\")\\nCALL Display(E, \\\"E: \\\")\\nCALL Display(alphaCoeff, \\\"alphaCoeff: \\\")\\nCALL Display(betaCoeff, \\\"betaCoeff: \\\")\\nend program main\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsxs)(Details, {\n      children: [(0,jsx_runtime.jsx)(\"summary\", {\n        children: \"See results\"\n      }), (0,jsx_runtime.jsx)(\"div\", {\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-txt\",\n            metastring: \"title=\\\"results\\\"\",\n            children: \"  D:   \\n-------\\n0.00000\\n0.00000\\n0.00000\\n0.00000\\n0.00000\\n0.00000\\n0.00000\\n  E:   \\n-------\\n0.57735\\n0.51640\\n0.50709\\n0.50395\\n0.50252\\n0.73855\\n0.00000\\nalphaCoeff: \\n------------\\n  0.00000   \\n  0.00000   \\n  0.00000   \\n  0.00000   \\n  0.00000   \\n  0.00000   \\n  0.00000   \\nbetaCoeff: \\n-----------\\n  2.00000  \\n  0.33333  \\n  0.26667  \\n  0.25714  \\n  0.25397  \\n  0.25253  \\n  0.00000\\n\"\n          })\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n\n;// ./docs/docs-api/JacobiPolynomialUtility/JacobiJacobiLobattoMatrix.md\n\n\nconst JacobiJacobiLobattoMatrix_frontMatter = {};\nconst JacobiJacobiLobattoMatrix_contentTitle = 'JacobiJacobiLobattoMatrix';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst JacobiJacobiLobattoMatrix_toc = [{\n  \"value\": \"Examples\",\n  \"id\": \"examples\",\n  \"level\": 2\n}, ...toc];\nfunction JacobiJacobiLobattoMatrix_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"jacobijacobilobattomatrix\",\n        children: \"JacobiJacobiLobattoMatrix\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Jacobi Lobatto matrix for Jacobi polynomial.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE\\n  MODULE PURE SUBROUTINE JacobiJacobiLobattoMatrix(n, alpha, beta, D, &\\n    & E, alphaCoeff, betaCoeff)\\n    INTEGER(I4B), INTENT(IN) :: n\\n    !! n should be greater than or equal to 1\\n    REAL(DFP), INTENT(IN) :: alpha\\n    !! alpha of jacobu poly\\n    REAL(DFP), INTENT(IN) :: beta\\n    !! beta of jacobi poly\\n    REAL(DFP), INTENT(OUT) :: D(:)\\n    !! the size should be 1:n+2\\n    REAL(DFP), INTENT(OUT) :: E(:)\\n    !! the size should be 1:n+1\\n    REAL(DFP), OPTIONAL, INTENT(OUT) :: alphaCoeff(0:)\\n    REAL(DFP), OPTIONAL, INTENT(OUT) :: betaCoeff(0:)\\n  END SUBROUTINE JacobiJacobiLobattoMatrix\\nEND INTERFACE\\n\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"examples\",\n      children: \"Examples\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \",\n        default: true\n      })]\n    })]\n  });\n}\nfunction JacobiJacobiLobattoMatrix_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(JacobiJacobiLobattoMatrix_createMdxContent, {\n      ...props\n    })\n  }) : JacobiJacobiLobattoMatrix_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/JacobiPolynomialUtility/JacobiJacobiLobattoMatrix.md\n");

/***/ })

}]);