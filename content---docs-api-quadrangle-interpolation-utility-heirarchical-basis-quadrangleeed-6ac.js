"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkeasifem_docs"] = globalThis["webpackChunkeasifem_docs"] || []).push([["content---docs-api-quadrangle-interpolation-utility-heirarchical-basis-quadrangleeed-6ac"],{

/***/ "./docs/docs-api/QuadrangleInterpolationUtility/HeirarchicalBasis_Quadrangle.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  assets: () => (/* binding */ assets),\n  contentTitle: () => (/* binding */ HeirarchicalBasis_Quadrangle_contentTitle),\n  \"default\": () => (/* binding */ HeirarchicalBasis_Quadrangle_MDXContent),\n  frontMatter: () => (/* binding */ HeirarchicalBasis_Quadrangle_frontMatter),\n  metadata: () => (/* reexport */ site_docs_docs_api_quadrangle_interpolation_utility_heirarchical_basis_quadrangle_md_eed_namespaceObject),\n  toc: () => (/* binding */ HeirarchicalBasis_Quadrangle_toc)\n});\n\n;// ./.docusaurus/docusaurus-plugin-content-docs/docs-api/site-docs-docs-api-quadrangle-interpolation-utility-heirarchical-basis-quadrangle-md-eed.json\nconst site_docs_docs_api_quadrangle_interpolation_utility_heirarchical_basis_quadrangle_md_eed_namespaceObject = /*#__PURE__*/JSON.parse('{\"id\":\"QuadrangleInterpolationUtility/HeirarchicalBasis_Quadrangle\",\"title\":\"HeirarchicalBasis\",\"description\":\"Evaluate all modal basis (heirarchical polynomial) on Quadrangle.\",\"source\":\"@site/docs/docs-api/QuadrangleInterpolationUtility/HeirarchicalBasis_Quadrangle.md\",\"sourceDirName\":\"QuadrangleInterpolationUtility\",\"slug\":\"/QuadrangleInterpolationUtility/HeirarchicalBasis_Quadrangle\",\"permalink\":\"/docs-api/QuadrangleInterpolationUtility/HeirarchicalBasis_Quadrangle\",\"draft\":false,\"unlisted\":false,\"editUrl\":\"https://github.com/easifem/easifem.github.io/tree/main/docs/docs-api/QuadrangleInterpolationUtility/HeirarchicalBasis_Quadrangle.md\",\"tags\":[],\"version\":\"current\",\"lastUpdatedAt\":1539502055000,\"frontMatter\":{},\"sidebar\":\"tutorialSidebar\",\"previous\":{\"title\":\"EquidistancePoint\",\"permalink\":\"/docs-api/QuadrangleInterpolationUtility/EquidistancePoint_Quadrangle\"},\"next\":{\"title\":\"HorizontalEdgeBasis\",\"permalink\":\"/docs-api/QuadrangleInterpolationUtility/HorizontalEdgeBasis_Quadrangle\"}}');\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n// EXTERNAL MODULE: ./node_modules/@mdx-js/react/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js + 2 modules\nvar Tabs = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n// EXTERNAL MODULE: ./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js + 1 modules\nvar TabItem = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n;// ./docs/docs-api/QuadrangleInterpolationUtility/_HeirarchicalBasis_Quadrangle_test_1.md\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"program main\\n  use easifembase\\n  use easifemClasses\\n  implicit none\\n  real(dfp), allocatable :: xij(:,:), avec(:)\\n  integer(i4b) :: ii, jj, n, cnt\\n  real(dfp), allocatable :: ans(:,:)\\n  integer(i4b) :: pb, qb, pe3, pe4, qe1, qe2, ii\\n  type( VTKPlot_ ) :: aplot\\n  character(len=*), parameter :: fname=\\\"./results/\\\"\\n\\n  n = 51\\n  call reallocate(xij, 2, int(n*n))\\n  avec= linspace(-1.0_DFP, 1.0_DFP, n)\\n\\n  cnt=0\\n  do ii = 1, n\\n    do jj = 1, n\\n      cnt=cnt+1\\n      xij(1,cnt) = avec(ii)\\n      xij(2,cnt) = avec(jj)\\n    end do\\n  end do\\n\\n  pb = 1; qb=1; pe3=1; pe4=1; qe1=1; qe2=1\\n\\n  ans = HeirarchicalBasis_Quadrangle( &\\n    & pb=pb, &\\n    & qb=qb, &\\n    & pe3=pe3, &\\n    & pe4=pe4, &\\n    & qe1=qe1, &\\n    & qe2=qe2, &\\n    & xij=xij )\\n  \\n  do ii  = 1, size(ans,2)\\n    call aplot%scatter3D( &\\n      & x=xij(1,:), &\\n      & y=xij(2, :), &\\n      & z=ans(:,ii), &\\n      & filename=fname//\\\"Qh( pb=\\\" // tostring(pb) // &\\n      & \\\"qb=\\\"//tostring(qb) // &\\n      & \\\", qe1=\\\"//tostring(qe1) // &\\n      & \\\", qe2=\\\"//tostring(qe2) // &\\n      & \\\", pe3=\\\"//tostring(pe3) // &\\n      & \\\", pe4=\\\"//tostring(pe4) // &\\n      & \\\" )\\\" // tostring(ii) // &\\n      & \\\".vtp\\\", &\\n      & label=\\\"P\\\")\\n  end do\\n\\nend program main\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/QuadrangleInterpolationUtility/_HeirarchicalBasis_Quadrangle_test_2.md\n\n\nconst _HeirarchicalBasis_Quadrangle_test_2_frontMatter = {};\nconst _HeirarchicalBasis_Quadrangle_test_2_contentTitle = undefined;\n\n\n\n\n\nconst _HeirarchicalBasis_Quadrangle_test_2_toc = [];\nfunction _HeirarchicalBasis_Quadrangle_test_2_createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,jsx_runtime.jsx)(_components.p, {\n        children: \"\\\"pb = 4; qb=2; pe3=2; pe4=3; qe1=2; qe2=1\\\"\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"program main\\n  use easifembase\\n  use easifemClasses\\n  implicit none\\n  real(dfp), allocatable :: xij(:,:), avec(:)\\n  integer(i4b) :: ii, jj, n, cnt\\n  real(dfp), allocatable :: ans(:,:)\\n  integer(i4b) :: pb, qb, pe3, pe4, qe1, qe2, ii\\n  type( VTKPlot_ ) :: aplot\\n  character(len=*), parameter :: fname=\\\"./results/\\\"\\n\\n  n = 51\\n  call reallocate(xij, 2, int(n*n))\\n  avec= linspace(-1.0_DFP, 1.0_DFP, n)\\n  cnt=0\\n  do ii = 1, n\\n    do jj = 1, n\\n      cnt=cnt+1\\n      xij(1,cnt) = avec(ii)\\n      xij(2,cnt) = avec(jj)\\n    end do\\n  end do\\n\\n  pb = 4; qb=2; pe3=2; pe4=3; qe1=2; qe2=1\\n \\n  ans = HeirarchicalBasis_Quadrangle( &\\n    & pb=pb, &\\n    & qb=qb, &\\n    & pe3=pe3, &\\n    & pe4=pe4, &\\n    & qe1=qe1, &\\n    & qe2=qe2, &\\n    & xij=xij )\\n\\n  do ii  = 1, size(ans,2)\\n    call aplot%scatter3D( &\\n      & x=xij(1,:), &\\n      & y=xij(2, :), &\\n      & z=ans(:,ii), &\\n      & filename=fname//\\\"Qh( pb=\\\" // tostring(pb) // &\\n      & \\\"qb=\\\"//tostring(qb) // &\\n      & \\\", qe1=\\\"//tostring(qe1) // &\\n      & \\\", qe2=\\\"//tostring(qe2) // &\\n      & \\\", pe3=\\\"//tostring(pe3) // &\\n      & \\\", pe4=\\\"//tostring(pe4) // &\\n      & \\\" )\\\" // tostring(ii) // &\\n      & \\\".vtp\\\", &\\n      & label=\\\"P\\\")\\n  end do\\n\\nend program main\\n\"\n      })\n    })]\n  });\n}\nfunction _HeirarchicalBasis_Quadrangle_test_2_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_HeirarchicalBasis_Quadrangle_test_2_createMdxContent, {\n      ...props\n    })\n  }) : _HeirarchicalBasis_Quadrangle_test_2_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/QuadrangleInterpolationUtility/_HeirarchicalBasis_Quadrangle_test_3.md\n\n\nconst _HeirarchicalBasis_Quadrangle_test_3_frontMatter = {};\nconst _HeirarchicalBasis_Quadrangle_test_3_contentTitle = undefined;\n\n\n\n\n\nconst _HeirarchicalBasis_Quadrangle_test_3_toc = [];\nfunction _HeirarchicalBasis_Quadrangle_test_3_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"program main\\n  use easifembase\\n  use easifemClasses\\n  implicit none\\n  real(dfp), allocatable :: xij(:,:), avec(:)\\n  integer(i4b) :: ii, jj, n, cnt\\n  real(dfp), allocatable :: ans(:,:)\\n  integer(i4b) :: pb, qb, pe3, pe4, qe1, qe2, ii\\n  type( VTKPlot_ ) :: aplot\\n  character(len=*), parameter :: fname=\\\"./results/\\\"\\n\\n  n = 51\\n  call reallocate(xij, 2, int(n*n))\\n  avec= linspace(-1.0_DFP, 1.0_DFP, n)\\n  cnt=0\\n  do ii = 1, n\\n    do jj = 1, n\\n      cnt=cnt+1\\n      xij(1,cnt) = avec(ii)\\n      xij(2,cnt) = avec(jj)\\n    end do\\n  end do\\n  \\n  pb = 3; qb=3; pe3=3; pe4=3; qe1=3; qe2=3\\n \\n  ans = HeirarchicalBasis_Quadrangle( &\\n    & pb=pb, &\\n    & qb=qb, &\\n    & pe3=pe3, &\\n    & pe4=pe4, &\\n    & qe1=qe1, &\\n    & qe2=qe2, &\\n    & xij=xij )\\n\\n  do ii  = 1, size(ans,2)\\n    call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\\n      & filename=fname//\\\"Qh( pb=\\\" // tostring(pb) // &\\n      & \\\"qb=\\\"//tostring(qb) // &\\n      & \\\", qe1=\\\"//tostring(qe1) // &\\n      & \\\", qe2=\\\"//tostring(qe2) // &\\n      & \\\", pe3=\\\"//tostring(pe3) // &\\n      & \\\", pe4=\\\"//tostring(pe4) // &\\n      & \\\" )\\\" // tostring(ii) // &\\n      & \\\".vtp\\\", &\\n      & label=\\\"P\\\")\\n  end do\\nend program main\\n\"\n    })\n  });\n}\nfunction _HeirarchicalBasis_Quadrangle_test_3_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_HeirarchicalBasis_Quadrangle_test_3_createMdxContent, {\n      ...props\n    })\n  }) : _HeirarchicalBasis_Quadrangle_test_3_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/QuadrangleInterpolationUtility/_HeirarchicalBasis_Quadrangle_test_4.md\n\n\nconst _HeirarchicalBasis_Quadrangle_test_4_frontMatter = {};\nconst _HeirarchicalBasis_Quadrangle_test_4_contentTitle = undefined;\n\n\n\n\n\nconst _HeirarchicalBasis_Quadrangle_test_4_toc = [];\nfunction _HeirarchicalBasis_Quadrangle_test_4_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsx)(_components.pre, {\n    children: (0,jsx_runtime.jsx)(_components.code, {\n      className: \"language-fortran\",\n      children: \"program main\\n  use easifembase\\n  use easifemClasses\\n  implicit none\\n  real(dfp), allocatable :: xij(:,:), avec(:)\\n  integer(i4b) :: ii, jj, n, cnt\\n  real(dfp), allocatable :: ans(:,:)\\n  integer(i4b) :: pb, qb, pe3, pe4, qe1, qe2, ii\\n  type( VTKPlot_ ) :: aplot\\n  character(len=*), parameter :: fname=\\\"./results/\\\"\\n\\n  n = 51\\n  call reallocate(xij, 2, int(n*n))\\n  avec= linspace(-1.0_DFP, 1.0_DFP, n)\\n  cnt=0\\n  do ii = 1, n\\n    do jj = 1, n\\n      cnt=cnt+1\\n      xij(1,cnt) = avec(ii)\\n      xij(2,cnt) = avec(jj)\\n    end do\\n  end do\\n  \\n  pb = 4; qb=4; pe3=4; pe4=4; qe1=4; qe2=4\\n \\n  ans = HeirarchicalBasis_Quadrangle( &\\n    & pb=pb, &\\n    & qb=qb, &\\n    & pe3=pe3, &\\n    & pe4=pe4, &\\n    & qe1=qe1, &\\n    & qe2=qe2, &\\n    & xij=xij )\\n\\n  do ii  = 1, size(ans,2)\\n    call aplot%scatter3D(x=xij(1,:), y=xij(2, :), z=ans(:,ii), &\\n      & filename=fname//\\\"Qh( pb=\\\" // tostring(pb) // &\\n      & \\\"qb=\\\"//tostring(qb) // &\\n      & \\\", qe1=\\\"//tostring(qe1) // &\\n      & \\\", qe2=\\\"//tostring(qe2) // &\\n      & \\\", pe3=\\\"//tostring(pe3) // &\\n      & \\\", pe4=\\\"//tostring(pe4) // &\\n      & \\\" )\\\" // tostring(ii) // &\\n      & \\\".vtp\\\", &\\n      & label=\\\"P\\\")\\n  end do\\nend program main\\n\"\n    })\n  });\n}\nfunction _HeirarchicalBasis_Quadrangle_test_4_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(_HeirarchicalBasis_Quadrangle_test_4_createMdxContent, {\n      ...props\n    })\n  }) : _HeirarchicalBasis_Quadrangle_test_4_createMdxContent(props);\n}\n\n\n;// ./docs/docs-api/QuadrangleInterpolationUtility/HeirarchicalBasis_Quadrangle.md\n\n\nconst HeirarchicalBasis_Quadrangle_frontMatter = {};\nconst HeirarchicalBasis_Quadrangle_contentTitle = 'HeirarchicalBasis';\n\nconst assets = {\n\n};\n\n\n\n\n\n\n\n\n\nconst HeirarchicalBasis_Quadrangle_toc = [...toc, ..._HeirarchicalBasis_Quadrangle_test_2_toc, ..._HeirarchicalBasis_Quadrangle_test_3_toc, ..._HeirarchicalBasis_Quadrangle_test_4_toc, {\n  \"value\": \"Interface 2\",\n  \"id\": \"interface-2\",\n  \"level\": 2\n}];\nfunction HeirarchicalBasis_Quadrangle_createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [(0,jsx_runtime.jsx)(_components.header, {\n      children: (0,jsx_runtime.jsx)(_components.h1, {\n        id: \"heirarchicalbasis\",\n        children: \"HeirarchicalBasis\"\n      })\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.p, {\n      children: \"Evaluate all modal basis (heirarchical polynomial) on Quadrangle.\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h1, {\n      id: \"interface\",\n      children: \"Interface\"\n    }), \"\\n\", \"\\n\", (0,jsx_runtime.jsxs)(Tabs[\"default\"], {\n      children: [(0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"interface\",\n        label: \"܀ Interface\",\n        default: true,\n        children: (0,jsx_runtime.jsx)(_components.pre, {\n          children: (0,jsx_runtime.jsx)(_components.code, {\n            className: \"language-fortran\",\n            children: \"INTERFACE\\n  MODULE PURE FUNCTION HeirarchicalBasis_Quadrangle(order, pe1, pe2, pe3,&\\n    & xij, refQuadrangle) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: order\\n    !! order in the cell of triangle, it should be greater than 2\\n    INTEGER(I4B), INTENT(IN) :: pe1\\n    !! order of interpolation on edge e1\\n    INTEGER(I4B), INTENT(IN) :: pe2\\n    !! order of interpolation on edge e2\\n    INTEGER(I4B), INTENT(IN) :: pe3\\n    !! order of interpolation on edge e3\\n    REAL(DFP), INTENT(IN) :: xij(:, :)\\n    !! points of evaluation in xij format\\n    CHARACTER(*), INTENT(IN) :: refQuadrangle\\n    !! reference triangle\\n    REAL(DFP) :: ans( &\\n      & SIZE(xij, 2), &\\n      & pe1 + pe2 + pe3 + INT((order - 1) * (order - 2) / 2))\\n    !!\\n  END FUNCTION HeirarchicalBasis_Quadrangle\\nEND INTERFACE\\n\"\n          })\n        })\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example\",\n        label: \"️܀ See example\",\n        children: (0,jsx_runtime.jsx)(MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example2\",\n        label: \"Example 2\",\n        children: (0,jsx_runtime.jsx)(_HeirarchicalBasis_Quadrangle_test_2_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example3\",\n        label: \"Example 3\",\n        children: (0,jsx_runtime.jsx)(_HeirarchicalBasis_Quadrangle_test_3_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"example4\",\n        label: \"Example 4\",\n        children: (0,jsx_runtime.jsx)(_HeirarchicalBasis_Quadrangle_test_4_MDXContent, {})\n      }), (0,jsx_runtime.jsx)(TabItem[\"default\"], {\n        value: \"close\",\n        label: \"↢ \"\n      })]\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.h2, {\n      id: \"interface-2\",\n      children: \"Interface 2\"\n    }), \"\\n\", (0,jsx_runtime.jsx)(_components.pre, {\n      children: (0,jsx_runtime.jsx)(_components.code, {\n        className: \"language-fortran\",\n        children: \"INTERFACE HeirarchicalBasis_Quadrangle\\n  MODULE PURE FUNCTION HeirarchicalBasis_Quadrangle2(p, q, xij) RESULT(ans)\\n    INTEGER(I4B), INTENT(IN) :: p\\n    !! order of interpolation inside the quadrangle in x1 direction\\n    INTEGER(I4B), INTENT(IN) :: q\\n    !! order of interpolation inside the quadrangle in x2 direction\\n    REAL(DFP), INTENT(IN) :: xij(:, :)\\n    !! points of evaluation in xij format\\n    REAL(DFP) :: ans(SIZE(xij, 2), (p + 1) * (q + 1))\\n    !!\\n  END FUNCTION HeirarchicalBasis_Quadrangle2\\nEND INTERFACE HeirarchicalBasis_Quadrangle\\n\"\n      })\n    })]\n  });\n}\nfunction HeirarchicalBasis_Quadrangle_MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,lib.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,jsx_runtime.jsx)(MDXLayout, {\n    ...props,\n    children: (0,jsx_runtime.jsx)(HeirarchicalBasis_Quadrangle_createMdxContent, {\n      ...props\n    })\n  }) : HeirarchicalBasis_Quadrangle_createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/docs-api/QuadrangleInterpolationUtility/HeirarchicalBasis_Quadrangle.md\n");

/***/ })

}]);